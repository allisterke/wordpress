-- MySQL dump 10.13  Distrib 5.7.20, for Linux (x86_64)
--
-- Host: localhost    Database: wp
-- ------------------------------------------------------
-- Server version	5.7.20-0ubuntu0.16.04.1

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Current Database: `wp`
--

CREATE DATABASE /*!32312 IF NOT EXISTS*/ `wp` /*!40100 DEFAULT CHARACTER SET latin1 */;

USE `wp`;

--
-- Table structure for table `wp_commentmeta`
--

DROP TABLE IF EXISTS `wp_commentmeta`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_commentmeta` (
  `meta_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `comment_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `meta_key` varchar(255) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `meta_value` longtext COLLATE utf8mb4_unicode_520_ci,
  PRIMARY KEY (`meta_id`),
  KEY `comment_id` (`comment_id`),
  KEY `meta_key` (`meta_key`(191))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_commentmeta`
--

LOCK TABLES `wp_commentmeta` WRITE;
/*!40000 ALTER TABLE `wp_commentmeta` DISABLE KEYS */;
/*!40000 ALTER TABLE `wp_commentmeta` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_comments`
--

DROP TABLE IF EXISTS `wp_comments`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_comments` (
  `comment_ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `comment_post_ID` bigint(20) unsigned NOT NULL DEFAULT '0',
  `comment_author` tinytext COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `comment_author_email` varchar(100) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `comment_author_url` varchar(200) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `comment_author_IP` varchar(100) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `comment_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `comment_date_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `comment_content` text COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `comment_karma` int(11) NOT NULL DEFAULT '0',
  `comment_approved` varchar(20) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '1',
  `comment_agent` varchar(255) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `comment_type` varchar(20) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `comment_parent` bigint(20) unsigned NOT NULL DEFAULT '0',
  `user_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`comment_ID`),
  KEY `comment_post_ID` (`comment_post_ID`),
  KEY `comment_approved_date_gmt` (`comment_approved`,`comment_date_gmt`),
  KEY `comment_date_gmt` (`comment_date_gmt`),
  KEY `comment_parent` (`comment_parent`),
  KEY `comment_author_email` (`comment_author_email`(10))
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_comments`
--

LOCK TABLES `wp_comments` WRITE;
/*!40000 ALTER TABLE `wp_comments` DISABLE KEYS */;
INSERT INTO `wp_comments` VALUES (1,1,'一位WordPress评论者','wapuu@wordpress.example','https://wordpress.org/','','2017-07-31 19:57:09','2017-07-31 11:57:09','嗨，这是一条评论。\n要开始审核、编辑及删除评论，请访问仪表盘的“评论”页面。\n评论者头像来自<a href=\"https://gravatar.com\">Gravatar</a>。',0,'1','','',0,0);
/*!40000 ALTER TABLE `wp_comments` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_links`
--

DROP TABLE IF EXISTS `wp_links`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_links` (
  `link_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `link_url` varchar(255) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `link_name` varchar(255) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `link_image` varchar(255) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `link_target` varchar(25) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `link_description` varchar(255) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `link_visible` varchar(20) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT 'Y',
  `link_owner` bigint(20) unsigned NOT NULL DEFAULT '1',
  `link_rating` int(11) NOT NULL DEFAULT '0',
  `link_updated` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `link_rel` varchar(255) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `link_notes` mediumtext COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `link_rss` varchar(255) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  PRIMARY KEY (`link_id`),
  KEY `link_visible` (`link_visible`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_links`
--

LOCK TABLES `wp_links` WRITE;
/*!40000 ALTER TABLE `wp_links` DISABLE KEYS */;
/*!40000 ALTER TABLE `wp_links` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_options`
--

DROP TABLE IF EXISTS `wp_options`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_options` (
  `option_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `option_name` varchar(191) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `option_value` longtext COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `autoload` varchar(20) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT 'yes',
  PRIMARY KEY (`option_id`),
  UNIQUE KEY `option_name` (`option_name`)
) ENGINE=InnoDB AUTO_INCREMENT=25948 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_options`
--

LOCK TABLES `wp_options` WRITE;
/*!40000 ALTER TABLE `wp_options` DISABLE KEYS */;
INSERT INTO `wp_options` VALUES (1,'siteurl','https://www.allisterke.com','yes'),(2,'home','https://www.allisterke.com','yes'),(3,'blogname','海阔凭鱼跃，天高任鸟飞','yes'),(4,'blogdescription','','yes'),(5,'users_can_register','0','yes'),(6,'admin_email','allisterke@gmail.com','yes'),(7,'start_of_week','1','yes'),(8,'use_balanceTags','0','yes'),(9,'use_smilies','1','yes'),(10,'require_name_email','1','yes'),(11,'comments_notify','1','yes'),(12,'posts_per_rss','10','yes'),(13,'rss_use_excerpt','0','yes'),(14,'mailserver_url','mail.example.com','yes'),(15,'mailserver_login','login@example.com','yes'),(16,'mailserver_pass','password','yes'),(17,'mailserver_port','110','yes'),(18,'default_category','1','yes'),(19,'default_comment_status','open','yes'),(20,'default_ping_status','open','yes'),(21,'default_pingback_flag','1','yes'),(22,'posts_per_page','10','yes'),(23,'date_format','Y年n月j日','yes'),(24,'time_format','ag:i','yes'),(25,'links_updated_date_format','Y年n月j日ag:i','yes'),(26,'comment_moderation','1','yes'),(27,'moderation_notify','1','yes'),(28,'permalink_structure','','yes'),(29,'rewrite_rules','','yes'),(30,'hack_file','0','yes'),(31,'blog_charset','UTF-8','yes'),(32,'moderation_keys','','no'),(33,'active_plugins','a:3:{i:0;s:19:\"akismet/akismet.php\";i:1;s:19:\"jetpack/jetpack.php\";i:2;s:45:\"limit-login-attempts/limit-login-attempts.php\";}','yes'),(34,'category_base','','yes'),(35,'ping_sites','http://rpc.pingomatic.com/','yes'),(36,'comment_max_links','2','yes'),(37,'gmt_offset','','yes'),(38,'default_email_category','1','yes'),(39,'recently_edited','a:5:{i:0;s:60:\"/var/www/wordpress/wp-content/themes/twentyfifteen/style.css\";i:2;s:61:\"/var/www/wordpress/wp-content/themes/twentyfifteen/header.php\";i:3;s:60:\"/var/www/wordpress/wp-content/themes/twentyfifteen/index.php\";i:4;s:83:\"/var/www/wordpress/wp-content/plugins/limit-login-attempts/limit-login-attempts.php\";i:5;s:61:\"/var/www/wordpress/wp-content/themes/twentyfifteen/footer.php\";}','no'),(40,'template','twentyfifteen','yes'),(41,'stylesheet','twentyfifteen','yes'),(42,'comment_whitelist','1','yes'),(43,'blacklist_keys','','no'),(44,'comment_registration','','yes'),(45,'html_type','text/html','yes'),(46,'use_trackback','0','yes'),(47,'default_role','subscriber','yes'),(48,'db_version','38590','yes'),(49,'uploads_use_yearmonth_folders','1','yes'),(50,'upload_path','','yes'),(51,'blog_public','1','yes'),(52,'default_link_category','2','yes'),(53,'show_on_front','posts','yes'),(54,'tag_base','','yes'),(55,'show_avatars','1','yes'),(56,'avatar_rating','G','yes'),(57,'upload_url_path','','yes'),(58,'thumbnail_size_w','150','yes'),(59,'thumbnail_size_h','150','yes'),(60,'thumbnail_crop','1','yes'),(61,'medium_size_w','300','yes'),(62,'medium_size_h','300','yes'),(63,'avatar_default','mystery','yes'),(64,'large_size_w','1024','yes'),(65,'large_size_h','1024','yes'),(66,'image_default_link_type','none','yes'),(67,'image_default_size','','yes'),(68,'image_default_align','','yes'),(69,'close_comments_for_old_posts','','yes'),(70,'close_comments_days_old','14','yes'),(71,'thread_comments','1','yes'),(72,'thread_comments_depth','5','yes'),(73,'page_comments','','yes'),(74,'comments_per_page','50','yes'),(75,'default_comments_page','newest','yes'),(76,'comment_order','asc','yes'),(77,'sticky_posts','a:0:{}','yes'),(78,'widget_categories','a:3:{i:2;a:4:{s:5:\"title\";s:0:\"\";s:5:\"count\";i:0;s:12:\"hierarchical\";i:0;s:8:\"dropdown\";i:0;}i:3;N;s:12:\"_multiwidget\";i:1;}','yes'),(79,'widget_text','a:6:{i:2;a:2:{s:5:\"title\";s:12:\"联系我们\";s:4:\"text\";s:200:\"<p><strong>地址</strong><br />123 Main Street<br />New York, NY 10001</p><p><strong>营业时间</strong><br />星期一&mdash;五：9:00&ndash;17:00<br />星期六&mdash;日：11:00&ndash;15:00</p>\";}i:3;a:2:{s:5:\"title\";s:12:\"关于本站\";s:4:\"text\";s:108:\"这里也许是个介绍您自己的好地方，也能介绍您的网站或放进一些工作人员名单。\";}i:4;a:2:{s:5:\"title\";s:12:\"联系我们\";s:4:\"text\";s:200:\"<p><strong>地址</strong><br />123 Main Street<br />New York, NY 10001</p><p><strong>营业时间</strong><br />星期一&mdash;五：9:00&ndash;17:00<br />星期六&mdash;日：11:00&ndash;15:00</p>\";}i:5;a:2:{s:5:\"title\";s:12:\"关于本站\";s:4:\"text\";s:108:\"这里也许是个介绍您自己的好地方，也能介绍您的网站或放进一些工作人员名单。\";}s:12:\"_multiwidget\";i:1;i:7;a:0:{}}','yes'),(80,'widget_rss','a:2:{i:1;a:0:{}s:12:\"_multiwidget\";i:1;}','yes'),(81,'uninstall_plugins','a:0:{}','no'),(82,'timezone_string','Asia/Shanghai','yes'),(83,'page_for_posts','10','yes'),(84,'page_on_front','10','yes'),(85,'default_post_format','0','yes'),(86,'link_manager_enabled','0','yes'),(87,'finished_splitting_shared_terms','1','yes'),(88,'site_icon','0','yes'),(89,'medium_large_size_w','768','yes'),(90,'medium_large_size_h','0','yes'),(91,'initial_db_version','38590','yes'),(92,'wp_user_roles','a:5:{s:13:\"administrator\";a:2:{s:4:\"name\";s:13:\"Administrator\";s:12:\"capabilities\";a:61:{s:13:\"switch_themes\";b:1;s:11:\"edit_themes\";b:1;s:16:\"activate_plugins\";b:1;s:12:\"edit_plugins\";b:1;s:10:\"edit_users\";b:1;s:10:\"edit_files\";b:1;s:14:\"manage_options\";b:1;s:17:\"moderate_comments\";b:1;s:17:\"manage_categories\";b:1;s:12:\"manage_links\";b:1;s:12:\"upload_files\";b:1;s:6:\"import\";b:1;s:15:\"unfiltered_html\";b:1;s:10:\"edit_posts\";b:1;s:17:\"edit_others_posts\";b:1;s:20:\"edit_published_posts\";b:1;s:13:\"publish_posts\";b:1;s:10:\"edit_pages\";b:1;s:4:\"read\";b:1;s:8:\"level_10\";b:1;s:7:\"level_9\";b:1;s:7:\"level_8\";b:1;s:7:\"level_7\";b:1;s:7:\"level_6\";b:1;s:7:\"level_5\";b:1;s:7:\"level_4\";b:1;s:7:\"level_3\";b:1;s:7:\"level_2\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:17:\"edit_others_pages\";b:1;s:20:\"edit_published_pages\";b:1;s:13:\"publish_pages\";b:1;s:12:\"delete_pages\";b:1;s:19:\"delete_others_pages\";b:1;s:22:\"delete_published_pages\";b:1;s:12:\"delete_posts\";b:1;s:19:\"delete_others_posts\";b:1;s:22:\"delete_published_posts\";b:1;s:20:\"delete_private_posts\";b:1;s:18:\"edit_private_posts\";b:1;s:18:\"read_private_posts\";b:1;s:20:\"delete_private_pages\";b:1;s:18:\"edit_private_pages\";b:1;s:18:\"read_private_pages\";b:1;s:12:\"delete_users\";b:1;s:12:\"create_users\";b:1;s:17:\"unfiltered_upload\";b:1;s:14:\"edit_dashboard\";b:1;s:14:\"update_plugins\";b:1;s:14:\"delete_plugins\";b:1;s:15:\"install_plugins\";b:1;s:13:\"update_themes\";b:1;s:14:\"install_themes\";b:1;s:11:\"update_core\";b:1;s:10:\"list_users\";b:1;s:12:\"remove_users\";b:1;s:13:\"promote_users\";b:1;s:18:\"edit_theme_options\";b:1;s:13:\"delete_themes\";b:1;s:6:\"export\";b:1;}}s:6:\"editor\";a:2:{s:4:\"name\";s:6:\"Editor\";s:12:\"capabilities\";a:34:{s:17:\"moderate_comments\";b:1;s:17:\"manage_categories\";b:1;s:12:\"manage_links\";b:1;s:12:\"upload_files\";b:1;s:15:\"unfiltered_html\";b:1;s:10:\"edit_posts\";b:1;s:17:\"edit_others_posts\";b:1;s:20:\"edit_published_posts\";b:1;s:13:\"publish_posts\";b:1;s:10:\"edit_pages\";b:1;s:4:\"read\";b:1;s:7:\"level_7\";b:1;s:7:\"level_6\";b:1;s:7:\"level_5\";b:1;s:7:\"level_4\";b:1;s:7:\"level_3\";b:1;s:7:\"level_2\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:17:\"edit_others_pages\";b:1;s:20:\"edit_published_pages\";b:1;s:13:\"publish_pages\";b:1;s:12:\"delete_pages\";b:1;s:19:\"delete_others_pages\";b:1;s:22:\"delete_published_pages\";b:1;s:12:\"delete_posts\";b:1;s:19:\"delete_others_posts\";b:1;s:22:\"delete_published_posts\";b:1;s:20:\"delete_private_posts\";b:1;s:18:\"edit_private_posts\";b:1;s:18:\"read_private_posts\";b:1;s:20:\"delete_private_pages\";b:1;s:18:\"edit_private_pages\";b:1;s:18:\"read_private_pages\";b:1;}}s:6:\"author\";a:2:{s:4:\"name\";s:6:\"Author\";s:12:\"capabilities\";a:10:{s:12:\"upload_files\";b:1;s:10:\"edit_posts\";b:1;s:20:\"edit_published_posts\";b:1;s:13:\"publish_posts\";b:1;s:4:\"read\";b:1;s:7:\"level_2\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:12:\"delete_posts\";b:1;s:22:\"delete_published_posts\";b:1;}}s:11:\"contributor\";a:2:{s:4:\"name\";s:11:\"Contributor\";s:12:\"capabilities\";a:5:{s:10:\"edit_posts\";b:1;s:4:\"read\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:12:\"delete_posts\";b:1;}}s:10:\"subscriber\";a:2:{s:4:\"name\";s:10:\"Subscriber\";s:12:\"capabilities\";a:2:{s:4:\"read\";b:1;s:7:\"level_0\";b:1;}}}','yes'),(93,'fresh_site','0','yes'),(94,'WPLANG','zh_CN','yes'),(95,'widget_search','a:4:{i:2;a:1:{s:5:\"title\";s:0:\"\";}s:12:\"_multiwidget\";i:1;i:3;a:1:{s:5:\"title\";s:6:\"搜索\";}i:4;a:1:{s:5:\"title\";s:6:\"搜索\";}}','yes'),(96,'widget_recent-posts','a:2:{i:2;a:2:{s:5:\"title\";s:0:\"\";s:6:\"number\";i:5;}s:12:\"_multiwidget\";i:1;}','yes'),(97,'widget_recent-comments','a:2:{i:2;a:2:{s:5:\"title\";s:0:\"\";s:6:\"number\";i:5;}s:12:\"_multiwidget\";i:1;}','yes'),(98,'widget_archives','a:3:{i:2;a:3:{s:5:\"title\";s:0:\"\";s:5:\"count\";i:0;s:8:\"dropdown\";i:0;}i:3;N;s:12:\"_multiwidget\";i:1;}','yes'),(99,'widget_meta','a:2:{i:2;a:1:{s:5:\"title\";s:0:\"\";}s:12:\"_multiwidget\";i:1;}','yes'),(100,'sidebars_widgets','a:4:{s:9:\"sidebar-3\";a:2:{i:0;s:6:\"text-5\";i:1;s:8:\"search-4\";}s:19:\"wp_inactive_widgets\";a:0:{}s:9:\"sidebar-1\";a:4:{i:0;s:8:\"search-3\";i:1;s:12:\"categories-3\";i:2;s:10:\"archives-3\";i:3;s:6:\"text-3\";}s:13:\"array_version\";i:3;}','yes'),(101,'logged_in_key','l&tXH4|ESHz1C-+yDl<$,TJ6` >!{L*,Kpbv/oeW/PccpiY^;n7f},XA)MaN{Bf+','no'),(102,'logged_in_salt','|x}5}|::qg1hCgECeCPmJU}hEwAC@s/Z6SO4A;nK<hTmTEezp?`h]1)Id%+sfs~^','no'),(103,'widget_pages','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(104,'widget_calendar','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(105,'widget_media_audio','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(106,'widget_media_image','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(107,'widget_media_video','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(108,'widget_tag_cloud','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(109,'widget_nav_menu','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(110,'cron','a:10:{i:1514144320;a:1:{s:40:\"jetpack_display_posts_widget_cron_update\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"minutes_10\";s:4:\"args\";a:0:{}s:8:\"interval\";i:600;}}}i:1514144340;a:2:{s:17:\"jetpack_sync_cron\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:21:\"jetpack_sync_interval\";s:4:\"args\";a:0:{}s:8:\"interval\";i:300;}}s:22:\"jetpack_sync_full_cron\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:21:\"jetpack_sync_interval\";s:4:\"args\";a:0:{}s:8:\"interval\";i:300;}}}i:1514144920;a:1:{s:20:\"jetpack_clean_nonces\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:6:\"hourly\";s:4:\"args\";a:0:{}s:8:\"interval\";i:3600;}}}i:1514144940;a:1:{s:20:\"jp_sitemap_cron_hook\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:16:\"sitemap-interval\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}}i:1514159833;a:3:{s:16:\"wp_version_check\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}s:17:\"wp_update_plugins\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}s:16:\"wp_update_themes\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}}i:1514188140;a:1:{s:20:\"jetpack_v2_heartbeat\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:5:\"daily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:86400;}}}i:1514188142;a:1:{s:24:\"jp_purge_transients_cron\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:5:\"daily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:86400;}}}i:1514188480;a:1:{s:30:\"wp_scheduled_auto_draft_delete\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:5:\"daily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:86400;}}}i:1514203046;a:1:{s:19:\"wp_scheduled_delete\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:5:\"daily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:86400;}}}s:7:\"version\";i:2;}','yes'),(112,'secure_auth_key','c@~bO*vv%$^:TADH%5ZkWhn8B`_GYA/g3{7FpRytl!9k+?v{.&3g?{Ea,yeU9tIo','no'),(113,'secure_auth_salt','bei;9~7=roWOZJ;:/z-YaDLo)&(P[4u]n(-=NlU&@;L(=G=rG,#/a@z(g:3KKCYH','no'),(115,'nonce_key','F&hZ-^re1{tr6Qa?DITOP@8*48;GoHd/dFE7[Vfd=jWlVA+H<;%V,13nr&c]y/v^','no'),(116,'nonce_salt','^1_=ME=JHR<?KqZFcbT8[8p8DHk?Wr*y5v;j`|mpYr;LfkVPJZkpqo=64L[A:G1Z','no'),(124,'can_compress_scripts','1','no'),(143,'zh_cn_l10n_icp_num','浙ICP备17032656号','yes'),(146,'theme_mods_twentyseventeen','a:9:{s:18:\"custom_css_post_id\";i:-1;s:18:\"nav_menu_locations\";a:2:{s:3:\"top\";i:2;s:6:\"social\";i:0;}s:7:\"panel_1\";i:11;s:7:\"panel_2\";i:8;s:7:\"panel_3\";i:10;s:7:\"panel_4\";i:9;s:11:\"colorscheme\";s:5:\"light\";s:12:\"header_image\";s:13:\"remove-header\";s:16:\"sidebars_widgets\";a:2:{s:4:\"time\";i:1501503665;s:4:\"data\";a:4:{s:19:\"wp_inactive_widgets\";a:0:{}s:9:\"sidebar-1\";a:2:{i:0;s:8:\"search-3\";i:1;s:6:\"text-3\";}s:9:\"sidebar-2\";a:1:{i:0;s:6:\"text-4\";}s:9:\"sidebar-3\";a:2:{i:0;s:6:\"text-5\";i:1;s:8:\"search-4\";}}}}','yes'),(150,'auth_key','_`kB6m%AiN1%:,s1V]*4(lG8{9gd%*@}4R@=fsK?/[AFWzbZ1W{(uS/!]~/77K2J','no'),(151,'auth_salt','X%FE$226elfgK<n|*3?WA-loXi=GeqTZ;CO^f:KPVqezcV4*!: 8<]mL VlvT:`u','no'),(160,'nav_menu_options','a:1:{s:8:\"auto_add\";a:0:{}}','yes'),(166,'theme_mods_twentyfifteen','a:6:{s:18:\"custom_css_post_id\";i:38;s:18:\"nav_menu_locations\";a:3:{s:3:\"top\";i:2;s:6:\"social\";i:0;s:7:\"primary\";i:2;}s:16:\"background_color\";s:6:\"f1f1f1\";s:12:\"color_scheme\";s:7:\"default\";s:17:\"sidebar_textcolor\";s:7:\"#333333\";s:23:\"header_background_color\";s:7:\"#ffffff\";}','yes'),(167,'theme_mods_twentysixteen','a:3:{s:18:\"custom_css_post_id\";i:-1;s:18:\"nav_menu_locations\";a:2:{s:3:\"top\";i:2;s:6:\"social\";i:0;}s:16:\"sidebars_widgets\";a:2:{s:4:\"time\";i:1501503848;s:4:\"data\";a:4:{s:19:\"wp_inactive_widgets\";a:0:{}s:9:\"sidebar-1\";a:2:{i:0;s:8:\"search-3\";i:1;s:6:\"text-3\";}s:9:\"sidebar-2\";a:0:{}s:9:\"sidebar-3\";a:2:{i:0;s:6:\"text-5\";i:1;s:8:\"search-4\";}}}}','yes'),(174,'current_theme','Twenty Fifteen','yes'),(175,'theme_switched','','yes'),(176,'theme_switched_via_customizer','','yes'),(177,'customize_stashed_theme_mods','a:0:{}','no'),(191,'_transient_timeout_plugin_slugs','1502189607','no'),(192,'_transient_plugin_slugs','a:6:{i:0;s:19:\"akismet/akismet.php\";i:1;s:9:\"hello.php\";i:2;s:19:\"jetpack/jetpack.php\";i:3;s:45:\"limit-login-attempts/limit-login-attempts.php\";i:4;s:25:\"tablepress/tablepress.php\";i:5;s:44:\"wp-code-highlightjs/wp_code_highlight.js.php\";}','no'),(193,'recently_activated','a:1:{s:44:\"wp-code-highlightjs/wp_code_highlight.js.php\";i:1502103207;}','yes'),(194,'category_children','a:0:{}','yes'),(249,'_site_transient_timeout_community-events-46c4a01fe3bbfeffb8f3e2898d3218a5','1501702158','no'),(250,'_site_transient_community-events-46c4a01fe3bbfeffb8f3e2898d3218a5','a:2:{s:8:\"location\";a:1:{s:2:\"ip\";s:12:\"118.89.101.0\";}s:6:\"events\";a:0:{}}','no'),(265,'jetpack_activated','1','yes'),(268,'jetpack_sync_settings_disable','0','yes'),(269,'jetpack_file_data','a:1:{s:3:\"5.2\";a:55:{s:32:\"31e5b9ae08b62c2b0cd8a7792242298b\";a:14:{s:4:\"name\";s:20:\"Spelling and Grammar\";s:11:\"description\";s:39:\"Check your spelling, style, and grammar\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:1:\"6\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:3:\"1.1\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:3:\"Yes\";s:13:\"auto_activate\";s:3:\"Yes\";s:11:\"module_tags\";s:7:\"Writing\";s:7:\"feature\";s:7:\"Writing\";s:25:\"additional_search_queries\";s:115:\"after the deadline, afterthedeadline, spell, spellchecker, spelling, grammar, proofreading, style, language, cliche\";}s:32:\"3f41b2d629265b5de8108b463abbe8e2\";a:14:{s:4:\"name\";s:8:\"Carousel\";s:11:\"description\";s:75:\"Display images and galleries in a gorgeous, full-screen browsing experience\";s:14:\"jumpstart_desc\";s:79:\"Brings your photos and images to life as full-size, easily navigable galleries.\";s:4:\"sort\";s:2:\"22\";s:20:\"recommendation_order\";s:2:\"12\";s:10:\"introduced\";s:3:\"1.5\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:2:\"No\";s:13:\"auto_activate\";s:2:\"No\";s:11:\"module_tags\";s:17:\"Photos and Videos\";s:7:\"feature\";s:21:\"Appearance, Jumpstart\";s:25:\"additional_search_queries\";s:80:\"gallery, carousel, diaporama, slideshow, images, lightbox, exif, metadata, image\";}s:32:\"e1c539d5b392f5a1709dada3da5793cc\";a:14:{s:4:\"name\";s:13:\"Comment Likes\";s:11:\"description\";s:64:\"Increase visitor engagement by adding a Like button to comments.\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:2:\"39\";s:20:\"recommendation_order\";s:2:\"17\";s:10:\"introduced\";s:3:\"5.1\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:3:\"Yes\";s:13:\"auto_activate\";s:2:\"No\";s:11:\"module_tags\";s:6:\"Social\";s:7:\"feature\";s:0:\"\";s:25:\"additional_search_queries\";s:37:\"like widget, like button, like, likes\";}s:32:\"c6ebb418dde302de09600a6025370583\";a:14:{s:4:\"name\";s:8:\"Comments\";s:11:\"description\";s:80:\"Let readers use WordPress.com, Twitter, Facebook, or Google+ accounts to comment\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:2:\"20\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:3:\"1.4\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:3:\"Yes\";s:13:\"auto_activate\";s:2:\"No\";s:11:\"module_tags\";s:6:\"Social\";s:7:\"feature\";s:10:\"Engagement\";s:25:\"additional_search_queries\";s:53:\"comments, comment, facebook, twitter, google+, social\";}s:32:\"836f9485669e1bbb02920cb474730df0\";a:14:{s:4:\"name\";s:12:\"Contact Form\";s:11:\"description\";s:57:\"Insert a customizable contact form anywhere on your site.\";s:14:\"jumpstart_desc\";s:111:\"Adds a button to your post and page editors, allowing you to build simple forms to help visitors stay in touch.\";s:4:\"sort\";s:2:\"15\";s:20:\"recommendation_order\";s:2:\"14\";s:10:\"introduced\";s:3:\"1.3\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:2:\"No\";s:13:\"auto_activate\";s:3:\"Yes\";s:11:\"module_tags\";s:5:\"Other\";s:7:\"feature\";s:18:\"Writing, Jumpstart\";s:25:\"additional_search_queries\";s:44:\"contact, form, grunion, feedback, submission\";}s:32:\"ea3970eebf8aac55fc3eca5dca0e0157\";a:14:{s:4:\"name\";s:20:\"Custom content types\";s:11:\"description\";s:74:\"Display different types of content on your site with custom content types.\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:2:\"34\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:3:\"3.1\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:2:\"No\";s:13:\"auto_activate\";s:3:\"Yes\";s:11:\"module_tags\";s:7:\"Writing\";s:7:\"feature\";s:7:\"Writing\";s:25:\"additional_search_queries\";s:72:\"cpt, custom post types, portfolio, portfolios, testimonial, testimonials\";}s:32:\"d2bb05ccad3d8789df40ca3abb97336c\";a:14:{s:4:\"name\";s:10:\"Custom CSS\";s:11:\"description\";s:53:\"Tweak your site’s CSS without modifying your theme.\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:1:\"2\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:3:\"1.7\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:2:\"No\";s:13:\"auto_activate\";s:3:\"Yes\";s:11:\"module_tags\";s:10:\"Appearance\";s:7:\"feature\";s:10:\"Appearance\";s:25:\"additional_search_queries\";s:108:\"css, customize, custom, style, editor, less, sass, preprocessor, font, mobile, appearance, theme, stylesheet\";}s:32:\"a2064eec5b9c7e0d816af71dee7a715f\";a:14:{s:4:\"name\";s:0:\"\";s:11:\"description\";s:0:\"\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:0:\"\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:0:\"\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:0:\"\";s:13:\"auto_activate\";s:0:\"\";s:11:\"module_tags\";s:0:\"\";s:7:\"feature\";s:0:\"\";s:25:\"additional_search_queries\";s:0:\"\";}s:32:\"53a4ec755022ef3953699734c343da02\";a:14:{s:4:\"name\";s:21:\"Enhanced Distribution\";s:11:\"description\";s:27:\"Increase reach and traffic.\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:1:\"5\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:3:\"1.2\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:3:\"Yes\";s:13:\"auto_activate\";s:6:\"Public\";s:11:\"module_tags\";s:7:\"Writing\";s:7:\"feature\";s:10:\"Engagement\";s:25:\"additional_search_queries\";s:54:\"google, seo, firehose, search, broadcast, broadcasting\";}s:32:\"e1f1f6e3689fc31c477e64b06e2f8fbf\";a:14:{s:4:\"name\";s:16:\"Google Analytics\";s:11:\"description\";s:56:\"Set up Google Analytics without touching a line of code.\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:2:\"37\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:3:\"4.5\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:3:\"Yes\";s:13:\"auto_activate\";s:2:\"No\";s:11:\"module_tags\";s:0:\"\";s:7:\"feature\";s:10:\"Engagement\";s:25:\"additional_search_queries\";s:37:\"webmaster, google, analytics, console\";}s:32:\"72fecb67ee6704ba0a33e0225316ad06\";a:14:{s:4:\"name\";s:0:\"\";s:11:\"description\";s:0:\"\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:0:\"\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:0:\"\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:0:\"\";s:13:\"auto_activate\";s:0:\"\";s:11:\"module_tags\";s:0:\"\";s:7:\"feature\";s:0:\"\";s:25:\"additional_search_queries\";s:0:\"\";}s:32:\"d56e2886185a9eace719cc57d46770df\";a:14:{s:4:\"name\";s:19:\"Gravatar Hovercards\";s:11:\"description\";s:58:\"Enable pop-up business cards over commenters’ Gravatars.\";s:14:\"jumpstart_desc\";s:131:\"Let commenters link their profiles to their Gravatar accounts, making it easy for your visitors to learn more about your community.\";s:4:\"sort\";s:2:\"11\";s:20:\"recommendation_order\";s:2:\"13\";s:10:\"introduced\";s:3:\"1.1\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:2:\"No\";s:13:\"auto_activate\";s:3:\"Yes\";s:11:\"module_tags\";s:18:\"Social, Appearance\";s:7:\"feature\";s:21:\"Appearance, Jumpstart\";s:25:\"additional_search_queries\";s:20:\"gravatar, hovercards\";}s:32:\"e391e760617bd0e0736550e34a73d7fe\";a:14:{s:4:\"name\";s:0:\"\";s:11:\"description\";s:0:\"\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:0:\"\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:8:\"2.0.3 ??\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:2:\"No\";s:13:\"auto_activate\";s:3:\"Yes\";s:11:\"module_tags\";s:0:\"\";s:7:\"feature\";s:0:\"\";s:25:\"additional_search_queries\";s:0:\"\";}s:32:\"2e345370766346c616b3c5046e817720\";a:14:{s:4:\"name\";s:15:\"Infinite Scroll\";s:11:\"description\";s:53:\"Automatically load new content when a visitor scrolls\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:2:\"26\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:3:\"2.0\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:2:\"No\";s:13:\"auto_activate\";s:2:\"No\";s:11:\"module_tags\";s:10:\"Appearance\";s:7:\"feature\";s:10:\"Appearance\";s:25:\"additional_search_queries\";s:33:\"scroll, infinite, infinite scroll\";}s:32:\"bd69edbf134de5fae8fdcf2e70a45b56\";a:14:{s:4:\"name\";s:8:\"JSON API\";s:11:\"description\";s:51:\"Allow applications to securely access your content.\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:2:\"19\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:3:\"1.9\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:3:\"Yes\";s:13:\"auto_activate\";s:6:\"Public\";s:11:\"module_tags\";s:19:\"Writing, Developers\";s:7:\"feature\";s:7:\"General\";s:25:\"additional_search_queries\";s:50:\"api, rest, develop, developers, json, klout, oauth\";}s:32:\"8110b7a4423aaa619dfa46b8843e10d1\";a:14:{s:4:\"name\";s:14:\"Beautiful Math\";s:11:\"description\";s:57:\"Use LaTeX markup for complex equations and other geekery.\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:2:\"12\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:3:\"1.1\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:2:\"No\";s:13:\"auto_activate\";s:3:\"Yes\";s:11:\"module_tags\";s:7:\"Writing\";s:7:\"feature\";s:7:\"Writing\";s:25:\"additional_search_queries\";s:47:\"latex, math, equation, equations, formula, code\";}s:32:\"fd7e85d3b4887fa6b6f997d6592c1f33\";a:14:{s:4:\"name\";s:5:\"Likes\";s:11:\"description\";s:63:\"Give visitors an easy way to show they appreciate your content.\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:2:\"23\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:3:\"2.2\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:3:\"Yes\";s:13:\"auto_activate\";s:2:\"No\";s:11:\"module_tags\";s:6:\"Social\";s:7:\"feature\";s:10:\"Engagement\";s:25:\"additional_search_queries\";s:26:\"like, likes, wordpress.com\";}s:32:\"c5dfef41fad5bcdcaae8e315e5cfc420\";a:14:{s:4:\"name\";s:6:\"Manage\";s:11:\"description\";s:54:\"Manage all of your sites from a centralized dashboard.\";s:14:\"jumpstart_desc\";s:151:\"Helps you remotely manage plugins, turn on automated updates, and more from <a href=\"https://wordpress.com/plugins/\" target=\"_blank\">wordpress.com</a>.\";s:4:\"sort\";s:1:\"1\";s:20:\"recommendation_order\";s:1:\"3\";s:10:\"introduced\";s:3:\"3.4\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:3:\"Yes\";s:13:\"auto_activate\";s:3:\"Yes\";s:11:\"module_tags\";s:35:\"Centralized Management, Recommended\";s:7:\"feature\";s:7:\"General\";s:25:\"additional_search_queries\";s:26:\"manage, management, remote\";}s:32:\"fd6dc399b92bce76013427e3107c314f\";a:14:{s:4:\"name\";s:8:\"Markdown\";s:11:\"description\";s:50:\"Write posts or pages in plain-text Markdown syntax\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:2:\"31\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:3:\"2.8\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:2:\"No\";s:13:\"auto_activate\";s:2:\"No\";s:11:\"module_tags\";s:7:\"Writing\";s:7:\"feature\";s:7:\"Writing\";s:25:\"additional_search_queries\";s:12:\"md, markdown\";}s:32:\"614679778a7db6d8129c9f69ac8e10a5\";a:14:{s:4:\"name\";s:21:\"WordPress.com Toolbar\";s:11:\"description\";s:91:\"Replaces the admin bar with a useful toolbar to quickly manage your site via WordPress.com.\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:2:\"38\";s:20:\"recommendation_order\";s:2:\"16\";s:10:\"introduced\";s:3:\"4.8\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:3:\"Yes\";s:13:\"auto_activate\";s:2:\"No\";s:11:\"module_tags\";s:7:\"General\";s:7:\"feature\";s:0:\"\";s:25:\"additional_search_queries\";s:19:\"adminbar, masterbar\";}s:32:\"c49a35b6482b0426cb07ad28ecf5d7df\";a:14:{s:4:\"name\";s:12:\"Mobile Theme\";s:11:\"description\";s:31:\"Enable the Jetpack Mobile theme\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:2:\"21\";s:20:\"recommendation_order\";s:2:\"11\";s:10:\"introduced\";s:3:\"1.8\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:2:\"No\";s:13:\"auto_activate\";s:2:\"No\";s:11:\"module_tags\";s:31:\"Appearance, Mobile, Recommended\";s:7:\"feature\";s:10:\"Appearance\";s:25:\"additional_search_queries\";s:24:\"mobile, theme, minileven\";}s:32:\"b42e38f6fafd2e4104ebe5bf39b4be47\";a:14:{s:4:\"name\";s:0:\"\";s:11:\"description\";s:0:\"\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:0:\"\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:0:\"\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:0:\"\";s:13:\"auto_activate\";s:0:\"\";s:11:\"module_tags\";s:0:\"\";s:7:\"feature\";s:0:\"\";s:25:\"additional_search_queries\";s:0:\"\";}s:32:\"771cfeeba0d3d23ec344d5e781fb0ae2\";a:14:{s:4:\"name\";s:0:\"\";s:11:\"description\";s:0:\"\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:0:\"\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:0:\"\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:0:\"\";s:13:\"auto_activate\";s:0:\"\";s:11:\"module_tags\";s:0:\"\";s:7:\"feature\";s:0:\"\";s:25:\"additional_search_queries\";s:0:\"\";}s:32:\"54f0661d27c814fc8bde39580181d939\";a:14:{s:4:\"name\";s:0:\"\";s:11:\"description\";s:0:\"\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:0:\"\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:0:\"\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:0:\"\";s:13:\"auto_activate\";s:0:\"\";s:11:\"module_tags\";s:0:\"\";s:7:\"feature\";s:0:\"\";s:25:\"additional_search_queries\";s:0:\"\";}s:32:\"46c4c413b5c72bbd3c3dbd14ff8f8adc\";a:14:{s:4:\"name\";s:0:\"\";s:11:\"description\";s:0:\"\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:0:\"\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:0:\"\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:0:\"\";s:13:\"auto_activate\";s:0:\"\";s:11:\"module_tags\";s:0:\"\";s:7:\"feature\";s:0:\"\";s:25:\"additional_search_queries\";s:0:\"\";}s:32:\"9ea52fa25783e5ceeb6bfaed3268e64e\";a:14:{s:4:\"name\";s:7:\"Monitor\";s:11:\"description\";s:61:\"Receive immediate notifications if your site goes down, 24/7.\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:2:\"28\";s:20:\"recommendation_order\";s:2:\"10\";s:10:\"introduced\";s:3:\"2.6\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:3:\"Yes\";s:13:\"auto_activate\";s:2:\"No\";s:11:\"module_tags\";s:11:\"Recommended\";s:7:\"feature\";s:8:\"Security\";s:25:\"additional_search_queries\";s:37:\"monitor, uptime, downtime, monitoring\";}s:32:\"cfcaafd0fcad087899d715e0b877474d\";a:14:{s:4:\"name\";s:13:\"Notifications\";s:11:\"description\";s:57:\"Receive instant notifications of site comments and likes.\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:2:\"13\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:3:\"1.9\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:3:\"Yes\";s:13:\"auto_activate\";s:3:\"Yes\";s:11:\"module_tags\";s:5:\"Other\";s:7:\"feature\";s:7:\"General\";s:25:\"additional_search_queries\";s:62:\"notification, notifications, toolbar, adminbar, push, comments\";}s:32:\"0d18bfa69bec61550c1d813ce64149b0\";a:14:{s:4:\"name\";s:10:\"Omnisearch\";s:11:\"description\";s:66:\"Search your entire database from a single field in your dashboard.\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:2:\"16\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:3:\"2.3\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:2:\"No\";s:13:\"auto_activate\";s:3:\"Yes\";s:11:\"module_tags\";s:10:\"Developers\";s:7:\"feature\";s:7:\"General\";s:25:\"additional_search_queries\";s:6:\"search\";}s:32:\"3f0a11e23118f0788d424b646a6d465f\";a:14:{s:4:\"name\";s:6:\"Photon\";s:11:\"description\";s:26:\"Speed up images and photos\";s:14:\"jumpstart_desc\";s:141:\"Mirrors and serves your images from our free and fast image CDN, improving your site’s performance with no additional load on your servers.\";s:4:\"sort\";s:2:\"25\";s:20:\"recommendation_order\";s:1:\"1\";s:10:\"introduced\";s:3:\"2.0\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:3:\"Yes\";s:13:\"auto_activate\";s:2:\"No\";s:11:\"module_tags\";s:42:\"Photos and Videos, Appearance, Recommended\";s:7:\"feature\";s:34:\"Recommended, Jumpstart, Appearance\";s:25:\"additional_search_queries\";s:38:\"photon, image, cdn, performance, speed\";}s:32:\"e37cfbcb72323fb1fe8255a2edb4d738\";a:14:{s:4:\"name\";s:13:\"Post by email\";s:11:\"description\";s:33:\"Publish posts by sending an email\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:2:\"14\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:3:\"2.0\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:3:\"Yes\";s:13:\"auto_activate\";s:3:\"Yes\";s:11:\"module_tags\";s:7:\"Writing\";s:7:\"feature\";s:7:\"Writing\";s:25:\"additional_search_queries\";s:20:\"post by email, email\";}s:32:\"728290d131a480bfe7b9e405d7cd925f\";a:14:{s:4:\"name\";s:7:\"Protect\";s:11:\"description\";s:41:\"Block suspicious-looking sign in activity\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:1:\"1\";s:20:\"recommendation_order\";s:1:\"4\";s:10:\"introduced\";s:3:\"3.4\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:3:\"Yes\";s:13:\"auto_activate\";s:3:\"Yes\";s:11:\"module_tags\";s:11:\"Recommended\";s:7:\"feature\";s:8:\"Security\";s:25:\"additional_search_queries\";s:65:\"security, secure, protection, botnet, brute force, protect, login\";}s:32:\"f9ce784babbbf4dcca99b8cd2ceb420c\";a:14:{s:4:\"name\";s:9:\"Publicize\";s:11:\"description\";s:27:\"Automated social marketing.\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:2:\"10\";s:20:\"recommendation_order\";s:1:\"7\";s:10:\"introduced\";s:3:\"2.0\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:3:\"Yes\";s:13:\"auto_activate\";s:3:\"Yes\";s:11:\"module_tags\";s:19:\"Social, Recommended\";s:7:\"feature\";s:10:\"Engagement\";s:25:\"additional_search_queries\";s:107:\"facebook, twitter, google+, googleplus, google, path, tumblr, linkedin, social, tweet, connections, sharing\";}s:32:\"052c03877dd3d296a71531cb07ad939a\";a:14:{s:4:\"name\";s:0:\"\";s:11:\"description\";s:0:\"\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:0:\"\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:0:\"\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:0:\"\";s:13:\"auto_activate\";s:0:\"\";s:11:\"module_tags\";s:0:\"\";s:7:\"feature\";s:0:\"\";s:25:\"additional_search_queries\";s:0:\"\";}s:32:\"52edecb2a75222e75b2dce4356a4efce\";a:14:{s:4:\"name\";s:13:\"Related posts\";s:11:\"description\";s:64:\"Increase page views by showing related content to your visitors.\";s:14:\"jumpstart_desc\";s:113:\"Keep visitors engaged on your blog by highlighting relevant and new content at the bottom of each published post.\";s:4:\"sort\";s:2:\"29\";s:20:\"recommendation_order\";s:1:\"9\";s:10:\"introduced\";s:3:\"2.9\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:3:\"Yes\";s:13:\"auto_activate\";s:2:\"No\";s:11:\"module_tags\";s:11:\"Recommended\";s:7:\"feature\";s:21:\"Engagement, Jumpstart\";s:25:\"additional_search_queries\";s:22:\"related, related posts\";}s:32:\"fe7a38addc9275dcbe6c4ff6c44a9350\";a:14:{s:4:\"name\";s:6:\"Search\";s:11:\"description\";s:41:\"Enhanced search, powered by Elasticsearch\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:0:\"\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:3:\"5.0\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:5:\"false\";s:19:\"requires_connection\";s:3:\"Yes\";s:13:\"auto_activate\";s:2:\"No\";s:11:\"module_tags\";s:0:\"\";s:7:\"feature\";s:6:\"Search\";s:25:\"additional_search_queries\";s:6:\"search\";}s:32:\"68b0d01689803c0ea7e4e60a86de2519\";a:14:{s:4:\"name\";s:9:\"SEO Tools\";s:11:\"description\";s:50:\"Better results on search engines and social media.\";s:14:\"jumpstart_desc\";s:50:\"Better results on search engines and social media.\";s:4:\"sort\";s:2:\"35\";s:20:\"recommendation_order\";s:2:\"15\";s:10:\"introduced\";s:3:\"4.4\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:3:\"Yes\";s:13:\"auto_activate\";s:2:\"No\";s:11:\"module_tags\";s:18:\"Social, Appearance\";s:7:\"feature\";s:18:\"Traffic, Jumpstart\";s:25:\"additional_search_queries\";s:81:\"search engine optimization, social preview, meta description, custom title format\";}s:32:\"8b059cb50a66b717f1ec842e736b858c\";a:14:{s:4:\"name\";s:7:\"Sharing\";s:11:\"description\";s:37:\"Allow visitors to share your content.\";s:14:\"jumpstart_desc\";s:116:\"Twitter, Facebook and Google+ buttons at the bottom of each post, making it easy for visitors to share your content.\";s:4:\"sort\";s:1:\"7\";s:20:\"recommendation_order\";s:1:\"6\";s:10:\"introduced\";s:3:\"1.1\";s:7:\"changed\";s:3:\"1.2\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:2:\"No\";s:13:\"auto_activate\";s:3:\"Yes\";s:11:\"module_tags\";s:19:\"Social, Recommended\";s:7:\"feature\";s:21:\"Engagement, Jumpstart\";s:25:\"additional_search_queries\";s:141:\"share, sharing, sharedaddy, buttons, icons, email, facebook, twitter, google+, linkedin, pinterest, pocket, press this, print, reddit, tumblr\";}s:32:\"a6d2394329871857401255533a9873f7\";a:14:{s:4:\"name\";s:16:\"Shortcode Embeds\";s:11:\"description\";s:50:\"Embed media from popular sites without any coding.\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:1:\"3\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:3:\"1.1\";s:7:\"changed\";s:3:\"1.2\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:2:\"No\";s:13:\"auto_activate\";s:3:\"Yes\";s:11:\"module_tags\";s:46:\"Photos and Videos, Social, Writing, Appearance\";s:7:\"feature\";s:7:\"Writing\";s:25:\"additional_search_queries\";s:236:\"shortcodes, shortcode, embeds, media, bandcamp, dailymotion, facebook, flickr, google calendars, google maps, google+, polldaddy, recipe, recipes, scribd, slideshare, slideshow, slideshows, soundcloud, ted, twitter, vimeo, vine, youtube\";}s:32:\"21496e2897ea5f81605e2f2ac3beb921\";a:14:{s:4:\"name\";s:16:\"WP.me Shortlinks\";s:11:\"description\";s:54:\"Create short and simple links for all posts and pages.\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:1:\"8\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:3:\"1.1\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:3:\"Yes\";s:13:\"auto_activate\";s:3:\"Yes\";s:11:\"module_tags\";s:6:\"Social\";s:7:\"feature\";s:7:\"Writing\";s:25:\"additional_search_queries\";s:17:\"shortlinks, wp.me\";}s:32:\"e2a54a5d7879a4162709e6ffb540dd08\";a:14:{s:4:\"name\";s:0:\"\";s:11:\"description\";s:0:\"\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:0:\"\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:0:\"\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:0:\"\";s:13:\"auto_activate\";s:0:\"\";s:11:\"module_tags\";s:0:\"\";s:7:\"feature\";s:0:\"\";s:25:\"additional_search_queries\";s:0:\"\";}s:32:\"f5c537bc304f55b29c1a87e30be0cd24\";a:14:{s:4:\"name\";s:8:\"Sitemaps\";s:11:\"description\";s:50:\"Make it easy for search engines to find your site.\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:2:\"13\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:3:\"3.9\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:2:\"No\";s:13:\"auto_activate\";s:6:\"Public\";s:11:\"module_tags\";s:20:\"Recommended, Traffic\";s:7:\"feature\";s:0:\"\";s:25:\"additional_search_queries\";s:39:\"sitemap, traffic, search, site map, seo\";}s:32:\"59a23643437358a9b557f1d1e20ab040\";a:14:{s:4:\"name\";s:0:\"\";s:11:\"description\";s:0:\"\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:0:\"\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:0:\"\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:0:\"\";s:13:\"auto_activate\";s:0:\"\";s:11:\"module_tags\";s:0:\"\";s:7:\"feature\";s:0:\"\";s:25:\"additional_search_queries\";s:0:\"\";}s:32:\"6a90f97c3194cfca5671728eaaeaf15e\";a:14:{s:4:\"name\";s:14:\"Single Sign On\";s:11:\"description\";s:62:\"Allow users to log into this site using WordPress.com accounts\";s:14:\"jumpstart_desc\";s:98:\"Lets you log in to all your Jetpack-enabled sites with one click using your WordPress.com account.\";s:4:\"sort\";s:2:\"30\";s:20:\"recommendation_order\";s:1:\"5\";s:10:\"introduced\";s:3:\"2.6\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:3:\"Yes\";s:13:\"auto_activate\";s:2:\"No\";s:11:\"module_tags\";s:10:\"Developers\";s:7:\"feature\";s:19:\"Security, Jumpstart\";s:25:\"additional_search_queries\";s:34:\"sso, single sign on, login, log in\";}s:32:\"b65604e920392e2f7134b646760b75e8\";a:14:{s:4:\"name\";s:10:\"Site Stats\";s:11:\"description\";s:44:\"Collect valuable traffic stats and insights.\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:1:\"1\";s:20:\"recommendation_order\";s:1:\"2\";s:10:\"introduced\";s:3:\"1.1\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:3:\"Yes\";s:13:\"auto_activate\";s:3:\"Yes\";s:11:\"module_tags\";s:23:\"Site Stats, Recommended\";s:7:\"feature\";s:10:\"Engagement\";s:25:\"additional_search_queries\";s:54:\"statistics, tracking, analytics, views, traffic, stats\";}s:32:\"23a586dd7ead00e69ec53eb32ef740e4\";a:14:{s:4:\"name\";s:13:\"Subscriptions\";s:11:\"description\";s:87:\"Allow users to subscribe to your posts and comments and receive notifications via email\";s:14:\"jumpstart_desc\";s:126:\"Give visitors two easy subscription options — while commenting, or via a separate email subscription widget you can display.\";s:4:\"sort\";s:1:\"9\";s:20:\"recommendation_order\";s:1:\"8\";s:10:\"introduced\";s:3:\"1.2\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:3:\"Yes\";s:13:\"auto_activate\";s:3:\"Yes\";s:11:\"module_tags\";s:6:\"Social\";s:7:\"feature\";s:21:\"Engagement, Jumpstart\";s:25:\"additional_search_queries\";s:74:\"subscriptions, subscription, email, follow, followers, subscribers, signup\";}s:32:\"1d978b8d84d2f378fe1a702a67633b6d\";a:14:{s:4:\"name\";s:0:\"\";s:11:\"description\";s:0:\"\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:0:\"\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:0:\"\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:0:\"\";s:13:\"auto_activate\";s:0:\"\";s:11:\"module_tags\";s:0:\"\";s:7:\"feature\";s:0:\"\";s:25:\"additional_search_queries\";s:0:\"\";}s:32:\"b3b983461d7f3d27322a3551ed8a9405\";a:14:{s:4:\"name\";s:15:\"Tiled Galleries\";s:11:\"description\";s:61:\"Display image galleries in a variety of elegant arrangements.\";s:14:\"jumpstart_desc\";s:61:\"Display image galleries in a variety of elegant arrangements.\";s:4:\"sort\";s:2:\"24\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:3:\"2.1\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:2:\"No\";s:13:\"auto_activate\";s:2:\"No\";s:11:\"module_tags\";s:17:\"Photos and Videos\";s:7:\"feature\";s:21:\"Appearance, Jumpstart\";s:25:\"additional_search_queries\";s:43:\"gallery, tiles, tiled, grid, mosaic, images\";}s:32:\"d924e5b05722b0e104448543598f54c0\";a:14:{s:4:\"name\";s:0:\"\";s:11:\"description\";s:0:\"\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:0:\"\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:0:\"\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:0:\"\";s:13:\"auto_activate\";s:0:\"\";s:11:\"module_tags\";s:0:\"\";s:7:\"feature\";s:0:\"\";s:25:\"additional_search_queries\";s:0:\"\";}s:32:\"36741583b10c521997e563ad8e1e8b77\";a:14:{s:4:\"name\";s:12:\"Data Backups\";s:11:\"description\";s:54:\"Off-site backups, security scans, and automatic fixes.\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:2:\"32\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:5:\"0:1.2\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:5:\"false\";s:4:\"free\";s:5:\"false\";s:19:\"requires_connection\";s:3:\"Yes\";s:13:\"auto_activate\";s:3:\"Yes\";s:11:\"module_tags\";s:0:\"\";s:7:\"feature\";s:16:\"Security, Health\";s:25:\"additional_search_queries\";s:28:\"vaultpress, backup, security\";}s:32:\"2b9b44f09b5459617d68dd82ee17002a\";a:14:{s:4:\"name\";s:17:\"Site verification\";s:11:\"description\";s:58:\"Establish your site\'s authenticity with external services.\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:2:\"33\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:3:\"3.0\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:2:\"No\";s:13:\"auto_activate\";s:3:\"Yes\";s:11:\"module_tags\";s:0:\"\";s:7:\"feature\";s:10:\"Engagement\";s:25:\"additional_search_queries\";s:56:\"webmaster, seo, google, bing, pinterest, search, console\";}s:32:\"5ab4c0db7c42e10e646342da0274c491\";a:14:{s:4:\"name\";s:10:\"VideoPress\";s:11:\"description\";s:27:\"Fast, ad-free video hosting\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:2:\"27\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:3:\"2.5\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:5:\"false\";s:19:\"requires_connection\";s:3:\"Yes\";s:13:\"auto_activate\";s:0:\"\";s:11:\"module_tags\";s:17:\"Photos and Videos\";s:7:\"feature\";s:7:\"Writing\";s:25:\"additional_search_queries\";s:25:\"video, videos, videopress\";}s:32:\"60a1d3aa38bc0fe1039e59dd60888543\";a:14:{s:4:\"name\";s:17:\"Widget Visibility\";s:11:\"description\";s:42:\"Control where widgets appear on your site.\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:2:\"17\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:3:\"2.4\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:2:\"No\";s:13:\"auto_activate\";s:3:\"Yes\";s:11:\"module_tags\";s:10:\"Appearance\";s:7:\"feature\";s:10:\"Appearance\";s:25:\"additional_search_queries\";s:54:\"widget visibility, logic, conditional, widgets, widget\";}s:32:\"174ed3416476c2cb9ff5b0f671280b15\";a:14:{s:4:\"name\";s:21:\"Extra Sidebar Widgets\";s:11:\"description\";s:54:\"Add images, Twitter streams, and more to your sidebar.\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:1:\"4\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:3:\"1.2\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:2:\"No\";s:13:\"auto_activate\";s:3:\"Yes\";s:11:\"module_tags\";s:18:\"Social, Appearance\";s:7:\"feature\";s:10:\"Appearance\";s:25:\"additional_search_queries\";s:65:\"widget, widgets, facebook, gallery, twitter, gravatar, image, rss\";}s:32:\"a668bc9418d6de87409f867892fcdd7f\";a:14:{s:4:\"name\";s:3:\"Ads\";s:11:\"description\";s:60:\"Earn income by allowing Jetpack to display high quality ads.\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:1:\"1\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:5:\"4.5.0\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:3:\"Yes\";s:13:\"auto_activate\";s:2:\"No\";s:11:\"module_tags\";s:19:\"Traffic, Appearance\";s:7:\"feature\";s:0:\"\";s:25:\"additional_search_queries\";s:26:\"advertising, ad codes, ads\";}s:32:\"28b931a1db19bd24869bd54b14e733d5\";a:14:{s:4:\"name\";s:0:\"\";s:11:\"description\";s:0:\"\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:0:\"\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:0:\"\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:0:\"\";s:13:\"auto_activate\";s:0:\"\";s:11:\"module_tags\";s:0:\"\";s:7:\"feature\";s:0:\"\";s:25:\"additional_search_queries\";s:0:\"\";}}}','yes'),(270,'jetpack_available_modules','a:1:{s:3:\"5.2\";a:42:{s:18:\"after-the-deadline\";s:3:\"1.1\";s:8:\"carousel\";s:3:\"1.5\";s:13:\"comment-likes\";s:3:\"5.1\";s:8:\"comments\";s:3:\"1.4\";s:12:\"contact-form\";s:3:\"1.3\";s:20:\"custom-content-types\";s:3:\"3.1\";s:10:\"custom-css\";s:3:\"1.7\";s:21:\"enhanced-distribution\";s:3:\"1.2\";s:16:\"google-analytics\";s:3:\"4.5\";s:19:\"gravatar-hovercards\";s:3:\"1.1\";s:15:\"infinite-scroll\";s:3:\"2.0\";s:8:\"json-api\";s:3:\"1.9\";s:5:\"latex\";s:3:\"1.1\";s:5:\"likes\";s:3:\"2.2\";s:6:\"manage\";s:3:\"3.4\";s:8:\"markdown\";s:3:\"2.8\";s:9:\"masterbar\";s:3:\"4.8\";s:9:\"minileven\";s:3:\"1.8\";s:7:\"monitor\";s:3:\"2.6\";s:5:\"notes\";s:3:\"1.9\";s:10:\"omnisearch\";s:3:\"2.3\";s:6:\"photon\";s:3:\"2.0\";s:13:\"post-by-email\";s:3:\"2.0\";s:7:\"protect\";s:3:\"3.4\";s:9:\"publicize\";s:3:\"2.0\";s:13:\"related-posts\";s:3:\"2.9\";s:6:\"search\";s:3:\"5.0\";s:9:\"seo-tools\";s:3:\"4.4\";s:10:\"sharedaddy\";s:3:\"1.1\";s:10:\"shortcodes\";s:3:\"1.1\";s:10:\"shortlinks\";s:3:\"1.1\";s:8:\"sitemaps\";s:3:\"3.9\";s:3:\"sso\";s:3:\"2.6\";s:5:\"stats\";s:3:\"1.1\";s:13:\"subscriptions\";s:3:\"1.2\";s:13:\"tiled-gallery\";s:3:\"2.1\";s:10:\"vaultpress\";s:5:\"0:1.2\";s:18:\"verification-tools\";s:3:\"3.0\";s:10:\"videopress\";s:3:\"2.5\";s:17:\"widget-visibility\";s:3:\"2.4\";s:7:\"widgets\";s:3:\"1.2\";s:7:\"wordads\";s:5:\"4.5.0\";}}','yes'),(271,'jetpack_options','a:10:{s:7:\"version\";s:14:\"5.2:1501659543\";s:11:\"old_version\";s:14:\"5.2:1501659543\";s:28:\"fallback_no_verify_ssl_certs\";i:0;s:9:\"time_diff\";i:0;s:2:\"id\";i:133508167;s:6:\"public\";i:1;s:9:\"jumpstart\";s:19:\"jumpstart_activated\";s:11:\"master_user\";i:1;s:14:\"last_heartbeat\";i:1514102716;s:24:\"custom_css_4.7_migration\";b:1;}','yes'),(273,'do_activate','0','yes'),(276,'_transient_timeout_jetpack_https_test_message','1514189116','no'),(277,'_transient_jetpack_https_test_message','','no'),(278,'jetpack_log','a:13:{i:0;a:4:{s:4:\"time\";i:1501659552;s:7:\"user_id\";i:1;s:7:\"blog_id\";b:0;s:4:\"code\";s:8:\"register\";}i:1;a:5:{s:4:\"time\";i:1501660141;s:7:\"user_id\";i:1;s:7:\"blog_id\";i:133508167;s:4:\"code\";s:24:\"custom_css_4.7_migration\";s:4:\"data\";s:5:\"start\";}i:2;a:5:{s:4:\"time\";i:1501660156;s:7:\"user_id\";i:1;s:7:\"blog_id\";i:133508167;s:4:\"code\";s:24:\"custom_css_4.7_migration\";s:4:\"data\";s:5:\"start\";}i:3;a:5:{s:4:\"time\";i:1501660209;s:7:\"user_id\";i:1;s:7:\"blog_id\";i:133508167;s:4:\"code\";s:8:\"activate\";s:4:\"data\";s:8:\"carousel\";}i:4;a:5:{s:4:\"time\";i:1501660225;s:7:\"user_id\";i:1;s:7:\"blog_id\";i:133508167;s:4:\"code\";s:8:\"activate\";s:4:\"data\";s:12:\"contact-form\";}i:5;a:5:{s:4:\"time\";i:1501660225;s:7:\"user_id\";i:1;s:7:\"blog_id\";i:133508167;s:4:\"code\";s:8:\"activate\";s:4:\"data\";s:19:\"gravatar-hovercards\";}i:6;a:5:{s:4:\"time\";i:1501660225;s:7:\"user_id\";i:1;s:7:\"blog_id\";i:133508167;s:4:\"code\";s:8:\"activate\";s:4:\"data\";s:6:\"photon\";}i:7;a:5:{s:4:\"time\";i:1501660227;s:7:\"user_id\";i:1;s:7:\"blog_id\";i:133508167;s:4:\"code\";s:8:\"activate\";s:4:\"data\";s:13:\"related-posts\";}i:8;a:5:{s:4:\"time\";i:1501660230;s:7:\"user_id\";i:1;s:7:\"blog_id\";i:133508167;s:4:\"code\";s:8:\"activate\";s:4:\"data\";s:9:\"seo-tools\";}i:9;a:5:{s:4:\"time\";i:1501660234;s:7:\"user_id\";i:1;s:7:\"blog_id\";i:133508167;s:4:\"code\";s:8:\"activate\";s:4:\"data\";s:10:\"sharedaddy\";}i:10;a:5:{s:4:\"time\";i:1501660234;s:7:\"user_id\";i:1;s:7:\"blog_id\";i:133508167;s:4:\"code\";s:8:\"activate\";s:4:\"data\";s:3:\"sso\";}i:11;a:5:{s:4:\"time\";i:1501660246;s:7:\"user_id\";i:1;s:7:\"blog_id\";i:133508167;s:4:\"code\";s:8:\"activate\";s:4:\"data\";s:13:\"subscriptions\";}i:12;a:5:{s:4:\"time\";i:1501660246;s:7:\"user_id\";i:1;s:7:\"blog_id\";i:133508167;s:4:\"code\";s:8:\"activate\";s:4:\"data\";s:13:\"tiled-gallery\";}}','no'),(279,'jetpack_secrets','a:1:{s:19:\"jetpack_authorize_1\";a:3:{s:8:\"secret_1\";s:32:\"kbSIGoOSmfSTUSmJy6N2I5qNxeLnyQ4p\";s:8:\"secret_2\";s:32:\"q0AhqFYRN5WP0v5fncfknJMloIXZVM2S\";s:3:\"exp\";i:1501660798;}}','no'),(280,'jetpack_private_options','a:2:{s:10:\"blog_token\";s:65:\"t6PtOqS2(Jl4TakKWT(Sjtd9sRHG%zWD.NIExgMgYW@ASam3oEMW(OZ(JFSQQisv^\";s:11:\"user_tokens\";a:1:{i:1;s:67:\"Pa6R$NA%r%2mZwWVqtZ5Rmqb4MiM72JD.JH6CjhVt3sFiCSjBxl*4kcsJiM9i8bF4.1\";}}','yes'),(281,'jetpack_unique_connection','a:3:{s:9:\"connected\";i:1;s:12:\"disconnected\";i:0;s:7:\"version\";s:5:\"3.6.1\";}','yes'),(282,'jetpack_active_modules','a:29:{i:0;s:18:\"after-the-deadline\";i:1;s:12:\"contact-form\";i:2;s:20:\"custom-content-types\";i:3;s:10:\"custom-css\";i:4;s:21:\"enhanced-distribution\";i:5;s:19:\"gravatar-hovercards\";i:6;s:8:\"json-api\";i:7;s:5:\"latex\";i:8;s:6:\"manage\";i:9;s:5:\"notes\";i:10;s:10:\"omnisearch\";i:11;s:13:\"post-by-email\";i:12;s:7:\"protect\";i:14;s:10:\"sharedaddy\";i:15;s:10:\"shortcodes\";i:16;s:10:\"shortlinks\";i:17;s:8:\"sitemaps\";i:18;s:5:\"stats\";i:19;s:13:\"subscriptions\";i:21;s:18:\"verification-tools\";i:22;s:17:\"widget-visibility\";i:23;s:7:\"widgets\";i:24;s:8:\"carousel\";i:25;s:6:\"photon\";i:26;s:13:\"related-posts\";i:27;s:9:\"seo-tools\";i:28;s:3:\"sso\";i:29;s:13:\"tiled-gallery\";i:30;s:8:\"markdown\";}','yes'),(284,'jetpack_protect_key','db71d20c697f32ff52c6cc22b069809438d5011d','no'),(287,'jetpack_sitemap_post_types','a:2:{i:0;s:4:\"post\";i:1;s:4:\"page\";}','yes'),(288,'jetpack_sync_settings_sync_via_cron','1','yes'),(289,'jetpack_sync_settings_max_queue_size','1000','yes'),(290,'jetpack_sync_settings_max_queue_lag','900','yes'),(291,'jetpack_sync_settings_post_types_blacklist','a:17:{i:0;s:11:\"ai1ec_event\";i:1;s:9:\"bwg_album\";i:2;s:11:\"bwg_gallery\";i:3;s:19:\"customize_changeset\";i:4;s:12:\"dn_wp_yt_log\";i:5;s:4:\"http\";i:6;s:8:\"idx_page\";i:7;s:17:\"jetpack_migration\";i:8;s:17:\"postman_sent_mail\";i:9;s:10:\"rssap-feed\";i:10;s:15:\"rssmi_feed_item\";i:11;s:20:\"secupress_log_action\";i:12;s:17:\"sg_optimizer_jobs\";i:13;s:6:\"snitch\";i:14;s:17:\"wpephpcompat_jobs\";i:15;s:15:\"wprss_feed_item\";i:16;s:12:\"wp_automatic\";}','yes'),(295,'jetpack_sync_settings_dequeue_max_bytes','500000','yes'),(296,'jetpack_sync_settings_upload_max_bytes','600000','yes'),(297,'jetpack_sync_settings_upload_max_rows','500','yes'),(298,'jetpack_sync_settings_sync_wait_time','10','yes'),(299,'jetpack_sync_settings_sync_wait_threshold','5','yes'),(300,'jetpack_sync_settings_enqueue_wait_time','10','yes'),(301,'jetpack_sync_settings_queue_max_writes_sec','100','yes'),(302,'jetpack_sync_settings_render_filtered_content','0','yes'),(303,'jetpack_sync_settings_post_meta_whitelist','a:48:{i:0;s:24:\"_feedback_akismet_values\";i:1;s:15:\"_feedback_email\";i:2;s:22:\"_feedback_extra_fields\";i:3;s:21:\"_g_feedback_shortcode\";i:4;s:23:\"_jetpack_post_thumbnail\";i:5;s:18:\"_menu_item_classes\";i:6;s:27:\"_menu_item_menu_item_parent\";i:7;s:17:\"_menu_item_object\";i:8;s:20:\"_menu_item_object_id\";i:9;s:19:\"_menu_item_orphaned\";i:10;s:15:\"_menu_item_type\";i:11;s:14:\"_menu_item_xfn\";i:12;s:24:\"_publicize_facebook_user\";i:13;s:23:\"_publicize_twitter_user\";i:14;s:13:\"_thumbnail_id\";i:15;s:17:\"_wp_attached_file\";i:16;s:27:\"_wp_attachment_backup_sizes\";i:17;s:22:\"_wp_attachment_context\";i:18;s:24:\"_wp_attachment_image_alt\";i:19;s:35:\"_wp_attachment_is_custom_background\";i:20;s:31:\"_wp_attachment_is_custom_header\";i:21;s:23:\"_wp_attachment_metadata\";i:22;s:17:\"_wp_page_template\";i:23;s:30:\"_wp_trash_meta_comments_status\";i:24;s:10:\"_wpas_mess\";i:25;s:13:\"content_width\";i:26;s:14:\"custom_css_add\";i:27;s:23:\"custom_css_preprocessor\";i:28;s:9:\"enclosure\";i:29;s:9:\"imagedata\";i:30;s:10:\"nova_price\";i:31;s:17:\"publicize_results\";i:32;s:16:\"sharing_disabled\";i:33;s:18:\"switch_like_status\";i:34;s:15:\"videopress_guid\";i:35;s:18:\"vimeo_poster_image\";i:36;s:24:\"advanced_seo_description\";i:37;s:14:\"spay_paypal_id\";i:38;s:11:\"spay_status\";i:39;s:15:\"spay_product_id\";i:40;s:13:\"spay_quantity\";i:41;s:10:\"spay_price\";i:42;s:19:\"spay_customer_email\";i:43;s:13:\"spay_currency\";i:44;s:8:\"spay_cta\";i:45;s:10:\"spay_email\";i:46;s:13:\"spay_multiple\";i:47;s:20:\"spay_formatted_price\";}','yes'),(304,'jetpack_sync_settings_comment_meta_whitelist','a:4:{i:0;s:9:\"hc_avatar\";i:1;s:10:\"hc_post_as\";i:2;s:15:\"hc_wpcom_id_sig\";i:3;s:18:\"hc_foreign_user_id\";}','yes'),(305,'jetpack_sync_settings_max_enqueue_full_sync','100','yes'),(306,'jetpack_sync_settings_max_queue_size_full_sync','1000','yes'),(307,'jetpack_sync_settings_cron_sync_time_limit','30','yes'),(309,'widget_blog_subscription','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(310,'widget_authors','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(311,'widget_eu_cookie_law_widget','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(312,'widget_facebook-likebox','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(313,'widget_flickr','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(314,'widget_wpcom-goodreads','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(315,'widget_google_translate_widget','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(316,'widget_googleplus-badge','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(317,'widget_grofile','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(318,'widget_internet_defense_league_widget','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(319,'widget_widget_mailchimp_subscriber_popup','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(320,'widget_milestone_widget','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(321,'widget_jetpack_my_community','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(322,'widget_rss_links','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(323,'widget_wpcom_social_media_icons_widget','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(324,'widget_twitter_timeline','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(325,'widget_upcoming_events_widget','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(326,'widget_jetpack_display_posts_widget','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(327,'widget_image','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(329,'jetpack_portfolio','0','yes'),(331,'sharedaddy_disable_resources','0','yes'),(332,'jetpack_sitemap_location','','yes'),(333,'jetpack_testimonial','0','yes'),(335,'stats_options','a:7:{s:9:\"admin_bar\";b:1;s:5:\"roles\";a:1:{i:0;s:13:\"administrator\";}s:11:\"count_roles\";a:0:{}s:7:\"blog_id\";i:133508167;s:12:\"do_not_track\";b:1;s:10:\"hide_smile\";b:1;s:7:\"version\";s:1:\"9\";}','yes'),(343,'trusted_ip_header','O:8:\"stdClass\":3:{s:14:\"trusted_header\";s:11:\"REMOTE_ADDR\";s:8:\"segments\";i:1;s:7:\"reverse\";b:0;}','no'),(344,'jetpack_active_plan','a:7:{s:10:\"product_id\";i:2002;s:12:\"product_slug\";s:12:\"jetpack_free\";s:18:\"product_name_short\";s:4:\"Free\";s:10:\"free_trial\";b:0;s:7:\"expired\";b:0;s:13:\"user_is_owner\";b:0;s:7:\"is_free\";b:1;}','yes'),(345,'sharing-options','a:1:{s:6:\"global\";a:5:{s:12:\"button_style\";s:4:\"icon\";s:13:\"sharing_label\";s:18:\"共享此文章：\";s:10:\"open_links\";s:4:\"same\";s:4:\"show\";a:1:{i:0;s:4:\"post\";}s:6:\"custom\";a:0:{}}}','yes'),(347,'post_by_email_address1','NULL','yes'),(348,'monitor_receive_notifications','1','yes'),(363,'jetpack_constants_sync_checksum','a:19:{s:16:\"EMPTY_TRASH_DAYS\";i:2473281379;s:17:\"WP_POST_REVISIONS\";i:4261170317;s:26:\"AUTOMATIC_UPDATER_DISABLED\";i:634125391;s:7:\"ABSPATH\";i:3257514237;s:14:\"WP_CONTENT_DIR\";i:160810099;s:9:\"FS_METHOD\";i:634125391;s:18:\"DISALLOW_FILE_EDIT\";i:634125391;s:18:\"DISALLOW_FILE_MODS\";i:634125391;s:19:\"WP_AUTO_UPDATE_CORE\";i:634125391;s:22:\"WP_HTTP_BLOCK_EXTERNAL\";i:634125391;s:19:\"WP_ACCESSIBLE_HOSTS\";i:634125391;s:16:\"JETPACK__VERSION\";i:2954231189;s:12:\"IS_PRESSABLE\";i:634125391;s:15:\"DISABLE_WP_CRON\";i:634125391;s:17:\"ALTERNATE_WP_CRON\";i:634125391;s:20:\"WP_CRON_LOCK_TIMEOUT\";i:3994858278;s:11:\"PHP_VERSION\";i:168908168;s:15:\"WP_MEMORY_LIMIT\";i:3065409971;s:19:\"WP_MAX_MEMORY_LIMIT\";i:1474498405;}','yes'),(366,'jetpack_sync_https_history_main_network_site_url','a:5:{i:0;s:5:\"https\";i:1;s:5:\"https\";i:2;s:5:\"https\";i:3;s:5:\"https\";i:4;s:5:\"https\";}','yes'),(396,'jetpack_callables_sync_checksum','a:27:{s:18:\"wp_max_upload_size\";i:677931734;s:15:\"is_main_network\";i:734881840;s:13:\"is_multi_site\";i:734881840;s:17:\"main_network_site\";i:4135472439;s:8:\"site_url\";i:4135472439;s:8:\"home_url\";i:4135472439;s:16:\"single_user_site\";i:4261170317;s:7:\"updates\";i:3426552696;s:28:\"has_file_system_write_access\";i:4261170317;s:21:\"is_version_controlled\";i:4261170317;s:10:\"taxonomies\";i:206003654;s:10:\"post_types\";i:1542511505;s:18:\"post_type_features\";i:4212013780;s:10:\"shortcodes\";i:2432427790;s:27:\"rest_api_allowed_post_types\";i:696315151;s:32:\"rest_api_allowed_public_metadata\";i:223132457;s:24:\"sso_is_two_step_required\";i:734881840;s:26:\"sso_should_hide_login_form\";i:734881840;s:18:\"sso_match_by_email\";i:4261170317;s:21:\"sso_new_user_override\";i:734881840;s:29:\"sso_bypass_default_login_form\";i:734881840;s:10:\"wp_version\";i:807788263;s:11:\"get_plugins\";i:3359197733;s:14:\"active_modules\";i:1910305318;s:16:\"hosting_provider\";i:769900095;s:6:\"locale\";i:2627594978;s:13:\"site_icon_url\";i:734881840;}','no'),(397,'jpsq_sync_checkout','0:0','no'),(401,'jetpack_next_sync_time_sync','1513843532','yes'),(402,'jetpack_next_sync_time_full-sync-enqueue','1514144067','yes'),(406,'jetpack_restapi_stats_cache','a:1:{s:32:\"6c4d5877afd73fc03d288e3a38c30821\";a:1:{i:1501660197;O:8:\"stdClass\":3:{s:4:\"date\";s:10:\"2017-08-02\";s:5:\"stats\";O:8:\"stdClass\":19:{s:14:\"visitors_today\";i:0;s:18:\"visitors_yesterday\";i:0;s:8:\"visitors\";i:0;s:11:\"views_today\";i:0;s:15:\"views_yesterday\";i:0;s:14:\"views_best_day\";s:0:\"\";s:20:\"views_best_day_total\";i:0;s:5:\"views\";i:0;s:8:\"comments\";i:0;s:5:\"posts\";i:0;s:14:\"followers_blog\";i:0;s:18:\"followers_comments\";i:0;s:18:\"comments_per_month\";i:0;s:31:\"comments_most_active_recent_day\";s:0:\"\";s:25:\"comments_most_active_time\";s:3:\"N/A\";s:13:\"comments_spam\";i:0;s:10:\"categories\";i:0;s:4:\"tags\";i:0;s:6:\"shares\";i:0;}s:6:\"visits\";O:8:\"stdClass\":3:{s:4:\"unit\";s:3:\"day\";s:6:\"fields\";a:3:{i:0;s:6:\"period\";i:1;s:5:\"views\";i:2;s:8:\"visitors\";}s:4:\"data\";a:1:{i:0;a:3:{i:0;s:10:\"2017-08-02\";i:1;i:0;i:2;i:0;}}}}}}','no'),(413,'jetpack_sync_full_config','a:9:{s:9:\"constants\";b:1;s:9:\"functions\";b:1;s:7:\"options\";b:1;s:5:\"terms\";b:1;s:6:\"themes\";b:1;s:5:\"users\";b:1;s:5:\"posts\";b:1;s:8:\"comments\";b:1;s:7:\"updates\";b:1;}','no'),(414,'jetpack_sync_full_enqueue_status','a:17:{s:9:\"constants\";a:3:{i:0;i:1;i:1;i:1;i:2;b:1;}s:9:\"functions\";a:3:{i:0;i:1;i:1;i:1;i:2;b:1;}s:7:\"options\";a:3:{i:0;i:1;i:1;i:1;i:2;b:1;}s:15:\"network_options\";b:0;s:5:\"terms\";a:3:{i:0;i:2;i:1;i:2;i:2;b:1;}s:6:\"themes\";a:3:{i:0;i:1;i:1;i:1;i:2;b:1;}s:5:\"menus\";b:0;s:5:\"users\";a:3:{i:0;i:1;i:1;i:1;i:2;b:1;}s:5:\"posts\";a:3:{i:0;i:5;i:1;i:5;i:2;b:1;}s:8:\"comments\";a:3:{i:0;i:1;i:1;i:1;i:2;b:1;}s:7:\"updates\";a:3:{i:0;i:1;i:1;i:1;i:2;b:1;}s:11:\"attachments\";b:0;s:4:\"meta\";b:0;s:7:\"plugins\";b:0;s:7:\"protect\";b:0;s:9:\"full-sync\";b:0;s:5:\"stats\";b:0;}','no'),(415,'_transient_timeout_jetpack_sync_last_checked_queue_state_full_sync','1501660523','no'),(416,'_transient_jetpack_sync_last_checked_queue_state_full_sync','a:2:{i:0;i:0;i:1;i:0;}','no'),(434,'jpsq_full_sync_checkout','0:0','no'),(442,'jetpack_next_sync_time_full_sync','1501660467','yes'),(481,'sharing-services','a:2:{s:7:\"visible\";a:3:{i:0;s:7:\"twitter\";i:1;s:8:\"facebook\";i:2;s:13:\"google-plus-1\";}s:6:\"hidden\";a:0:{}}','yes'),(483,'widget_gallery','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(486,'jetpack-sitemap-state','a:5:{s:12:\"sitemap-type\";s:10:\"jp_sitemap\";s:10:\"last-added\";i:0;s:6:\"number\";i:0;s:13:\"last-modified\";s:19:\"1970-01-01 00:00:00\";s:3:\"max\";a:0:{}}','yes'),(513,'wpcom_publish_posts_with_markdown','1','yes'),(517,'wpcom_publish_comments_with_markdown','','yes'),(526,'jetpack_sync_full__started','1501660319','no'),(527,'jetpack_sync_full__params','','no'),(544,'jetpack_sync_full__queue_finished','1501660319','yes'),(546,'jetpack_sync_full__send_started','1501660438','no'),(547,'jetpack_sync_full__constants_sent','2','no'),(548,'jetpack_sync_full__functions_sent','2','no'),(549,'jetpack_sync_full__options_sent','2','no'),(550,'jetpack_sync_full__terms_sent','4','no'),(551,'jetpack_sync_full__themes_sent','2','no'),(552,'jetpack_sync_full__users_sent','2','no'),(553,'jetpack_sync_full__posts_sent','7','no'),(576,'gravatar_disable_hovercards','disabled','yes'),(585,'stats_cache','a:2:{s:32:\"04759db67229a609aa83f1ea12fa5731\";a:1:{i:1511143817;a:1:{i:0;a:4:{s:7:\"post_id\";s:1:\"0\";s:10:\"post_title\";s:9:\"Home page\";s:14:\"post_permalink\";s:26:\"http://www.allisterke.com/\";s:5:\"views\";s:1:\"1\";}}}s:32:\"5a2c5634304fc76d8a88445b99e547fc\";a:1:{i:1511143818;a:0:{}}}','yes'),(592,'jetpack_sync_full__comments_sent','1','no'),(593,'jetpack_sync_full__updates_sent','1','no'),(594,'jetpack_sync_full__finished','1501660457','no'),(615,'_transient_timeout_jetpack_jitm_298ddcb40d41ab036d68a27230ddc52','1501660850','no'),(616,'_transient_jetpack_jitm_298ddcb40d41ab036d68a27230ddc52','a:1:{s:18:\"last_response_time\";i:1501660550;}','no'),(631,'verification_services_codes','0','yes'),(633,'jetpack-twitter-cards-site-tag','','yes'),(658,'jetpack_updates_sync_checksum','a:3:{s:11:\"update_core\";i:28741621;s:14:\"update_plugins\";i:2187906592;s:13:\"update_themes\";i:3166750606;}','yes'),(705,'open_graph_protocol_site_type','','yes'),(706,'facebook_admins','a:0:{}','yes'),(740,'widget_blog-stats','a:2:{i:1;a:0:{}s:12:\"_multiwidget\";i:1;}','yes'),(743,'widget_top-posts','a:2:{i:1;a:0:{}s:12:\"_multiwidget\";i:1;}','yes'),(744,'widget_widget_contact_info','a:2:{i:1;a:0:{}s:12:\"_multiwidget\";i:1;}','yes'),(745,'carousel_display_exif','1','yes'),(747,'carousel_display_geo','1','yes'),(748,'carousel_background_color','','yes'),(849,'_transient_timeout_jetpack_jitm_b605226227e410852e7db13b6aa0cd0','1501675065','no'),(850,'_transient_jetpack_jitm_b605226227e410852e7db13b6aa0cd0','a:1:{s:18:\"last_response_time\";i:1501674765;}','no'),(868,'_transient_timeout_jetpack_jitm_d4a2ce3ce707d8e2fd7053d069729fe','1501675039','no'),(869,'_transient_jetpack_jitm_d4a2ce3ce707d8e2fd7053d069729fe','a:1:{s:18:\"last_response_time\";i:1501674739;}','no'),(897,'_transient_timeout_jetpack_jitm_98df89d68bad613b1d42bf57dc825aa','1501675171','no'),(898,'_transient_jetpack_jitm_98df89d68bad613b1d42bf57dc825aa','a:1:{s:18:\"last_response_time\";i:1501674871;}','no'),(899,'_transient_timeout_jetpack_jitm_4165152bac02c2fcf3fad07061658c8','1501675171','no'),(900,'_transient_jetpack_jitm_4165152bac02c2fcf3fad07061658c8','a:1:{s:18:\"last_response_time\";i:1501674871;}','no'),(908,'_transient_timeout_jetpack_jitm_93b80db5398402bb8a3beb12da60cb4','1501675219','no'),(909,'_transient_jetpack_jitm_93b80db5398402bb8a3beb12da60cb4','a:1:{s:18:\"last_response_time\";i:1501674919;}','no'),(912,'_transient_timeout_jetpack_jitm_17815e1d30551fb4972ac80d99b7cf5','1501675258','no'),(913,'_transient_jetpack_jitm_17815e1d30551fb4972ac80d99b7cf5','a:1:{s:18:\"last_response_time\";i:1501674958;}','no'),(943,'_transient_timeout_jetpack_jitm_2e77583aa18e0ff13344fa114692bdc','1501675706','no'),(944,'_transient_jetpack_jitm_2e77583aa18e0ff13344fa114692bdc','a:1:{s:18:\"last_response_time\";i:1501675406;}','no'),(963,'_transient_timeout_jetpack_jitm_223ac1e75cd6a8a8d28ed568d695f96','1501675766','no'),(964,'_transient_jetpack_jitm_223ac1e75cd6a8a8d28ed568d695f96','a:1:{s:18:\"last_response_time\";i:1501675466;}','no'),(986,'_transient_timeout_jetpack_jitm_dbb67ec4a15107e77a82ff6aad9f685','1501675962','no'),(987,'_transient_jetpack_jitm_dbb67ec4a15107e77a82ff6aad9f685','a:1:{s:18:\"last_response_time\";i:1501675662;}','no'),(997,'_transient_timeout_jetpack_jitm_3b4ce032b9a74c7fe9b5814bbe01d68','1501676054','no'),(998,'_transient_jetpack_jitm_3b4ce032b9a74c7fe9b5814bbe01d68','a:1:{s:18:\"last_response_time\";i:1501675754;}','no'),(1037,'_transient_timeout_jetpack_jitm_34594261b07248eff20610e5f52b67a','1501676385','no'),(1038,'_transient_jetpack_jitm_34594261b07248eff20610e5f52b67a','a:1:{s:18:\"last_response_time\";i:1501676085;}','no'),(1065,'_transient_timeout_jetpack_jitm_0147db87ad650dcf735e86d72570615','1501676645','no'),(1066,'_transient_jetpack_jitm_0147db87ad650dcf735e86d72570615','a:1:{s:18:\"last_response_time\";i:1501676345;}','no'),(1105,'_transient_timeout_jetpack_jitm_08a5d6c8490797981a4a42c73d957a3','1501676716','no'),(1106,'_transient_jetpack_jitm_08a5d6c8490797981a4a42c73d957a3','a:2:{i:0;O:8:\"stdClass\":6:{s:7:\"content\";O:8:\"stdClass\":5:{s:7:\"message\";s:25:\"Keep your hard work safe.\";s:6:\"emblem\";N;s:11:\"description\";s:48:\"Back up your content automatically with Jetpack.\";s:7:\"classes\";s:0:\"\";s:4:\"icon\";s:7:\"jetpack\";}s:3:\"CTA\";O:8:\"stdClass\":3:{s:7:\"message\";s:14:\"Enable Backups\";s:4:\"hook\";s:0:\"\";s:7:\"primary\";b:1;}s:8:\"template\";s:7:\"default\";s:3:\"ttl\";i:300;s:2:\"id\";s:14:\"backup-publish\";s:13:\"feature_class\";s:10:\"vaultpress\";}s:18:\"last_response_time\";i:1501676416;}','no'),(1107,'_transient_timeout_jetpack_jitm_f201e528a31bf9eecab67b518adedc6','1501676717','no'),(1108,'_transient_jetpack_jitm_f201e528a31bf9eecab67b518adedc6','a:1:{s:18:\"last_response_time\";i:1501676417;}','no'),(1162,'_site_transient_timeout_wporg_theme_feature_list','1501687803','no'),(1163,'_site_transient_wporg_theme_feature_list','a:3:{s:6:\"Layout\";a:7:{i:0;s:11:\"grid-layout\";i:1;s:10:\"one-column\";i:2;s:11:\"two-columns\";i:3;s:13:\"three-columns\";i:4;s:12:\"four-columns\";i:5;s:12:\"left-sidebar\";i:6;s:13:\"right-sidebar\";}s:8:\"Features\";a:20:{i:0;s:19:\"accessibility-ready\";i:1;s:10:\"buddypress\";i:2;s:17:\"custom-background\";i:3;s:13:\"custom-colors\";i:4;s:13:\"custom-header\";i:5;s:11:\"custom-menu\";i:6;s:12:\"editor-style\";i:7;s:21:\"featured-image-header\";i:8;s:15:\"featured-images\";i:9;s:15:\"flexible-header\";i:10;s:14:\"footer-widgets\";i:11;s:20:\"front-page-post-form\";i:12;s:19:\"full-width-template\";i:13;s:12:\"microformats\";i:14;s:12:\"post-formats\";i:15;s:20:\"rtl-language-support\";i:16;s:11:\"sticky-post\";i:17;s:13:\"theme-options\";i:18;s:17:\"threaded-comments\";i:19;s:17:\"translation-ready\";}s:7:\"Subject\";a:9:{i:0;s:4:\"blog\";i:1;s:10:\"e-commerce\";i:2;s:9:\"education\";i:3;s:13:\"entertainment\";i:4;s:14:\"food-and-drink\";i:5;s:7:\"holiday\";i:6;s:4:\"news\";i:7;s:11:\"photography\";i:8;s:9:\"portfolio\";}}','no'),(1166,'_transient_timeout_jetpack_jitm_b009e18826a59bb8738b8bd2bc16bd8','1501677149','no'),(1167,'_transient_jetpack_jitm_b009e18826a59bb8738b8bd2bc16bd8','a:1:{s:18:\"last_response_time\";i:1501676849;}','no'),(1187,'_transient_timeout_jetpack_jitm_97bc9698307fc61646ae40ec00c753b','1501677311','no'),(1188,'_transient_jetpack_jitm_97bc9698307fc61646ae40ec00c753b','a:1:{s:18:\"last_response_time\";i:1501677011;}','no'),(1253,'widget_akismet_widget','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(1321,'_transient_timeout_jetpack_jitm_f6ff8f181f77eaceb803b9835c648db','1501678659','no'),(1322,'_transient_jetpack_jitm_f6ff8f181f77eaceb803b9835c648db','a:1:{s:18:\"last_response_time\";i:1501678359;}','no'),(1329,'_transient_timeout_jetpack_jitm_adf8727abd42e3b280ae9a2aebb7f28','1501678672','no'),(1330,'_transient_jetpack_jitm_adf8727abd42e3b280ae9a2aebb7f28','a:1:{s:18:\"last_response_time\";i:1501678372;}','no'),(1338,'_transient_timeout_jetpack_jitm_ab6d72869a7e9ebf1c09cf2a86cc67c','1501678736','no'),(1339,'_transient_jetpack_jitm_ab6d72869a7e9ebf1c09cf2a86cc67c','a:1:{s:18:\"last_response_time\";i:1501678436;}','no'),(1359,'_transient_timeout_jetpack_jitm_918f59797c202a1c93b3b0169b70f6f','1501678822','no'),(1360,'_transient_jetpack_jitm_918f59797c202a1c93b3b0169b70f6f','a:1:{s:18:\"last_response_time\";i:1501678522;}','no'),(1366,'_transient_timeout_jetpack_jitm_6260bb86d54c4e552b17569dcb3e9ce','1501678874','no'),(1367,'_transient_jetpack_jitm_6260bb86d54c4e552b17569dcb3e9ce','a:1:{s:18:\"last_response_time\";i:1501678574;}','no'),(1385,'_transient_timeout_jetpack_jitm_6d38f55396bcb060561885af8d9ec2f','1501679040','no'),(1386,'_transient_jetpack_jitm_6d38f55396bcb060561885af8d9ec2f','a:1:{s:18:\"last_response_time\";i:1501678740;}','no'),(1403,'_transient_timeout_jetpack_jitm_3f24c217f56b7f438a0fb4b7c715b46','1501679159','no'),(1404,'_transient_jetpack_jitm_3f24c217f56b7f438a0fb4b7c715b46','a:1:{s:18:\"last_response_time\";i:1501678859;}','no'),(1508,'jetpack_protect_blocked_attempts','9','no'),(1545,'widget_custom_html','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(1551,'auto_core_update_notified','a:4:{s:4:\"type\";s:7:\"success\";s:5:\"email\";s:20:\"allisterke@gmail.com\";s:7:\"version\";s:5:\"4.8.1\";s:9:\"timestamp\";i:1501709477;}','no'),(2202,'_site_transient_timeout_community-events-2b1a33a918f0979ec02cf7ed0fa0407d','1502142849','no'),(2203,'_site_transient_community-events-2b1a33a918f0979ec02cf7ed0fa0407d','a:2:{s:8:\"location\";a:1:{s:2:\"ip\";s:13:\"120.199.193.0\";}s:6:\"events\";a:0:{}}','no'),(2395,'_site_transient_timeout_poptags_40cd750bba9870f18aada2478b24840a','1502111871','no'),(2396,'_site_transient_poptags_40cd750bba9870f18aada2478b24840a','O:8:\"stdClass\":100:{s:6:\"widget\";a:3:{s:4:\"name\";s:6:\"widget\";s:4:\"slug\";s:6:\"widget\";s:5:\"count\";i:4357;}s:4:\"post\";a:3:{s:4:\"name\";s:4:\"post\";s:4:\"slug\";s:4:\"post\";s:5:\"count\";i:2492;}s:5:\"admin\";a:3:{s:4:\"name\";s:5:\"admin\";s:4:\"slug\";s:5:\"admin\";s:5:\"count\";i:2361;}s:11:\"woocommerce\";a:3:{s:4:\"name\";s:11:\"woocommerce\";s:4:\"slug\";s:11:\"woocommerce\";s:5:\"count\";i:2235;}s:5:\"posts\";a:3:{s:4:\"name\";s:5:\"posts\";s:4:\"slug\";s:5:\"posts\";s:5:\"count\";i:1828;}s:8:\"comments\";a:3:{s:4:\"name\";s:8:\"comments\";s:4:\"slug\";s:8:\"comments\";s:5:\"count\";i:1596;}s:9:\"shortcode\";a:3:{s:4:\"name\";s:9:\"shortcode\";s:4:\"slug\";s:9:\"shortcode\";s:5:\"count\";i:1579;}s:7:\"twitter\";a:3:{s:4:\"name\";s:7:\"twitter\";s:4:\"slug\";s:7:\"twitter\";s:5:\"count\";i:1434;}s:6:\"google\";a:3:{s:4:\"name\";s:6:\"google\";s:4:\"slug\";s:6:\"google\";s:5:\"count\";i:1355;}s:6:\"images\";a:3:{s:4:\"name\";s:6:\"images\";s:4:\"slug\";s:6:\"images\";s:5:\"count\";i:1347;}s:8:\"facebook\";a:3:{s:4:\"name\";s:8:\"facebook\";s:4:\"slug\";s:8:\"facebook\";s:5:\"count\";i:1333;}s:7:\"sidebar\";a:3:{s:4:\"name\";s:7:\"sidebar\";s:4:\"slug\";s:7:\"sidebar\";s:5:\"count\";i:1272;}s:5:\"image\";a:3:{s:4:\"name\";s:5:\"image\";s:4:\"slug\";s:5:\"image\";s:5:\"count\";i:1268;}s:3:\"seo\";a:3:{s:4:\"name\";s:3:\"seo\";s:4:\"slug\";s:3:\"seo\";s:5:\"count\";i:1122;}s:7:\"gallery\";a:3:{s:4:\"name\";s:7:\"gallery\";s:4:\"slug\";s:7:\"gallery\";s:5:\"count\";i:1050;}s:4:\"page\";a:3:{s:4:\"name\";s:4:\"page\";s:4:\"slug\";s:4:\"page\";s:5:\"count\";i:1044;}s:6:\"social\";a:3:{s:4:\"name\";s:6:\"social\";s:4:\"slug\";s:6:\"social\";s:5:\"count\";i:998;}s:5:\"email\";a:3:{s:4:\"name\";s:5:\"email\";s:4:\"slug\";s:5:\"email\";s:5:\"count\";i:942;}s:5:\"links\";a:3:{s:4:\"name\";s:5:\"links\";s:4:\"slug\";s:5:\"links\";s:5:\"count\";i:815;}s:5:\"login\";a:3:{s:4:\"name\";s:5:\"login\";s:4:\"slug\";s:5:\"login\";s:5:\"count\";i:804;}s:9:\"ecommerce\";a:3:{s:4:\"name\";s:9:\"ecommerce\";s:4:\"slug\";s:9:\"ecommerce\";s:5:\"count\";i:802;}s:7:\"widgets\";a:3:{s:4:\"name\";s:7:\"widgets\";s:4:\"slug\";s:7:\"widgets\";s:5:\"count\";i:774;}s:5:\"video\";a:3:{s:4:\"name\";s:5:\"video\";s:4:\"slug\";s:5:\"video\";s:5:\"count\";i:765;}s:3:\"rss\";a:3:{s:4:\"name\";s:3:\"rss\";s:4:\"slug\";s:3:\"rss\";s:5:\"count\";i:669;}s:7:\"content\";a:3:{s:4:\"name\";s:7:\"content\";s:4:\"slug\";s:7:\"content\";s:5:\"count\";i:667;}s:10:\"buddypress\";a:3:{s:4:\"name\";s:10:\"buddypress\";s:4:\"slug\";s:10:\"buddypress\";s:5:\"count\";i:662;}s:4:\"spam\";a:3:{s:4:\"name\";s:4:\"spam\";s:4:\"slug\";s:4:\"spam\";s:5:\"count\";i:653;}s:5:\"pages\";a:3:{s:4:\"name\";s:5:\"pages\";s:4:\"slug\";s:5:\"pages\";s:5:\"count\";i:643;}s:8:\"security\";a:3:{s:4:\"name\";s:8:\"security\";s:4:\"slug\";s:8:\"security\";s:5:\"count\";i:638;}s:6:\"jquery\";a:3:{s:4:\"name\";s:6:\"jquery\";s:4:\"slug\";s:6:\"jquery\";s:5:\"count\";i:637;}s:6:\"slider\";a:3:{s:4:\"name\";s:6:\"slider\";s:4:\"slug\";s:6:\"slider\";s:5:\"count\";i:618;}s:5:\"media\";a:3:{s:4:\"name\";s:5:\"media\";s:4:\"slug\";s:5:\"media\";s:5:\"count\";i:604;}s:4:\"ajax\";a:3:{s:4:\"name\";s:4:\"ajax\";s:4:\"slug\";s:4:\"ajax\";s:5:\"count\";i:591;}s:9:\"analytics\";a:3:{s:4:\"name\";s:9:\"analytics\";s:4:\"slug\";s:9:\"analytics\";s:5:\"count\";i:590;}s:4:\"feed\";a:3:{s:4:\"name\";s:4:\"feed\";s:4:\"slug\";s:4:\"feed\";s:5:\"count\";i:589;}s:6:\"search\";a:3:{s:4:\"name\";s:6:\"search\";s:4:\"slug\";s:6:\"search\";s:5:\"count\";i:576;}s:8:\"category\";a:3:{s:4:\"name\";s:8:\"category\";s:4:\"slug\";s:8:\"category\";s:5:\"count\";i:573;}s:10:\"e-commerce\";a:3:{s:4:\"name\";s:10:\"e-commerce\";s:4:\"slug\";s:10:\"e-commerce\";s:5:\"count\";i:570;}s:4:\"menu\";a:3:{s:4:\"name\";s:4:\"menu\";s:4:\"slug\";s:4:\"menu\";s:5:\"count\";i:557;}s:4:\"form\";a:3:{s:4:\"name\";s:4:\"form\";s:4:\"slug\";s:4:\"form\";s:5:\"count\";i:546;}s:5:\"embed\";a:3:{s:4:\"name\";s:5:\"embed\";s:4:\"slug\";s:5:\"embed\";s:5:\"count\";i:541;}s:10:\"javascript\";a:3:{s:4:\"name\";s:10:\"javascript\";s:4:\"slug\";s:10:\"javascript\";s:5:\"count\";i:533;}s:4:\"link\";a:3:{s:4:\"name\";s:4:\"link\";s:4:\"slug\";s:4:\"link\";s:5:\"count\";i:521;}s:3:\"css\";a:3:{s:4:\"name\";s:3:\"css\";s:4:\"slug\";s:3:\"css\";s:5:\"count\";i:510;}s:5:\"share\";a:3:{s:4:\"name\";s:5:\"share\";s:4:\"slug\";s:5:\"share\";s:5:\"count\";i:502;}s:7:\"youtube\";a:3:{s:4:\"name\";s:7:\"youtube\";s:4:\"slug\";s:7:\"youtube\";s:5:\"count\";i:497;}s:7:\"comment\";a:3:{s:4:\"name\";s:7:\"comment\";s:4:\"slug\";s:7:\"comment\";s:5:\"count\";i:493;}s:5:\"theme\";a:3:{s:4:\"name\";s:5:\"theme\";s:4:\"slug\";s:5:\"theme\";s:5:\"count\";i:482;}s:9:\"dashboard\";a:3:{s:4:\"name\";s:9:\"dashboard\";s:4:\"slug\";s:9:\"dashboard\";s:5:\"count\";i:473;}s:6:\"custom\";a:3:{s:4:\"name\";s:6:\"custom\";s:4:\"slug\";s:6:\"custom\";s:5:\"count\";i:472;}s:10:\"responsive\";a:3:{s:4:\"name\";s:10:\"responsive\";s:4:\"slug\";s:10:\"responsive\";s:5:\"count\";i:469;}s:10:\"categories\";a:3:{s:4:\"name\";s:10:\"categories\";s:4:\"slug\";s:10:\"categories\";s:5:\"count\";i:467;}s:3:\"ads\";a:3:{s:4:\"name\";s:3:\"ads\";s:4:\"slug\";s:3:\"ads\";s:5:\"count\";i:443;}s:6:\"editor\";a:3:{s:4:\"name\";s:6:\"editor\";s:4:\"slug\";s:6:\"editor\";s:5:\"count\";i:439;}s:9:\"affiliate\";a:3:{s:4:\"name\";s:9:\"affiliate\";s:4:\"slug\";s:9:\"affiliate\";s:5:\"count\";i:439;}s:6:\"button\";a:3:{s:4:\"name\";s:6:\"button\";s:4:\"slug\";s:6:\"button\";s:5:\"count\";i:436;}s:4:\"tags\";a:3:{s:4:\"name\";s:4:\"tags\";s:4:\"slug\";s:4:\"tags\";s:5:\"count\";i:435;}s:12:\"contact-form\";a:3:{s:4:\"name\";s:12:\"contact form\";s:4:\"slug\";s:12:\"contact-form\";s:5:\"count\";i:427;}s:5:\"photo\";a:3:{s:4:\"name\";s:5:\"photo\";s:4:\"slug\";s:5:\"photo\";s:5:\"count\";i:418;}s:4:\"user\";a:3:{s:4:\"name\";s:4:\"user\";s:4:\"slug\";s:4:\"user\";s:5:\"count\";i:415;}s:9:\"slideshow\";a:3:{s:4:\"name\";s:9:\"slideshow\";s:4:\"slug\";s:9:\"slideshow\";s:5:\"count\";i:405;}s:6:\"mobile\";a:3:{s:4:\"name\";s:6:\"mobile\";s:4:\"slug\";s:6:\"mobile\";s:5:\"count\";i:404;}s:7:\"contact\";a:3:{s:4:\"name\";s:7:\"contact\";s:4:\"slug\";s:7:\"contact\";s:5:\"count\";i:403;}s:5:\"users\";a:3:{s:4:\"name\";s:5:\"users\";s:4:\"slug\";s:5:\"users\";s:5:\"count\";i:402;}s:5:\"stats\";a:3:{s:4:\"name\";s:5:\"stats\";s:4:\"slug\";s:5:\"stats\";s:5:\"count\";i:399;}s:6:\"photos\";a:3:{s:4:\"name\";s:6:\"photos\";s:4:\"slug\";s:6:\"photos\";s:5:\"count\";i:396;}s:10:\"statistics\";a:3:{s:4:\"name\";s:10:\"statistics\";s:4:\"slug\";s:10:\"statistics\";s:5:\"count\";i:380;}s:3:\"api\";a:3:{s:4:\"name\";s:3:\"api\";s:4:\"slug\";s:3:\"api\";s:5:\"count\";i:380;}s:6:\"events\";a:3:{s:4:\"name\";s:6:\"events\";s:4:\"slug\";s:6:\"events\";s:5:\"count\";i:377;}s:10:\"navigation\";a:3:{s:4:\"name\";s:10:\"navigation\";s:4:\"slug\";s:10:\"navigation\";s:5:\"count\";i:369;}s:4:\"news\";a:3:{s:4:\"name\";s:4:\"news\";s:4:\"slug\";s:4:\"news\";s:5:\"count\";i:353;}s:8:\"calendar\";a:3:{s:4:\"name\";s:8:\"calendar\";s:4:\"slug\";s:8:\"calendar\";s:5:\"count\";i:344;}s:9:\"multisite\";a:3:{s:4:\"name\";s:9:\"multisite\";s:4:\"slug\";s:9:\"multisite\";s:5:\"count\";i:333;}s:7:\"payment\";a:3:{s:4:\"name\";s:7:\"payment\";s:4:\"slug\";s:7:\"payment\";s:5:\"count\";i:332;}s:7:\"plugins\";a:3:{s:4:\"name\";s:7:\"plugins\";s:4:\"slug\";s:7:\"plugins\";s:5:\"count\";i:331;}s:10:\"shortcodes\";a:3:{s:4:\"name\";s:10:\"shortcodes\";s:4:\"slug\";s:10:\"shortcodes\";s:5:\"count\";i:330;}s:12:\"social-media\";a:3:{s:4:\"name\";s:12:\"social media\";s:4:\"slug\";s:12:\"social-media\";s:5:\"count\";i:330;}s:10:\"newsletter\";a:3:{s:4:\"name\";s:10:\"newsletter\";s:4:\"slug\";s:10:\"newsletter\";s:5:\"count\";i:326;}s:4:\"code\";a:3:{s:4:\"name\";s:4:\"code\";s:4:\"slug\";s:4:\"code\";s:5:\"count\";i:324;}s:4:\"list\";a:3:{s:4:\"name\";s:4:\"list\";s:4:\"slug\";s:4:\"list\";s:5:\"count\";i:320;}s:4:\"meta\";a:3:{s:4:\"name\";s:4:\"meta\";s:4:\"slug\";s:4:\"meta\";s:5:\"count\";i:319;}s:5:\"popup\";a:3:{s:4:\"name\";s:5:\"popup\";s:4:\"slug\";s:5:\"popup\";s:5:\"count\";i:319;}s:3:\"url\";a:3:{s:4:\"name\";s:3:\"url\";s:4:\"slug\";s:3:\"url\";s:5:\"count\";i:318;}s:9:\"marketing\";a:3:{s:4:\"name\";s:9:\"marketing\";s:4:\"slug\";s:9:\"marketing\";s:5:\"count\";i:302;}s:6:\"simple\";a:3:{s:4:\"name\";s:6:\"simple\";s:4:\"slug\";s:6:\"simple\";s:5:\"count\";i:299;}s:8:\"redirect\";a:3:{s:4:\"name\";s:8:\"redirect\";s:4:\"slug\";s:8:\"redirect\";s:5:\"count\";i:295;}s:4:\"chat\";a:3:{s:4:\"name\";s:4:\"chat\";s:4:\"slug\";s:4:\"chat\";s:5:\"count\";i:293;}s:3:\"tag\";a:3:{s:4:\"name\";s:3:\"tag\";s:4:\"slug\";s:3:\"tag\";s:5:\"count\";i:290;}s:16:\"custom-post-type\";a:3:{s:4:\"name\";s:16:\"custom post type\";s:4:\"slug\";s:16:\"custom-post-type\";s:5:\"count\";i:288;}s:11:\"advertising\";a:3:{s:4:\"name\";s:11:\"advertising\";s:4:\"slug\";s:11:\"advertising\";s:5:\"count\";i:284;}s:15:\"payment-gateway\";a:3:{s:4:\"name\";s:15:\"payment gateway\";s:4:\"slug\";s:15:\"payment-gateway\";s:5:\"count\";i:283;}s:6:\"author\";a:3:{s:4:\"name\";s:6:\"author\";s:4:\"slug\";s:6:\"author\";s:5:\"count\";i:282;}s:7:\"adsense\";a:3:{s:4:\"name\";s:7:\"adsense\";s:4:\"slug\";s:7:\"adsense\";s:5:\"count\";i:280;}s:4:\"html\";a:3:{s:4:\"name\";s:4:\"html\";s:4:\"slug\";s:4:\"html\";s:5:\"count\";i:280;}s:5:\"forms\";a:3:{s:4:\"name\";s:5:\"forms\";s:4:\"slug\";s:5:\"forms\";s:5:\"count\";i:277;}s:8:\"lightbox\";a:3:{s:4:\"name\";s:8:\"lightbox\";s:4:\"slug\";s:8:\"lightbox\";s:5:\"count\";i:275;}s:7:\"tinymce\";a:3:{s:4:\"name\";s:7:\"tinyMCE\";s:4:\"slug\";s:7:\"tinymce\";s:5:\"count\";i:269;}s:7:\"captcha\";a:3:{s:4:\"name\";s:7:\"captcha\";s:4:\"slug\";s:7:\"captcha\";s:5:\"count\";i:267;}s:8:\"tracking\";a:3:{s:4:\"name\";s:8:\"tracking\";s:4:\"slug\";s:8:\"tracking\";s:5:\"count\";i:266;}s:12:\"notification\";a:3:{s:4:\"name\";s:12:\"notification\";s:4:\"slug\";s:12:\"notification\";s:5:\"count\";i:266;}}','no'),(2397,'_transient_timeout_jetpack_jitm_6be24c3e0e11b078f49608d3bb06e79','1502101376','no'),(2398,'_transient_jetpack_jitm_6be24c3e0e11b078f49608d3bb06e79','a:1:{s:18:\"last_response_time\";i:1502101076;}','no'),(2509,'_transient_timeout_jetpack_jitm_a455f4228024814a443dad915aa1573','1502103157','no'),(2510,'_transient_jetpack_jitm_a455f4228024814a443dad915aa1573','a:1:{s:18:\"last_response_time\";i:1502102857;}','no'),(2513,'_transient_timeout_jetpack_jitm_2106773a0464830dcbb56b3096d1b55','1502103225','no'),(2514,'_transient_jetpack_jitm_2106773a0464830dcbb56b3096d1b55','a:1:{s:18:\"last_response_time\";i:1502102925;}','no'),(2560,'_site_transient_timeout_available_translations','1502113995','no'),(2561,'_site_transient_available_translations','a:108:{s:2:\"af\";a:8:{s:8:\"language\";s:2:\"af\";s:7:\"version\";s:5:\"4.8.1\";s:7:\"updated\";s:19:\"2017-07-26 10:11:36\";s:12:\"english_name\";s:9:\"Afrikaans\";s:11:\"native_name\";s:9:\"Afrikaans\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.8.1/af.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"af\";i:2;s:3:\"afr\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:10:\"Gaan voort\";}}s:2:\"ar\";a:8:{s:8:\"language\";s:2:\"ar\";s:7:\"version\";s:5:\"4.8.1\";s:7:\"updated\";s:19:\"2017-07-29 08:49:40\";s:12:\"english_name\";s:6:\"Arabic\";s:11:\"native_name\";s:14:\"العربية\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.8.1/ar.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ar\";i:2;s:3:\"ara\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:16:\"المتابعة\";}}s:3:\"ary\";a:8:{s:8:\"language\";s:3:\"ary\";s:7:\"version\";s:5:\"4.7.5\";s:7:\"updated\";s:19:\"2017-01-26 15:42:35\";s:12:\"english_name\";s:15:\"Moroccan Arabic\";s:11:\"native_name\";s:31:\"العربية المغربية\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.7.5/ary.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ar\";i:3;s:3:\"ary\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:16:\"المتابعة\";}}s:2:\"as\";a:8:{s:8:\"language\";s:2:\"as\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-11-22 18:59:07\";s:12:\"english_name\";s:8:\"Assamese\";s:11:\"native_name\";s:21:\"অসমীয়া\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.7.2/as.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"as\";i:2;s:3:\"asm\";i:3;s:3:\"asm\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:0:\"\";}}s:2:\"az\";a:8:{s:8:\"language\";s:2:\"az\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-11-06 00:09:27\";s:12:\"english_name\";s:11:\"Azerbaijani\";s:11:\"native_name\";s:16:\"Azərbaycan dili\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.7.2/az.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"az\";i:2;s:3:\"aze\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:5:\"Davam\";}}s:3:\"azb\";a:8:{s:8:\"language\";s:3:\"azb\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-09-12 20:34:31\";s:12:\"english_name\";s:17:\"South Azerbaijani\";s:11:\"native_name\";s:29:\"گؤنئی آذربایجان\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.7.2/azb.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"az\";i:3;s:3:\"azb\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Continue\";}}s:3:\"bel\";a:8:{s:8:\"language\";s:3:\"bel\";s:7:\"version\";s:5:\"4.8.1\";s:7:\"updated\";s:19:\"2017-07-30 18:40:55\";s:12:\"english_name\";s:10:\"Belarusian\";s:11:\"native_name\";s:29:\"Беларуская мова\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.8.1/bel.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"be\";i:2;s:3:\"bel\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:20:\"Працягнуць\";}}s:5:\"bg_BG\";a:8:{s:8:\"language\";s:5:\"bg_BG\";s:7:\"version\";s:5:\"4.8.1\";s:7:\"updated\";s:19:\"2017-07-28 10:34:08\";s:12:\"english_name\";s:9:\"Bulgarian\";s:11:\"native_name\";s:18:\"Български\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.8.1/bg_BG.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"bg\";i:2;s:3:\"bul\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:12:\"Напред\";}}s:5:\"bn_BD\";a:8:{s:8:\"language\";s:5:\"bn_BD\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2017-01-04 16:58:43\";s:12:\"english_name\";s:7:\"Bengali\";s:11:\"native_name\";s:15:\"বাংলা\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.7.2/bn_BD.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"bn\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:23:\"এগিয়ে চল.\";}}s:2:\"bo\";a:8:{s:8:\"language\";s:2:\"bo\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-09-05 09:44:12\";s:12:\"english_name\";s:7:\"Tibetan\";s:11:\"native_name\";s:21:\"བོད་ཡིག\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.7.2/bo.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"bo\";i:2;s:3:\"tib\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:24:\"མུ་མཐུད།\";}}s:5:\"bs_BA\";a:8:{s:8:\"language\";s:5:\"bs_BA\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-09-04 20:20:28\";s:12:\"english_name\";s:7:\"Bosnian\";s:11:\"native_name\";s:8:\"Bosanski\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.7.2/bs_BA.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"bs\";i:2;s:3:\"bos\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:7:\"Nastavi\";}}s:2:\"ca\";a:8:{s:8:\"language\";s:2:\"ca\";s:7:\"version\";s:5:\"4.8.1\";s:7:\"updated\";s:19:\"2017-07-26 18:13:08\";s:12:\"english_name\";s:7:\"Catalan\";s:11:\"native_name\";s:7:\"Català\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.8.1/ca.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ca\";i:2;s:3:\"cat\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Continua\";}}s:3:\"ceb\";a:8:{s:8:\"language\";s:3:\"ceb\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-03-02 17:25:51\";s:12:\"english_name\";s:7:\"Cebuano\";s:11:\"native_name\";s:7:\"Cebuano\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.7.2/ceb.zip\";s:3:\"iso\";a:2:{i:2;s:3:\"ceb\";i:3;s:3:\"ceb\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:7:\"Padayun\";}}s:5:\"cs_CZ\";a:8:{s:8:\"language\";s:5:\"cs_CZ\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2017-01-12 08:46:26\";s:12:\"english_name\";s:5:\"Czech\";s:11:\"native_name\";s:12:\"Čeština‎\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.7.2/cs_CZ.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"cs\";i:2;s:3:\"ces\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:11:\"Pokračovat\";}}s:2:\"cy\";a:8:{s:8:\"language\";s:2:\"cy\";s:7:\"version\";s:5:\"4.8.1\";s:7:\"updated\";s:19:\"2017-07-28 14:28:04\";s:12:\"english_name\";s:5:\"Welsh\";s:11:\"native_name\";s:7:\"Cymraeg\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.8.1/cy.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"cy\";i:2;s:3:\"cym\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"Parhau\";}}s:5:\"da_DK\";a:8:{s:8:\"language\";s:5:\"da_DK\";s:7:\"version\";s:3:\"4.8\";s:7:\"updated\";s:19:\"2017-06-14 23:24:44\";s:12:\"english_name\";s:6:\"Danish\";s:11:\"native_name\";s:5:\"Dansk\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.8/da_DK.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"da\";i:2;s:3:\"dan\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Fortsæt\";}}s:5:\"de_CH\";a:8:{s:8:\"language\";s:5:\"de_CH\";s:7:\"version\";s:5:\"4.8.1\";s:7:\"updated\";s:19:\"2017-07-26 06:22:33\";s:12:\"english_name\";s:20:\"German (Switzerland)\";s:11:\"native_name\";s:17:\"Deutsch (Schweiz)\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.8.1/de_CH.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"de\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"Weiter\";}}s:14:\"de_CH_informal\";a:8:{s:8:\"language\";s:14:\"de_CH_informal\";s:7:\"version\";s:5:\"4.8.1\";s:7:\"updated\";s:19:\"2017-07-26 06:24:08\";s:12:\"english_name\";s:30:\"German (Switzerland, Informal)\";s:11:\"native_name\";s:21:\"Deutsch (Schweiz, Du)\";s:7:\"package\";s:73:\"https://downloads.wordpress.org/translation/core/4.8.1/de_CH_informal.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"de\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"Weiter\";}}s:12:\"de_DE_formal\";a:8:{s:8:\"language\";s:12:\"de_DE_formal\";s:7:\"version\";s:5:\"4.8.1\";s:7:\"updated\";s:19:\"2017-07-30 10:51:58\";s:12:\"english_name\";s:15:\"German (Formal)\";s:11:\"native_name\";s:13:\"Deutsch (Sie)\";s:7:\"package\";s:71:\"https://downloads.wordpress.org/translation/core/4.8.1/de_DE_formal.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"de\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"Weiter\";}}s:5:\"de_DE\";a:8:{s:8:\"language\";s:5:\"de_DE\";s:7:\"version\";s:5:\"4.8.1\";s:7:\"updated\";s:19:\"2017-08-03 16:58:53\";s:12:\"english_name\";s:6:\"German\";s:11:\"native_name\";s:7:\"Deutsch\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.8.1/de_DE.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"de\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"Weiter\";}}s:3:\"dzo\";a:8:{s:8:\"language\";s:3:\"dzo\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-06-29 08:59:03\";s:12:\"english_name\";s:8:\"Dzongkha\";s:11:\"native_name\";s:18:\"རྫོང་ཁ\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.7.2/dzo.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"dz\";i:2;s:3:\"dzo\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:0:\"\";}}s:2:\"el\";a:8:{s:8:\"language\";s:2:\"el\";s:7:\"version\";s:5:\"4.8.1\";s:7:\"updated\";s:19:\"2017-07-28 10:51:51\";s:12:\"english_name\";s:5:\"Greek\";s:11:\"native_name\";s:16:\"Ελληνικά\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.8.1/el.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"el\";i:2;s:3:\"ell\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:16:\"Συνέχεια\";}}s:5:\"en_NZ\";a:8:{s:8:\"language\";s:5:\"en_NZ\";s:7:\"version\";s:5:\"4.8.1\";s:7:\"updated\";s:19:\"2017-08-02 03:57:05\";s:12:\"english_name\";s:21:\"English (New Zealand)\";s:11:\"native_name\";s:21:\"English (New Zealand)\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.8.1/en_NZ.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"en\";i:2;s:3:\"eng\";i:3;s:3:\"eng\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Continue\";}}s:5:\"en_AU\";a:8:{s:8:\"language\";s:5:\"en_AU\";s:7:\"version\";s:5:\"4.8.1\";s:7:\"updated\";s:19:\"2017-07-25 10:03:08\";s:12:\"english_name\";s:19:\"English (Australia)\";s:11:\"native_name\";s:19:\"English (Australia)\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.8.1/en_AU.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"en\";i:2;s:3:\"eng\";i:3;s:3:\"eng\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Continue\";}}s:5:\"en_GB\";a:8:{s:8:\"language\";s:5:\"en_GB\";s:7:\"version\";s:5:\"4.8.1\";s:7:\"updated\";s:19:\"2017-07-25 17:31:04\";s:12:\"english_name\";s:12:\"English (UK)\";s:11:\"native_name\";s:12:\"English (UK)\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.8.1/en_GB.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"en\";i:2;s:3:\"eng\";i:3;s:3:\"eng\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Continue\";}}s:5:\"en_CA\";a:8:{s:8:\"language\";s:5:\"en_CA\";s:7:\"version\";s:5:\"4.8.1\";s:7:\"updated\";s:19:\"2017-07-25 19:47:01\";s:12:\"english_name\";s:16:\"English (Canada)\";s:11:\"native_name\";s:16:\"English (Canada)\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.8.1/en_CA.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"en\";i:2;s:3:\"eng\";i:3;s:3:\"eng\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Continue\";}}s:5:\"en_ZA\";a:8:{s:8:\"language\";s:5:\"en_ZA\";s:7:\"version\";s:5:\"4.7.5\";s:7:\"updated\";s:19:\"2017-01-26 15:53:43\";s:12:\"english_name\";s:22:\"English (South Africa)\";s:11:\"native_name\";s:22:\"English (South Africa)\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.7.5/en_ZA.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"en\";i:2;s:3:\"eng\";i:3;s:3:\"eng\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Continue\";}}s:2:\"eo\";a:8:{s:8:\"language\";s:2:\"eo\";s:7:\"version\";s:5:\"4.8.1\";s:7:\"updated\";s:19:\"2017-07-26 10:38:53\";s:12:\"english_name\";s:9:\"Esperanto\";s:11:\"native_name\";s:9:\"Esperanto\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.8.1/eo.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"eo\";i:2;s:3:\"epo\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Daŭrigi\";}}s:5:\"es_AR\";a:8:{s:8:\"language\";s:5:\"es_AR\";s:7:\"version\";s:5:\"4.8.1\";s:7:\"updated\";s:19:\"2017-08-01 04:48:11\";s:12:\"english_name\";s:19:\"Spanish (Argentina)\";s:11:\"native_name\";s:21:\"Español de Argentina\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.8.1/es_AR.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"es\";i:2;s:3:\"spa\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:5:\"es_VE\";a:8:{s:8:\"language\";s:5:\"es_VE\";s:7:\"version\";s:5:\"4.8.1\";s:7:\"updated\";s:19:\"2017-07-30 16:09:17\";s:12:\"english_name\";s:19:\"Spanish (Venezuela)\";s:11:\"native_name\";s:21:\"Español de Venezuela\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.8.1/es_VE.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"es\";i:2;s:3:\"spa\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:5:\"es_GT\";a:8:{s:8:\"language\";s:5:\"es_GT\";s:7:\"version\";s:5:\"4.7.5\";s:7:\"updated\";s:19:\"2017-01-26 15:54:37\";s:12:\"english_name\";s:19:\"Spanish (Guatemala)\";s:11:\"native_name\";s:21:\"Español de Guatemala\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.7.5/es_GT.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"es\";i:2;s:3:\"spa\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:5:\"es_CO\";a:8:{s:8:\"language\";s:5:\"es_CO\";s:7:\"version\";s:5:\"4.7.5\";s:7:\"updated\";s:19:\"2017-01-26 15:54:37\";s:12:\"english_name\";s:18:\"Spanish (Colombia)\";s:11:\"native_name\";s:20:\"Español de Colombia\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.7.5/es_CO.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"es\";i:2;s:3:\"spa\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:5:\"es_MX\";a:8:{s:8:\"language\";s:5:\"es_MX\";s:7:\"version\";s:5:\"4.8.1\";s:7:\"updated\";s:19:\"2017-07-31 15:12:02\";s:12:\"english_name\";s:16:\"Spanish (Mexico)\";s:11:\"native_name\";s:19:\"Español de México\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.8.1/es_MX.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"es\";i:2;s:3:\"spa\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:5:\"es_CL\";a:8:{s:8:\"language\";s:5:\"es_CL\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-11-28 20:09:49\";s:12:\"english_name\";s:15:\"Spanish (Chile)\";s:11:\"native_name\";s:17:\"Español de Chile\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.7.2/es_CL.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"es\";i:2;s:3:\"spa\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:5:\"es_PE\";a:8:{s:8:\"language\";s:5:\"es_PE\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-09-09 09:36:22\";s:12:\"english_name\";s:14:\"Spanish (Peru)\";s:11:\"native_name\";s:17:\"Español de Perú\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.7.2/es_PE.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"es\";i:2;s:3:\"spa\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:5:\"es_ES\";a:8:{s:8:\"language\";s:5:\"es_ES\";s:7:\"version\";s:5:\"4.8.1\";s:7:\"updated\";s:19:\"2017-07-25 07:43:08\";s:12:\"english_name\";s:15:\"Spanish (Spain)\";s:11:\"native_name\";s:8:\"Español\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.8.1/es_ES.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"es\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:2:\"et\";a:8:{s:8:\"language\";s:2:\"et\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2017-01-27 16:37:11\";s:12:\"english_name\";s:8:\"Estonian\";s:11:\"native_name\";s:5:\"Eesti\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.7.2/et.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"et\";i:2;s:3:\"est\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"Jätka\";}}s:2:\"eu\";a:8:{s:8:\"language\";s:2:\"eu\";s:7:\"version\";s:5:\"4.8.1\";s:7:\"updated\";s:19:\"2017-07-30 18:58:36\";s:12:\"english_name\";s:6:\"Basque\";s:11:\"native_name\";s:7:\"Euskara\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.8.1/eu.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"eu\";i:2;s:3:\"eus\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Jarraitu\";}}s:5:\"fa_IR\";a:8:{s:8:\"language\";s:5:\"fa_IR\";s:7:\"version\";s:3:\"4.8\";s:7:\"updated\";s:19:\"2017-06-09 15:50:45\";s:12:\"english_name\";s:7:\"Persian\";s:11:\"native_name\";s:10:\"فارسی\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.8/fa_IR.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"fa\";i:2;s:3:\"fas\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:10:\"ادامه\";}}s:2:\"fi\";a:8:{s:8:\"language\";s:2:\"fi\";s:7:\"version\";s:5:\"4.8.1\";s:7:\"updated\";s:19:\"2017-07-28 11:00:29\";s:12:\"english_name\";s:7:\"Finnish\";s:11:\"native_name\";s:5:\"Suomi\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.8.1/fi.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"fi\";i:2;s:3:\"fin\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:5:\"Jatka\";}}s:5:\"fr_FR\";a:8:{s:8:\"language\";s:5:\"fr_FR\";s:7:\"version\";s:5:\"4.8.1\";s:7:\"updated\";s:19:\"2017-07-25 06:42:50\";s:12:\"english_name\";s:15:\"French (France)\";s:11:\"native_name\";s:9:\"Français\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.8.1/fr_FR.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"fr\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuer\";}}s:5:\"fr_BE\";a:8:{s:8:\"language\";s:5:\"fr_BE\";s:7:\"version\";s:5:\"4.8.1\";s:7:\"updated\";s:19:\"2017-07-28 09:14:18\";s:12:\"english_name\";s:16:\"French (Belgium)\";s:11:\"native_name\";s:21:\"Français de Belgique\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.8.1/fr_BE.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"fr\";i:2;s:3:\"fra\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuer\";}}s:5:\"fr_CA\";a:8:{s:8:\"language\";s:5:\"fr_CA\";s:7:\"version\";s:5:\"4.8.1\";s:7:\"updated\";s:19:\"2017-07-28 12:37:07\";s:12:\"english_name\";s:15:\"French (Canada)\";s:11:\"native_name\";s:19:\"Français du Canada\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.8.1/fr_CA.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"fr\";i:2;s:3:\"fra\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuer\";}}s:2:\"gd\";a:8:{s:8:\"language\";s:2:\"gd\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-08-23 17:41:37\";s:12:\"english_name\";s:15:\"Scottish Gaelic\";s:11:\"native_name\";s:9:\"Gàidhlig\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.7.2/gd.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"gd\";i:2;s:3:\"gla\";i:3;s:3:\"gla\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:15:\"Lean air adhart\";}}s:5:\"gl_ES\";a:8:{s:8:\"language\";s:5:\"gl_ES\";s:7:\"version\";s:5:\"4.8.1\";s:7:\"updated\";s:19:\"2017-07-26 12:45:35\";s:12:\"english_name\";s:8:\"Galician\";s:11:\"native_name\";s:6:\"Galego\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.8.1/gl_ES.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"gl\";i:2;s:3:\"glg\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:2:\"gu\";a:8:{s:8:\"language\";s:2:\"gu\";s:7:\"version\";s:5:\"4.8.1\";s:7:\"updated\";s:19:\"2017-07-29 12:04:51\";s:12:\"english_name\";s:8:\"Gujarati\";s:11:\"native_name\";s:21:\"ગુજરાતી\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.8.1/gu.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"gu\";i:2;s:3:\"guj\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:31:\"ચાલુ રાખવું\";}}s:3:\"haz\";a:8:{s:8:\"language\";s:3:\"haz\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2015-12-05 00:59:09\";s:12:\"english_name\";s:8:\"Hazaragi\";s:11:\"native_name\";s:15:\"هزاره گی\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.4.2/haz.zip\";s:3:\"iso\";a:1:{i:3;s:3:\"haz\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:10:\"ادامه\";}}s:5:\"he_IL\";a:8:{s:8:\"language\";s:5:\"he_IL\";s:7:\"version\";s:5:\"4.8.1\";s:7:\"updated\";s:19:\"2017-08-01 17:02:06\";s:12:\"english_name\";s:6:\"Hebrew\";s:11:\"native_name\";s:16:\"עִבְרִית\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.8.1/he_IL.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"he\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"המשך\";}}s:5:\"hi_IN\";a:8:{s:8:\"language\";s:5:\"hi_IN\";s:7:\"version\";s:5:\"4.8.1\";s:7:\"updated\";s:19:\"2017-07-28 10:29:26\";s:12:\"english_name\";s:5:\"Hindi\";s:11:\"native_name\";s:18:\"हिन्दी\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.8.1/hi_IN.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"hi\";i:2;s:3:\"hin\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:12:\"जारी\";}}s:2:\"hr\";a:8:{s:8:\"language\";s:2:\"hr\";s:7:\"version\";s:3:\"4.8\";s:7:\"updated\";s:19:\"2017-07-19 08:19:39\";s:12:\"english_name\";s:8:\"Croatian\";s:11:\"native_name\";s:8:\"Hrvatski\";s:7:\"package\";s:59:\"https://downloads.wordpress.org/translation/core/4.8/hr.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"hr\";i:2;s:3:\"hrv\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:7:\"Nastavi\";}}s:5:\"hu_HU\";a:8:{s:8:\"language\";s:5:\"hu_HU\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2017-01-26 15:48:39\";s:12:\"english_name\";s:9:\"Hungarian\";s:11:\"native_name\";s:6:\"Magyar\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.7.2/hu_HU.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"hu\";i:2;s:3:\"hun\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:10:\"Folytatás\";}}s:2:\"hy\";a:8:{s:8:\"language\";s:2:\"hy\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-12-03 16:21:10\";s:12:\"english_name\";s:8:\"Armenian\";s:11:\"native_name\";s:14:\"Հայերեն\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.7.2/hy.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"hy\";i:2;s:3:\"hye\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:20:\"Շարունակել\";}}s:5:\"id_ID\";a:8:{s:8:\"language\";s:5:\"id_ID\";s:7:\"version\";s:5:\"4.8.1\";s:7:\"updated\";s:19:\"2017-07-28 12:45:08\";s:12:\"english_name\";s:10:\"Indonesian\";s:11:\"native_name\";s:16:\"Bahasa Indonesia\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.8.1/id_ID.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"id\";i:2;s:3:\"ind\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Lanjutkan\";}}s:5:\"is_IS\";a:8:{s:8:\"language\";s:5:\"is_IS\";s:7:\"version\";s:5:\"4.7.5\";s:7:\"updated\";s:19:\"2017-04-13 13:55:54\";s:12:\"english_name\";s:9:\"Icelandic\";s:11:\"native_name\";s:9:\"Íslenska\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.7.5/is_IS.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"is\";i:2;s:3:\"isl\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"Áfram\";}}s:5:\"it_IT\";a:8:{s:8:\"language\";s:5:\"it_IT\";s:7:\"version\";s:5:\"4.8.1\";s:7:\"updated\";s:19:\"2017-08-04 08:42:00\";s:12:\"english_name\";s:7:\"Italian\";s:11:\"native_name\";s:8:\"Italiano\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.8.1/it_IT.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"it\";i:2;s:3:\"ita\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Continua\";}}s:2:\"ja\";a:8:{s:8:\"language\";s:2:\"ja\";s:7:\"version\";s:5:\"4.8.1\";s:7:\"updated\";s:19:\"2017-08-03 23:23:50\";s:12:\"english_name\";s:8:\"Japanese\";s:11:\"native_name\";s:9:\"日本語\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.8.1/ja.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"ja\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"続ける\";}}s:5:\"ka_GE\";a:8:{s:8:\"language\";s:5:\"ka_GE\";s:7:\"version\";s:3:\"4.8\";s:7:\"updated\";s:19:\"2017-06-12 09:20:11\";s:12:\"english_name\";s:8:\"Georgian\";s:11:\"native_name\";s:21:\"ქართული\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.8/ka_GE.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ka\";i:2;s:3:\"kat\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:30:\"გაგრძელება\";}}s:3:\"kab\";a:8:{s:8:\"language\";s:3:\"kab\";s:7:\"version\";s:3:\"4.8\";s:7:\"updated\";s:19:\"2017-07-16 18:44:50\";s:12:\"english_name\";s:6:\"Kabyle\";s:11:\"native_name\";s:9:\"Taqbaylit\";s:7:\"package\";s:60:\"https://downloads.wordpress.org/translation/core/4.8/kab.zip\";s:3:\"iso\";a:2:{i:2;s:3:\"kab\";i:3;s:3:\"kab\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"Kemmel\";}}s:2:\"km\";a:8:{s:8:\"language\";s:2:\"km\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-12-07 02:07:59\";s:12:\"english_name\";s:5:\"Khmer\";s:11:\"native_name\";s:27:\"ភាសាខ្មែរ\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.7.2/km.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"km\";i:2;s:3:\"khm\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:12:\"បន្ត\";}}s:5:\"ko_KR\";a:8:{s:8:\"language\";s:5:\"ko_KR\";s:7:\"version\";s:5:\"4.8.1\";s:7:\"updated\";s:19:\"2017-07-28 10:48:16\";s:12:\"english_name\";s:6:\"Korean\";s:11:\"native_name\";s:9:\"한국어\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.8.1/ko_KR.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ko\";i:2;s:3:\"kor\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"계속\";}}s:3:\"ckb\";a:8:{s:8:\"language\";s:3:\"ckb\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2017-01-26 15:48:25\";s:12:\"english_name\";s:16:\"Kurdish (Sorani)\";s:11:\"native_name\";s:13:\"كوردی‎\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.7.2/ckb.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ku\";i:3;s:3:\"ckb\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:30:\"به‌رده‌وام به‌\";}}s:2:\"lo\";a:8:{s:8:\"language\";s:2:\"lo\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-11-12 09:59:23\";s:12:\"english_name\";s:3:\"Lao\";s:11:\"native_name\";s:21:\"ພາສາລາວ\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.7.2/lo.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"lo\";i:2;s:3:\"lao\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:18:\"ຕໍ່​ໄປ\";}}s:5:\"lt_LT\";a:8:{s:8:\"language\";s:5:\"lt_LT\";s:7:\"version\";s:5:\"4.8.1\";s:7:\"updated\";s:19:\"2017-07-28 11:02:15\";s:12:\"english_name\";s:10:\"Lithuanian\";s:11:\"native_name\";s:15:\"Lietuvių kalba\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.8.1/lt_LT.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"lt\";i:2;s:3:\"lit\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"Tęsti\";}}s:2:\"lv\";a:8:{s:8:\"language\";s:2:\"lv\";s:7:\"version\";s:5:\"4.7.5\";s:7:\"updated\";s:19:\"2017-03-17 20:40:40\";s:12:\"english_name\";s:7:\"Latvian\";s:11:\"native_name\";s:16:\"Latviešu valoda\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.7.5/lv.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"lv\";i:2;s:3:\"lav\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Turpināt\";}}s:5:\"mk_MK\";a:8:{s:8:\"language\";s:5:\"mk_MK\";s:7:\"version\";s:5:\"4.7.5\";s:7:\"updated\";s:19:\"2017-01-26 15:54:41\";s:12:\"english_name\";s:10:\"Macedonian\";s:11:\"native_name\";s:31:\"Македонски јазик\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.7.5/mk_MK.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"mk\";i:2;s:3:\"mkd\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:16:\"Продолжи\";}}s:5:\"ml_IN\";a:8:{s:8:\"language\";s:5:\"ml_IN\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2017-01-27 03:43:32\";s:12:\"english_name\";s:9:\"Malayalam\";s:11:\"native_name\";s:18:\"മലയാളം\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.7.2/ml_IN.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ml\";i:2;s:3:\"mal\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:18:\"തുടരുക\";}}s:2:\"mn\";a:8:{s:8:\"language\";s:2:\"mn\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2017-01-12 07:29:35\";s:12:\"english_name\";s:9:\"Mongolian\";s:11:\"native_name\";s:12:\"Монгол\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.7.2/mn.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"mn\";i:2;s:3:\"mon\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:24:\"Үргэлжлүүлэх\";}}s:2:\"mr\";a:8:{s:8:\"language\";s:2:\"mr\";s:7:\"version\";s:3:\"4.8\";s:7:\"updated\";s:19:\"2017-07-05 19:40:47\";s:12:\"english_name\";s:7:\"Marathi\";s:11:\"native_name\";s:15:\"मराठी\";s:7:\"package\";s:59:\"https://downloads.wordpress.org/translation/core/4.8/mr.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"mr\";i:2;s:3:\"mar\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:25:\"सुरु ठेवा\";}}s:5:\"ms_MY\";a:8:{s:8:\"language\";s:5:\"ms_MY\";s:7:\"version\";s:5:\"4.7.5\";s:7:\"updated\";s:19:\"2017-03-05 09:45:10\";s:12:\"english_name\";s:5:\"Malay\";s:11:\"native_name\";s:13:\"Bahasa Melayu\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.7.5/ms_MY.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ms\";i:2;s:3:\"msa\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Teruskan\";}}s:5:\"my_MM\";a:8:{s:8:\"language\";s:5:\"my_MM\";s:7:\"version\";s:6:\"4.1.18\";s:7:\"updated\";s:19:\"2015-03-26 15:57:42\";s:12:\"english_name\";s:17:\"Myanmar (Burmese)\";s:11:\"native_name\";s:15:\"ဗမာစာ\";s:7:\"package\";s:65:\"https://downloads.wordpress.org/translation/core/4.1.18/my_MM.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"my\";i:2;s:3:\"mya\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:54:\"ဆက်လက်လုပ်ဆောင်ပါ။\";}}s:5:\"nb_NO\";a:8:{s:8:\"language\";s:5:\"nb_NO\";s:7:\"version\";s:5:\"4.8.1\";s:7:\"updated\";s:19:\"2017-08-02 21:02:39\";s:12:\"english_name\";s:19:\"Norwegian (Bokmål)\";s:11:\"native_name\";s:13:\"Norsk bokmål\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.8.1/nb_NO.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"nb\";i:2;s:3:\"nob\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Fortsett\";}}s:5:\"ne_NP\";a:8:{s:8:\"language\";s:5:\"ne_NP\";s:7:\"version\";s:5:\"4.8.1\";s:7:\"updated\";s:19:\"2017-07-31 08:47:10\";s:12:\"english_name\";s:6:\"Nepali\";s:11:\"native_name\";s:18:\"नेपाली\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.8.1/ne_NP.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ne\";i:2;s:3:\"nep\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:43:\"जारी राख्नुहोस्\";}}s:5:\"nl_BE\";a:8:{s:8:\"language\";s:5:\"nl_BE\";s:7:\"version\";s:5:\"4.8.1\";s:7:\"updated\";s:19:\"2017-07-27 16:44:39\";s:12:\"english_name\";s:15:\"Dutch (Belgium)\";s:11:\"native_name\";s:20:\"Nederlands (België)\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.8.1/nl_BE.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"nl\";i:2;s:3:\"nld\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Doorgaan\";}}s:5:\"nl_NL\";a:8:{s:8:\"language\";s:5:\"nl_NL\";s:7:\"version\";s:5:\"4.8.1\";s:7:\"updated\";s:19:\"2017-07-26 19:34:18\";s:12:\"english_name\";s:5:\"Dutch\";s:11:\"native_name\";s:10:\"Nederlands\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.8.1/nl_NL.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"nl\";i:2;s:3:\"nld\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Doorgaan\";}}s:12:\"nl_NL_formal\";a:8:{s:8:\"language\";s:12:\"nl_NL_formal\";s:7:\"version\";s:5:\"4.7.5\";s:7:\"updated\";s:19:\"2017-02-16 13:24:21\";s:12:\"english_name\";s:14:\"Dutch (Formal)\";s:11:\"native_name\";s:20:\"Nederlands (Formeel)\";s:7:\"package\";s:71:\"https://downloads.wordpress.org/translation/core/4.7.5/nl_NL_formal.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"nl\";i:2;s:3:\"nld\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Doorgaan\";}}s:5:\"nn_NO\";a:8:{s:8:\"language\";s:5:\"nn_NO\";s:7:\"version\";s:5:\"4.8.1\";s:7:\"updated\";s:19:\"2017-08-01 07:32:10\";s:12:\"english_name\";s:19:\"Norwegian (Nynorsk)\";s:11:\"native_name\";s:13:\"Norsk nynorsk\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.8.1/nn_NO.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"nn\";i:2;s:3:\"nno\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Hald fram\";}}s:3:\"oci\";a:8:{s:8:\"language\";s:3:\"oci\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2017-01-02 13:47:38\";s:12:\"english_name\";s:7:\"Occitan\";s:11:\"native_name\";s:7:\"Occitan\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.7.2/oci.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"oc\";i:2;s:3:\"oci\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Contunhar\";}}s:5:\"pa_IN\";a:8:{s:8:\"language\";s:5:\"pa_IN\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2017-01-16 05:19:43\";s:12:\"english_name\";s:7:\"Punjabi\";s:11:\"native_name\";s:18:\"ਪੰਜਾਬੀ\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.7.2/pa_IN.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"pa\";i:2;s:3:\"pan\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:25:\"ਜਾਰੀ ਰੱਖੋ\";}}s:5:\"pl_PL\";a:8:{s:8:\"language\";s:5:\"pl_PL\";s:7:\"version\";s:5:\"4.8.1\";s:7:\"updated\";s:19:\"2017-08-04 20:03:38\";s:12:\"english_name\";s:6:\"Polish\";s:11:\"native_name\";s:6:\"Polski\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.8.1/pl_PL.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"pl\";i:2;s:3:\"pol\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Kontynuuj\";}}s:2:\"ps\";a:8:{s:8:\"language\";s:2:\"ps\";s:7:\"version\";s:6:\"4.1.18\";s:7:\"updated\";s:19:\"2015-03-29 22:19:48\";s:12:\"english_name\";s:6:\"Pashto\";s:11:\"native_name\";s:8:\"پښتو\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.1.18/ps.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ps\";i:2;s:3:\"pus\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:19:\"دوام ورکړه\";}}s:5:\"pt_BR\";a:8:{s:8:\"language\";s:5:\"pt_BR\";s:7:\"version\";s:5:\"4.8.1\";s:7:\"updated\";s:19:\"2017-07-26 21:35:20\";s:12:\"english_name\";s:19:\"Portuguese (Brazil)\";s:11:\"native_name\";s:20:\"Português do Brasil\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.8.1/pt_BR.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"pt\";i:2;s:3:\"por\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:5:\"pt_PT\";a:8:{s:8:\"language\";s:5:\"pt_PT\";s:7:\"version\";s:5:\"4.8.1\";s:7:\"updated\";s:19:\"2017-08-03 08:14:27\";s:12:\"english_name\";s:21:\"Portuguese (Portugal)\";s:11:\"native_name\";s:10:\"Português\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.8.1/pt_PT.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"pt\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:3:\"rhg\";a:8:{s:8:\"language\";s:3:\"rhg\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-03-16 13:03:18\";s:12:\"english_name\";s:8:\"Rohingya\";s:11:\"native_name\";s:8:\"Ruáinga\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.7.2/rhg.zip\";s:3:\"iso\";a:1:{i:3;s:3:\"rhg\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:0:\"\";}}s:5:\"ro_RO\";a:8:{s:8:\"language\";s:5:\"ro_RO\";s:7:\"version\";s:5:\"4.8.1\";s:7:\"updated\";s:19:\"2017-07-28 10:26:15\";s:12:\"english_name\";s:8:\"Romanian\";s:11:\"native_name\";s:8:\"Română\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.8.1/ro_RO.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ro\";i:2;s:3:\"ron\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuă\";}}s:5:\"ru_RU\";a:8:{s:8:\"language\";s:5:\"ru_RU\";s:7:\"version\";s:5:\"4.8.1\";s:7:\"updated\";s:19:\"2017-07-25 01:16:13\";s:12:\"english_name\";s:7:\"Russian\";s:11:\"native_name\";s:14:\"Русский\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.8.1/ru_RU.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ru\";i:2;s:3:\"rus\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:20:\"Продолжить\";}}s:3:\"sah\";a:8:{s:8:\"language\";s:3:\"sah\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2017-01-21 02:06:41\";s:12:\"english_name\";s:5:\"Sakha\";s:11:\"native_name\";s:14:\"Сахалыы\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.7.2/sah.zip\";s:3:\"iso\";a:2:{i:2;s:3:\"sah\";i:3;s:3:\"sah\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:12:\"Салҕаа\";}}s:5:\"si_LK\";a:8:{s:8:\"language\";s:5:\"si_LK\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-11-12 06:00:52\";s:12:\"english_name\";s:7:\"Sinhala\";s:11:\"native_name\";s:15:\"සිංහල\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.7.2/si_LK.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"si\";i:2;s:3:\"sin\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:44:\"දිගටම කරගෙන යන්න\";}}s:5:\"sk_SK\";a:8:{s:8:\"language\";s:5:\"sk_SK\";s:7:\"version\";s:3:\"4.8\";s:7:\"updated\";s:19:\"2017-06-15 09:02:13\";s:12:\"english_name\";s:6:\"Slovak\";s:11:\"native_name\";s:11:\"Slovenčina\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.8/sk_SK.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"sk\";i:2;s:3:\"slk\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:12:\"Pokračovať\";}}s:5:\"sl_SI\";a:8:{s:8:\"language\";s:5:\"sl_SI\";s:7:\"version\";s:5:\"4.8.1\";s:7:\"updated\";s:19:\"2017-07-28 14:03:23\";s:12:\"english_name\";s:9:\"Slovenian\";s:11:\"native_name\";s:13:\"Slovenščina\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.8.1/sl_SI.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"sl\";i:2;s:3:\"slv\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Nadaljuj\";}}s:2:\"sq\";a:8:{s:8:\"language\";s:2:\"sq\";s:7:\"version\";s:5:\"4.7.5\";s:7:\"updated\";s:19:\"2017-04-24 08:35:30\";s:12:\"english_name\";s:8:\"Albanian\";s:11:\"native_name\";s:5:\"Shqip\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.7.5/sq.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"sq\";i:2;s:3:\"sqi\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"Vazhdo\";}}s:5:\"sr_RS\";a:8:{s:8:\"language\";s:5:\"sr_RS\";s:7:\"version\";s:5:\"4.8.1\";s:7:\"updated\";s:19:\"2017-07-28 12:07:44\";s:12:\"english_name\";s:7:\"Serbian\";s:11:\"native_name\";s:23:\"Српски језик\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.8.1/sr_RS.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"sr\";i:2;s:3:\"srp\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:14:\"Настави\";}}s:5:\"sv_SE\";a:8:{s:8:\"language\";s:5:\"sv_SE\";s:7:\"version\";s:5:\"4.8.1\";s:7:\"updated\";s:19:\"2017-08-03 22:53:12\";s:12:\"english_name\";s:7:\"Swedish\";s:11:\"native_name\";s:7:\"Svenska\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.8.1/sv_SE.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"sv\";i:2;s:3:\"swe\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Fortsätt\";}}s:3:\"szl\";a:8:{s:8:\"language\";s:3:\"szl\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-09-24 19:58:14\";s:12:\"english_name\";s:8:\"Silesian\";s:11:\"native_name\";s:17:\"Ślōnskŏ gŏdka\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.7.2/szl.zip\";s:3:\"iso\";a:1:{i:3;s:3:\"szl\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:13:\"Kōntynuować\";}}s:5:\"ta_IN\";a:8:{s:8:\"language\";s:5:\"ta_IN\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2017-01-27 03:22:47\";s:12:\"english_name\";s:5:\"Tamil\";s:11:\"native_name\";s:15:\"தமிழ்\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.7.2/ta_IN.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ta\";i:2;s:3:\"tam\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:24:\"தொடரவும்\";}}s:2:\"te\";a:8:{s:8:\"language\";s:2:\"te\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2017-01-26 15:47:39\";s:12:\"english_name\";s:6:\"Telugu\";s:11:\"native_name\";s:18:\"తెలుగు\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.7.2/te.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"te\";i:2;s:3:\"tel\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:30:\"కొనసాగించు\";}}s:2:\"th\";a:8:{s:8:\"language\";s:2:\"th\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2017-01-26 15:48:43\";s:12:\"english_name\";s:4:\"Thai\";s:11:\"native_name\";s:9:\"ไทย\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.7.2/th.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"th\";i:2;s:3:\"tha\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:15:\"ต่อไป\";}}s:2:\"tl\";a:8:{s:8:\"language\";s:2:\"tl\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-12-30 02:38:08\";s:12:\"english_name\";s:7:\"Tagalog\";s:11:\"native_name\";s:7:\"Tagalog\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.7.2/tl.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"tl\";i:2;s:3:\"tgl\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:10:\"Magpatuloy\";}}s:5:\"tr_TR\";a:8:{s:8:\"language\";s:5:\"tr_TR\";s:7:\"version\";s:5:\"4.8.1\";s:7:\"updated\";s:19:\"2017-07-31 11:38:12\";s:12:\"english_name\";s:7:\"Turkish\";s:11:\"native_name\";s:8:\"Türkçe\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.8.1/tr_TR.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"tr\";i:2;s:3:\"tur\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:5:\"Devam\";}}s:5:\"tt_RU\";a:8:{s:8:\"language\";s:5:\"tt_RU\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-11-20 20:20:50\";s:12:\"english_name\";s:5:\"Tatar\";s:11:\"native_name\";s:19:\"Татар теле\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.7.2/tt_RU.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"tt\";i:2;s:3:\"tat\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:17:\"дәвам итү\";}}s:3:\"tah\";a:8:{s:8:\"language\";s:3:\"tah\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-03-06 18:39:39\";s:12:\"english_name\";s:8:\"Tahitian\";s:11:\"native_name\";s:10:\"Reo Tahiti\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.7.2/tah.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"ty\";i:2;s:3:\"tah\";i:3;s:3:\"tah\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:0:\"\";}}s:5:\"ug_CN\";a:8:{s:8:\"language\";s:5:\"ug_CN\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-12-05 09:23:39\";s:12:\"english_name\";s:6:\"Uighur\";s:11:\"native_name\";s:9:\"Uyƣurqə\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.7.2/ug_CN.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ug\";i:2;s:3:\"uig\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:26:\"داۋاملاشتۇرۇش\";}}s:2:\"uk\";a:8:{s:8:\"language\";s:2:\"uk\";s:7:\"version\";s:5:\"4.8.1\";s:7:\"updated\";s:19:\"2017-07-28 15:23:55\";s:12:\"english_name\";s:9:\"Ukrainian\";s:11:\"native_name\";s:20:\"Українська\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.8.1/uk.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"uk\";i:2;s:3:\"ukr\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:20:\"Продовжити\";}}s:2:\"ur\";a:8:{s:8:\"language\";s:2:\"ur\";s:7:\"version\";s:5:\"4.8.1\";s:7:\"updated\";s:19:\"2017-07-28 14:27:29\";s:12:\"english_name\";s:4:\"Urdu\";s:11:\"native_name\";s:8:\"اردو\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.8.1/ur.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ur\";i:2;s:3:\"urd\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:19:\"جاری رکھیں\";}}s:5:\"uz_UZ\";a:8:{s:8:\"language\";s:5:\"uz_UZ\";s:7:\"version\";s:5:\"4.7.5\";s:7:\"updated\";s:19:\"2017-05-13 09:55:38\";s:12:\"english_name\";s:5:\"Uzbek\";s:11:\"native_name\";s:11:\"O‘zbekcha\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.7.5/uz_UZ.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"uz\";i:2;s:3:\"uzb\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:11:\"Davom etish\";}}s:2:\"vi\";a:8:{s:8:\"language\";s:2:\"vi\";s:7:\"version\";s:5:\"4.8.1\";s:7:\"updated\";s:19:\"2017-07-25 01:27:21\";s:12:\"english_name\";s:10:\"Vietnamese\";s:11:\"native_name\";s:14:\"Tiếng Việt\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.8.1/vi.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"vi\";i:2;s:3:\"vie\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:12:\"Tiếp tục\";}}s:5:\"zh_CN\";a:8:{s:8:\"language\";s:5:\"zh_CN\";s:7:\"version\";s:5:\"4.8.1\";s:7:\"updated\";s:19:\"2017-08-04 07:53:05\";s:12:\"english_name\";s:15:\"Chinese (China)\";s:11:\"native_name\";s:12:\"简体中文\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.8.1/zh_CN.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"zh\";i:2;s:3:\"zho\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"继续\";}}s:5:\"zh_HK\";a:8:{s:8:\"language\";s:5:\"zh_HK\";s:7:\"version\";s:5:\"4.8.1\";s:7:\"updated\";s:19:\"2017-07-29 12:50:42\";s:12:\"english_name\";s:19:\"Chinese (Hong Kong)\";s:11:\"native_name\";s:16:\"香港中文版	\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.8.1/zh_HK.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"zh\";i:2;s:3:\"zho\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"繼續\";}}s:5:\"zh_TW\";a:8:{s:8:\"language\";s:5:\"zh_TW\";s:7:\"version\";s:5:\"4.8.1\";s:7:\"updated\";s:19:\"2017-08-03 15:43:25\";s:12:\"english_name\";s:16:\"Chinese (Taiwan)\";s:11:\"native_name\";s:12:\"繁體中文\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.8.1/zh_TW.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"zh\";i:2;s:3:\"zho\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"繼續\";}}}','no'),(2564,'_transient_timeout_jetpack_jitm_ab9faa5591e70487cc3003144aa1244','1502103500','no'),(2565,'_transient_jetpack_jitm_ab9faa5591e70487cc3003144aa1244','a:1:{s:18:\"last_response_time\";i:1502103200;}','no'),(2566,'_transient_timeout_jetpack_jitm_2e20be37cf569453ca720e6b9e53505','1502103503','no'),(2567,'_transient_jetpack_jitm_2e20be37cf569453ca720e6b9e53505','a:1:{s:18:\"last_response_time\";i:1502103203;}','no'),(2576,'_transient_timeout_jetpack_jitm_c1c0cd34bc86d981e1067e63282f766','1502103509','no'),(2577,'_transient_jetpack_jitm_c1c0cd34bc86d981e1067e63282f766','a:1:{s:18:\"last_response_time\";i:1502103209;}','no'),(2618,'_transient_timeout_jetpack_jitm_bd9dfcca522c21f25cae112871b8760','1502103925','no'),(2619,'_transient_jetpack_jitm_bd9dfcca522c21f25cae112871b8760','a:1:{s:18:\"last_response_time\";i:1502103625;}','no'),(2636,'_transient_timeout_jetpack_jitm_0764b8026989ee2119c1a84c407e95e','1502104018','no'),(2637,'_transient_jetpack_jitm_0764b8026989ee2119c1a84c407e95e','a:1:{s:18:\"last_response_time\";i:1502103718;}','no'),(2672,'_transient_timeout_jetpack_jitm_4a555351995636038884c9ba8b14bd3','1502104234','no'),(2673,'_transient_jetpack_jitm_4a555351995636038884c9ba8b14bd3','a:1:{s:18:\"last_response_time\";i:1502103934;}','no'),(2708,'_transient_timeout_jetpack_jitm_25c0139a42dc097fb04b423f76c1266','1502104533','no'),(2709,'_transient_jetpack_jitm_25c0139a42dc097fb04b423f76c1266','a:1:{s:18:\"last_response_time\";i:1502104233;}','no'),(2743,'_transient_timeout_jetpack_jitm_295c4d00c570df2349010f97d40d8fe','1502104659','no'),(2744,'_transient_jetpack_jitm_295c4d00c570df2349010f97d40d8fe','a:1:{s:18:\"last_response_time\";i:1502104359;}','no'),(2838,'_transient_timeout_jetpack_jitm_e1d63fbd0d484600fd01667c6efcfb2','1502105129','no'),(2839,'_transient_jetpack_jitm_e1d63fbd0d484600fd01667c6efcfb2','a:1:{s:18:\"last_response_time\";i:1502104829;}','no'),(2845,'_transient_timeout_jetpack_jitm_fb240a2ee0d6573e2abc3513539d7f1','1502105148','no'),(2846,'_transient_jetpack_jitm_fb240a2ee0d6573e2abc3513539d7f1','a:1:{s:18:\"last_response_time\";i:1502104848;}','no'),(2851,'_transient_timeout_wpcom_subscribers_total','1502108449','no'),(2852,'_transient_wpcom_subscribers_total','a:2:{s:6:\"status\";s:7:\"success\";s:5:\"value\";i:0;}','no'),(3219,'_transient_timeout_jetpack_jitm_b6bf75310d6d47df0a855aa88125b33','1502107430','no'),(3220,'_transient_jetpack_jitm_b6bf75310d6d47df0a855aa88125b33','a:1:{s:18:\"last_response_time\";i:1502107130;}','no'),(3221,'_transient_timeout_jetpack_jitm_c990ab2e8b5d7cdd50b325bdbdbd8a0','1502107430','no'),(3222,'_transient_jetpack_jitm_c990ab2e8b5d7cdd50b325bdbdbd8a0','a:1:{s:18:\"last_response_time\";i:1502107130;}','no'),(3287,'_transient_timeout_jetpack_jitm_57bf9d8c70f5aa7efab93e234c90e2f','1502107488','no'),(3288,'_transient_jetpack_jitm_57bf9d8c70f5aa7efab93e234c90e2f','a:2:{i:0;O:8:\"stdClass\":6:{s:7:\"content\";O:8:\"stdClass\":5:{s:7:\"message\";s:25:\"Keep your hard work safe.\";s:6:\"emblem\";N;s:11:\"description\";s:48:\"Back up your content automatically with Jetpack.\";s:7:\"classes\";s:0:\"\";s:4:\"icon\";s:7:\"jetpack\";}s:3:\"CTA\";O:8:\"stdClass\":3:{s:7:\"message\";s:14:\"Enable Backups\";s:4:\"hook\";s:0:\"\";s:7:\"primary\";b:1;}s:8:\"template\";s:7:\"default\";s:3:\"ttl\";i:300;s:2:\"id\";s:14:\"backup-publish\";s:13:\"feature_class\";s:10:\"vaultpress\";}s:18:\"last_response_time\";i:1502107188;}','no'),(3289,'_transient_timeout_jetpack_jitm_d9cc90f23274bd67c722e3e08f6ea5e','1502107488','no'),(3290,'_transient_jetpack_jitm_d9cc90f23274bd67c722e3e08f6ea5e','a:1:{s:18:\"last_response_time\";i:1502107188;}','no'),(3318,'_transient_timeout_jetpack_jitm_4e567691f6417bbc73cc618c82350ba','1502107588','no'),(3319,'_transient_jetpack_jitm_4e567691f6417bbc73cc618c82350ba','a:1:{s:18:\"last_response_time\";i:1502107288;}','no'),(3320,'_transient_timeout_jetpack_jitm_88a74017380c9b9c50ca28ba143442f','1502107593','no'),(3321,'_transient_jetpack_jitm_88a74017380c9b9c50ca28ba143442f','a:1:{s:18:\"last_response_time\";i:1502107293;}','no'),(3324,'_transient_timeout_jetpack_jitm_15fafa4be6b8b48715f47c74cec07a3','1502107609','no'),(3325,'_transient_jetpack_jitm_15fafa4be6b8b48715f47c74cec07a3','a:1:{s:18:\"last_response_time\";i:1502107309;}','no'),(3332,'_transient_timeout_jetpack_jitm_cbd830f01ffadf8a4add0f2e20d05da','1502107726','no'),(3333,'_transient_jetpack_jitm_cbd830f01ffadf8a4add0f2e20d05da','a:1:{s:18:\"last_response_time\";i:1502107426;}','no'),(3382,'_transient_timeout_jetpack_jitm_4d0f7ced84ce6b3daa1543b0bc9e31d','1502108178','no'),(3383,'_transient_jetpack_jitm_4d0f7ced84ce6b3daa1543b0bc9e31d','a:1:{s:18:\"last_response_time\";i:1502107878;}','no'),(3414,'_transient_timeout_jetpack_jitm_bd06584cd1bd610259795358467eddc','1502108615','no'),(3415,'_transient_jetpack_jitm_bd06584cd1bd610259795358467eddc','a:1:{s:18:\"last_response_time\";i:1502108315;}','no'),(3431,'_transient_timeout_jetpack_jitm_721504e102429dfdb115b26ab295016','1502108699','no'),(3432,'_transient_jetpack_jitm_721504e102429dfdb115b26ab295016','a:1:{s:18:\"last_response_time\";i:1502108399;}','no'),(3513,'_transient_timeout_jetpack_jitm_8d08c2208efb790cdfb5ff77028fe9c','1502109138','no'),(3514,'_transient_jetpack_jitm_8d08c2208efb790cdfb5ff77028fe9c','a:1:{s:18:\"last_response_time\";i:1502108838;}','no'),(3515,'_transient_timeout_jetpack_jitm_9da70267cfa500b0189caa052ea3c05','1502109139','no'),(3516,'_transient_jetpack_jitm_9da70267cfa500b0189caa052ea3c05','a:1:{s:18:\"last_response_time\";i:1502108839;}','no'),(3544,'_transient_timeout_jetpack_jitm_761899028599b7cd7aa47a426607340','1502109750','no'),(3545,'_transient_jetpack_jitm_761899028599b7cd7aa47a426607340','a:1:{s:18:\"last_response_time\";i:1502109450;}','no'),(3548,'_transient_timeout_jetpack_jitm_c19d9e3388fc26e608c8b04a65477da','1502109759','no'),(3549,'_transient_jetpack_jitm_c19d9e3388fc26e608c8b04a65477da','a:1:{s:18:\"last_response_time\";i:1502109459;}','no'),(3559,'_transient_timeout_jetpack_jitm_bb85a6725585c5407aee2ec4c3bc020','1502109795','no'),(3560,'_transient_jetpack_jitm_bb85a6725585c5407aee2ec4c3bc020','a:1:{s:18:\"last_response_time\";i:1502109495;}','no'),(3581,'_transient_timeout_jetpack_jitm_9169667153c99c803b111be1ed69e57','1502109901','no'),(3582,'_transient_jetpack_jitm_9169667153c99c803b111be1ed69e57','a:1:{s:18:\"last_response_time\";i:1502109601;}','no'),(3609,'_transient_timeout_jetpack_jitm_346e636239291fa9d9ddec4306c5bd7','1502110176','no'),(3610,'_transient_jetpack_jitm_346e636239291fa9d9ddec4306c5bd7','a:1:{s:18:\"last_response_time\";i:1502109876;}','no'),(3629,'_transient_timeout_jetpack_jitm_fc171a8e2c8e808cda4f82c6840c4bd','1502110249','no'),(3630,'_transient_jetpack_jitm_fc171a8e2c8e808cda4f82c6840c4bd','a:1:{s:18:\"last_response_time\";i:1502109949;}','no'),(3648,'_transient_timeout_jetpack_jitm_885e2b39bf1ac96fa5f76321aa6612c','1502110385','no'),(3649,'_transient_jetpack_jitm_885e2b39bf1ac96fa5f76321aa6612c','a:1:{s:18:\"last_response_time\";i:1502110085;}','no'),(3660,'_transient_timeout_jetpack_jitm_ab382ece17bb2348b7ca1092974ae4d','1502110434','no'),(3661,'_transient_jetpack_jitm_ab382ece17bb2348b7ca1092974ae4d','a:1:{s:18:\"last_response_time\";i:1502110134;}','no'),(3682,'_transient_timeout_jetpack_jitm_509e07245265e1178f123966899712a','1502110615','no'),(3683,'_transient_jetpack_jitm_509e07245265e1178f123966899712a','a:1:{s:18:\"last_response_time\";i:1502110315;}','no'),(3697,'_transient_timeout_jetpack_jitm_94ad0163df40d4c18642bccf20424da','1502110703','no'),(3698,'_transient_jetpack_jitm_94ad0163df40d4c18642bccf20424da','a:1:{s:18:\"last_response_time\";i:1502110403;}','no'),(3719,'_transient_timeout_jetpack_jitm_9e8a38fee6ba4816864c71e764b100e','1502110848','no'),(3720,'_transient_jetpack_jitm_9e8a38fee6ba4816864c71e764b100e','a:1:{s:18:\"last_response_time\";i:1502110548;}','no'),(3877,'_site_transient_timeout_community-events-cf37dab392604b21aa81793c5f856999','1502250787','no'),(3878,'_site_transient_community-events-cf37dab392604b21aa81793c5f856999','a:2:{s:8:\"location\";a:1:{s:2:\"ip\";s:12:\"183.248.66.0\";}s:6:\"events\";a:0:{}}','no'),(3904,'_transient_timeout_jetpack_jitm_3bbc1ad8c26c19d7996bdaf473e7892','1502207926','no'),(3905,'_transient_jetpack_jitm_3bbc1ad8c26c19d7996bdaf473e7892','a:1:{s:18:\"last_response_time\";i:1502207626;}','no'),(3910,'_transient_timeout_jetpack_jitm_4d8ac3ac6b314c9c294df29c3fed1df','1502207932','no'),(3911,'_transient_jetpack_jitm_4d8ac3ac6b314c9c294df29c3fed1df','a:1:{s:18:\"last_response_time\";i:1502207632;}','no'),(3912,'_transient_timeout_jetpack_jitm_a10efb8b8819993d6e79f675a784265','1502207934','no'),(3913,'_transient_jetpack_jitm_a10efb8b8819993d6e79f675a784265','a:1:{s:18:\"last_response_time\";i:1502207634;}','no'),(4062,'_transient_timeout_jetpack_jitm_0d638de5b6ecd02db09f6748221fb91','1502212849','no'),(4063,'_transient_jetpack_jitm_0d638de5b6ecd02db09f6748221fb91','a:1:{s:18:\"last_response_time\";i:1502212549;}','no'),(4064,'_transient_timeout_jetpack_jitm_7314272f498b00666b8c1cca9b8d138','1502212849','no'),(4065,'_transient_jetpack_jitm_7314272f498b00666b8c1cca9b8d138','a:1:{s:18:\"last_response_time\";i:1502212549;}','no'),(4106,'_transient_timeout_jetpack_jitm_6a8899129ac5fcf51e4d9a14c03c8fc','1502212912','no'),(4107,'_transient_jetpack_jitm_6a8899129ac5fcf51e4d9a14c03c8fc','a:2:{i:0;O:8:\"stdClass\":6:{s:7:\"content\";O:8:\"stdClass\":5:{s:7:\"message\";s:25:\"Keep your hard work safe.\";s:6:\"emblem\";N;s:11:\"description\";s:48:\"Back up your content automatically with Jetpack.\";s:7:\"classes\";s:0:\"\";s:4:\"icon\";s:7:\"jetpack\";}s:3:\"CTA\";O:8:\"stdClass\":3:{s:7:\"message\";s:14:\"Enable Backups\";s:4:\"hook\";s:0:\"\";s:7:\"primary\";b:1;}s:8:\"template\";s:7:\"default\";s:3:\"ttl\";i:300;s:2:\"id\";s:14:\"backup-publish\";s:13:\"feature_class\";s:10:\"vaultpress\";}s:18:\"last_response_time\";i:1502212612;}','no'),(4108,'_transient_timeout_jetpack_jitm_86e00daf815124f1b29868a036e91ce','1502212912','no'),(4109,'_transient_jetpack_jitm_86e00daf815124f1b29868a036e91ce','a:1:{s:18:\"last_response_time\";i:1502212612;}','no'),(4142,'_transient_timeout_jetpack_jitm_e6fc740d908cb1551f358ed1c05fe3f','1502213070','no'),(4144,'_transient_jetpack_jitm_e6fc740d908cb1551f358ed1c05fe3f','a:1:{s:18:\"last_response_time\";i:1502212770;}','no'),(4146,'_transient_timeout_jetpack_jitm_6cc5ffb7ad0895696b3726cbf616f29','1502213071','no'),(4147,'_transient_jetpack_jitm_6cc5ffb7ad0895696b3726cbf616f29','a:1:{s:18:\"last_response_time\";i:1502212771;}','no'),(5935,'_site_transient_timeout_browser_5a44afb513ff98a874122cd432a844f1','1504083806','no'),(5936,'_site_transient_browser_5a44afb513ff98a874122cd432a844f1','a:9:{s:8:\"platform\";s:7:\"Windows\";s:4:\"name\";s:7:\"Firefox\";s:7:\"version\";s:4:\"54.0\";s:10:\"update_url\";s:23:\"http://www.firefox.com/\";s:7:\"img_src\";s:50:\"http://s.wordpress.org/images/browsers/firefox.png\";s:11:\"img_src_ssl\";s:49:\"https://wordpress.org/images/browsers/firefox.png\";s:15:\"current_version\";s:2:\"16\";s:7:\"upgrade\";b:0;s:8:\"insecure\";b:0;}','no'),(6188,'_transient_timeout_jetpack_jitm_be5bcf208a8c20dad8a2b5836c03c9b','1503481088','no'),(6189,'_transient_jetpack_jitm_be5bcf208a8c20dad8a2b5836c03c9b','a:2:{i:0;O:8:\"stdClass\":6:{s:7:\"content\";O:8:\"stdClass\":5:{s:7:\"message\";s:25:\"Keep your hard work safe.\";s:6:\"emblem\";N;s:11:\"description\";s:48:\"Back up your content automatically with Jetpack.\";s:7:\"classes\";s:0:\"\";s:4:\"icon\";s:7:\"jetpack\";}s:3:\"CTA\";O:8:\"stdClass\":3:{s:7:\"message\";s:14:\"Enable Backups\";s:4:\"hook\";s:0:\"\";s:7:\"primary\";b:1;}s:8:\"template\";s:7:\"default\";s:3:\"ttl\";i:300;s:2:\"id\";s:14:\"backup-publish\";s:13:\"feature_class\";s:10:\"vaultpress\";}s:18:\"last_response_time\";i:1503480788;}','no'),(6191,'_transient_timeout_jetpack_jitm_e370d20d8343653d42dabb9f00b8c1b','1503481089','no'),(6192,'_transient_jetpack_jitm_e370d20d8343653d42dabb9f00b8c1b','a:1:{s:18:\"last_response_time\";i:1503480789;}','no'),(7741,'_transient_timeout_jetpack_jitm_3b92509acd3e12c9731053083d5bc5a','1504526992','no'),(7742,'_transient_jetpack_jitm_3b92509acd3e12c9731053083d5bc5a','a:1:{s:18:\"last_response_time\";i:1504526692;}','no'),(7743,'_transient_timeout_jetpack_jitm_4d3e25b73533ab5a0f3a019c0b5e344','1504526992','no'),(7744,'_transient_jetpack_jitm_4d3e25b73533ab5a0f3a019c0b5e344','a:1:{s:18:\"last_response_time\";i:1504526692;}','no'),(7878,'_transient_timeout_jetpack_jitm_70aae5066d144743134d7fd50364976','1504527107','no'),(7879,'_transient_jetpack_jitm_70aae5066d144743134d7fd50364976','a:1:{s:18:\"last_response_time\";i:1504526807;}','no'),(7880,'_transient_timeout_jetpack_jitm_b734d0f06af01b53ac0b3c8347f1300','1504527107','no'),(7881,'_transient_jetpack_jitm_b734d0f06af01b53ac0b3c8347f1300','a:2:{i:0;O:8:\"stdClass\":6:{s:7:\"content\";O:8:\"stdClass\":5:{s:7:\"message\";s:25:\"Keep your hard work safe.\";s:6:\"emblem\";N;s:11:\"description\";s:48:\"Back up your content automatically with Jetpack.\";s:7:\"classes\";s:0:\"\";s:4:\"icon\";s:7:\"jetpack\";}s:3:\"CTA\";O:8:\"stdClass\":3:{s:7:\"message\";s:14:\"Enable Backups\";s:4:\"hook\";s:0:\"\";s:7:\"primary\";b:1;}s:8:\"template\";s:7:\"default\";s:3:\"ttl\";i:300;s:2:\"id\";s:14:\"backup-publish\";s:13:\"feature_class\";s:10:\"vaultpress\";}s:18:\"last_response_time\";i:1504526807;}','no'),(15008,'_transient_timeout_jetpack_jitm_38d70488be0a1e931ef233f025660b6','1508507348','no'),(15009,'_transient_jetpack_jitm_38d70488be0a1e931ef233f025660b6','a:2:{i:0;O:8:\"stdClass\":6:{s:7:\"content\";O:8:\"stdClass\":5:{s:7:\"message\";s:25:\"Keep your hard work safe.\";s:6:\"emblem\";N;s:11:\"description\";s:48:\"Back up your content automatically with Jetpack.\";s:7:\"classes\";s:0:\"\";s:4:\"icon\";s:7:\"jetpack\";}s:3:\"CTA\";O:8:\"stdClass\":3:{s:7:\"message\";s:14:\"Enable Backups\";s:4:\"hook\";s:0:\"\";s:7:\"primary\";b:1;}s:8:\"template\";s:7:\"default\";s:3:\"ttl\";i:300;s:2:\"id\";s:14:\"backup-publish\";s:13:\"feature_class\";s:10:\"vaultpress\";}s:18:\"last_response_time\";i:1508507048;}','no'),(15010,'_transient_timeout_jetpack_jitm_496a96bedc8f0ab0ec7552730379b8e','1508507348','no'),(15011,'_transient_jetpack_jitm_496a96bedc8f0ab0ec7552730379b8e','a:1:{s:18:\"last_response_time\";i:1508507048;}','no'),(15377,'_site_transient_timeout_community-events-2786676ed1e2574528f3a4ad3597f57d','1508701755','no'),(15378,'_site_transient_community-events-2786676ed1e2574528f3a4ad3597f57d','a:2:{s:8:\"location\";a:1:{s:2:\"ip\";s:13:\"122.225.220.0\";}s:6:\"events\";a:0:{}}','no'),(15677,'_transient_timeout_jetpack_jitm_721c5accc6db81ebdb2101b3c414286','1508661016','no'),(15678,'_transient_jetpack_jitm_721c5accc6db81ebdb2101b3c414286','a:2:{i:0;O:8:\"stdClass\":6:{s:7:\"content\";O:8:\"stdClass\":5:{s:7:\"message\";s:25:\"Keep your hard work safe.\";s:6:\"emblem\";N;s:11:\"description\";s:48:\"Back up your content automatically with Jetpack.\";s:7:\"classes\";s:0:\"\";s:4:\"icon\";s:7:\"jetpack\";}s:3:\"CTA\";O:8:\"stdClass\":3:{s:7:\"message\";s:14:\"Enable Backups\";s:4:\"hook\";s:0:\"\";s:7:\"primary\";b:1;}s:8:\"template\";s:7:\"default\";s:3:\"ttl\";i:300;s:2:\"id\";s:14:\"backup-publish\";s:13:\"feature_class\";s:10:\"vaultpress\";}s:18:\"last_response_time\";i:1508660716;}','no'),(15679,'_transient_timeout_jetpack_jitm_0375c8824371ee76baf28d2c0a61972','1508661016','no'),(15680,'_transient_jetpack_jitm_0375c8824371ee76baf28d2c0a61972','a:1:{s:18:\"last_response_time\";i:1508660716;}','no'),(15699,'_transient_timeout_jetpack_connected_user_data_1','1508747218','no'),(15700,'_transient_jetpack_connected_user_data_1','a:7:{s:2:\"ID\";i:125778999;s:5:\"login\";s:10:\"allisterke\";s:5:\"email\";s:20:\"allisterke@gmail.com\";s:12:\"display_name\";s:10:\"allisterke\";s:14:\"text_direction\";s:3:\"ltr\";s:10:\"site_count\";i:1;s:15:\"jetpack_connect\";s:0:\"\";}','no'),(20517,'_transient_timeout_jetpack_is_single_user','1511186995','no'),(20518,'_transient_jetpack_is_single_user','1','no'),(20527,'_site_transient_timeout_browser_2b4bfa48262a79b6d8fe0f2344cb5695','1511748608','no'),(20528,'_site_transient_browser_2b4bfa48262a79b6d8fe0f2344cb5695','a:10:{s:4:\"name\";s:7:\"Firefox\";s:7:\"version\";s:4:\"56.0\";s:8:\"platform\";s:7:\"Windows\";s:10:\"update_url\";s:24:\"https://www.firefox.com/\";s:7:\"img_src\";s:44:\"http://s.w.org/images/browsers/firefox.png?1\";s:11:\"img_src_ssl\";s:45:\"https://s.w.org/images/browsers/firefox.png?1\";s:15:\"current_version\";s:2:\"56\";s:7:\"upgrade\";b:0;s:8:\"insecure\";b:0;s:6:\"mobile\";b:0;}','no'),(20531,'_transient_timeout_jetpack_jitm_d40c6ea1d6f819b3f5ebb011f7b0447','1511144115','no'),(20532,'_transient_jetpack_jitm_d40c6ea1d6f819b3f5ebb011f7b0447','a:1:{s:18:\"last_response_time\";i:1511143815;}','no'),(20533,'_site_transient_timeout_community-events-8f031abacca5ade2b0a2d75b0ac7314f','1511187015','no'),(20534,'_site_transient_community-events-8f031abacca5ade2b0a2d75b0ac7314f','a:2:{s:8:\"location\";a:1:{s:2:\"ip\";s:13:\"183.157.160.0\";}s:6:\"events\";a:1:{i:0;a:7:{s:4:\"type\";s:8:\"wordcamp\";s:5:\"title\";s:11:\"WordCamp US\";s:3:\"url\";s:29:\"https://2017.us.wordcamp.org/\";s:6:\"meetup\";s:0:\"\";s:10:\"meetup_url\";s:0:\"\";s:4:\"date\";s:19:\"2017-12-01 00:00:00\";s:8:\"location\";a:4:{s:8:\"location\";s:18:\"Nashville, TN, USA\";s:7:\"country\";s:2:\"US\";s:8:\"latitude\";d:36.156608499999997;s:9:\"longitude\";d:-86.778490899999994;}}}}','no'),(20535,'_transient_timeout_feed_7d1d7866a17d17cf5f79e1f075b87a31','1511187018','no'),(20536,'_transient_feed_7d1d7866a17d17cf5f79e1f075b87a31','a:4:{s:5:\"child\";a:1:{s:0:\"\";a:1:{s:3:\"rss\";a:1:{i:0;a:6:{s:4:\"data\";s:3:\"\n\n\n\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:7:\"version\";s:3:\"2.0\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:1:{s:0:\"\";a:1:{s:7:\"channel\";a:1:{i:0;a:6:{s:4:\"data\";s:49:\"\n	\n	\n	\n	\n	\n	\n	\n	\n	\n	\n		\n		\n		\n		\n		\n		\n		\n		\n		\n	\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:3:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:18:\"China 简体中文\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:24:\"https://cn.wordpress.org\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:41:\"官方 WordPress China 简体中文站点\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:13:\"lastBuildDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 16 Nov 2017 02:15:15 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"language\";a:1:{i:0;a:5:{s:4:\"data\";s:5:\"zh-CN\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:9:\"generator\";a:1:{i:0;a:5:{s:4:\"data\";s:40:\"https://wordpress.org/?v=5.0-alpha-42203\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"item\";a:10:{i:0;a:6:{s:4:\"data\";s:42:\"\n		\n		\n		\n		\n		\n				\n\n		\n		\n				\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:25:\"WordPress 4.9“Tipton”\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:43:\"https://cn.wordpress.org/2017/11/16/tipton/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:51:\"https://cn.wordpress.org/2017/11/16/tipton/#respond\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 16 Nov 2017 01:33:44 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:32:\"https://cn.wordpress.org/?p=1075\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:49:\"WordPress 4.9简体中文版现已开放下载。\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Jimmy Xu\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:42234:\"<div style=\"width: 692px\" class=\"storycontent\">\n<h2 style=\"text-align: center\">大规模的定制器改善、代码错误检查和更多！<img src=\"https://s.w.org/images/core/emoji/2.3/72x72/1f389.png\" alt=\"?\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" /></h2>\n<figure class=\"wp-block-image\"><img src=\"https://i1.wp.com/wordpress.org/news/files/2017/11/banner.png?fit=2400%2C1200&amp;ssl=1\" alt=\"\" /></figure>\n<p>WordPress 4.9简体中文版现已<a href=\"https://cn.wordpress.org/releases/\">开放下载</a>，或在您的WordPress仪表盘中升级。我们将此版本命名为“Tipton”，以纪念爵士音乐家和乐队领唱比利·蒂普顿。WordPress 4.9的新功能能让您的设计工作流更顺滑，防止您的代码出现错误。</p>\n<p>包括了设计草稿、锁、计划和预览链接等新功能，全新的定制器工作流为内容创作者提升了协作体验。此外，代码语法高亮和错误检查能让您的站点建设体验更整洁平滑。我们还为您带来了全新画廊小工具并改善了主题浏览和切换的体验。</p>\n<hr class=\"wp-block-separator\" />\n<h2 style=\"text-align: center\">改良的定制器工作流</h2>\n<figure class=\"wp-block-image\"><img src=\"https://i0.wp.com/wordpress.org/news/files/2017/11/customizer-workflow-improved-small.png?w=632&amp;ssl=1\" alt=\"\" width=\"632\" height=\"316\" /></figure>\n<h3>起草并计划发布站点设计修改</h3>\n<p>就像您可以在撰写文章时打草稿并在您希望的日期和时间发布一样，您也可以对站点设计做同样的事。现在可以随您所好地调整并计划设计更新。</p>\n<h3>通过设计共享链接协作</h3>\n<p>想要为您提议的站点设计修改取得反馈？WordPress 4.9向您提供了能发送给您的团队或客户的预览链接，让您能够取得并整合来自他人的反馈，并在计划的日期公开您的修改。我们能说协作++吗？</p>\n<h3>设计锁来保护您的修改</h3>\n<p>遇到过两名设计师同时修改一个项目，设计师A覆盖了设计师B的优美修改的事情吗？WordPress 4.9的设计锁功能与文章锁相似，在您进行设计修改时保护您，防止他人修改或抹除您的工作成果。</p>\n<h3>保护您的工作的提示</h3>\n<p>您在保存您的全新设计草稿前就离开了？别怕，当您回来时，WordPress 4.9会礼貌地问您是否想要保存这些未保存的修改。</p>\n<hr class=\"wp-block-separator\" />\n<h2 style=\"text-align: center\">代码增强</h2>\n<figure class=\"wp-block-image\"><img src=\"https://i2.wp.com/wordpress.org/news/files/2017/11/coding-enhancements-small.png?w=632&amp;ssl=1\" alt=\"\" width=\"632\" height=\"316\" /></figure>\n<h3>语法高亮和错误检查？正如所愿！</h3>\n<p>您遇到了一个显示问题，但不能确定您所写的CSS到底出了什么问题。在CSS编辑和WordPress 4.8.1中引入的自定义HTML小工具有了语法高亮和错误检查后，您将能够快速找出代码错误。我们保证这项功能可以帮助您更轻松地扫描代码，并快速修复代码错误。</p>\n<h3>沙盒为了安全</h3>\n<p>可怕的白色屏幕。现在WordPress 4.9在您要保存的主题或插件代码有错误时会提出警告，让您能够避免损坏整个站点，也让您晚上睡得更安心。</p>\n<h3>警告：前方危险！</h3>\n<p>当您直接编辑主题和插件时，WordPress 4.9会礼貌地警告您这是一种很危险的做法，同时会建议您在保存前备份您的文件，这样您的修改就不会在下次更新时遭到覆盖。请走安全路线：未来的您会感谢您，您的团队和客户也会感谢您。</p>\n<hr class=\"wp-block-separator\" />\n<h2 style=\"text-align: center\">更多的小工具更新</h2>\n<figure class=\"wp-block-image\"><img src=\"https://i1.wp.com/wordpress.org/news/files/2017/11/even-more-widget-updates-small.png?w=632&amp;ssl=1\" alt=\"\" width=\"632\" height=\"316\" /></figure>\n<h3>全新画廊小工具</h3>\n<p>从WordPress 4.8的媒体变更延伸而来的渐进式改进，现在您可以通过小工具添加一个画廊了！</p>\n<h3>按下按钮，加入媒体</h3>\n<p>想要向您的文字小工具加入媒体？通过我们简单而有用的”添加媒体“按钮，在小工具中向您的文字旁边嵌入图像、视频和音频。喔！</p>\n<hr class=\"wp-block-separator\" />\n<h2 style=\"text-align: center\">站点建设改进</h2>\n<figure class=\"wp-block-image\"><img src=\"https://i1.wp.com/wordpress.org/news/files/2017/11/site-building-improvements-small.png?w=632&amp;ssl=1\" alt=\"\" width=\"632\" height=\"316\" /></figure>\n<h3>更可靠的主题切换</h3>\n<p>在您切换主题时，有的时候小工具会自行移动位置。WordPress 4.9的改进在您更换主题时向您带来更可靠的菜单和挂件位置。此外，您可以预览已安装的主题，或正确地下载、安装并预览新主题。在部署之前，没有什么能够像预览一样方便的。</p>\n<h3>寻找并预览完美主题</h3>\n<p>要为您的站点找一个新主题？现在，您可以在定制器中搜索、浏览并预览超过2600个主题，并可以直接应用到您的站点。此外，您也可以通过过滤主题、功能和布局来加速您的搜索。</p>\n<h3>更好的菜单说明 = 更少的迷惑</h3>\n<p>您被创建新菜单的步骤搞糊涂了吗？现在不会了！我们向您带来了更顺滑的菜单创建用户体验。新的说明文字会指导您。</p>\n<hr class=\"wp-block-separator\" />\n<h2 style=\"text-align: center\">帮一帮Gutenberg <img src=\"https://s.w.org/images/core/emoji/2.3/72x72/1f91d.png\" alt=\"?\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" /></h2>\n<figure class=\"wp-block-image\"><img src=\"https://i2.wp.com/wordpress.org/news/files/2017/11/gutenberg-1.png?w=632&amp;ssl=1\" alt=\"\" width=\"632\" height=\"316\" /></figure>\n<p>WordPress正致力于一种新的创建并控制您的内容的方式，我们需要您的帮助。想要成为<a href=\"https://wordpress.org/plugins/gutenberg/\">早期测试者</a>或投身于Gutenberg项目？<a href=\"https://github.com/WordPress/gutenberg\">在GitHub贡献</a>。</p>\n<p>（PS：这篇文章就是用Gutenberg写的！）</p>\n<hr class=\"wp-block-separator\" />\n<h2 style=\"text-align: center\">开发者的小确幸<img src=\"https://s.w.org/images/core/emoji/2.3/72x72/1f60a.png\" alt=\"?\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" /></h2>\n<h3><a href=\"https://make.wordpress.org/core/2017/11/01/improvements-to-the-customize-js-api-in-4-9/\">定制器JS API改进</a></h3>\n<p>我们在WordPress 4.9中对定制器JS API进行了数项改进，消除了许多痛点，让它和PHP API一样易用。现在也有了新的基本控制模板、日期/时间控件和小节/页面/全局通知。<a href=\"https://make.wordpress.org/core/2017/11/01/improvements-to-the-customize-js-api-in-4-9/\">查看完整列表。</a></p>\n<h3><a href=\"https://make.wordpress.org/core/2017/10/22/code-editing-improvements-in-wordpress-4-9/\">CodeMirror现已在您的主题和插件中可用</a></h3>\n<p>我们向您介绍在核心中使用的全新的代码编辑库，CodeMirror。请用它来改进您插件中编辑代码的体验，如CSS或JavaScript编辑框。</p>\n<h3><a href=\"https://make.wordpress.org/core/2017/10/30/mediaelement-upgrades-in-wordpress-4-9/\">MediaElement.js升级到4.2.6</a></h3>\n<p>WordPress包含了升级版的MediaElement.js，其中移除了对jQuery的依赖、增强了无障碍访问、有了现代化的界面并修正了许多问题。</p>\n<h3><a href=\"https://make.wordpress.org/core/2017/10/15/improvements-for-roles-and-capabilities-in-4-9/\">角色和能力的改进</a></h3>\n<p>新的能力让您能够更细致地管理插件和翻译文件。此外，多站点中的站点切换过程已被调整，让对可用的角色和能力的更新过程更可靠和连贯。</p>\n<hr class=\"wp-block-separator\" />\n<h2>开发团队</h2>\n<p>此次发布由<a href=\"https://choycedesign.com/\">Mel Choyce</a>和<a href=\"https://weston.ruter.net/\">Weston Ruter</a>领头，并得到了以下个人的帮助。这次发布包含了443人的贡献，其中185人更是第一次贡献。在您喜欢的音乐服务中听听比利·蒂普顿，并看看下面这些个人资料吧：</p>\n<p><a href=\"https://profiles.wordpress.org/aaroncampbell\">Aaron D. Campbell</a>、<a href=\"https://profiles.wordpress.org/jorbin\">Aaron Jorbin</a>、<a href=\"https://profiles.wordpress.org/abrightclearweb\">abrightclearweb</a>、<a href=\"https://profiles.wordpress.org/ibachal\">Achal Jain</a>、<a href=\"https://profiles.wordpress.org/achbed\">achbed</a>、<a href=\"https://profiles.wordpress.org/acmethemes\">Acme Themes</a>、<a href=\"https://profiles.wordpress.org/adamsilverstein\">Adam Silverstein</a>、<a href=\"https://profiles.wordpress.org/adammacias\">adammacias</a>、<a href=\"https://profiles.wordpress.org/mrahmadawais\">Ahmad Awais</a>、<a href=\"https://profiles.wordpress.org/ahmadawais\">ahmadawais</a>、<a href=\"https://profiles.wordpress.org/airesvsg\">airesvsg</a>、<a href=\"https://profiles.wordpress.org/ajoah\">ajoah</a>、<a href=\"https://profiles.wordpress.org/akibjorklund\">Aki Björklund</a>、<a href=\"https://profiles.wordpress.org/akshayvinchurkar\">akshayvinchurkar</a>、<a href=\"https://profiles.wordpress.org/schlessera\">Alain Schlesser</a>、<a href=\"https://profiles.wordpress.org/xknown\">Alex Concha</a>、<a href=\"https://profiles.wordpress.org/xavortm\">Alex Dimitrov</a>、<a href=\"https://profiles.wordpress.org/ironpaperweight\">Alex Hon</a>、<a href=\"https://profiles.wordpress.org/alex27\">alex27</a>、<a href=\"https://profiles.wordpress.org/allancole\">allancole</a>、<a href=\"https://profiles.wordpress.org/arush\">Amanda Rush</a>、<a href=\"https://profiles.wordpress.org/afercia\">Andrea Fercia</a>、<a href=\"https://profiles.wordpress.org/andrewp-2\">Andreas Panag</a>、<a href=\"https://profiles.wordpress.org/nacin\">Andrew Nacin</a>、<a href=\"https://profiles.wordpress.org/azaozz\">Andrew Ozz</a>、<a href=\"https://profiles.wordpress.org/rarst\">Andrey &#8220;Rarst&#8221; Savchenko</a>、<a href=\"https://profiles.wordpress.org/andizer\">Andy Meerwaldt</a>、<a href=\"https://profiles.wordpress.org/kelderic\">Andy Mercer</a>、<a href=\"https://profiles.wordpress.org/andy\">Andy Skelton</a>、<a href=\"https://profiles.wordpress.org/aniketpant\">Aniket Pant</a>、<a href=\"https://profiles.wordpress.org/anilbasnet\">Anil Basnet</a>、<a href=\"https://profiles.wordpress.org/ankit-k-gupta\">Ankit K Gupta</a>、<a href=\"https://profiles.wordpress.org/ahortin\">Anthony Hortin</a>、<a href=\"https://profiles.wordpress.org/antisilent\">antisilent</a>、<a href=\"https://profiles.wordpress.org/atimmer\">Anton Timmermans</a>、<a href=\"https://profiles.wordpress.org/apokalyptik\">apokalyptik</a>、<a href=\"https://profiles.wordpress.org/artoliukkonen\">artoliukkonen</a>、<a href=\"https://profiles.wordpress.org/ideag\">Arunas Liuiza</a>、<a href=\"https://profiles.wordpress.org/attitude\">attitude</a>、<a href=\"https://profiles.wordpress.org/backermann\">backermann1978</a>、<a href=\"https://profiles.wordpress.org/b-07\">Bappi</a>、<a href=\"https://profiles.wordpress.org/bcole808\">Ben Cole</a>、<a href=\"https://profiles.wordpress.org/quasel\">Bernhard Gronau</a>、<a href=\"https://profiles.wordpress.org/kau-boy\">Bernhard Kau</a>、<a href=\"https://profiles.wordpress.org/binarymoon\">binarymoon</a>、<a href=\"https://profiles.wordpress.org/birgire\">Birgir Erlendsson (birgire)</a>、<a href=\"https://profiles.wordpress.org/bjornw\">BjornW</a>、<a href=\"https://profiles.wordpress.org/bobbingwide\">bobbingwide</a>、<a href=\"https://profiles.wordpress.org/boblinthorst\">boblinthorst</a>、<a href=\"https://profiles.wordpress.org/boboudreau\">boboudreau</a>、<a href=\"https://profiles.wordpress.org/gitlost\">bonger</a>、<a href=\"https://profiles.wordpress.org/boonebgorges\">Boone B. Gorges</a>、<a href=\"https://profiles.wordpress.org/bradyvercher\">Brady Vercher</a>、<a href=\"https://profiles.wordpress.org/brainstormforce\">Brainstorm Force</a>、<a href=\"https://profiles.wordpress.org/kraftbj\">Brandon Kraft</a>、<a href=\"https://profiles.wordpress.org/brianhogg\">Brian Hogg</a>、<a href=\"https://profiles.wordpress.org/krogsgard\">Brian Krogsgard</a>、<a href=\"https://profiles.wordpress.org/bronsonquick\">Bronson Quick</a>、<a href=\"https://profiles.wordpress.org/sixhours\">Caroline Moore</a>、<a href=\"https://profiles.wordpress.org/caseypatrickdriscoll\">Casey Driscoll</a>、<a href=\"https://profiles.wordpress.org/caspie\">Caspie</a>、<a href=\"https://profiles.wordpress.org/chandrapatel\">Chandra Patel</a>、<a href=\"https://profiles.wordpress.org/chaos-engine\">Chaos Engine</a>、<a href=\"https://profiles.wordpress.org/cheeserolls\">cheeserolls</a>、<a href=\"https://profiles.wordpress.org/chesio\">chesio</a>、<a href=\"https://profiles.wordpress.org/ketuchetan\">chetansatasiya</a>、<a href=\"https://profiles.wordpress.org/choongsavvii\">choong</a>、<a href=\"https://profiles.wordpress.org/chouby\">Chouby</a>、<a href=\"https://profiles.wordpress.org/chredd\">chredd</a>、<a href=\"https://profiles.wordpress.org/chrisjean\">Chris Jean</a>、<a href=\"https://profiles.wordpress.org/cmmarslender\">Chris Marslender</a>、<a href=\"https://profiles.wordpress.org/chris_d2d\">Chris Smith</a>、<a href=\"https://profiles.wordpress.org/chrisvanpatten\">Chris Van Patten</a>、<a href=\"https://profiles.wordpress.org/chriswiegman\">Chris Wiegman</a>、<a href=\"https://profiles.wordpress.org/chriscct7\">chriscct7</a>、<a href=\"https://profiles.wordpress.org/chriseverson\">chriseverson</a>、<a href=\"https://profiles.wordpress.org/christian1012\">Christian Chung</a>、<a href=\"https://profiles.wordpress.org/cwpnolen\">Christian Nolen</a>、<a href=\"https://profiles.wordpress.org/needle\">Christian Wach</a>、<a href=\"https://profiles.wordpress.org/christophherr\">Christoph Herr</a>、<a href=\"https://profiles.wordpress.org/clarionwpdeveloper\">Clarion Technologies</a>、<a href=\"https://profiles.wordpress.org/claudiosmweb\">Claudio Sanches</a>、<a href=\"https://profiles.wordpress.org/claudiosanches\">Claudio Sanches</a>、<a href=\"https://profiles.wordpress.org/claudiolabarbera\">ClaudioLaBarbera</a>、<a href=\"https://profiles.wordpress.org/codemovementpk\">codemovement.pk</a>、<a href=\"https://profiles.wordpress.org/coderkevin\">coderkevin</a>、<a href=\"https://profiles.wordpress.org/codfish\">codfish</a>、<a href=\"https://profiles.wordpress.org/coreymcollins\">coreymcollins</a>、<a href=\"https://profiles.wordpress.org/curdin\">Curdin Krummenacher</a>、<a href=\"https://profiles.wordpress.org/cgrymala\">Curtiss Grymala</a>、<a href=\"https://profiles.wordpress.org/cdog\">Cătălin Dogaru</a>、<a href=\"https://profiles.wordpress.org/danhgilmore\">danhgilmore</a>、<a href=\"https://profiles.wordpress.org/danielbachhuber\">Daniel Bachhuber </a>、<a href=\"https://profiles.wordpress.org/danielkanchev\">Daniel Kanchev</a>、<a href=\"https://profiles.wordpress.org/danielpietrasik\">Daniel Pietrasik</a>、<a href=\"https://profiles.wordpress.org/mte90\">Daniele Scasciafratte</a>、<a href=\"https://profiles.wordpress.org/dllh\">Daryl L. L. Houston (dllh)</a>、<a href=\"https://profiles.wordpress.org/davepullig\">Dave Pullig</a>、<a href=\"https://profiles.wordpress.org/goto10\">Dave Romsey (goto10)</a>、<a href=\"https://profiles.wordpress.org/davidakennedy\">David A. Kennedy</a>、<a href=\"https://profiles.wordpress.org/turtlepod\">David Chandra Purnama</a>、<a href=\"https://profiles.wordpress.org/dlh\">David Herrera</a>、<a href=\"https://profiles.wordpress.org/dglingren\">David Lingren</a>、<a href=\"https://profiles.wordpress.org/davidmosterd\">David Mosterd</a>、<a href=\"https://profiles.wordpress.org/dshanske\">David Shanske</a>、<a href=\"https://profiles.wordpress.org/davidbhayes\">davidbhayes</a>、<a href=\"https://profiles.wordpress.org/folletto\">Davide &#8216;Folletto&#8217; Casali</a>、<a href=\"https://profiles.wordpress.org/deeptiboddapati\">deeptiboddapati</a>、<a href=\"https://profiles.wordpress.org/delphinus\">delphinus</a>、<a href=\"https://profiles.wordpress.org/deltafactory\">deltafactory</a>、<a href=\"https://profiles.wordpress.org/denis-de-bernardy\">Denis de Bernardy</a>、<a href=\"https://profiles.wordpress.org/valendesigns\">Derek Herman</a>、<a href=\"https://profiles.wordpress.org/pcfreak30\">Derrick Hammer</a>、<a href=\"https://profiles.wordpress.org/derrickkoo\">Derrick Koo</a>、<a href=\"https://profiles.wordpress.org/dimchik\">dimchik</a>、<a href=\"https://profiles.wordpress.org/dineshc\">Dinesh Chouhan</a>、<a href=\"https://profiles.wordpress.org/dd32\">Dion Hulse</a>、<a href=\"https://profiles.wordpress.org/dipeshkakadiya\">dipeshkakadiya</a>、<a href=\"https://profiles.wordpress.org/dmsnell\">dmsnell</a>、<a href=\"https://profiles.wordpress.org/ocean90\">Dominik Schilling</a>、<a href=\"https://profiles.wordpress.org/dotancohen\">Dotan Cohen</a>、<a href=\"https://profiles.wordpress.org/dougwollison\">Doug Wollison</a>、<a href=\"https://profiles.wordpress.org/doughamlin\">doughamlin</a>、<a href=\"https://profiles.wordpress.org/dreamon11\">DreamOn11</a>、<a href=\"https://profiles.wordpress.org/drewapicture\">Drew Jaynes</a>、<a href=\"https://profiles.wordpress.org/duncanjbrown\">duncanjbrown</a>、<a href=\"https://profiles.wordpress.org/dungengronovius\">dungengronovius</a>、<a href=\"https://profiles.wordpress.org/dylanauty\">DylanAuty</a>、<a href=\"https://profiles.wordpress.org/hurtige\">Eddie Hurtig</a>、<a href=\"https://profiles.wordpress.org/oso96_2000\">Eduardo Reveles</a>、<a href=\"https://profiles.wordpress.org/chopinbach\">Edwin Cromley</a>、<a href=\"https://profiles.wordpress.org/electricfeet\">ElectricFeet</a>、<a href=\"https://profiles.wordpress.org/eliorivero\">Elio Rivero</a>、<a href=\"https://profiles.wordpress.org/iseulde\">Ella Iseulde Van Dorpe</a>、<a href=\"https://profiles.wordpress.org/elyobo\">elyobo</a>、<a href=\"https://profiles.wordpress.org/enodekciw\">enodekciw</a>、<a href=\"https://profiles.wordpress.org/enshrined\">enshrined</a>、<a href=\"https://profiles.wordpress.org/ericlewis\">Eric Andrew Lewis</a>、<a href=\"https://profiles.wordpress.org/pushred\">Eric Lanehart</a>、<a href=\"https://profiles.wordpress.org/eherman24\">Evan Herman</a>、<a href=\"https://profiles.wordpress.org/flixos90\">Felix Arntz</a>、<a href=\"https://profiles.wordpress.org/fencer04\">Fencer04</a>、<a href=\"https://profiles.wordpress.org/florianbrinkmann\">Florian Brinkmann</a>、<a href=\"https://profiles.wordpress.org/mista-flo\">Florian TIAR</a>、<a href=\"https://profiles.wordpress.org/foliovision\">FolioVision</a>、<a href=\"https://profiles.wordpress.org/fomenkoandrey\">fomenkoandrey</a>、<a href=\"https://profiles.wordpress.org/frankiet\">Francesco Taurino</a>、<a href=\"https://profiles.wordpress.org/frank-klein\">Frank Klein</a>、<a href=\"https://profiles.wordpress.org/fjarrett\">Frankie Jarrett</a>、<a href=\"https://profiles.wordpress.org/akeif\">Fred</a>、<a href=\"https://profiles.wordpress.org/frozzare\">Fredrik Forsmo</a>、<a href=\"https://profiles.wordpress.org/fuscata\">fuscata</a>、<a href=\"https://profiles.wordpress.org/gma992\">Gabriel Maldonado</a>、<a href=\"https://profiles.wordpress.org/voldemortensen\">Garth Mortensen</a>、<a href=\"https://profiles.wordpress.org/garyj\">Gary Jones</a>、<a href=\"https://profiles.wordpress.org/pento\">Gary Pendergast</a>、<a href=\"https://profiles.wordpress.org/geekysoft\">Geeky Software</a>、<a href=\"https://profiles.wordpress.org/georgestephanis\">George Stephanis</a>、<a href=\"https://profiles.wordpress.org/goranseric\">Goran Šerić</a>、<a href=\"https://profiles.wordpress.org/grahamarmfield\">Graham Armfield</a>、<a href=\"https://profiles.wordpress.org/grantderepas\">Grant Derepas</a>、<a href=\"https://profiles.wordpress.org/tivnet\">Gregory Karpinsky (@tivnet)</a>、<a href=\"https://profiles.wordpress.org/hardeepasrani\">Hardeep Asrani</a>、<a href=\"https://profiles.wordpress.org/helen\">Helen Hou-Sandí</a>、<a href=\"https://profiles.wordpress.org/henrywright\">Henry Wright</a>、<a href=\"https://profiles.wordpress.org/hiddenpearls\">hiddenpearls</a>、<a href=\"https://profiles.wordpress.org/hnle\">Hinaloe</a>、<a href=\"https://profiles.wordpress.org/hristo-sg\">Hristo Pandjarov</a>、<a href=\"https://profiles.wordpress.org/hugobaeta\">Hugo Baeta</a>、<a href=\"https://profiles.wordpress.org/polevaultweb\">Iain Poulson</a>、<a href=\"https://profiles.wordpress.org/iandunn\">Ian Dunn</a>、<a href=\"https://profiles.wordpress.org/ianedington\">Ian Edington</a>、<a href=\"https://profiles.wordpress.org/idealien\">idealien</a>、<a href=\"https://profiles.wordpress.org/igmoweb\">Ignacio Cruz Moreno</a>、<a href=\"https://profiles.wordpress.org/imath\">imath</a>、<a href=\"https://profiles.wordpress.org/implenton\">implenton</a>、<a href=\"https://profiles.wordpress.org/ionutst\">Ionut Stanciu</a>、<a href=\"https://profiles.wordpress.org/ipstenu\">Ipstenu (Mika Epstein)</a>、<a href=\"https://profiles.wordpress.org/ivdimova\">ivdimova</a>、<a href=\"https://profiles.wordpress.org/jdgrimes\">J.D. Grimes</a>、<a href=\"https://profiles.wordpress.org/jakept\">Jacob Peattie</a>、<a href=\"https://profiles.wordpress.org/whyisjake\">Jake Spurlock</a>、<a href=\"https://profiles.wordpress.org/jnylen0\">James Nylen</a>、<a href=\"https://profiles.wordpress.org/jamesacero\">jamesacero</a>、<a href=\"https://profiles.wordpress.org/japh\">Japh</a>、<a href=\"https://profiles.wordpress.org/jaredcobb\">Jared Cobb</a>、<a href=\"https://profiles.wordpress.org/jayarjo\">jayarjo</a>、<a href=\"https://profiles.wordpress.org/jdolan\">jdolan</a>、<a href=\"https://profiles.wordpress.org/jdoubleu\">jdoubleu</a>、<a href=\"https://profiles.wordpress.org/jblz\">Jeff Bowen</a>、<a href=\"https://profiles.wordpress.org/jbpaul17\">Jeff Paul</a>、<a href=\"https://profiles.wordpress.org/cheffheid\">Jeffrey de Wit</a>、<a href=\"https://profiles.wordpress.org/jeremyfelt\">Jeremy Felt</a>、<a href=\"https://profiles.wordpress.org/jpry\">Jeremy Pry</a>、<a href=\"https://profiles.wordpress.org/jimt\">jimt</a>、<a href=\"https://profiles.wordpress.org/jipmoors\">Jip Moors</a>、<a href=\"https://profiles.wordpress.org/jmusal\">jmusal</a>、<a href=\"https://profiles.wordpress.org/joedolson\">Joe Dolson</a>、<a href=\"https://profiles.wordpress.org/joehoyle\">Joe Hoyle</a>、<a href=\"https://profiles.wordpress.org/joemcgill\">Joe McGill</a>、<a href=\"https://profiles.wordpress.org/joelcj91\">Joel James</a>、<a href=\"https://profiles.wordpress.org/johanmynhardt\">johanmynhardt</a>、<a href=\"https://profiles.wordpress.org/johnbillion\">John Blackbourn</a>、<a href=\"https://profiles.wordpress.org/zyphonic\">John Dittmar</a>、<a href=\"https://profiles.wordpress.org/johnjamesjacoby\">John James Jacoby</a>、<a href=\"https://profiles.wordpress.org/johnpbloch\">John P. Bloch</a>、<a href=\"https://profiles.wordpress.org/johnregan3\">John Regan</a>、<a href=\"https://profiles.wordpress.org/johnpgreen\">johnpgreen</a>、<a href=\"https://profiles.wordpress.org/kenshino\">Jon (Kenshino)</a>、<a href=\"https://profiles.wordpress.org/jonathanbardo\">Jonathan Bardo</a>、<a href=\"https://profiles.wordpress.org/jbrinley\">Jonathan Brinley</a>、<a href=\"https://profiles.wordpress.org/daggerhart\">Jonathan Daggerhart</a>、<a href=\"https://profiles.wordpress.org/desrosj\">Jonathan Desrosiers</a>、<a href=\"https://profiles.wordpress.org/spacedmonkey\">Jonny Harris</a>、<a href=\"https://profiles.wordpress.org/jonnyauk\">jonnyauk</a>、<a href=\"https://profiles.wordpress.org/jordesign\">jordesign</a>、<a href=\"https://profiles.wordpress.org/jorritschippers\">JorritSchippers</a>、<a href=\"https://profiles.wordpress.org/joefusco\">Joseph Fusco</a>、<a href=\"https://profiles.wordpress.org/jjeaton\">Josh Eaton</a>、<a href=\"https://profiles.wordpress.org/shelob9\">Josh Pollock</a>、<a href=\"https://profiles.wordpress.org/joshcummingsdesign\">joshcummingsdesign</a>、<a href=\"https://profiles.wordpress.org/joshkadis\">joshkadis</a>、<a href=\"https://profiles.wordpress.org/joyously\">Joy</a>、<a href=\"https://profiles.wordpress.org/jrf\">jrf</a>、<a href=\"https://profiles.wordpress.org/jrgould\">JRGould</a>、<a href=\"https://profiles.wordpress.org/juanfra\">Juanfra Aldasoro</a>、<a href=\"https://profiles.wordpress.org/juhise\">Juhi Saxena</a>、<a href=\"https://profiles.wordpress.org/nukaga\">Junko Nukaga</a>、<a href=\"https://profiles.wordpress.org/justinbusa\">Justin Busa</a>、<a href=\"https://profiles.wordpress.org/justinsainton\">Justin Sainton</a>、<a href=\"https://profiles.wordpress.org/jshreve\">Justin Shreve</a>、<a href=\"https://profiles.wordpress.org/jtsternberg\">Justin Sternberg</a>、<a href=\"https://profiles.wordpress.org/kadamwhite\">K.Adam White</a>、<a href=\"https://profiles.wordpress.org/kacperszurek\">kacperszurek</a>、<a href=\"https://profiles.wordpress.org/trepmal\">Kailey (trepmal)</a>、<a href=\"https://profiles.wordpress.org/kalenjohnson\">KalenJohnson</a>、<a href=\"https://profiles.wordpress.org/codebykat\">Kat Hagan</a>、<a href=\"https://profiles.wordpress.org/kkoppenhaver\">Keanan Koppenhaver</a>、<a href=\"https://profiles.wordpress.org/keesiemeijer\">keesiemeijer</a>、<a href=\"https://profiles.wordpress.org/kellbot\">kellbot</a>、<a href=\"https://profiles.wordpress.org/ryelle\">Kelly Dwan</a>、<a href=\"https://profiles.wordpress.org/khag7\">Kevin Hagerty</a>、<a href=\"https://profiles.wordpress.org/kwight\">Kirk Wight</a>、<a href=\"https://profiles.wordpress.org/kitchin\">kitchin</a>、<a href=\"https://profiles.wordpress.org/ixkaito\">Kite</a>、<a href=\"https://profiles.wordpress.org/kjbenk\">kjbenk</a>、<a href=\"https://profiles.wordpress.org/knutsp\">Knut Sparhell</a>、<a href=\"https://profiles.wordpress.org/koenschipper\">koenschipper</a>、<a href=\"https://profiles.wordpress.org/kokarn\">kokarn</a>、<a href=\"https://profiles.wordpress.org/kovshenin\">Konstantin Kovshenin</a>、<a href=\"https://profiles.wordpress.org/obenland\">Konstantin Obenland</a>、<a href=\"https://profiles.wordpress.org/kouratoras\">Konstantinos Kouratoras</a>、<a href=\"https://profiles.wordpress.org/kuchenundkakao\">kuchenundkakao</a>、<a href=\"https://profiles.wordpress.org/kuldipem\">kuldipem</a>、<a href=\"https://profiles.wordpress.org/laurelfulford\">Laurel Fulford</a>、<a href=\"https://profiles.wordpress.org/leewillis77\">Lee Willis</a>、<a href=\"https://profiles.wordpress.org/leobaiano\">Leo Baiano</a>、<a href=\"https://profiles.wordpress.org/littlebigthing\">LittleBigThings (Csaba)</a>、<a href=\"https://profiles.wordpress.org/lucasstark\">Lucas Stark</a>、<a href=\"https://profiles.wordpress.org/lukecavanagh\">Luke Cavanagh</a>、<a href=\"https://profiles.wordpress.org/lgedeon\">Luke Gedeon</a>、<a href=\"https://profiles.wordpress.org/lukepettway\">Luke Pettway</a>、<a href=\"https://profiles.wordpress.org/lyubomir_popov\">lyubomir_popov</a>、<a href=\"https://profiles.wordpress.org/mariovalney\">Mário Valney</a>、<a href=\"https://profiles.wordpress.org/mageshp\">mageshp</a>、<a href=\"https://profiles.wordpress.org/mahesh901122\">Mahesh Waghmare</a>、<a href=\"https://profiles.wordpress.org/mangeshp\">Mangesh Parte</a>、<a href=\"https://profiles.wordpress.org/manishsongirkar36\">Manish Songirkar</a>、<a href=\"https://profiles.wordpress.org/mantismamita\">mantismamita</a>、<a href=\"https://profiles.wordpress.org/mbootsman\">Marcel Bootsman</a>、<a href=\"https://profiles.wordpress.org/tyxla\">Marin Atanasov</a>、<a href=\"https://profiles.wordpress.org/clorith\">Marius L. J.</a>、<a href=\"https://profiles.wordpress.org/mbelchev\">Mariyan Belchev</a>、<a href=\"https://profiles.wordpress.org/markjaquith\">Mark Jaquith</a>、<a href=\"https://profiles.wordpress.org/mrwweb\">Mark Root-Wiley</a>、<a href=\"https://profiles.wordpress.org/mapk\">Mark Uraine</a>、<a href=\"https://profiles.wordpress.org/markoheijnen\">Marko Heijnen</a>、<a href=\"https://profiles.wordpress.org/markshep\">markshep</a>、<a href=\"https://profiles.wordpress.org/matrixik\">matrixik</a>、<a href=\"https://profiles.wordpress.org/mjbanks\">Matt Banks</a>、<a href=\"https://profiles.wordpress.org/mattking5000\">Matt King</a>、<a href=\"https://profiles.wordpress.org/matt\">Matt Mullenweg</a>、<a href=\"https://profiles.wordpress.org/jaworskimatt\">Matt PeepSo</a>、<a href=\"https://profiles.wordpress.org/veraxus\">Matt van Andel</a>、<a href=\"https://profiles.wordpress.org/mattwiebe\">Matt Wiebe</a>、<a href=\"https://profiles.wordpress.org/mattheu\">Matthew Haines-Young</a>、<a href=\"https://profiles.wordpress.org/mattyrob\">mattyrob</a>、<a href=\"https://profiles.wordpress.org/maxcutler\">Max Cutler</a>、<a href=\"https://profiles.wordpress.org/maximeculea\">Maxime Culea</a>、<a href=\"https://profiles.wordpress.org/mayukojpn\">Mayo Moriyama</a>、<a href=\"https://profiles.wordpress.org/mckernanin\">mckernanin</a>、<a href=\"https://profiles.wordpress.org/mhowell\">mhowell</a>、<a href=\"https://profiles.wordpress.org/michaelarestad\">Michael Arestad</a>、<a href=\"https://profiles.wordpress.org/michael-arestad\">Michael Arestad</a>、<a href=\"https://profiles.wordpress.org/michalzuber\">michalzuber</a>、<a href=\"https://profiles.wordpress.org/stubgo\">Miina Sikk</a>、<a href=\"https://profiles.wordpress.org/mauteri\">Mike Auteri</a>、<a href=\"https://profiles.wordpress.org/mihai2u\">Mike Crantea</a>、<a href=\"https://profiles.wordpress.org/mdgl\">Mike Glendinning</a>、<a href=\"https://profiles.wordpress.org/mikehansenme\">Mike Hansen</a>、<a href=\"https://profiles.wordpress.org/mikelittle\">Mike Little</a>、<a href=\"https://profiles.wordpress.org/mikeschroder\">Mike Schroder</a>、<a href=\"https://profiles.wordpress.org/mikeviele\">Mike Viele</a>、<a href=\"https://profiles.wordpress.org/dimadin\">Milan Dinić</a>、<a href=\"https://profiles.wordpress.org/modemlooper\">modemlooper</a>、<a href=\"https://profiles.wordpress.org/batmoo\">Mohammad Jangda</a>、<a href=\"https://profiles.wordpress.org/deremohan\">Mohan Dere</a>、<a href=\"https://profiles.wordpress.org/monikarao\">monikarao</a>、<a href=\"https://profiles.wordpress.org/morettigeorgiev\">morettigeorgiev</a>、<a href=\"https://profiles.wordpress.org/morganestes\">Morgan Estes</a>、<a href=\"https://profiles.wordpress.org/mor10\">Morten Rand-Hendriksen</a>、<a href=\"https://profiles.wordpress.org/mt8biz\">moto hachi ( mt8.biz )</a>、<a href=\"https://profiles.wordpress.org/mrbobbybryant\">mrbobbybryant</a>、<a href=\"https://profiles.wordpress.org/nnaimov\">Naim Naimov</a>、<a href=\"https://profiles.wordpress.org/natereist\">Nate Reist</a>、<a href=\"https://profiles.wordpress.org/natewr\">NateWr</a>、<a href=\"https://profiles.wordpress.org/nathanrice\">nathanrice</a>、<a href=\"https://profiles.wordpress.org/nazgul\">Nazgul</a>、<a href=\"https://profiles.wordpress.org/greatislander\">Ned Zimmerman</a>、<a href=\"https://profiles.wordpress.org/krstarica\">net</a>、<a href=\"https://profiles.wordpress.org/celloexpressions\">Nick Halsey </a>、<a href=\"https://profiles.wordpress.org/nikeo\">Nicolas GUILLAUME</a>、<a href=\"https://profiles.wordpress.org/nikschavan\">Nikhil Chavan</a>、<a href=\"https://profiles.wordpress.org/nikv\">Nikhil Vimal</a>、<a href=\"https://profiles.wordpress.org/nbachiyski\">Nikolay Bachiyski</a>、<a href=\"https://profiles.wordpress.org/rabmalin\">Nilambar Sharma</a>、<a href=\"https://profiles.wordpress.org/noplanman\">noplanman</a>、<a href=\"https://profiles.wordpress.org/nullvariable\">nullvariable</a>、<a href=\"https://profiles.wordpress.org/odie2\">odie2</a>、<a href=\"https://profiles.wordpress.org/odysseygate\">odyssey</a>、<a href=\"https://profiles.wordpress.org/hideokamoto\">Okamoto Hidetaka</a>、<a href=\"https://profiles.wordpress.org/orvils\">orvils</a>、<a href=\"https://profiles.wordpress.org/oskosk\">oskosk</a>、<a href=\"https://profiles.wordpress.org/ottok\">Otto Kekäläinen</a>、<a href=\"https://profiles.wordpress.org/ovann86\">ovann86</a>、<a href=\"https://profiles.wordpress.org/imnok\">Pantip Treerattanapitak (Nok)</a>、<a href=\"https://profiles.wordpress.org/swissspidy\">Pascal Birchler</a>、<a href=\"https://profiles.wordpress.org/patilvikasj\">patilvikasj</a>、<a href=\"https://profiles.wordpress.org/pbearne\">Paul Bearne</a>、<a href=\"https://profiles.wordpress.org/paulwilde\">Paul Wilde</a>、<a href=\"https://profiles.wordpress.org/sirbrillig\">Payton Swick</a>、<a href=\"https://profiles.wordpress.org/pdufour\">pdufour</a>、<a href=\"https://profiles.wordpress.org/piewp\">Perdaan</a>、<a href=\"https://profiles.wordpress.org/peterwilsoncc\">Peter Wilson</a>、<a href=\"https://profiles.wordpress.org/phh\">phh</a>、<a href=\"https://profiles.wordpress.org/php\">php</a>、<a href=\"https://profiles.wordpress.org/delawski\">Piotr Delawski</a>、<a href=\"https://profiles.wordpress.org/pippinsplugins\">pippinsplugins</a>、<a href=\"https://profiles.wordpress.org/pjgalbraith\">pjgalbraith</a>、<a href=\"https://profiles.wordpress.org/pkevan\">pkevan</a>、<a href=\"https://profiles.wordpress.org/pratikchaskar\">Pratik</a>、<a href=\"https://profiles.wordpress.org/pressionate\">Pressionate</a>、<a href=\"https://profiles.wordpress.org/presskopp\">Presskopp</a>、<a href=\"https://profiles.wordpress.org/procodewp\">procodewp</a>、<a href=\"https://profiles.wordpress.org/rachelbaker\">Rachel Baker</a>、<a href=\"https://profiles.wordpress.org/rahulsprajapati\">Rahul Prajapati</a>、<a href=\"https://profiles.wordpress.org/superpoincare\">Ramanan</a>、<a href=\"https://profiles.wordpress.org/ramiy\">Rami Yushuvaev</a>、<a href=\"https://profiles.wordpress.org/ramiabraham\">ramiabraham</a>、<a href=\"https://profiles.wordpress.org/ranh\">ranh</a>、<a href=\"https://profiles.wordpress.org/redsand\">Red Sand Media Group</a>、<a href=\"https://profiles.wordpress.org/youknowriad\">Riad Benguella</a>、<a href=\"https://profiles.wordpress.org/rianrietveld\">Rian Rietveld</a>、<a href=\"https://profiles.wordpress.org/iamfriendly\">Richard Tape</a>、<a href=\"https://profiles.wordpress.org/rpayne7264\">Robert D Payne</a>、<a href=\"https://profiles.wordpress.org/iamjolly\">Robert Jolly</a>、<a href=\"https://profiles.wordpress.org/rnoakes3rd\">Robert Noakes</a>、<a href=\"https://profiles.wordpress.org/d4z_c0nf\">Rocco Aliberti</a>、<a href=\"https://profiles.wordpress.org/rodrigosprimo\">Rodrigo Primo</a>、<a href=\"https://profiles.wordpress.org/rommelxcastro\">Rommel Castro</a>、<a href=\"https://profiles.wordpress.org/fronaldaraujo\">Ronald Araújo</a>、<a href=\"https://profiles.wordpress.org/magicroundabout\">Ross Wintle</a>、<a href=\"https://profiles.wordpress.org/guavaworks\">Roy Sivan</a>、<a href=\"https://profiles.wordpress.org/ryankienstra\">Ryan Kienstra</a>、<a href=\"https://profiles.wordpress.org/rmccue\">Ryan McCue</a>、<a href=\"https://profiles.wordpress.org/ryanplas\">Ryan Plas</a>、<a href=\"https://profiles.wordpress.org/welcher\">Ryan Welcher</a>、<a href=\"https://profiles.wordpress.org/salcode\">Sal Ferrarello</a>、<a href=\"https://profiles.wordpress.org/samikeijonen\">Sami Keijonen</a>、<a href=\"https://profiles.wordpress.org/solarissmoke\">Samir Shah</a>、<a href=\"https://profiles.wordpress.org/samuelsidler\">Samuel Sidler</a>、<a href=\"https://profiles.wordpress.org/sandesh055\">Sandesh</a>、<a href=\"https://profiles.wordpress.org/smyoon315\">Sang-Min Yoon</a>、<a href=\"https://profiles.wordpress.org/sanketparmar\">Sanket Parmar</a>、<a href=\"https://profiles.wordpress.org/pollyplummer\">Sarah Gooding</a>、<a href=\"https://profiles.wordpress.org/sayedwp\">Sayed Taqui</a>、<a href=\"https://profiles.wordpress.org/schrapel\">schrapel</a>、<a href=\"https://profiles.wordpress.org/coffee2code\">Scott Reilly</a>、<a href=\"https://profiles.wordpress.org/wonderboymusic\">Scott Taylor</a>、<a href=\"https://profiles.wordpress.org/scrappyhuborg\">scrappy@hub.org</a>、<a href=\"https://profiles.wordpress.org/scribu\">scribu</a>、<a href=\"https://profiles.wordpress.org/seancjones\">seancjones</a>、<a href=\"https://profiles.wordpress.org/sebastianpisula\">Sebastian Pisula</a>、<a href=\"https://profiles.wordpress.org/sergeybiryukov\">Sergey Biryukov</a>、<a href=\"https://profiles.wordpress.org/sgr33n\">Sergio De Falco</a>、<a href=\"https://profiles.wordpress.org/sfpt\">sfpt</a>、<a href=\"https://profiles.wordpress.org/shayanys\">shayanys</a>、<a href=\"https://profiles.wordpress.org/shazahm1hotmailcom\">shazahm1</a>、<a href=\"https://profiles.wordpress.org/shprink\">shprink</a>、<a href=\"https://profiles.wordpress.org/simonlampen\">simonlampen</a>、<a href=\"https://profiles.wordpress.org/skippy\">skippy</a>、<a href=\"https://profiles.wordpress.org/smerriman\">smerriman</a>、<a href=\"https://profiles.wordpress.org/snacking\">snacking</a>、<a href=\"https://profiles.wordpress.org/solal\">solal</a>、<a href=\"https://profiles.wordpress.org/soean\">Soren Wrede</a>、<a href=\"https://profiles.wordpress.org/sstoqnov\">Stanimir Stoyanov</a>、<a href=\"https://profiles.wordpress.org/metodiew\">Stanko Metodiev</a>、<a href=\"https://profiles.wordpress.org/sharkomatic\">Steph</a>、<a href=\"https://profiles.wordpress.org/sswells\">Steph Wells</a>、<a href=\"https://profiles.wordpress.org/sillybean\">Stephanie Leary</a>、<a href=\"https://profiles.wordpress.org/netweb\">Stephen Edgar</a>、<a href=\"https://profiles.wordpress.org/stephenharris\">Stephen Harris</a>、<a href=\"https://profiles.wordpress.org/stevenkword\">Steven Word</a>、<a href=\"https://profiles.wordpress.org/stevenlinx\">stevenlinx</a>、<a href=\"https://profiles.wordpress.org/sudar\">Sudar Muthu</a>、<a href=\"https://profiles.wordpress.org/patilswapnilv\">Swapnil V. Patil</a>、<a href=\"https://profiles.wordpress.org/swapnild\">swapnild</a>、<a href=\"https://profiles.wordpress.org/szaqal21\">szaqal21</a>、<a href=\"https://profiles.wordpress.org/takahashi_fumiki\">Takahashi Fumiki</a>、<a href=\"https://profiles.wordpress.org/miyauchi\">Takayuki Miyauchi</a>、<a href=\"https://profiles.wordpress.org/karmatosed\">Tammie Lister</a>、<a href=\"https://profiles.wordpress.org/tapsboy\">tapsboy</a>、<a href=\"https://profiles.wordpress.org/tlovett1\">Taylor Lovett</a>、<a href=\"https://profiles.wordpress.org/team\">team</a>、<a href=\"https://profiles.wordpress.org/tg29359\">tg29359</a>、<a href=\"https://profiles.wordpress.org/tharsheblows\">tharsheblows</a>、<a href=\"https://profiles.wordpress.org/the\">the</a>、<a href=\"https://profiles.wordpress.org/themeshaper\">themeshaper</a>、<a href=\"https://profiles.wordpress.org/thenbrent\">thenbrent</a>、<a href=\"https://profiles.wordpress.org/thomaswm\">thomaswm</a>、<a href=\"https://profiles.wordpress.org/tfrommen\">Thorsten Frommen</a>、<a href=\"https://profiles.wordpress.org/tierra\">tierra</a>、<a href=\"https://profiles.wordpress.org/tnash\">Tim Nash</a>、<a href=\"https://profiles.wordpress.org/timmydcrawford\">Timmy Crawford</a>、<a href=\"https://profiles.wordpress.org/timothyblynjacobs\">Timothy Jacobs</a>、<a href=\"https://profiles.wordpress.org/timph\">timph</a>、<a href=\"https://profiles.wordpress.org/tkama\">Tkama</a>、<a href=\"https://profiles.wordpress.org/tnegri\">tnegri</a>、<a href=\"https://profiles.wordpress.org/tomauger\">Tom Auger</a>、<a href=\"https://profiles.wordpress.org/tjnowell\">Tom J Nowell</a>、<a href=\"https://profiles.wordpress.org/tomdxw\">tomdxw</a>、<a href=\"https://profiles.wordpress.org/toro_unit\">Toro_Unit (Hiroshi Urabe)</a>、<a href=\"https://profiles.wordpress.org/zodiac1978\">Torsten Landsiedel</a>、<a href=\"https://profiles.wordpress.org/transl8or\">transl8or</a>、<a href=\"https://profiles.wordpress.org/traversal\">traversal</a>、<a href=\"https://profiles.wordpress.org/wpsmith\">Travis Smith</a>、<a href=\"https://profiles.wordpress.org/nmt90\">Triet Minh</a>、<a href=\"https://profiles.wordpress.org/trishasalas\">Trisha Salas</a>、<a href=\"https://profiles.wordpress.org/tristangemus\">tristangemus</a>、<a href=\"https://profiles.wordpress.org/truongwp\">truongwp</a>、<a href=\"https://profiles.wordpress.org/tsl143\">tsl143</a>、<a href=\"https://profiles.wordpress.org/tywayne\">Ty Carlson</a>、<a href=\"https://profiles.wordpress.org/grapplerulrich\">Ulrich</a>、<a href=\"https://profiles.wordpress.org/utkarshpatel\">Utkarsh</a>、<a href=\"https://profiles.wordpress.org/valeriutihai\">Valeriu Tihai</a>、<a href=\"https://profiles.wordpress.org/zuige\">Viljami Kuosmanen</a>、<a href=\"https://profiles.wordpress.org/vishalkakadiya\">Vishal Kakadiya</a>、<a href=\"https://profiles.wordpress.org/vortfu\">vortfu</a>、<a href=\"https://profiles.wordpress.org/vrundakansara-1\">Vrunda Kansara</a>、<a href=\"https://profiles.wordpress.org/webbgaraget\">webbgaraget</a>、<a href=\"https://profiles.wordpress.org/webmandesign\">WebMan Design | Oliver Juhas</a>、<a href=\"https://profiles.wordpress.org/websupporter\">websupporter</a>、<a href=\"https://profiles.wordpress.org/westonruter\">Weston Ruter</a>、<a href=\"https://profiles.wordpress.org/earnjam\">William Earnhardt</a>、<a href=\"https://profiles.wordpress.org/williampatton\">williampatton</a>、<a href=\"https://profiles.wordpress.org/wolly\">Wolly aka Paolo Valenti</a>、<a href=\"https://profiles.wordpress.org/wraithkenny\">WraithKenny</a>、<a href=\"https://profiles.wordpress.org/yale01\">yale01</a>、<a href=\"https://profiles.wordpress.org/yoavf\">Yoav Farhi</a>、<a href=\"https://profiles.wordpress.org/yogasukma\">Yoga Sukma</a>、<a href=\"https://profiles.wordpress.org/oxymoron\">Zach Wills</a>、<a href=\"https://profiles.wordpress.org/tollmanz\">Zack Tollman</a>、<a href=\"https://profiles.wordpress.org/vanillalounge\">Ze Fontainhas</a>、<a href=\"https://profiles.wordpress.org/zhildzik\">zhildzik</a>和<a href=\"https://profiles.wordpress.org/zsusag\">zsusag</a>。</p>\n<p>最后，让我们感谢为本次发布提供了翻译的贡献者。WordPress 4.9被翻译成了43种语言，还有更多在路上。</p>\n<p>您想发表关于WordPress 4.9的新闻吗？<a href=\"https://s.w.org/images/core/4.9/wp-4-9_press-kit.zip\">我们为您准备了媒体包，来告知您关于此次更新的新功能，我们也为您准备了一些媒体资源</a>。</p>\n<p>如果您想帮忙，请查阅<a href=\"https://make.wordpress.org/\">Make WordPress</a>和我们的<a href=\"https://make.wordpress.org/core/\">核心开发博客</a>。</p>\n<p>感谢您选择WordPress，我们希望您喜欢！\n</p></div>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:48:\"https://cn.wordpress.org/2017/11/16/tipton/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:1;a:6:{s:4:\"data\";s:42:\"\n		\n		\n		\n		\n		\n				\n\n		\n		\n				\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:53:\"未来的 WordPress 4.8.1 和 cn.wordpress.org 计划\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:71:\"https://cn.wordpress.org/2017/07/23/4-8-1-plans-and-the-future-of-wpcn/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:80:\"https://cn.wordpress.org/2017/07/23/4-8-1-plans-and-the-future-of-wpcn/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sun, 23 Jul 2017 10:10:33 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Uncategorized\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:32:\"https://cn.wordpress.org/?p=1060\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:147:\"各位，抱歉！最近 Jimmy 看起来很忙，我们很久没能给大家带来新版本，请见谅。 4.8.1 的官方（英文）版 [&#8230;]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"Jiehan Zheng\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:1455:\"<p>各位，抱歉！最近 Jimmy 看起来很忙，我们很久没能给大家带来新版本，请见谅。</p>\n<p>4.8.1 的官方（英文）版本预计 8 月 1 日发布，我的目标是在英文版本发布的同一天发布中文版本。因为<a href=\"https://make.wordpress.org/polyglots/2017/07/20/new-strings-for-wordpress-4-8-1/\">官方的技术原因</a>，在 4.8.1 发布前的准备期内，中文版无法再发布 4.8 的更新。4.8.1 版本的核心字串已经 100% 审核或重新翻译完毕。一些默认主题和插件还有少数字串没有完成，我会在周二发布之前审核或翻译完毕。</p>\n<p>对未来的版本，我的目标也是在每个官方版本发布的同一天发布中文版本。今后的翻译会更加开放，将在 <a href=\"https://translate.wordpress.org/locale/zh-cn/\">translate.wordpress.org</a> 上进行。中文管理员可以在<a href=\"https://make.wordpress.org/chat/\">官方 Slack</a> 上找到（@jiehan 或 #polyglots 频道）。</p>\n<p><ins><strong>更新：</strong>刚刚发布了一个临时版本，只包含了 <a href=\"https://translate.wordpress.org/locale/zh-cn/\">translate.wordpress.org</a> 最新的翻译，但因为 SVN 权限和个人时间原因，暂时没有本地化的代码更新（比如，没有在最新的主题中添加工信部备案号的功能），本地化的代码目前使用的还是 4.7 的，请见谅。这些将在 4.8.1 中加入。</ins></p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:76:\"https://cn.wordpress.org/2017/07/23/4-8-1-plans-and-the-future-of-wpcn/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:2:\"15\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:2;a:6:{s:4:\"data\";s:45:\"\n		\n		\n		\n		\n		\n				\n\n		\n		\n				\n			\n		\n\n\n\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:8:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:26:\"WordPress 4.7“Vaughan”\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:44:\"https://cn.wordpress.org/2016/12/08/vaughan/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:53:\"https://cn.wordpress.org/2016/12/08/vaughan/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 08 Dec 2016 05:09:23 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:32:\"https://cn.wordpress.org/?p=1040\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:49:\"WordPress 4.7简体中文版现已开放下载。\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:9:\"enclosure\";a:3:{i:0;a:5:{s:4:\"data\";s:0:\"\";s:7:\"attribs\";a:1:{s:0:\"\";a:3:{s:3:\"url\";s:64:\"https://wordpress.org/news/files/2016/12/starter-content.mp4?_=1\";s:6:\"length\";s:7:\"3736020\";s:4:\"type\";s:9:\"video/mp4\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:1;a:5:{s:4:\"data\";s:0:\"\";s:7:\"attribs\";a:1:{s:0:\"\";a:3:{s:3:\"url\";s:63:\"https://wordpress.org/news/files/2016/12/edit-shortcuts.mp4?_=2\";s:6:\"length\";s:7:\"1127483\";s:4:\"type\";s:9:\"video/mp4\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:2;a:5:{s:4:\"data\";s:0:\"\";s:7:\"attribs\";a:1:{s:0:\"\";a:3:{s:3:\"url\";s:62:\"https://wordpress.org/news/files/2016/12/video-headers.mp4?_=3\";s:6:\"length\";s:7:\"1549803\";s:4:\"type\";s:9:\"video/mp4\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Jimmy Xu\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:41938:\"<div style=\"width: 692px\">\n<p>WordPress 4.7简体中文版现已<a href=\"https://cn.wordpress.org/releases/\">开放下载</a>，或在您的WordPress仪表盘中升级。我们将此版本命名为“Vaughan”，以纪念爵士歌手莎拉·沃恩。4.7的全新功能让您以您的想法来建立您的网站。</p>\n<div id=\"v-AHz0Ca46-1\" class=\"video-player\"><video id=\"v-AHz0Ca46-1-video\" width=\"692\" height=\"388\" poster=\"https://videos.files.wordpress.com/AHz0Ca46/wp4-7-vaughan-r8-mastered_scruberthumbnail_0.jpg\" controls=\"true\" preload=\"metadata\" dir=\"ltr\" lang=\"en\"><source src=\"https://videos.files.wordpress.com/AHz0Ca46/wp4-7-vaughan-r8-mastered_dvd.mp4\" type=\"video/mp4; codecs=&quot;avc1.64001E, mp4a.40.2&quot;\" /><source src=\"https://videos.files.wordpress.com/AHz0Ca46/wp4-7-vaughan-r8-mastered_fmt1.ogv\" type=\"video/ogg; codecs=&quot;theora, vorbis&quot;\" /><div><img alt=\"Introducing WordPress 4.7\" src=\"https://videos.files.wordpress.com/AHz0Ca46/wp4-7-vaughan-r8-mastered_scruberthumbnail_0.jpg\" width=\"692\" height=\"388\" /></div><p>Introducing WordPress 4.7</p></video></div>\n<hr />\n<h2 style=\"text-align: center\">“二〇一七”介绍</h2>\n<p>一个全新默认主题可让您的网站通过引人入胜的特色图片和影音页头生动呈现。</p>\n<p><img class=\"alignnone wp-image-4618 size-large\" src=\"https://i2.wp.com/wordpress.org/news/files/2016/12/4.7-%E2%80%94-Twenty-Seventeen-1.jpg?resize=632%2C356&amp;ssl=1\" width=\"632\" height=\"356\" /></p>\n<p>“二〇一七”专注于商业网站，提供了一个可自定义各部分的首页。使用挂件、导航、社交菜单、标志、自定颜色等来个性化。我们的2017年默认主题能支持更多语言、任何设备及广泛的用户群。</p>\n<hr />\n<h2 style=\"text-align: center\">您的网站，您说了算</h2>\n<p>WordPress 4.7为外观编辑加入新功能，帮助您完成主题的初始设置，在一个不间断的工作流程中对所有修改进行非破坏性的实时预览。</p>\n<h3>主题起始内容</h3>\n<p><div style=\"width: 632px;\" class=\"wp-video\"><!--[if lt IE 9]><script>document.createElement(\'video\');</script><![endif]-->\n<video class=\"wp-video-shortcode\" id=\"video-1040-1\" width=\"632\" height=\"345\" preload=\"metadata\" controls=\"controls\"><source type=\"video/mp4\" src=\"https://cn.wordpress.org/files/2016/12/starter-content.mp4?_=1\" /><source type=\"\" src=\"https://wordpress.org/news/files/2016/12/starter-content.mp4?_=1\" /><a href=\"https://cn.wordpress.org/files/2016/12/starter-content.mp4\">https://cn.wordpress.org/files/2016/12/starter-content.mp4</a></video></div>为了帮助您建立一个坚实的基础，当您自定新网站时，个别主题将显示起始内容。这可以将商业信息放置在最佳位置，以提供带有社交网络链接的示例菜单、美丽图案的静态首页。</p>\n<div style=\"float:left;width:48%;margin:0\">\n<h3>编辑快捷方式</h3>\n<p><div style=\"width: 632px;\" class=\"wp-video\"><video class=\"wp-video-shortcode\" id=\"video-1040-2\" width=\"632\" height=\"345\" preload=\"metadata\" controls=\"controls\"><source type=\"video/mp4\" src=\"https://cn.wordpress.org/files/2016/12/starter-content.mp4?_=2\" /><source type=\"\" src=\"https://wordpress.org/news/files/2016/12/edit-shortcuts.mp4?_=2\" /><a href=\"https://cn.wordpress.org/files/2016/12/starter-content.mp4\">https://cn.wordpress.org/files/2016/12/starter-content.mp4</a></video></div>当实时预览时，可视化图标会显示在您网站能够自定义的部分。点击快捷方式直接进行编辑，与起始内容相互配合，自定义您的网站将会比以往来得更快。\n</p></div>\n<div style=\"float:right;width:48%;margin:0\">\n<h3>视频页头</h3>\n<p><div style=\"width: 632px;\" class=\"wp-video\"><video class=\"wp-video-shortcode\" id=\"video-1040-3\" width=\"632\" height=\"345\" preload=\"metadata\" controls=\"controls\"><source type=\"video/mp4\" src=\"https://cn.wordpress.org/files/2016/12/starter-content.mp4?_=3\" /><source type=\"\" src=\"https://wordpress.org/news/files/2016/12/video-headers.mp4?_=3\" /><a href=\"https://cn.wordpress.org/files/2016/12/starter-content.mp4\">https://cn.wordpress.org/files/2016/12/starter-content.mp4</a></video></div>有时候您想使用视频作为移动题图来展示您的作品，试试看“二〇一七”。需要一些视频灵感吗？试试看搜索提供下载、使用视频的网站。\n</p></div>\n<div style=\"clear: both\"></div>\n<div style=\"float:left;width:48%;margin:0\">\n<h3>更平滑的菜单建立</h3>\n<p><img class=\"wp-image-4606 size-medium alignright\" src=\"https://i1.wp.com/wordpress.org/news/files/2016/12/4.7-%E2%80%94-Nav.jpg?resize=300%2C158&amp;ssl=1\" width=\"300\" height=\"158\" /></p>\n<p>网站的许多菜单包含链接指向您的网站其他页面，但当您还没有任何页面时该怎么办？现在，您可以在建立菜单时新增页面，而不必离开定制器并放弃修改。一旦您发布了自定选项，您就可以准备好在新的页面加入内容。\n</p></div>\n<div style=\"float:right;width:48%;margin:0\">\n<h3>自定义CSS</h3>\n<p><img class=\"wp-image-4607 size-medium alignright\" src=\"https://i1.wp.com/wordpress.org/news/files/2016/12/4.7-%E2%80%94-CSS.jpg?resize=300%2C158&amp;ssl=1\" width=\"300\" height=\"158\" /></p>\n<p>有时候您只需要一些视觉上的微调就能使您的网站更臻完美。WordPress 4.7允许您加入自定义CSS并能立即在网站看到变化。实时预览加快您的工作速度，且无须反复刷新网页。\n</p></div>\n<div style=\"clear: both\"></div>\n<hr />\n<div style=\"float:left;width:48%;margin:0\">\n<h3>PDF缩略图预览</h3>\n<p><img class=\"wp-image-4609 size-medium alignright\" src=\"https://i1.wp.com/wordpress.org/news/files/2016/12/4.7-%E2%80%94-PDF.jpg?resize=300%2C158&amp;ssl=1\" width=\"300\" height=\"158\" /></p>\n<p>在WordPress 4.7管理您的文件集变得更容易。上传PDF文件将会产生缩略图，因此您可以在所有文件中更轻易区分他们。\n</p></div>\n<div style=\"float:right;width:48%;margin:0\">\n<h3>让仪表盘使用您的语言</h3>\n<p><img class=\"wp-image-4608 size-medium alignright\" src=\"https://i2.wp.com/wordpress.org/news/files/2016/12/4.7-%E2%80%94-Language.jpg?resize=300%2C158&amp;ssl=1\" width=\"300\" height=\"158\" /></p>\n<p>只是因为您的网站在单一语言设定下，但这不代表每一位协助管理网站的伙伴都使用该语言。新增更多语言至您的网站，让用户可以在他的个人资料页面选择不同语言。\n</p></div>\n<div style=\"clear: both\"></div>\n<hr />\n<h2>向您介绍REST API内容节点</h2>\n<p>WordPress 4.7为文章、评论、自定义字段、用户、元数据和设置带来了REST API节点。</p>\n<p><img class=\"size-large wp-image-4600 alignnone\" src=\"https://i2.wp.com/wordpress.org/news/files/2016/12/4.7-%E2%80%94-API.jpg?resize=632%2C205&amp;ssl=1\" alt=\"\" width=\"632\" height=\"205\" /></p>\n<p>内容节点让您的WordPress拥有机器可读的额外访问资源，具备清晰、标准导向接口，为网站与插件、主题和App开创一条平稳的前进之路。准备好开始开发了吗？<a href=\"https://developer.wordpress.org/rest-api/reference/\">查看REST API参考。</a></p>\n<hr />\n<h2>更多开发者的快乐<img src=\"https://s.w.org/images/core/emoji/2.3/72x72/1f60a.png\" alt=\"?\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" /></h2>\n<h3><a href=\"https://make.wordpress.org/core/2016/11/03/post-type-templates-in-4-7/\">文章类型模板</a></h3>\n<p>通过开启所有文章类型的页面模板功能，主题开发者可以有更弹性的WordPress模板结构。</p>\n<h3>更多主题API功能</h3>\n<p>WordPress 4.7为主题开发者带来<a href=\"https://make.wordpress.org/core/2016/09/09/new-functions-hooks-and-behaviour-for-theme-developers-in-wordpress-4-7/\">新函数、钩子和行为</a>。</p>\n<h3><a href=\"https://make.wordpress.org/core/2016/10/04/custom-bulk-actions/\">自定义批处理</a></h3>\n<p>批处理现在除了编辑和删除外加入更多功能。</p>\n<h3><a href=\"https://make.wordpress.org/core/2016/09/08/wp_hook-next-generation-actions-and-filters/\"><code>WP_Hook</code></a></h3>\n<p>依靠动作和过滤器的代码已被大幅调整与改写，同时修正了一些错误。</p>\n<h3>设置注册API</h3>\n<p>register_setting()<a href=\"https://make.wordpress.org/core/2016/10/26/registering-your-settings-in-wordpress-4-7/\">已经强化</a>，加入包含类型、描述及REST API能见度管理。</p>\n<h3><a href=\"https://make.wordpress.org/core/2016/10/12/customize-changesets-technical-design-decisions/\">自定义变更集</a></h3>\n<p>自定义变更集让定制器中的修改持久化，就像自动保存草稿一样。他们也让像起始内容一样的新功能成为可能。</p>\n<hr />\n<h2>开发团队</h2>\n<p>此次发布由<a href=\"https://helen.blog/\">Helen Hou-Sandí</a>领头，由<a href=\"https://profiles.wordpress.org/jbpaul17\">Jeff Paul</a>和<a href=\"http://aaron.jorb.in/\">Aaron Jorbin</a>担任发布代表，并得到了以下个人的帮助。这次发布包含了482人的贡献，创下新高，其中205人更是第一次贡献。在您喜欢的音乐服务中听听莎拉·沃恩，并看看下面这些个人资料吧：</p>\n<p><a href=\"https://profiles.wordpress.org/aaroncampbell\">Aaron D. Campbell</a>、<a href=\"https://profiles.wordpress.org/abrightclearweb\">abrightclearweb</a>、<a href=\"https://profiles.wordpress.org/ibachal\">Achal Jain</a>、<a href=\"https://profiles.wordpress.org/achbed\">achbed</a>、<a href=\"https://profiles.wordpress.org/acmethemes\">Acme Themes</a>、<a href=\"https://profiles.wordpress.org/adamsilverstein\">Adam Silverstein</a>、<a href=\"https://profiles.wordpress.org/adammacias\">adammacias</a>、<a href=\"https://profiles.wordpress.org/mrahmadawais\">Ahmad Awais</a>、<a href=\"https://profiles.wordpress.org/ahmadawais\">ahmadawais</a>、<a href=\"https://profiles.wordpress.org/airesvsg\">airesvsg</a>、<a href=\"https://profiles.wordpress.org/ajoah\">ajoah</a>、<a href=\"https://profiles.wordpress.org/akibjorklund\">Aki Björklund</a>、<a href=\"https://profiles.wordpress.org/akshayvinchurkar\">AkshayVinchurkar</a>、<a href=\"https://profiles.wordpress.org/xknown\">Alex Concha</a>、<a href=\"https://profiles.wordpress.org/xavortm\">Alex Dimitrov</a>、<a href=\"https://profiles.wordpress.org/ironpaperweight\">Alex Hon</a>、<a href=\"https://profiles.wordpress.org/alex27\">alex27</a>、<a href=\"https://profiles.wordpress.org/allancole\">allancole</a>、<a href=\"https://profiles.wordpress.org/arush\">Amanda Rush</a>、<a href=\"https://profiles.wordpress.org/afercia\">Andrea Fercia</a>、<a href=\"https://profiles.wordpress.org/andrewp-2\">Andreas Panag</a>、<a href=\"https://profiles.wordpress.org/nacin\">Andrew Nacin</a>、<a href=\"https://profiles.wordpress.org/azaozz\">Andrew Ozz</a>、<a href=\"https://profiles.wordpress.org/rarst\">Andrey &#8220;Rarst&#8221; Savchenko</a>、<a href=\"https://profiles.wordpress.org/andizer\">Andy Meerwaldt</a>、<a href=\"https://profiles.wordpress.org/kelderic\">Andy Mercer</a>、<a href=\"https://profiles.wordpress.org/andy\">Andy Skelton</a>、<a href=\"https://profiles.wordpress.org/aniketpant\">Aniket Pant</a>、<a href=\"https://profiles.wordpress.org/anilbasnet\">Anil Basnet</a>、<a href=\"https://profiles.wordpress.org/ankit-k-gupta\">Ankit K Gupta</a>、<a href=\"https://profiles.wordpress.org/ahortin\">Anthony Hortin</a>、<a href=\"https://profiles.wordpress.org/antisilent\">antisilent</a>、<a href=\"https://profiles.wordpress.org/atimmer\">Anton Timmermans</a>、<a href=\"https://profiles.wordpress.org/zuige\">Antti Kuosmanen</a>、<a href=\"https://profiles.wordpress.org/apokalyptik\">apokalyptik</a>、<a href=\"https://profiles.wordpress.org/artoliukkonen\">artoliukkonen</a>、<a href=\"https://profiles.wordpress.org/ideag\">Arunas Liuiza</a>、<a href=\"https://profiles.wordpress.org/attitude\">attitude</a>、<a href=\"https://profiles.wordpress.org/backermann\">backermann</a>、<a href=\"https://profiles.wordpress.org/b-07\">Bappi</a>、<a href=\"https://profiles.wordpress.org/bcole808\">Ben Cole</a>、<a href=\"https://profiles.wordpress.org/kau-boy\">Bernhard Kau</a>、<a href=\"https://profiles.wordpress.org/binarymoon\">BinaryMoon</a>、<a href=\"https://profiles.wordpress.org/birgire\">Birgir Erlendsson (birgire)</a>、<a href=\"https://profiles.wordpress.org/bjornw\">BjornW</a>、<a href=\"https://profiles.wordpress.org/bobbingwide\">bobbingwide</a>、<a href=\"https://profiles.wordpress.org/boblinthorst\">boblinthorst</a>、<a href=\"https://profiles.wordpress.org/boboudreau\">boboudreau</a>、<a href=\"https://profiles.wordpress.org/gitlost\">bonger</a>、<a href=\"https://profiles.wordpress.org/boonebgorges\">Boone B. Gorges</a>、<a href=\"https://profiles.wordpress.org/bradyvercher\">Brady Vercher</a>、<a href=\"https://profiles.wordpress.org/brainstormforce\">Brainstorm Force</a>、<a href=\"https://profiles.wordpress.org/kraftbj\">Brandon Kraft</a>、<a href=\"https://profiles.wordpress.org/brianhogg\">Brian Hogg</a>、<a href=\"https://profiles.wordpress.org/krogsgard\">Brian Krogsgard</a>、<a href=\"https://profiles.wordpress.org/bronsonquick\">Bronson Quick</a>、<a href=\"https://profiles.wordpress.org/sixhours\">Caroline Moore</a>、<a href=\"https://profiles.wordpress.org/caseypatrickdriscoll\">Casey Driscoll</a>、<a href=\"https://profiles.wordpress.org/caspie\">Caspie</a>、<a href=\"https://profiles.wordpress.org/chaos-engine\">Chaos Engine</a>、<a href=\"https://profiles.wordpress.org/cheeserolls\">cheeserolls</a>、<a href=\"https://profiles.wordpress.org/chesio\">chesio</a>、<a href=\"https://profiles.wordpress.org/ketuchetan\">chetansatasiya</a>、<a href=\"https://profiles.wordpress.org/choongsavvii\">choong</a>、<a href=\"https://profiles.wordpress.org/chouby\">Chouby</a>、<a href=\"https://profiles.wordpress.org/chredd\">chredd</a>、<a href=\"https://profiles.wordpress.org/chrisjean\">Chris Jean</a>、<a href=\"https://profiles.wordpress.org/cmmarslender\">Chris Marslender</a>、<a href=\"https://profiles.wordpress.org/chris_d2d\">Chris Smith</a>、<a href=\"https://profiles.wordpress.org/chrisvanpatten\">Chris Van Patten</a>、<a href=\"https://profiles.wordpress.org/chriswiegman\">Chris Wiegman</a>、<a href=\"https://profiles.wordpress.org/chriscct7\">chriscct7</a>、<a href=\"https://profiles.wordpress.org/chriseverson\">chriseverson</a>、<a href=\"https://profiles.wordpress.org/cwpnolen\">Christian Nolen</a>、<a href=\"https://profiles.wordpress.org/needle\">Christian Wach</a>、<a href=\"https://profiles.wordpress.org/christophherr\">Christoph Herr</a>、<a href=\"https://profiles.wordpress.org/clarionwpdeveloper\">Clarion Technologies</a>、<a href=\"https://profiles.wordpress.org/claudiosanches\">Claudio Sanches</a>、<a href=\"https://profiles.wordpress.org/claudiosmweb\">Claudio Sanches</a>、<a href=\"https://profiles.wordpress.org/claudiolabarbera\">ClaudioLaBarbera</a>、<a href=\"https://profiles.wordpress.org/codemovementpk\">codemovement.pk</a>、<a href=\"https://profiles.wordpress.org/coderkevin\">coderkevin</a>、<a href=\"https://profiles.wordpress.org/codfish\">codfish</a>、<a href=\"https://profiles.wordpress.org/coreymcollins\">coreymcollins</a>、<a href=\"https://profiles.wordpress.org/curdin\">Curdin Krummenacher</a>、<a href=\"https://profiles.wordpress.org/cgrymala\">Curtiss Grymala</a>、<a href=\"https://profiles.wordpress.org/cdog\">Cătălin Dogaru</a>、<a href=\"https://profiles.wordpress.org/danhgilmore\">danhgilmore</a>、<a href=\"https://profiles.wordpress.org/danielbachhuber\">Daniel Bachhuber </a>、<a href=\"https://profiles.wordpress.org/danielkanchev\">Daniel Kanchev</a>、<a href=\"https://profiles.wordpress.org/mte90\">Daniele Scasciafratte</a>、<a href=\"https://profiles.wordpress.org/danielpietrasik\">danielpietrasik</a>、<a href=\"https://profiles.wordpress.org/dllh\">Daryl L. L. Houston (dllh)</a>、<a href=\"https://profiles.wordpress.org/davepullig\">Dave Pullig</a>、<a href=\"https://profiles.wordpress.org/goto10\">Dave Romsey (goto10)</a>、<a href=\"https://profiles.wordpress.org/davidakennedy\">David A. Kennedy</a>、<a href=\"https://profiles.wordpress.org/turtlepod\">David Chandra Purnama</a>、<a href=\"https://profiles.wordpress.org/dlh\">David Herrera</a>、<a href=\"https://profiles.wordpress.org/dglingren\">David Lingren</a>、<a href=\"https://profiles.wordpress.org/davidmosterd\">David Mosterd</a>、<a href=\"https://profiles.wordpress.org/dshanske\">David Shanske</a>、<a href=\"https://profiles.wordpress.org/davidbhayes\">davidbhayes</a>、<a href=\"https://profiles.wordpress.org/folletto\">Davide &#8216;Folletto&#8217; Casali</a>、<a href=\"https://profiles.wordpress.org/deeptiboddapati\">deeptiboddapati</a>、<a href=\"https://profiles.wordpress.org/delphinus\">delphinus</a>、<a href=\"https://profiles.wordpress.org/deltafactory\">deltafactory</a>、<a href=\"https://profiles.wordpress.org/denis-de-bernardy\">Denis de Bernardy</a>、<a href=\"https://profiles.wordpress.org/valendesigns\">Derek Herman</a>、<a href=\"https://profiles.wordpress.org/pcfreak30\">Derrick Hammer</a>、<a href=\"https://profiles.wordpress.org/derrickkoo\">Derrick Koo</a>、<a href=\"https://profiles.wordpress.org/dimchik\">dimchik</a>、<a href=\"https://profiles.wordpress.org/dineshc\">dineshc</a>、<a href=\"https://profiles.wordpress.org/dd32\">Dion Hulse</a>、<a href=\"https://profiles.wordpress.org/dipeshkakadiya\">dipeshkakadiya</a>、<a href=\"https://profiles.wordpress.org/dmsnell\">dmsnell</a>、<a href=\"https://profiles.wordpress.org/ocean90\">Dominik Schilling</a>、<a href=\"https://profiles.wordpress.org/dotancohen\">Dotan Cohen</a>、<a href=\"https://profiles.wordpress.org/dougwollison\">Doug Wollison</a>、<a href=\"https://profiles.wordpress.org/doughamlin\">doughamlin</a>、<a href=\"https://profiles.wordpress.org/drewapicture\">Drew Jaynes</a>、<a href=\"https://profiles.wordpress.org/duncanjbrown\">duncanjbrown</a>、<a href=\"https://profiles.wordpress.org/dungengronovius\">dungengronovius</a>、<a href=\"https://profiles.wordpress.org/dylanauty\">DylanAuty</a>、<a href=\"https://profiles.wordpress.org/hurtige\">Eddie Hurtig</a>、<a href=\"https://profiles.wordpress.org/oso96_2000\">Eduardo Reveles</a>、<a href=\"https://profiles.wordpress.org/chopinbach\">Edwin Cromley</a>、<a href=\"https://profiles.wordpress.org/electricfeet\">ElectricFeet</a>、<a href=\"https://profiles.wordpress.org/eliorivero\">Elio Rivero</a>、<a href=\"https://profiles.wordpress.org/iseulde\">Ella Iseulde Van Dorpe</a>、<a href=\"https://profiles.wordpress.org/elyobo\">elyobo</a>、<a href=\"https://profiles.wordpress.org/enodekciw\">enodekciw</a>、<a href=\"https://profiles.wordpress.org/enshrined\">enshrined</a>、<a href=\"https://profiles.wordpress.org/ericlewis\">Eric Andrew Lewis</a>、<a href=\"https://profiles.wordpress.org/pushred\">Eric Lanehart</a>、<a href=\"https://profiles.wordpress.org/eherman24\">Evan Herman</a>、<a href=\"https://profiles.wordpress.org/flixos90\">Felix Arntz</a>、<a href=\"https://profiles.wordpress.org/fencer04\">Fencer04</a>、<a href=\"https://profiles.wordpress.org/florianbrinkmann\">Florian Brinkmann</a>、<a href=\"https://profiles.wordpress.org/mista-flo\">Florian TIAR</a>、<a href=\"https://profiles.wordpress.org/foliovision\">FolioVision</a>、<a href=\"https://profiles.wordpress.org/fomenkoandrey\">fomenkoandrey</a>、<a href=\"https://profiles.wordpress.org/frank-klein\">Frank Klein</a>、<a href=\"https://profiles.wordpress.org/fjarrett\">Frankie Jarrett</a>、<a href=\"https://profiles.wordpress.org/frankiet\">frankiet</a>、<a href=\"https://profiles.wordpress.org/akeif\">Fred</a>、<a href=\"https://profiles.wordpress.org/frozzare\">Fredrik Forsmo</a>、<a href=\"https://profiles.wordpress.org/fuscata\">fuscata</a>、<a href=\"https://profiles.wordpress.org/gma992\">Gabriel Maldonado</a>、<a href=\"https://profiles.wordpress.org/garyj\">Gary Jones</a>、<a href=\"https://profiles.wordpress.org/pento\">Gary Pendergast</a>、<a href=\"https://profiles.wordpress.org/geekysoft\">Geeky Software</a>、<a href=\"https://profiles.wordpress.org/georgestephanis\">George Stephanis</a>、<a href=\"https://profiles.wordpress.org/goranseric\">Goran Šerić</a>、<a href=\"https://profiles.wordpress.org/grahamarmfield\">Graham Armfield</a>、<a href=\"https://profiles.wordpress.org/grantderepas\">Grant Derepas</a>、<a href=\"https://profiles.wordpress.org/greatislander\">greatislander</a>、<a href=\"https://profiles.wordpress.org/tivnet\">Gregory Karpinsky (@tivnet)</a>、<a href=\"https://profiles.wordpress.org/hardeepasrani\">Hardeep Asrani</a>、<a href=\"https://profiles.wordpress.org/henrywright\">Henry Wright</a>、<a href=\"https://profiles.wordpress.org/hiddenpearls\">hiddenpearls</a>、<a href=\"https://profiles.wordpress.org/hnle\">Hinaloe</a>、<a href=\"https://profiles.wordpress.org/hugobaeta\">Hugo Baeta</a>、<a href=\"https://profiles.wordpress.org/polevaultweb\">Iain Poulson</a>、<a href=\"https://profiles.wordpress.org/iamjolly\">iamjolly</a>、<a href=\"https://profiles.wordpress.org/iandunn\">Ian Dunn</a>、<a href=\"https://profiles.wordpress.org/ianedington\">ian.edington</a>、<a href=\"https://profiles.wordpress.org/idealien\">idealien</a>、<a href=\"https://profiles.wordpress.org/igmoweb\">Ignacio Cruz Moreno</a>、<a href=\"https://profiles.wordpress.org/imath\">imath</a>、<a href=\"https://profiles.wordpress.org/imnok\">Imnok</a>、<a href=\"https://profiles.wordpress.org/implenton\">implenton</a>、<a href=\"https://profiles.wordpress.org/ionutst\">Ionut Stanciu</a>、<a href=\"https://profiles.wordpress.org/ipstenu\">Ipstenu (Mika Epstein)</a>、<a href=\"https://profiles.wordpress.org/krstarica\">Ivan</a>、<a href=\"https://profiles.wordpress.org/ivdimova\">ivdimova</a>、<a href=\"https://profiles.wordpress.org/jdgrimes\">J.D. Grimes</a>、<a href=\"https://profiles.wordpress.org/jakept\">Jacob Peattie</a>、<a href=\"https://profiles.wordpress.org/whyisjake\">Jake Spurlock</a>、<a href=\"https://profiles.wordpress.org/jnylen0\">James Nylen</a>、<a href=\"https://profiles.wordpress.org/jamesacero\">jamesacero</a>、<a href=\"https://profiles.wordpress.org/japh\">Japh</a>、<a href=\"https://profiles.wordpress.org/jaredcobb\">Jared Cobb</a>、<a href=\"https://profiles.wordpress.org/jayarjo\">jayarjo</a>、<a href=\"https://profiles.wordpress.org/jdolan\">jdolan</a>、<a href=\"https://profiles.wordpress.org/jdoubleu\">jdoubleu</a>、<a href=\"https://profiles.wordpress.org/cheffheid\">Jeffrey de Wit</a>、<a href=\"https://profiles.wordpress.org/jeremyfelt\">Jeremy Felt</a>、<a href=\"https://profiles.wordpress.org/jpry\">Jeremy Pry</a>、<a href=\"https://profiles.wordpress.org/jimt\">jimt</a>、<a href=\"https://profiles.wordpress.org/jipmoors\">Jip Moors</a>、<a href=\"https://profiles.wordpress.org/jmusal\">jmusal</a>、<a href=\"https://profiles.wordpress.org/joedolson\">Joe Dolson</a>、<a href=\"https://profiles.wordpress.org/joehoyle\">Joe Hoyle</a>、<a href=\"https://profiles.wordpress.org/joemcgill\">Joe McGill</a>、<a href=\"https://profiles.wordpress.org/joelcj91\">Joel James</a>、<a href=\"https://profiles.wordpress.org/johanmynhardt\">johanmynhardt</a>、<a href=\"https://profiles.wordpress.org/johnbillion\">John Blackbourn</a>、<a href=\"https://profiles.wordpress.org/zyphonic\">John Dittmar</a>、<a href=\"https://profiles.wordpress.org/johnjamesjacoby\">John James Jacoby</a>、<a href=\"https://profiles.wordpress.org/johnpbloch\">John P. Bloch</a>、<a href=\"https://profiles.wordpress.org/johnregan3\">John Regan</a>、<a href=\"https://profiles.wordpress.org/johnpgreen\">johnpgreen</a>、<a href=\"https://profiles.wordpress.org/kenshino\">Jon (Kenshino)</a>、<a href=\"https://profiles.wordpress.org/jonathanbardo\">Jonathan Bardo</a>、<a href=\"https://profiles.wordpress.org/jbrinley\">Jonathan Brinley</a>、<a href=\"https://profiles.wordpress.org/daggerhart\">Jonathan Daggerhart</a>、<a href=\"https://profiles.wordpress.org/desrosj\">Jonathan Desrosiers</a>、<a href=\"https://profiles.wordpress.org/spacedmonkey\">Jonny Harris</a>、<a href=\"https://profiles.wordpress.org/jonnyauk\">jonnyauk</a>、<a href=\"https://profiles.wordpress.org/jordesign\">jordesign</a>、<a href=\"https://profiles.wordpress.org/jorritschippers\">JorritSchippers</a>、<a href=\"https://profiles.wordpress.org/joefusco\">Joseph Fusco</a>、<a href=\"https://profiles.wordpress.org/jjeaton\">Josh Eaton</a>、<a href=\"https://profiles.wordpress.org/shelob9\">Josh Pollock</a>、<a href=\"https://profiles.wordpress.org/joshcummingsdesign\">joshcummingsdesign</a>、<a href=\"https://profiles.wordpress.org/joshkadis\">joshkadis</a>、<a href=\"https://profiles.wordpress.org/joyously\">Joy</a>、<a href=\"https://profiles.wordpress.org/jrf\">jrf</a>、<a href=\"https://profiles.wordpress.org/jrgould\">JRGould</a>、<a href=\"https://profiles.wordpress.org/juanfra\">Juanfra Aldasoro</a>、<a href=\"https://profiles.wordpress.org/juhise\">Juhi Saxena</a>、<a href=\"https://profiles.wordpress.org/nukaga\">Junko Nukaga</a>、<a href=\"https://profiles.wordpress.org/justinbusa\">Justin Busa</a>、<a href=\"https://profiles.wordpress.org/justinsainton\">Justin Sainton</a>、<a href=\"https://profiles.wordpress.org/jshreve\">Justin Shreve</a>、<a href=\"https://profiles.wordpress.org/jtsternberg\">Justin Sternberg</a>、<a href=\"https://profiles.wordpress.org/kadamwhite\">K.Adam White</a>、<a href=\"https://profiles.wordpress.org/kacperszurek\">kacperszurek</a>、<a href=\"https://profiles.wordpress.org/trepmal\">Kailey (trepmal)</a>、<a href=\"https://profiles.wordpress.org/kalenjohnson\">KalenJohnson</a>、<a href=\"https://profiles.wordpress.org/codebykat\">Kat Hagan</a>、<a href=\"https://profiles.wordpress.org/kkoppenhaver\">Keanan Koppenhaver</a>、<a href=\"https://profiles.wordpress.org/keesiemeijer\">keesiemeijer</a>、<a href=\"https://profiles.wordpress.org/kellbot\">kellbot</a>、<a href=\"https://profiles.wordpress.org/ryelle\">Kelly Dwan</a>、<a href=\"https://profiles.wordpress.org/wraithkenny\">Ken Newman</a>、<a href=\"https://profiles.wordpress.org/khag7\">Kevin Hagerty</a>、<a href=\"https://profiles.wordpress.org/kwight\">Kirk Wight</a>、<a href=\"https://profiles.wordpress.org/kitchin\">kitchin</a>、<a href=\"https://profiles.wordpress.org/ixkaito\">Kite</a>、<a href=\"https://profiles.wordpress.org/kjbenk\">kjbenk</a>、<a href=\"https://profiles.wordpress.org/knutsp\">Knut Sparhell</a>、<a href=\"https://profiles.wordpress.org/koenschipper\">koenschipper</a>、<a href=\"https://profiles.wordpress.org/kokarn\">kokarn</a>、<a href=\"https://profiles.wordpress.org/kovshenin\">Konstantin Kovshenin</a>、<a href=\"https://profiles.wordpress.org/obenland\">Konstantin Obenland</a>、<a href=\"https://profiles.wordpress.org/kouratoras\">Konstantinos Kouratoras</a>、<a href=\"https://profiles.wordpress.org/kuchenundkakao\">kuchenundkakao</a>、<a href=\"https://profiles.wordpress.org/kuldipem\">kuldipem</a>、<a href=\"https://profiles.wordpress.org/laurelfulford\">Laurel Fulford</a>、<a href=\"https://profiles.wordpress.org/leewillis77\">Lee Willis</a>、<a href=\"https://profiles.wordpress.org/leobaiano\">Leo Baiano</a>、<a href=\"https://profiles.wordpress.org/littlebigthing\">LittleBigThings (Csaba)</a>、<a href=\"https://profiles.wordpress.org/lucasstark\">Lucas Stark</a>、<a href=\"https://profiles.wordpress.org/lukecavanagh\">Luke Cavanagh</a>、<a href=\"https://profiles.wordpress.org/lgedeon\">Luke Gedeon</a>、<a href=\"https://profiles.wordpress.org/lukepettway\">lukepettway</a>、<a href=\"https://profiles.wordpress.org/lyubomir_popov\">lyubomir_popov</a>、<a href=\"https://profiles.wordpress.org/mageshp\">mageshp</a>、<a href=\"https://profiles.wordpress.org/mahesh901122\">Mahesh Waghmare</a>、<a href=\"https://profiles.wordpress.org/mangeshp\">Mangesh Parte</a>、<a href=\"https://profiles.wordpress.org/manishsongirkar36\">Manish Songirkar</a>、<a href=\"https://profiles.wordpress.org/mantismamita\">mantismamita</a>、<a href=\"https://profiles.wordpress.org/mbootsman\">Marcel Bootsman</a>、<a href=\"https://profiles.wordpress.org/tyxla\">Marin Atanasov</a>、<a href=\"https://profiles.wordpress.org/mariovalney\">Mario Valney</a>、<a href=\"https://profiles.wordpress.org/clorith\">Marius L. J. (Clorith)</a>、<a href=\"https://profiles.wordpress.org/markjaquith\">Mark Jaquith</a>、<a href=\"https://profiles.wordpress.org/mrwweb\">Mark Root-Wiley</a>、<a href=\"https://profiles.wordpress.org/mapk\">Mark Uraine</a>、<a href=\"https://profiles.wordpress.org/markoheijnen\">Marko Heijnen</a>、<a href=\"https://profiles.wordpress.org/markshep\">markshep</a>、<a href=\"https://profiles.wordpress.org/matrixik\">matrixik</a>、<a href=\"https://profiles.wordpress.org/mjbanks\">Matt Banks</a>、<a href=\"https://profiles.wordpress.org/jaworskimatt\">Matt Jaworski</a>、<a href=\"https://profiles.wordpress.org/mattking5000\">Matt King</a>、<a href=\"https://profiles.wordpress.org/matt\">Matt Mullenweg</a>、<a href=\"https://profiles.wordpress.org/veraxus\">Matt van Andel</a>、<a href=\"https://profiles.wordpress.org/mattwiebe\">Matt Wiebe</a>、<a href=\"https://profiles.wordpress.org/mattheu\">Matthew Haines-Young</a>、<a href=\"https://profiles.wordpress.org/mattyrob\">mattyrob</a>、<a href=\"https://profiles.wordpress.org/maxcutler\">Max Cutler</a>、<a href=\"https://profiles.wordpress.org/maximeculea\">Maxime Culea</a>、<a href=\"https://profiles.wordpress.org/mayukojpn\">Mayo Moriyama</a>、<a href=\"https://profiles.wordpress.org/mbelchev\">mbelchev</a>、<a href=\"https://profiles.wordpress.org/mckernanin\">mckernanin</a>、<a href=\"https://profiles.wordpress.org/melchoyce\">Mel Choyce</a>、<a href=\"https://profiles.wordpress.org/mhowell\">mhowell</a>、<a href=\"https://profiles.wordpress.org/michaelarestad\">Michael Arestad</a>、<a href=\"https://profiles.wordpress.org/michael-arestad\">Michael Arestad</a>、<a href=\"https://profiles.wordpress.org/michalzuber\">michalzuber</a>、<a href=\"https://profiles.wordpress.org/mauteri\">Mike Auteri</a>、<a href=\"https://profiles.wordpress.org/mihai2u\">Mike Crantea</a>、<a href=\"https://profiles.wordpress.org/mdgl\">Mike Glendinning</a>、<a href=\"https://profiles.wordpress.org/mikehansenme\">Mike Hansen</a>、<a href=\"https://profiles.wordpress.org/mikelittle\">Mike Little</a>、<a href=\"https://profiles.wordpress.org/mikeschroder\">Mike Schroder</a>、<a href=\"https://profiles.wordpress.org/mikeviele\">Mike Viele</a>、<a href=\"https://profiles.wordpress.org/dimadin\">Milan Dinić</a>、<a href=\"https://profiles.wordpress.org/modemlooper\">modemlooper</a>、<a href=\"https://profiles.wordpress.org/batmoo\">Mohammad Jangda</a>、<a href=\"https://profiles.wordpress.org/deremohan\">Mohan Dere</a>、<a href=\"https://profiles.wordpress.org/monikarao\">monikarao</a>、<a href=\"https://profiles.wordpress.org/morettigeorgiev\">morettigeorgiev</a>、<a href=\"https://profiles.wordpress.org/morganestes\">Morgan Estes</a>、<a href=\"https://profiles.wordpress.org/mor10\">Morten Rand-Hendriksen</a>、<a href=\"https://profiles.wordpress.org/mt8biz\">moto hachi ( mt8.biz )</a>、<a href=\"https://profiles.wordpress.org/mrbobbybryant\">mrbobbybryant</a>、<a href=\"https://profiles.wordpress.org/nnaimov\">Naim Naimov</a>、<a href=\"https://profiles.wordpress.org/natewr\">NateWr</a>、<a href=\"https://profiles.wordpress.org/nathanrice\">nathanrice</a>、<a href=\"https://profiles.wordpress.org/nazgul\">Nazgul</a>、<a href=\"https://profiles.wordpress.org/celloexpressions\">Nick Halsey </a>、<a href=\"https://profiles.wordpress.org/nikeo\">Nicolas GUILLAUME</a>、<a href=\"https://profiles.wordpress.org/nikschavan\">Nikhil Chavan</a>、<a href=\"https://profiles.wordpress.org/nikv\">Nikhil Vimal</a>、<a href=\"https://profiles.wordpress.org/nbachiyski\">Nikolay Bachiyski</a>、<a href=\"https://profiles.wordpress.org/rabmalin\">Nilambar Sharma</a>、<a href=\"https://profiles.wordpress.org/noplanman\">noplanman</a>、<a href=\"https://profiles.wordpress.org/nullvariable\">nullvariable</a>、<a href=\"https://profiles.wordpress.org/odie2\">odie2</a>、<a href=\"https://profiles.wordpress.org/odysseygate\">odyssey</a>、<a href=\"https://profiles.wordpress.org/hideokamoto\">Okamoto Hidetaka</a>、<a href=\"https://profiles.wordpress.org/orvils\">orvils</a>、<a href=\"https://profiles.wordpress.org/oskosk\">oskosk</a>、<a href=\"https://profiles.wordpress.org/ottok\">Otto Kekäläinen</a>、<a href=\"https://profiles.wordpress.org/ovann86\">ovann86</a>、<a href=\"https://profiles.wordpress.org/swissspidy\">Pascal Birchler</a>、<a href=\"https://profiles.wordpress.org/patilvikasj\">patilvikasj</a>、<a href=\"https://profiles.wordpress.org/pbearne\">Paul Bearne</a>、<a href=\"https://profiles.wordpress.org/paulwilde\">Paul Wilde</a>、<a href=\"https://profiles.wordpress.org/sirbrillig\">Payton Swick</a>、<a href=\"https://profiles.wordpress.org/pdufour\">pdufour</a>、<a href=\"https://profiles.wordpress.org/piewp\">Perdaan</a>、<a href=\"https://profiles.wordpress.org/peterwilsoncc\">Peter Wilson</a>、<a href=\"https://profiles.wordpress.org/phh\">phh</a>、<a href=\"https://profiles.wordpress.org/php\">php</a>、<a href=\"https://profiles.wordpress.org/delawski\">Piotr Delawski</a>、<a href=\"https://profiles.wordpress.org/pippinsplugins\">pippinsplugins</a>、<a href=\"https://profiles.wordpress.org/pjgalbraith\">pjgalbraith</a>、<a href=\"https://profiles.wordpress.org/pkevan\">pkevan</a>、<a href=\"https://profiles.wordpress.org/pratikchaskar\">Pratik</a>、<a href=\"https://profiles.wordpress.org/pressionate\">Pressionate</a>、<a href=\"https://profiles.wordpress.org/presskopp\">Presskopp</a>、<a href=\"https://profiles.wordpress.org/procodewp\">procodewp</a>、<a href=\"https://profiles.wordpress.org/quasel\">quasel</a>、<a href=\"https://profiles.wordpress.org/rachelbaker\">Rachel Baker</a>、<a href=\"https://profiles.wordpress.org/rahulsprajapati\">Rahul Prajapati</a>、<a href=\"https://profiles.wordpress.org/superpoincare\">Ramanan</a>、<a href=\"https://profiles.wordpress.org/ramiy\">Rami Yushuvaev</a>、<a href=\"https://profiles.wordpress.org/ramiabraham\">ramiabraham</a>、<a href=\"https://profiles.wordpress.org/ranh\">ranh</a>、<a href=\"https://profiles.wordpress.org/redsand\">Red Sand Media Group</a>、<a href=\"https://profiles.wordpress.org/rianrietveld\">Rian Rietveld</a>、<a href=\"https://profiles.wordpress.org/iamfriendly\">Richard Tape</a>、<a href=\"https://profiles.wordpress.org/rpayne7264\">Robert D Payne</a>、<a href=\"https://profiles.wordpress.org/rnoakes3rd\">Robert Noakes</a>、<a href=\"https://profiles.wordpress.org/d4z_c0nf\">Rocco Aliberti</a>、<a href=\"https://profiles.wordpress.org/rodrigosprimo\">Rodrigo Primo</a>、<a href=\"https://profiles.wordpress.org/rommelxcastro\">Rommel Castro</a>、<a href=\"https://profiles.wordpress.org/fronaldaraujo\">Ronald Araújo</a>、<a href=\"https://profiles.wordpress.org/magicroundabout\">Ross Wintle</a>、<a href=\"https://profiles.wordpress.org/guavaworks\">Roy Sivan</a>、<a href=\"https://profiles.wordpress.org/ryankienstra\">Ryan Kienstra</a>、<a href=\"https://profiles.wordpress.org/rmccue\">Ryan McCue</a>、<a href=\"https://profiles.wordpress.org/ryanplas\">Ryan Plas</a>、<a href=\"https://profiles.wordpress.org/welcher\">Ryan Welcher</a>、<a href=\"https://profiles.wordpress.org/salcode\">Sal Ferrarello</a>、<a href=\"https://profiles.wordpress.org/samikeijonen\">Sami Keijonen</a>、<a href=\"https://profiles.wordpress.org/solarissmoke\">Samir Shah</a>、<a href=\"https://profiles.wordpress.org/samuelsidler\">Samuel Sidler</a>、<a href=\"https://profiles.wordpress.org/sandesh055\">Sandesh</a>、<a href=\"https://profiles.wordpress.org/smyoon315\">Sang-Min Yoon</a>、<a href=\"https://profiles.wordpress.org/pollyplummer\">Sarah Gooding</a>、<a href=\"https://profiles.wordpress.org/sayedwp\">Sayed Taqui</a>、<a href=\"https://profiles.wordpress.org/schlessera\">schlessera</a>、<a href=\"https://profiles.wordpress.org/schrapel\">schrapel</a>、<a href=\"https://profiles.wordpress.org/coffee2code\">Scott Reilly</a>、<a href=\"https://profiles.wordpress.org/wonderboymusic\">Scott Taylor</a>、<a href=\"https://profiles.wordpress.org/scrappyhuborg\">scrappy@hub.org</a>、<a href=\"https://profiles.wordpress.org/scribu\">scribu</a>、<a href=\"https://profiles.wordpress.org/seancjones\">seancjones</a>、<a href=\"https://profiles.wordpress.org/sebastianpisula\">Sebastian Pisula</a>、<a href=\"https://profiles.wordpress.org/sergeybiryukov\">Sergey Biryukov</a>、<a href=\"https://profiles.wordpress.org/sgr33n\">Sergio De Falco</a>、<a href=\"https://profiles.wordpress.org/shayanys\">shayanys</a>、<a href=\"https://profiles.wordpress.org/shprink\">shprink</a>、<a href=\"https://profiles.wordpress.org/simonlampen\">simonlampen</a>、<a href=\"https://profiles.wordpress.org/skippy\">skippy</a>、<a href=\"https://profiles.wordpress.org/smerriman\">smerriman</a>、<a href=\"https://profiles.wordpress.org/snacking\">snacking</a>、<a href=\"https://profiles.wordpress.org/soean\">Soeren Wrede</a>、<a href=\"https://profiles.wordpress.org/solal\">solal</a>、<a href=\"https://profiles.wordpress.org/sstoqnov\">Stanimir Stoyanov</a>、<a href=\"https://profiles.wordpress.org/metodiew\">Stanko Metodiev</a>、<a href=\"https://profiles.wordpress.org/sharkomatic\">Steph</a>、<a href=\"https://profiles.wordpress.org/sswells\">Steph Wells</a>、<a href=\"https://profiles.wordpress.org/sillybean\">Stephanie Leary</a>、<a href=\"https://profiles.wordpress.org/netweb\">Stephen Edgar</a>、<a href=\"https://profiles.wordpress.org/stephenharris\">Stephen Harris</a>、<a href=\"https://profiles.wordpress.org/stevenkword\">Steven Word</a>、<a href=\"https://profiles.wordpress.org/stevenlinx\">stevenlinx</a>、<a href=\"https://profiles.wordpress.org/stubgo\">stubgo</a>、<a href=\"https://profiles.wordpress.org/sudar\">Sudar Muthu</a>、<a href=\"https://profiles.wordpress.org/patilswapnilv\">Swapnil V. Patil</a>、<a href=\"https://profiles.wordpress.org/takahashi_fumiki\">Takahashi Fumiki</a>、<a href=\"https://profiles.wordpress.org/miyauchi\">Takayuki Miyauchi</a>、<a href=\"https://profiles.wordpress.org/karmatosed\">Tammie Lister</a>、<a href=\"https://profiles.wordpress.org/tapsboy\">tapsboy</a>、<a href=\"https://profiles.wordpress.org/tlovett1\">Taylor Lovett</a>、<a href=\"https://profiles.wordpress.org/team\">team</a>、<a href=\"https://profiles.wordpress.org/tg29359\">tg29359</a>、<a href=\"https://profiles.wordpress.org/tharsheblows\">tharsheblows</a>、<a href=\"https://profiles.wordpress.org/the\">the</a>、<a href=\"https://profiles.wordpress.org/themeshaper\">themeshaper</a>、<a href=\"https://profiles.wordpress.org/thenbrent\">thenbrent</a>、<a href=\"https://profiles.wordpress.org/thomaswm\">thomaswm</a>、<a href=\"https://profiles.wordpress.org/tfrommen\">Thorsten Frommen</a>、<a href=\"https://profiles.wordpress.org/tierra\">tierra</a>、<a href=\"https://profiles.wordpress.org/tnash\">Tim Nash</a>、<a href=\"https://profiles.wordpress.org/timmydcrawford\">Timmy Crawford</a>、<a href=\"https://profiles.wordpress.org/timothyblynjacobs\">Timothy Jacobs</a>、<a href=\"https://profiles.wordpress.org/tkama\">Tkama</a>、<a href=\"https://profiles.wordpress.org/tnegri\">tnegri</a>、<a href=\"https://profiles.wordpress.org/tomauger\">Tom Auger</a>、<a href=\"https://profiles.wordpress.org/tjnowell\">Tom J Nowell</a>、<a href=\"https://profiles.wordpress.org/tomdxw\">tomdxw</a>、<a href=\"https://profiles.wordpress.org/toro_unit\">Toro_Unit (Hiroshi Urabe)</a>、<a href=\"https://profiles.wordpress.org/zodiac1978\">Torsten Landsiedel</a>、<a href=\"https://profiles.wordpress.org/transl8or\">transl8or</a>、<a href=\"https://profiles.wordpress.org/traversal\">traversal</a>、<a href=\"https://profiles.wordpress.org/wpsmith\">Travis Smith</a>、<a href=\"https://profiles.wordpress.org/nmt90\">Triet Minh</a>、<a href=\"https://profiles.wordpress.org/trishasalas\">Trisha Salas</a>、<a href=\"https://profiles.wordpress.org/tristangemus\">tristangemus</a>、<a href=\"https://profiles.wordpress.org/truongwp\">Truong Giang</a>、<a href=\"https://profiles.wordpress.org/tsl143\">tsl143</a>、<a href=\"https://profiles.wordpress.org/tywayne\">Ty Carlson</a>、<a href=\"https://profiles.wordpress.org/grapplerulrich\">Ulrich</a>、<a href=\"https://profiles.wordpress.org/utkarshpatel\">Utkarsh</a>、<a href=\"https://profiles.wordpress.org/valeriutihai\">Valeriu Tihai</a>、<a href=\"https://profiles.wordpress.org/vishalkakadiya\">Vishal Kakadiya</a>、<a href=\"https://profiles.wordpress.org/voldemortensen\">voldemortensen</a>、<a href=\"https://profiles.wordpress.org/vrundakansara-1\">Vrunda Kansara</a>、<a href=\"https://profiles.wordpress.org/webbgaraget\">webbgaraget</a>、<a href=\"https://profiles.wordpress.org/webmandesign\">WebMan Design | Oliver Juhas</a>、<a href=\"https://profiles.wordpress.org/websupporter\">websupporter</a>、<a href=\"https://profiles.wordpress.org/westonruter\">Weston Ruter</a>、<a href=\"https://profiles.wordpress.org/earnjam\">William Earnhardt</a>、<a href=\"https://profiles.wordpress.org/williampatton\">williampatton</a>、<a href=\"https://profiles.wordpress.org/wolly\">Wolly aka Paolo Valenti</a>、<a href=\"https://profiles.wordpress.org/yale01\">yale01</a>、<a href=\"https://profiles.wordpress.org/yoavf\">Yoav Farhi</a>、<a href=\"https://profiles.wordpress.org/yogasukma\">Yoga Sukma</a>、<a href=\"https://profiles.wordpress.org/youknowriad\">youknowriad</a>、<a href=\"https://profiles.wordpress.org/oxymoron\">Zach Wills</a>、<a href=\"https://profiles.wordpress.org/tollmanz\">Zack Tollman</a>、<a href=\"https://profiles.wordpress.org/vanillalounge\">Ze Fontainhas</a>、<a href=\"https://profiles.wordpress.org/zhildzik\">zhildzik</a>和<a href=\"https://profiles.wordpress.org/zsusag\">zsusag</a>。</p>\n<p>特别感谢<a href=\"https://ramiabraham.com/\">Rami Abraham</a>制作发布视频。</p>\n<p>最后，让我们感谢为本次发布提供了翻译的贡献者。WordPress 4.7被翻译成了52种语言，这次的发布视频也被翻译成了44种语言！</p>\n<p>如果您想帮忙，请查阅<a href=\"https://make.wordpress.org/\">Make WordPress</a>和我们的<a href=\"https://make.wordpress.org/core/\">核心开发博客</a>。感谢您选择WordPress，我们希望您喜欢！</p>\n</div>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:49:\"https://cn.wordpress.org/2016/12/08/vaughan/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"3\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:3;a:6:{s:4:\"data\";s:42:\"\n		\n		\n		\n		\n		\n				\n\n		\n		\n				\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:26:\"WordPress 4.5“Coleman”\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:44:\"https://cn.wordpress.org/2016/04/17/coleman/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:53:\"https://cn.wordpress.org/2016/04/17/coleman/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sun, 17 Apr 2016 03:18:28 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:32:\"https://cn.wordpress.org/?p=1024\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:49:\"WordPress 4.5简体中文版现已开放下载。\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Jimmy Xu\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:26377:\"<div style=\"width: 692px\">\n<p>WordPress 4.5简体中文版现已<a href=\"https://cn.wordpress.org/releases/\">开放下载</a>，或在您的WordPress仪表盘中升级。我们将此版本命名为“Coleman”，以纪念爵士萨克斯手科尔曼·霍金斯。4.5的全新功能协助您精简工作流程，无论您要写作还是建构网站。</p>\n<div id=\"v-scFdjVo6-1\" class=\"video-player\"><video id=\"v-scFdjVo6-1-video\" width=\"692\" height=\"388\" poster=\"https://videos.files.wordpress.com/scFdjVo6/video-604c4abe08_scruberthumbnail_1.jpg\" controls=\"true\" preload=\"metadata\" dir=\"ltr\" lang=\"en\"><source src=\"https://videos.files.wordpress.com/scFdjVo6/video-604c4abe08_dvd.mp4\" type=\"video/mp4; codecs=&quot;avc1.64001E, mp4a.40.2&quot;\" /><source src=\"https://videos.files.wordpress.com/scFdjVo6/video-604c4abe08_fmt1.ogv\" type=\"video/ogg; codecs=&quot;theora, vorbis&quot;\" /><div><img alt=\"Introducing WordPress 4.5 “Coleman”\" src=\"https://videos.files.wordpress.com/scFdjVo6/video-604c4abe08_scruberthumbnail_1.jpg\" width=\"692\" height=\"388\" /></div><p>Introducing WordPress 4.5 “Coleman”</p></video></div>\n<hr />\n<h2 style=\"text-align: center\">编辑功能的改善</h2>\n<p><img class=\"aligncenter size-full wp-image-4220\" src=\"https://wordpress.org/news/files/2016/04/illustration-short-inlinelinks.png\" alt=\"illustration-short-inlinelinks\" width=\"1000\" height=\"400\" /></p>\n<h3>行内链接</h3>\n<p>通过降低分心的编写界面，轻易地链接内容，让您更专注在您的写作上。</p>\n<p><img class=\"aligncenter size-full wp-image-4265\" src=\"https://wordpress.org/news/files/2016/04/editing-shortcuts-big.gif\" alt=\"editing-shortcuts-big\" width=\"960\" height=\"576\" /></p>\n<h3>格式捷径</h3>\n<p>您喜欢在编写列表和标题时使用格式捷径吗？伴随着水平线和<code>&lt;code&gt;</code>现在它们变得更好用了。</p>\n<hr />\n<h2 style=\"text-align: center\">自定义进步</h2>\n<p><img class=\"aligncenter size-full wp-image-4221\" src=\"https://wordpress.org/news/files/2016/04/illustration-short-responsive-preview.png\" alt=\"illustration-short-responsive-preview\" width=\"1000\" height=\"400\" /></p>\n<h3>实时响应式预览</h3>\n<p>确保您的站点在所有设备屏幕上都能完美呈现！在定制器中直接预览手机、平板及桌面的版面。</p>\n<p><img class=\"aligncenter wp-image-4239 size-full\" src=\"https://wordpress.org/news/files/2016/04/illustration-short-customlogo-whitespace.png\" width=\"1000\" height=\"440\" /></p>\n<h3>自定标志</h3>\n<p>“二〇一五”及“二〇一六”主题已经更新，现已支持自定标志，您可以在定制器的“站点识别”一节找到，</p>\n<hr />\n<h2 style=\"text-align: center\">引擎盖下</h2>\n<div class=\"under-the-hood three-col\">\n<div class=\"col\">\n<h3>智能图片缩放</h3>\n<p>生成图片的速度现在提升了50%且无损品质。<a href=\"https://make.wordpress.org/core/2016/03/12/performance-improvements-for-images-in-wordpress-4-5/\">这真的非常酷</a>。</p>\n</div>\n<div class=\"col\">\n<h3>选择性刷新</h3>\n<p>定制器现在支持<a href=\"https://make.wordpress.org/core/2016/02/16/selective-refresh-in-the-customizer/\">全方位框架</a>来渲染各部分的预览，无须使用JavaScript重写您的PHP代码。</p>\n</div>\n<div class=\"col\">\n<h3>改善脚本载入器</h3>\n<p>更好地支持了脚本头/尾的依赖关系。新的<code><a href=\"https://make.wordpress.org/core/2016/03/08/enhanced-script-loader-in-wordpress-4-5/\">wp_add_inline_script()</a></code>可以针对已注册的脚本加入额外的代码。</p>\n<h3>更棒的嵌入模板</h3>\n<p>嵌入模板已分离为不同部分，并且可以通过模板层级<a href=\"https://make.wordpress.org/core/2016/03/11/embeds-changes-in-wordpress-4-5/\">直接由主题进行覆盖</a>。</p>\n<h3>JavaScript库更新</h3>\n<p>jQuery 1.12.3、jQuery Migrate 1.4.0、Backbone 1.2.3和Underscore 1.8.3现已收录。</p>\n</div>\n</div>\n<div class=\"under-the-hood two-col\"></div>\n<hr />\n<h2 style=\"text-align: center\">开发团队</h2>\n<p><a class=\"alignleft\" href=\"https://profiles.wordpress.org/mikeschroder\"><img id=\"grav-76424a001dc6b3ebb4faca0c567800c4-0\" class=\"grav-hashed\" src=\"https://www.gravatar.com/avatar/76424a001dc6b3ebb4faca0c567800c4?d=mm&amp;s=180&amp;r=G\" alt=\"Mike Schroder\" width=\"80\" height=\"80\" /></a>此次发布由<a href=\"https://getsource.net/\">Mike Schroder</a>领头，由<a href=\"https://profiles.wordpress.org/adamsilverstein\">Adam Silverstein</a>担任发布代表，<a href=\"https://choycedesign.com/\">Mel Choyce</a>担任发布设计主管，并得到了以下个人的帮助。这次发布包含了298人的贡献。在您喜欢的音乐服务中听听科尔曼·霍金斯，并看看下面这些个人资料吧：</p>\n<p><a href=\"https://profiles.wordpress.org/mercime\">@mercime</a>、<a href=\"https://profiles.wordpress.org/aaroncampbell\">Aaron D. Campbell</a>、<a href=\"https://profiles.wordpress.org/uglyrobot\">Aaron Edwards</a>、<a href=\"https://profiles.wordpress.org/ahockley\">Aaron Hockley</a>、<a href=\"https://profiles.wordpress.org/jorbin\">Aaron Jorbin</a>、<a href=\"https://profiles.wordpress.org/abiralneupane\">Abiral Neupane</a>、<a href=\"https://profiles.wordpress.org/mrahmadawais\">Ahmad Awais</a>、<a href=\"https://profiles.wordpress.org/aidanlane\">aidanlane</a>、<a href=\"https://profiles.wordpress.org/ambrosey\">Alice Brosey</a>、<a href=\"https://profiles.wordpress.org/arush\">Amanda Rush</a>、<a href=\"https://profiles.wordpress.org/afercia\">Andrea Fercia</a>、<a href=\"https://profiles.wordpress.org/andg\">Andrea Gandino</a>、<a href=\"https://profiles.wordpress.org/nacin\">Andrew Nacin</a>、<a href=\"https://profiles.wordpress.org/azaozz\">Andrew Ozz</a>、<a href=\"https://profiles.wordpress.org/rockwell15\">Andrew Rockwell</a>、<a href=\"https://profiles.wordpress.org/andizer\">Andy</a>、<a href=\"https://profiles.wordpress.org/ankit-k-gupta\">Ankit K Gupta</a>、<a href=\"https://profiles.wordpress.org/atimmer\">Anton Timmermans</a>、<a href=\"https://profiles.wordpress.org/apaliku\">apaliku</a>、<a href=\"https://profiles.wordpress.org/aramzs\">Aram Zucker-Scharff</a>、<a href=\"https://profiles.wordpress.org/ashmatadeen\">ash.matadeen</a>、<a href=\"https://profiles.wordpress.org/bappidgreat\">Ashok Kumar Nath</a>、<a href=\"https://profiles.wordpress.org/bandonrandon\">BandonRandon</a>、<a href=\"https://profiles.wordpress.org/barryceelen\">Barry Ceelen</a>、<a href=\"https://profiles.wordpress.org/empireoflight\">Ben Dunkle</a>、<a href=\"https://profiles.wordpress.org/berengerzyla\">berengerzyla</a>、<a href=\"https://profiles.wordpress.org/neoxx\">Bernhard Riedl</a>、<a href=\"https://profiles.wordpress.org/thisisit\">Bhushan S. Jawle</a>、<a href=\"https://profiles.wordpress.org/birgire\">Birgir Erlendsson (birgire)</a>、<a href=\"https://profiles.wordpress.org/boonebgorges\">Boone B. Gorges</a>、<a href=\"https://profiles.wordpress.org/williamsba1\">Brad Williams</a>、<a href=\"https://profiles.wordpress.org/bradyvercher\">Brady Vercher</a>、<a href=\"https://profiles.wordpress.org/thebrandonallen\">Brandon Allen</a>、<a href=\"https://profiles.wordpress.org/bhubbard\">Brandon Hubbard</a>、<a href=\"https://profiles.wordpress.org/kraftbj\">Brandon Kraft</a>、<a href=\"https://profiles.wordpress.org/krogsgard\">Brian Krogsgard</a>、<a href=\"https://profiles.wordpress.org/borgesbruno\">Bruno Borges</a>、<a href=\"https://profiles.wordpress.org/chmac\">Callum Macdonald</a>、<a href=\"https://profiles.wordpress.org/camikaos\">Cami Kaos</a>、<a href=\"https://profiles.wordpress.org/chandrapatel\">Chandra Patel</a>、<a href=\"https://profiles.wordpress.org/mackensen\">Charles Fulton</a>、<a href=\"https://profiles.wordpress.org/chetanchauhan\">Chetan Chauhan</a>、<a href=\"https://profiles.wordpress.org/chouby\">Chouby</a>、<a href=\"https://profiles.wordpress.org/chrico\">ChriCo</a>、<a href=\"https://profiles.wordpress.org/chriscct7\">Chris Christoff</a>、<a href=\"https://profiles.wordpress.org/chris_dev\">Chris Mok</a>、<a href=\"https://profiles.wordpress.org/christophherr\">Christoph Herr</a>、<a href=\"https://profiles.wordpress.org/ckoerner\">ckoerner</a>、<a href=\"https://profiles.wordpress.org/claudiosanches\">Claudio Sanches</a>、<a href=\"https://profiles.wordpress.org/compute\">Compute</a>、<a href=\"https://profiles.wordpress.org/coreymcollins\">coreymcollins</a>、<a href=\"https://profiles.wordpress.org/d4z_c0nf\">d4z_c0nf</a>、<a href=\"https://profiles.wordpress.org/extendwings\">Daisuke Takahashi</a>、<a href=\"https://profiles.wordpress.org/danhgilmore\">danhgilmore</a>、<a href=\"https://profiles.wordpress.org/danielbachhuber\">Daniel Bachhuber</a>、<a href=\"https://profiles.wordpress.org/scarinessreported\">Daniel Bailey</a>、<a href=\"https://profiles.wordpress.org/redsweater\">Daniel Jalkut (Red Sweater)</a>、<a href=\"https://profiles.wordpress.org/diddledan\">Daniel Llewellyn</a>、<a href=\"https://profiles.wordpress.org/mte90\">Daniele Scasciafratte</a>、<a href=\"https://profiles.wordpress.org/danielpataki\">danielpataki</a>、<a href=\"https://profiles.wordpress.org/dvankooten\">Danny van Kooten</a>、<a href=\"https://profiles.wordpress.org/thewanderingbrit\">Dave Clements</a>、<a href=\"https://profiles.wordpress.org/davidakennedy\">David A. Kennedy</a>、<a href=\"https://profiles.wordpress.org/dbrumbaugh10up\">David Brumbaugh</a>、<a href=\"https://profiles.wordpress.org/dlh\">David Herrera</a>、<a href=\"https://profiles.wordpress.org/dnewton\">David Newton</a>、<a href=\"https://profiles.wordpress.org/dshanske\">David Shanske</a>、<a href=\"https://profiles.wordpress.org/folletto\">Davide &#8216;Folletto&#8217; Casali</a>、<a href=\"https://profiles.wordpress.org/denis-de-bernardy\">Denis de Bernardy</a>、<a href=\"https://profiles.wordpress.org/realloc\">Dennis Ploetner</a>、<a href=\"https://profiles.wordpress.org/valendesigns\">Derek Herman</a>、<a href=\"https://profiles.wordpress.org/dd32\">Dion Hulse</a>、<a href=\"https://profiles.wordpress.org/dmsnell\">dmsnell</a>、<a href=\"https://profiles.wordpress.org/ocean90\">Dominik Schilling</a>、<a href=\"https://profiles.wordpress.org/dossy\">Dossy Shiobara</a>、<a href=\"https://profiles.wordpress.org/dotancohen\">Dotan Cohen</a>、<a href=\"https://profiles.wordpress.org/drebbitsweb\">Dreb Bits</a>、<a href=\"https://profiles.wordpress.org/drewapicture\">Drew Jaynes</a>、<a href=\"https://profiles.wordpress.org/duaneblake\">duaneblake</a>、<a href=\"https://profiles.wordpress.org/kucrut\">Dzikri Aziz</a>、<a href=\"https://profiles.wordpress.org/eliorivero\">Elio Rivero</a>、<a href=\"https://profiles.wordpress.org/iseulde\">Ella Iseulde Van Dorpe</a>、<a href=\"https://profiles.wordpress.org/codex-m\">Emerson Maningo</a>、<a href=\"https://profiles.wordpress.org/enej\">enej</a>、<a href=\"https://profiles.wordpress.org/ericlewis\">Eric Andrew Lewis</a>、<a href=\"https://profiles.wordpress.org/ebinnion\">Eric Binnion</a>、<a href=\"https://profiles.wordpress.org/ericdaams\">Eric Daams</a>、<a href=\"https://profiles.wordpress.org/ethitter\">Erick Hitter</a>、<a href=\"https://profiles.wordpress.org/eherman24\">Evan Herman</a>、<a href=\"https://profiles.wordpress.org/fab1en\">Fabien Quatravaux</a>、<a href=\"https://profiles.wordpress.org/faishal\">faishal</a>、<a href=\"https://profiles.wordpress.org/fantasyworld\">fantasyworld</a>、<a href=\"https://profiles.wordpress.org/flixos90\">Felix Arntz</a>、<a href=\"https://profiles.wordpress.org/finnj\">finnj</a>、<a href=\"https://profiles.wordpress.org/firebird75\">firebird75</a>、<a href=\"https://profiles.wordpress.org/frozzare\">Fredrik Forsmo</a>、<a href=\"https://profiles.wordpress.org/fusillicode\">fusillicode</a>、<a href=\"https://profiles.wordpress.org/garyj\">Gary Jones</a>、<a href=\"https://profiles.wordpress.org/pento\">Gary Pendergast</a>、<a href=\"https://profiles.wordpress.org/gblsm\">gblsm</a>、<a href=\"https://profiles.wordpress.org/georgestephanis\">George Stephanis</a>、<a href=\"https://profiles.wordpress.org/garusky\">Giuseppe Mamone</a>、<a href=\"https://profiles.wordpress.org/jubstuff\">Giustino Borzacchiello</a>、<a href=\"https://profiles.wordpress.org/grantpalin\">Grant Palin</a>、<a href=\"https://profiles.wordpress.org/groovecoder\">groovecoder</a>、<a href=\"https://profiles.wordpress.org/wido\">Guido Scialfa</a>、<a href=\"https://profiles.wordpress.org/bordoni\">Gustavo Bordoni</a>、<a href=\"https://profiles.wordpress.org/hakre\">hakre</a>、<a href=\"https://profiles.wordpress.org/helen\">Helen Hou-Sandí</a>、<a href=\"https://profiles.wordpress.org/henrywright\">Henry Wright</a>、<a href=\"https://profiles.wordpress.org/hnle\">Hinaloe</a>、<a href=\"https://profiles.wordpress.org/hlashbrooke\">Hugh Lashbrooke</a>、<a href=\"https://profiles.wordpress.org/hugobaeta\">Hugo Baeta</a>、<a href=\"https://profiles.wordpress.org/polevaultweb\">Iain Poulson</a>、<a href=\"https://profiles.wordpress.org/igmoweb\">Ignacio Cruz Moreno</a>、<a href=\"https://profiles.wordpress.org/imath\">imath</a>、<a href=\"https://profiles.wordpress.org/iamntz\">Ionut Staicu</a>、<a href=\"https://profiles.wordpress.org/ivankristianto\">Ivan Kristianto</a>、<a href=\"https://profiles.wordpress.org/jdgrimes\">J.D. Grimes</a>、<a href=\"https://profiles.wordpress.org/jadpm\">jadpm</a>、<a href=\"https://profiles.wordpress.org/jamesdigioia\">James DiGioia</a>、<a href=\"https://profiles.wordpress.org/jason_the_adams\">Jason</a>、<a href=\"https://profiles.wordpress.org/jaspermdegroot\">Jasper de Groot</a>、<a href=\"https://profiles.wordpress.org/cheffheid\">Jeffrey de Wit</a>、<a href=\"https://profiles.wordpress.org/jeffpyebrookcom\">Jeffrey Schutzman</a>、<a href=\"https://profiles.wordpress.org/jmdodd\">Jennifer M. Dodd</a>、<a href=\"https://profiles.wordpress.org/jeremyfelt\">Jeremy Felt</a>、<a href=\"https://profiles.wordpress.org/jeherve\">Jeremy Herve</a>、<a href=\"https://profiles.wordpress.org/jpry\">Jeremy Pry</a>、<a href=\"https://profiles.wordpress.org/jesin\">Jesin A</a>、<a href=\"https://profiles.wordpress.org/ardathksheyna\">Jess G.</a>、<a href=\"https://profiles.wordpress.org/boluda\">Joan Boluda</a>、<a href=\"https://profiles.wordpress.org/joehoyle\">Joe Hoyle</a>、<a href=\"https://profiles.wordpress.org/joemcgill\">Joe McGill</a>、<a href=\"https://profiles.wordpress.org/joelerr\">joelerr</a>、<a href=\"https://profiles.wordpress.org/johnbillion\">John Blackbourn</a>、<a href=\"https://profiles.wordpress.org/johnjamesjacoby\">John James Jacoby</a>、<a href=\"https://profiles.wordpress.org/johnnypea\">JohnnyPea</a>、<a href=\"https://profiles.wordpress.org/jbrinley\">Jonathan Brinley</a>、<a href=\"https://profiles.wordpress.org/spacedmonkey\">Jonny Harris</a>、<a href=\"https://profiles.wordpress.org/keraweb\">Jory Hogeveen</a>、<a href=\"https://profiles.wordpress.org/joefusco\">Joseph Fusco</a>、<a href=\"https://profiles.wordpress.org/joshlevinson\">Josh Levinson</a>、<a href=\"https://profiles.wordpress.org/shelob9\">Josh Pollock</a>、<a href=\"https://profiles.wordpress.org/jrchamp\">jrchamp</a>、<a href=\"https://profiles.wordpress.org/jrf\">jrf</a>、<a href=\"https://profiles.wordpress.org/juanfra\">Juanfra Aldasoro</a>、<a href=\"https://profiles.wordpress.org/juhise\">Juhi Saxena</a>、<a href=\"https://profiles.wordpress.org/juliobox\">Julio Potier</a>、<a href=\"https://profiles.wordpress.org/katieburch\">katieburch</a>、<a href=\"https://profiles.wordpress.org/ryelle\">Kelly Dwan</a>、<a href=\"https://profiles.wordpress.org/khag7\">Kevin Hagerty</a>、<a href=\"https://profiles.wordpress.org/kiranpotphode\">Kiran Potphode</a>、<a href=\"https://profiles.wordpress.org/kwight\">Kirk Wight</a>、<a href=\"https://profiles.wordpress.org/ixkaito\">Kite</a>、<a href=\"https://profiles.wordpress.org/kjbenk\">kjbenk</a>、<a href=\"https://profiles.wordpress.org/kovshenin\">Konstantin Kovshenin</a>、<a href=\"https://profiles.wordpress.org/obenland\">Konstantin Obenland</a>、<a href=\"https://profiles.wordpress.org/kouratoras\">Konstantinos Kouratoras</a>、<a href=\"https://profiles.wordpress.org/krissiev\">KrissieV</a>、<a href=\"https://profiles.wordpress.org/lancewillett\">Lance Willett</a>、<a href=\"https://profiles.wordpress.org/leemon\">leemon</a>、<a href=\"https://profiles.wordpress.org/layotte\">Lew Ayotte</a>、<a href=\"https://profiles.wordpress.org/liamdempsey\">Liam Dempsey</a>、<a href=\"https://profiles.wordpress.org/luan-ramos\">Luan Ramos</a>、<a href=\"https://profiles.wordpress.org/luciole135\">luciole135</a>、<a href=\"https://profiles.wordpress.org/lpawlik\">Lukas Pawlik</a>、<a href=\"https://profiles.wordpress.org/latz\">Lutz Schröer</a>、<a href=\"https://profiles.wordpress.org/madvic\">madvic</a>、<a href=\"https://profiles.wordpress.org/marcochiesi\">Marco Chiesi</a>、<a href=\"https://profiles.wordpress.org/tyxla\">Marin Atanasov</a>、<a href=\"https://profiles.wordpress.org/nofearinc\">Mario Peshev</a>、<a href=\"https://profiles.wordpress.org/mark8barnes\">Mark Barnes</a>、<a href=\"https://profiles.wordpress.org/markjaquith\">Mark Jaquith</a>、<a href=\"https://profiles.wordpress.org/mapk\">Mark Uraine</a>、<a href=\"https://profiles.wordpress.org/markoheijnen\">Marko Heijnen</a>、<a href=\"https://profiles.wordpress.org/gitlost\">Martin Burke</a>、<a href=\"https://profiles.wordpress.org/mattfelten\">Matt Felten</a>、<a href=\"https://profiles.wordpress.org/matt\">Matt Mullenweg</a>、<a href=\"https://profiles.wordpress.org/mattwiebe\">Matt Wiebe</a>、<a href=\"https://profiles.wordpress.org/mattgeri\">MattGeri</a>、<a href=\"https://profiles.wordpress.org/wp-architect\">Matthew Ell</a>、<a href=\"https://profiles.wordpress.org/maweder\">maweder</a>、<a href=\"https://profiles.wordpress.org/mayukojpn\">Mayo Moriyama</a>、<a href=\"https://profiles.wordpress.org/mcapybara\">mcapybara</a>、<a href=\"https://profiles.wordpress.org/mehulkaklotar\">Mehul Kaklotar</a>、<a href=\"https://profiles.wordpress.org/meitar\">Meitar</a>、<a href=\"https://profiles.wordpress.org/mensmaximus\">mensmaximus</a>、<a href=\"https://profiles.wordpress.org/michael-arestad\">Michael Arestad</a>、<a href=\"https://profiles.wordpress.org/michalzuber\">michalzuber</a>、<a href=\"https://profiles.wordpress.org/micropat\">micropat</a>、<a href=\"https://profiles.wordpress.org/ipstenu\">Mika Epstein</a>、<a href=\"https://profiles.wordpress.org/mdgl\">Mike Glendinning</a>、<a href=\"https://profiles.wordpress.org/mikehansenme\">Mike Hansen</a>、<a href=\"https://profiles.wordpress.org/mikejolley\">Mike Jolley</a>、<a href=\"https://profiles.wordpress.org/dimadin\">Milan Dinić</a>、<a href=\"https://profiles.wordpress.org/morganestes\">Morgan Estes</a>、<a href=\"https://profiles.wordpress.org/mt8biz\">moto hachi ( mt8.biz )</a>、<a href=\"https://profiles.wordpress.org/usermrpapa\">Mr Papa</a>、<a href=\"https://profiles.wordpress.org/mwidmann\">mwidmann</a>、<a href=\"https://profiles.wordpress.org/nexurium\">nexurium</a>、<a href=\"https://profiles.wordpress.org/niallkennedy\">Niall Kennedy</a>、<a href=\"https://profiles.wordpress.org/nicdford\">Nic Ford</a>、<a href=\"https://profiles.wordpress.org/celloexpressions\">Nick Halsey </a>、<a href=\"https://profiles.wordpress.org/rabmalin\">Nilambar Sharma</a>、<a href=\"https://profiles.wordpress.org/ninos-ego\">Ninos</a>、<a href=\"https://profiles.wordpress.org/oaron\">oaron</a>、<a href=\"https://profiles.wordpress.org/overclokk\">overclokk</a>、<a href=\"https://profiles.wordpress.org/swissspidy\">Pascal Birchler</a>、<a href=\"https://profiles.wordpress.org/obrienlabs\">Pat O&#8217;Brien</a>、<a href=\"https://profiles.wordpress.org/pbearne\">Paul Bearne</a>、<a href=\"https://profiles.wordpress.org/pauldewouters\">Paul de Wouters</a>、<a href=\"https://profiles.wordpress.org/sirbrillig\">Payton Swick</a>、<a href=\"https://profiles.wordpress.org/perezlabs\">Perez Labs</a>、<a href=\"https://profiles.wordpress.org/gungeekatx\">Pete Nelson</a>、<a href=\"https://profiles.wordpress.org/peterwilsoncc\">Peter Wilson</a>、<a href=\"https://profiles.wordpress.org/cadeyrn\">petermolnar</a>、<a href=\"https://profiles.wordpress.org/walbo\">Petter Walbø Johnsgård</a>、<a href=\"https://profiles.wordpress.org/wizzard_\">Pieter</a>、<a href=\"https://profiles.wordpress.org/mordauk\">Pippin Williamson</a>、<a href=\"https://profiles.wordpress.org/ptahdunbar\">Pirate Dunbar</a>、<a href=\"https://profiles.wordpress.org/prettyboymp\">prettyboymp</a>、<a href=\"https://profiles.wordpress.org/profforg\">Profforg</a>、<a href=\"https://profiles.wordpress.org/programmin\">programmin</a>、<a href=\"https://profiles.wordpress.org/rachelbaker\">Rachel Baker</a>、<a href=\"https://profiles.wordpress.org/rahalaboulfeth\">rahal.aboulfeth</a>、<a href=\"https://profiles.wordpress.org/ramiy\">Rami Yushuvaev</a>、<a href=\"https://profiles.wordpress.org/lamosty\">Rastislav Lamos</a>、<a href=\"https://profiles.wordpress.org/rickalee\">Ricky Lee Whittemore</a>、<a href=\"https://profiles.wordpress.org/ritteshpatel\">Ritesh Patel</a>、<a href=\"https://profiles.wordpress.org/rob\">rob</a>、<a href=\"https://profiles.wordpress.org/rogerhub\">Roger Chen</a>、<a href=\"https://profiles.wordpress.org/romsocial\">RomSocial</a>、<a href=\"https://profiles.wordpress.org/ruudjoyo\">Ruud Laan</a>、<a href=\"https://profiles.wordpress.org/ryan\">Ryan Boren</a>、<a href=\"https://profiles.wordpress.org/ryankienstra\">Ryan Kienstra</a>、<a href=\"https://profiles.wordpress.org/rmccue\">Ryan McCue</a>、<a href=\"https://profiles.wordpress.org/welcher\">Ryan Welcher</a>、<a href=\"https://profiles.wordpress.org/sagarjadhav\">Sagar Jadhav</a>、<a href=\"https://profiles.wordpress.org/salcode\">Sal Ferrarello</a>、<a href=\"https://profiles.wordpress.org/salvoaranzulla\">salvoaranzulla</a>、<a href=\"https://profiles.wordpress.org/samhotchkiss\">Sam Hotchkiss</a>、<a href=\"https://profiles.wordpress.org/rosso99\">Sara Rosso</a>、<a href=\"https://profiles.wordpress.org/sarciszewski\">Scott Arciszewski</a>、<a href=\"https://profiles.wordpress.org/sc0ttkclark\">Scott Kingsley Clark</a>、<a href=\"https://profiles.wordpress.org/coffee2code\">Scott Reilly</a>、<a href=\"https://profiles.wordpress.org/wonderboymusic\">Scott Taylor</a>、<a href=\"https://profiles.wordpress.org/scottbrownconsulting\">scottbrownconsulting</a>、<a href=\"https://profiles.wordpress.org/scribu\">scribu</a>、<a href=\"https://profiles.wordpress.org/sebastianpisula\">Sebastian Pisula</a>、<a href=\"https://profiles.wordpress.org/sergejmueller\">Sergej Müller</a>、<a href=\"https://profiles.wordpress.org/sergeybiryukov\">Sergey Biryukov</a>、<a href=\"https://profiles.wordpress.org/shamess\">Shane</a>、<a href=\"https://profiles.wordpress.org/shinichin\">Shinichi Nishikawa</a>、<a href=\"https://profiles.wordpress.org/sidati\">sidati</a>、<a href=\"https://profiles.wordpress.org/siobhan\">Siobhan</a>、<a href=\"https://profiles.wordpress.org/aargh-a-knot\">sky</a>、<a href=\"https://profiles.wordpress.org/slushman\">slushman</a>、<a href=\"https://profiles.wordpress.org/smerriman\">smerriman</a>、<a href=\"https://profiles.wordpress.org/stephanethomas\">stephanethomas</a>、<a href=\"https://profiles.wordpress.org/netweb\">Stephen Edgar</a>、<a href=\"https://profiles.wordpress.org/stephenharris\">Stephen Harris</a>、<a href=\"https://profiles.wordpress.org/stevegrunwell\">Steve Grunwell</a>、<a href=\"https://profiles.wordpress.org/stevenkword\">Steven Word</a>、<a href=\"https://profiles.wordpress.org/charlestonsw\">Store Locator Plus</a>、<a href=\"https://profiles.wordpress.org/subharanjan\">Subharanjan</a>、<a href=\"https://profiles.wordpress.org/sudar\">Sudar Muthu</a>、<a href=\"https://profiles.wordpress.org/5um17\">Sumit Singh</a>、<a href=\"https://profiles.wordpress.org/tacoverdo\">Taco Verdonschot</a>、<a href=\"https://profiles.wordpress.org/tahteche\">tahteche</a>、<a href=\"https://profiles.wordpress.org/iamtakashi\">Takashi Irie</a>、<a href=\"https://profiles.wordpress.org/takayukister\">Takayuki Miyoshi</a>、<a href=\"https://profiles.wordpress.org/karmatosed\">Tammie Lister</a>、<a href=\"https://profiles.wordpress.org/tharsheblows\">tharsheblows</a>、<a href=\"https://profiles.wordpress.org/themiked\">theMikeD</a>、<a href=\"https://profiles.wordpress.org/thomaswm\">thomaswm</a>、<a href=\"https://profiles.wordpress.org/timothyblynjacobs\">Timothy Jacobs</a>、<a href=\"https://profiles.wordpress.org/timplunkett\">timplunkett</a>、<a href=\"https://profiles.wordpress.org/tmuikku\">tmuikku</a>、<a href=\"https://profiles.wordpress.org/skithund\">Toni Viemerö</a>、<a href=\"https://profiles.wordpress.org/toro_unit\">Toro_Unit (Hiroshi Urabe)</a>、<a href=\"https://profiles.wordpress.org/liljimmi\">Tracy Levesque</a>、<a href=\"https://profiles.wordpress.org/rilwis\">Tran Ngoc Tuan Anh</a>、<a href=\"https://profiles.wordpress.org/wpsmith\">Travis Smith</a>、<a href=\"https://profiles.wordpress.org/tywayne\">Ty Carlson</a>、<a href=\"https://profiles.wordpress.org/grapplerulrich\">Ulrich</a>、<a href=\"https://profiles.wordpress.org/utkarshpatel\">Utkarsh</a>、<a href=\"https://profiles.wordpress.org/vhomenko\">vhomenko</a>、<a href=\"https://profiles.wordpress.org/virgodesign\">virgodesign</a>、<a href=\"https://profiles.wordpress.org/vladolaru\">vlad.olaru</a>、<a href=\"https://profiles.wordpress.org/voldemortensen\">voldemortensen</a>、<a href=\"https://profiles.wordpress.org/vtieu\">vtieu</a>、<a href=\"https://profiles.wordpress.org/webaware\">webaware</a>、<a href=\"https://profiles.wordpress.org/wesleye\">Wesley Elfring</a>、<a href=\"https://profiles.wordpress.org/westonruter\">Weston Ruter</a>、<a href=\"https://profiles.wordpress.org/wisdmlabs\">WisdmLabs</a>、<a href=\"https://profiles.wordpress.org/wpdelighter\">WP Delighter</a>、<a href=\"https://profiles.wordpress.org/xavortm\">xavortm</a>、<a href=\"https://profiles.wordpress.org/yetanotherdaniel\">yetAnotherDaniel</a>和<a href=\"https://profiles.wordpress.org/zinigor\">zinigor</a>。</p>\n<p>特别感谢<a href=\"http://siobhanmckeown.com/\">Siobhan McKeown</a>制作发布视频，及<a href=\"https://jacklenox.com/\">Jack Lenox</a>的配音。</p>\n<p>最后，让我们感谢为本次发布提供了翻译的贡献者。WordPress 4.5被翻译成了44种语言，这次的发布视频也被翻译成了32种语言！</p>\n<p>如果您想帮忙，请查阅<a href=\"https://make.wordpress.org/\">Make WordPress</a>和我们的<a href=\"https://make.wordpress.org/core/\">核心开发博客</a>。感谢您选择WordPress，我们4.6见！</p>\n</div>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:49:\"https://cn.wordpress.org/2016/04/17/coleman/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"5\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:4;a:6:{s:4:\"data\";s:42:\"\n		\n		\n		\n		\n		\n				\n\n		\n		\n				\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:27:\"WordPress 4.4“Clifford”\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:45:\"https://cn.wordpress.org/2015/12/13/clifford/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:54:\"https://cn.wordpress.org/2015/12/13/clifford/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sat, 12 Dec 2015 22:52:22 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:32:\"https://cn.wordpress.org/?p=1011\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:49:\"WordPress 4.4简体中文版现已开放下载。\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Jimmy Xu\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:37891:\"<div style=\"width: 692px\">\n<p>WordPress 4.4简体中文版现已<a href=\"https://cn.wordpress.org/releases/\">开放下载</a>，或在您的WordPress仪表盘中升级。我们将此版本命名为“Clifford”，以纪念爵士小号手<a href=\"https://en.wikipedia.org/wiki/Clifford_Brown\">克利福德·布朗</a>。4.4让您的网站更具连接性且反应敏捷。Clifford也带来了全新的默认主题，二〇一六。</p>\n<hr />\n<h2>介绍二〇一六</h2>\n<p><img class=\"aligncenter size-full wp-image-3994\" src=\"https://wordpress.org/news/files/2015/12/ipad-white-desktop-2x.png\" alt=\"A screenshot of Twenty Sixteen set in an iPad frame\" width=\"632\" height=\"428\" /></p>\n<p>我们最新的默认主题，二〇一六，是一个具现代感又不失经典博客设计风格的主题。</p>\n<p>二〇一六在任何设备上都看起来很棒。一个流动式网格设计、灵活页首，搭配各式趣味的配色，让你的内容大放异彩。</p>\n<hr />\n<h2>自适应图片</h2>\n<p><img class=\"aligncenter wp-image-3995 size-full\" src=\"https://wordpress.org/news/files/2015/12/responsive-devices-ipad-2x.png\" alt=\"An image of a laptop, iPad, Android phone, and iPhone containing the same image displayed at multiple sizes to demonstrate responsive image features.\" width=\"632\" height=\"290\" /></p>\n<p>WordPress现在以更聪明的方式显示适合任何设备的图片尺寸，确保每次皆完美呈现。您甚至不需要修改您的主题，</p>\n<hr />\n<h2>嵌入一切</h2>\n<blockquote data-secret=\"UpjyQbDxun\" class=\"wp-embedded-content\"><p><a href=\"https://make.wordpress.org/core/2015/10/28/new-embeds-feature-in-wordpress-4-4/\">New Embeds Feature in WordPress 4.4</a></p></blockquote>\n<p><iframe class=\"wp-embedded-content\" sandbox=\"allow-scripts\" security=\"restricted\" src=\"https://make.wordpress.org/core/2015/10/28/new-embeds-feature-in-wordpress-4-4/embed/#?secret=UpjyQbDxun\" data-secret=\"UpjyQbDxun\" width=\"600\" height=\"338\" title=\"&#8220;New Embeds Feature in WordPress 4.4&#8221; &#8212; Make WordPress Core\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"></iframe></p>\n<p>现在您可以将文章嵌入到其他WordPress网站。只要将文章URL贴入编辑器，即可看到即时嵌入预览，完整的标题、摘要及特色图片（如果您有设定），甚至会包含您的网站图标以及评论与分享链接。</p>\n<p>除了文章嵌入外，WordPress 4.4还加入五个新的oEmbed提供者：Cloudup、Reddit留言、ReverbNation、Speaker Deck及VideoPress。</p>\n<hr />\n<h2>引擎盖下</h2>\n<p><img class=\"aligncenter size-full wp-image-4003\" src=\"https://wordpress.org/news/files/2015/12/banner-1544x500.jpg\" alt=\"The WordPress REST API logo\" width=\"1544\" height=\"500\" /></p>\n<h3>REST API基础设施</h3>\n<p>REST API基础设施已整合于WordPress的核心中，将开发模式带入一个崭新的纪元。REST API为开发者提供在WordPress之上建设并扩展RESTful API的道路。</p>\n<p>基础设施是REST API多阶段推出的第一部分，而将会在未来的发布中包含核心节点。要了解更多关于核心节点或是扩展REST API的信息，请查阅官方<a href=\"https://wordpress.org/plugins/rest-api/\">WordPress REST API</a>扩展。</p>\n<h3>项目元数据</h3>\n<p>项目现在像文章一样支持元数据。请参阅<a href=\"https://developer.wordpress.org/reference/functions/add_term_meta\"><code>add_term_meta()</code></a>、<a href=\"https://developer.wordpress.org/reference/functions/get_term_meta\"><code>get_term_meta()</code></a>和<a href=\"https://developer.wordpress.org/reference/functions/update_term_meta\"><code>update_term_meta()</code></a>来获得更多信息。</p>\n<h3>评论查询改善</h3>\n<p>评论查询现在有缓存机制来改善性能。全新<code>WP_Comment_Query</code>参数能更轻松地调用、访问评论。</p>\n<h3>项目、评论以及网络对象</h3>\n<p>新的<code>WP_Term</code>、<code>WP_Comment</code>和<code>WP_Network</code>对象让与项目、评论和网络的交互变得更直观、更可预测。</p>\n<hr />\n<h2>开发团队</h2>\n<p>此次发布由<a href=\"http://scotty-t.com/\">Scott Taylor</a>领头，并得到了以下个人的帮助。这次发布包含了471人的贡献（创下新高！）。在您喜欢的音乐服务中听听克利福德·布朗，并看看下面这些个人资料吧：</p>\n<p><a href=\"https://profiles.wordpress.org/mercime\">@mercime</a>、<a href=\"https://profiles.wordpress.org/_smartik_\">_smartik_</a>、<a href=\"https://profiles.wordpress.org/a5hleyrich\">A5hleyRich</a>、<a href=\"https://profiles.wordpress.org/aaroncampbell\">Aaron D. Campbell</a>、<a href=\"https://profiles.wordpress.org/jorbin\">Aaron Jorbin</a>、<a href=\"https://profiles.wordpress.org/aaronrutley\">Aaron Rutley</a>、<a href=\"https://profiles.wordpress.org/kawauso\">Adam Harley (Kawauso)</a>、<a href=\"https://profiles.wordpress.org/adamsilverstein\">Adam Silverstein</a>、<a href=\"https://profiles.wordpress.org/adamholisky\">adamholisky</a>、<a href=\"https://profiles.wordpress.org/aduth\">aduth</a>、<a href=\"https://profiles.wordpress.org/mrahmadawais\">Ahmad Awais</a>、<a href=\"https://profiles.wordpress.org/akibjorklund\">Aki Bjorklund</a>、<a href=\"https://profiles.wordpress.org/albertoct\">AlbertoCT</a>、<a href=\"https://profiles.wordpress.org/akirk\">Alex Kirk</a>、<a href=\"https://profiles.wordpress.org/viper007bond\">Alex Mills (Viper007Bond)</a>、<a href=\"https://profiles.wordpress.org/tellyworth\">Alex Shiels</a>、<a href=\"https://profiles.wordpress.org/gounder\">Alexander Gounder</a>、<a href=\"https://profiles.wordpress.org/alireza1375\">alireza1375</a>、<a href=\"https://profiles.wordpress.org/shedonist\">Amanda Giles</a>、<a href=\"https://profiles.wordpress.org/amereservant\">amereservant</a>、<a href=\"https://profiles.wordpress.org/sabreuse\">Amy Hendrix (sabreuse)</a>、<a href=\"https://profiles.wordpress.org/afercia\">Andrea Fercia</a>、<a href=\"https://profiles.wordpress.org/nacin\">Andrew Nacin</a>、<a href=\"https://profiles.wordpress.org/norcross\">Andrew Norcross</a>、<a href=\"https://profiles.wordpress.org/azaozz\">Andrew Ozz</a>、<a href=\"https://profiles.wordpress.org/afragen\">Andy Fragen</a>、<a href=\"https://profiles.wordpress.org/amandato\">Angelo Mandato</a>、<a href=\"https://profiles.wordpress.org/ankitgadertcampcom\">Ankit Gade</a>、<a href=\"https://profiles.wordpress.org/ankit-k-gupta\">Ankit K Gupta</a>、<a href=\"https://profiles.wordpress.org/antpb\">Anthony Burchell</a>、<a href=\"https://profiles.wordpress.org/apkoponen\">ap.koponen</a>、<a href=\"https://profiles.wordpress.org/apokalyptik\">apokalyptik</a>、<a href=\"https://profiles.wordpress.org/athsear\">Athsear&#8217;J.S.</a>、<a href=\"https://profiles.wordpress.org/atomicjack\">atomicjack</a>、<a href=\"https://profiles.wordpress.org/austinginder\">Austin Ginder</a>、<a href=\"https://profiles.wordpress.org/filosofo\">Austin Matzko</a>、<a href=\"https://profiles.wordpress.org/barryceelen\">Barry Ceelen</a>、<a href=\"https://profiles.wordpress.org/barrykooij\">Barry Kooij</a>、<a href=\"https://profiles.wordpress.org/bcworkz\">bcworkz</a>、<a href=\"https://profiles.wordpress.org/bdn3504\">BdN3504</a>、<a href=\"https://profiles.wordpress.org/pixolin\">Bego Mario Garde</a>、<a href=\"https://profiles.wordpress.org/benjmay\">Ben May</a>、<a href=\"https://profiles.wordpress.org/benjaminpick\">Benjamin Pick</a>、<a href=\"https://profiles.wordpress.org/neoxx\">Bernhard Riedl</a>、<a href=\"https://profiles.wordpress.org/bigdawggi\">bigdawggi</a>、<a href=\"https://profiles.wordpress.org/bilalcoder\">bilalcoder</a>、<a href=\"https://profiles.wordpress.org/binarykitten\">BinaryKitten</a>、<a href=\"https://profiles.wordpress.org/birgire\">Birgir Erlendsson (birgire)</a>、<a href=\"https://profiles.wordpress.org/bjornjohansen\">Bjorn Johansen</a>、<a href=\"https://profiles.wordpress.org/bobbingwide\">bobbingwide</a>、<a href=\"https://profiles.wordpress.org/gitlost\">bonger</a>、<a href=\"https://profiles.wordpress.org/boonebgorges\">Boone B. Gorges</a>、<a href=\"https://profiles.wordpress.org/bradt\">Brad Touesnard</a>、<a href=\"https://profiles.wordpress.org/bradparbs\">bradparbs</a>、<a href=\"https://profiles.wordpress.org/bradyvercher\">Brady Vercher</a>、<a href=\"https://profiles.wordpress.org/kraftbj\">Brandon Kraft</a>、<a href=\"https://profiles.wordpress.org/bravokeyl\">bravokeyl</a>、<a href=\"https://profiles.wordpress.org/brentvr\">brentvr</a>、<a href=\"https://profiles.wordpress.org/brettz95\">brettz95</a>、<a href=\"https://profiles.wordpress.org/mckilem\">Bruno Kos</a>、<a href=\"https://profiles.wordpress.org/crazycoolcam\">Cam</a>、<a href=\"https://profiles.wordpress.org/camikaos\">Cami Kaos</a>、<a href=\"https://profiles.wordpress.org/carolinegeven\">carolinegeven</a>、<a href=\"https://profiles.wordpress.org/misterbisson\">Casey Bisson</a>、<a href=\"https://profiles.wordpress.org/cdog\">Catalin Dogaru</a>、<a href=\"https://profiles.wordpress.org/ch1902\">ch1902</a>、<a href=\"https://profiles.wordpress.org/chacha102\">chacha102</a>、<a href=\"https://profiles.wordpress.org/nhuja\">Chandra M</a>、<a href=\"https://profiles.wordpress.org/chasewiseman\">Chase Wiseman</a>、<a href=\"https://profiles.wordpress.org/chiara_09\">Chiara Dossena</a>、<a href=\"https://profiles.wordpress.org/chipbennett\">Chip Bennett</a>、<a href=\"https://profiles.wordpress.org/chiragswadia\">Chirag Swadia</a>、<a href=\"https://profiles.wordpress.org/chriscct7\">Chris Christoff</a>、<a href=\"https://profiles.wordpress.org/chrismkindred\">Chris Kindred</a>、<a href=\"https://profiles.wordpress.org/cklosows\">Chris Klosowski</a>、<a href=\"https://profiles.wordpress.org/chriscoyier\">chriscoyier</a>、<a href=\"https://profiles.wordpress.org/chrisdc1\">Chrisdc1</a>、<a href=\"https://profiles.wordpress.org/lovememore\">christianoliff</a>、<a href=\"https://profiles.wordpress.org/christophherr\">Christoph Herr</a>、<a href=\"https://profiles.wordpress.org/cfinke\">Christopher Finke</a>、<a href=\"https://profiles.wordpress.org/chrisvendiadvertisingcom\">cjhaas</a>、<a href=\"https://profiles.wordpress.org/codeelite\">codeelite</a>、<a href=\"https://profiles.wordpress.org/coenjacobs\">Coen Jacobs</a>、<a href=\"https://profiles.wordpress.org/compute\">Compute</a>、<a href=\"https://profiles.wordpress.org/couturefreak\">Courtney Ivey</a>、<a href=\"https://profiles.wordpress.org/craig-ralston\">Craig Ralston</a>、<a href=\"https://profiles.wordpress.org/cgrymala\">Curtiss Grymala</a>、<a href=\"https://profiles.wordpress.org/extendwings\">Daisuke Takahashi</a>、<a href=\"https://profiles.wordpress.org/dboulet\">Dan Boulet</a>、<a href=\"https://profiles.wordpress.org/danielbachhuber\">Daniel Bachhuber</a>、<a href=\"https://profiles.wordpress.org/daniel-koskinen\">Daniel Koskinen</a>、<a href=\"https://profiles.wordpress.org/dmenard\">Daniel Menard</a>、<a href=\"https://profiles.wordpress.org/mte90\">Daniele Scasciafratte</a>、<a href=\"https://profiles.wordpress.org/daniellandau\">daniellandau</a>、<a href=\"https://profiles.wordpress.org/daniloercoli\">daniloercoli</a>、<a href=\"https://profiles.wordpress.org/dannydehaan\">Danny de Haan</a>、<a href=\"https://profiles.wordpress.org/nerrad\">Darren Ethier (nerrad)</a>、<a href=\"https://profiles.wordpress.org/dllh\">Daryl L. L. Houston (dllh)</a>、<a href=\"https://profiles.wordpress.org/dattaparad\">Datta Parad</a>、<a href=\"https://profiles.wordpress.org/dmchale\">Dave McHale</a>、<a href=\"https://profiles.wordpress.org/davidakennedy\">David A. Kennedy</a>、<a href=\"https://profiles.wordpress.org/davidanderson\">David Anderson</a>、<a href=\"https://profiles.wordpress.org/dlh\">David Herrera</a>、<a href=\"https://profiles.wordpress.org/dshanske\">David Shanske</a>、<a href=\"https://profiles.wordpress.org/davidbinda\">david.binda</a>、<a href=\"https://profiles.wordpress.org/debaat\">DeBAAT</a>、<a href=\"https://profiles.wordpress.org/denis-de-bernardy\">Denis de Bernardy</a>、<a href=\"https://profiles.wordpress.org/realloc\">Dennis Ploetner</a>、<a href=\"https://profiles.wordpress.org/valendesigns\">Derek Herman</a>、<a href=\"https://profiles.wordpress.org/downstairsdev\">Devin Price</a>、<a href=\"https://profiles.wordpress.org/dezzy\">Dezzy</a>、<a href=\"https://profiles.wordpress.org/dd32\">Dion Hulse</a>、<a href=\"https://profiles.wordpress.org/dipalidhole27gmailcom\">Dipali Dhole</a>、<a href=\"https://profiles.wordpress.org/dipeshkakadiya\">dipesh.kakadiya</a>、<a href=\"https://profiles.wordpress.org/dbru\">Dominik Bruderer</a>、<a href=\"https://profiles.wordpress.org/ocean90\">Dominik Schilling</a>、<a href=\"https://profiles.wordpress.org/drebbitsweb\">Dreb Bits</a>、<a href=\"https://profiles.wordpress.org/drewapicture\">Drew Jaynes</a>、<a href=\"https://profiles.wordpress.org/dustinbolton\">dustinbolton</a>、<a href=\"https://profiles.wordpress.org/kucrut\">Dzikri Aziz</a>、<a href=\"https://profiles.wordpress.org/edirect24\">edirect24</a>、<a href=\"https://profiles.wordpress.org/oso96_2000\">Eduardo Reveles</a>、<a href=\"https://profiles.wordpress.org/eduardozulian\">Eduardo Zulian</a>、<a href=\"https://profiles.wordpress.org/cais\">Edward Caissie</a>、<a href=\"https://profiles.wordpress.org/egill\">Egill R. Erlendsson</a>、<a href=\"https://profiles.wordpress.org/egower\">egower</a>、<a href=\"https://profiles.wordpress.org/iehsanir\">Ehsaan</a>、<a href=\"https://profiles.wordpress.org/ehtis\">ehtis</a>、<a href=\"https://profiles.wordpress.org/iseulde\">Ella Iseulde Van Dorpe</a>、<a href=\"https://profiles.wordpress.org/ellieroepken\">Ellie Strejlau</a>、<a href=\"https://profiles.wordpress.org/elliott-stocks\">Elliott Stocks</a>、<a href=\"https://profiles.wordpress.org/elusiveunit\">elusiveunit</a>、<a href=\"https://profiles.wordpress.org/enshrined\">enshrined</a>、<a href=\"https://profiles.wordpress.org/ericlewis\">Eric Andrew Lewis</a>、<a href=\"https://profiles.wordpress.org/ebinnion\">Eric Binnion</a>、<a href=\"https://profiles.wordpress.org/ericdaams\">Eric Daams</a>、<a href=\"https://profiles.wordpress.org/ericmann\">Eric Mann</a>、<a href=\"https://profiles.wordpress.org/ericjuden\">ericjuden</a>、<a href=\"https://profiles.wordpress.org/eherman24\">Evan Herman</a>、<a href=\"https://profiles.wordpress.org/f4rkie\">F4rkie</a>、<a href=\"https://profiles.wordpress.org/flixos90\">Felix Arntz</a>、<a href=\"https://profiles.wordpress.org/fsylum\">Firdaus Zahari</a>、<a href=\"https://profiles.wordpress.org/fonglh\">fonglh</a>、<a href=\"https://profiles.wordpress.org/francoisb\">francoisb</a>、<a href=\"https://profiles.wordpress.org/frank-klein\">Frank Klein</a>、<a href=\"https://profiles.wordpress.org/fjarrett\">Frankie Jarrett</a>、<a href=\"https://profiles.wordpress.org/frozzare\">Fredrik Forsmo</a>、<a href=\"https://profiles.wordpress.org/gaelan\">Gaelan Lloyd</a>、<a href=\"https://profiles.wordpress.org/gagan0123\">Gagan Deep Singh</a>、<a href=\"https://profiles.wordpress.org/garyc40\">Gary Cao</a>、<a href=\"https://profiles.wordpress.org/garyj\">Gary Jones</a>、<a href=\"https://profiles.wordpress.org/pento\">Gary Pendergast</a>、<a href=\"https://profiles.wordpress.org/garza\">garza</a>、<a href=\"https://profiles.wordpress.org/grvrulz\">Gaurav Pareek</a>、<a href=\"https://profiles.wordpress.org/gautamgupta\">Gautam Gupta</a>、<a href=\"https://profiles.wordpress.org/geminorum\">geminorum</a>、<a href=\"https://profiles.wordpress.org/kloon\">Gerhard Potgieter</a>、<a href=\"https://profiles.wordpress.org/gezamiklo\">geza.miklo</a>、<a href=\"https://profiles.wordpress.org/gizburdt\">Gijs Jorissen</a>、<a href=\"https://profiles.wordpress.org/garusky\">Giuseppe Mamone</a>、<a href=\"https://profiles.wordpress.org/jubstuff\">Giustino Borzacchiello</a>、<a href=\"https://profiles.wordpress.org/gnaka08\">gnaka08</a>、<a href=\"https://profiles.wordpress.org/gradyetc\">gradyetc</a>、<a href=\"https://profiles.wordpress.org/gregrickaby\">Greg Rickaby</a>、<a href=\"https://profiles.wordpress.org/tivnet\">Gregory Karpinsky (@tivnet)</a>、<a href=\"https://profiles.wordpress.org/bordoni\">Gustavo Bordoni</a>、<a href=\"https://profiles.wordpress.org/webord\">Gustavo Bordoni</a>、<a href=\"https://profiles.wordpress.org/gwinhlopez\">gwinh.lopez</a>、<a href=\"https://profiles.wordpress.org/hakre\">hakre</a>、<a href=\"https://profiles.wordpress.org/hauvong\">hauvong</a>、<a href=\"https://profiles.wordpress.org/helen\">Helen Hou-Sandí</a>、<a href=\"https://profiles.wordpress.org/hnle\">Hinaloe</a>、<a href=\"https://profiles.wordpress.org/hrishiv90\">Hrishikesh Vaipurkar</a>、<a href=\"https://profiles.wordpress.org/hlashbrooke\">Hugh Lashbrooke</a>、<a href=\"https://profiles.wordpress.org/hugobaeta\">Hugo Baeta</a>、<a href=\"https://profiles.wordpress.org/polevaultweb\">Iain Poulson</a>、<a href=\"https://profiles.wordpress.org/iandunn\">Ian Dunn</a>、<a href=\"https://profiles.wordpress.org/iandstewart\">Ian Stewart</a>、<a href=\"https://profiles.wordpress.org/icetee\">icetee</a>、<a href=\"https://profiles.wordpress.org/igmoweb\">Ignacio Cruz Moreno</a>、<a href=\"https://profiles.wordpress.org/headonfire\">Ihor Vorotnov</a>、<a href=\"https://profiles.wordpress.org/imath\">imath</a>、<a href=\"https://profiles.wordpress.org/ippetkov\">ippetkov</a>、<a href=\"https://profiles.wordpress.org/jdgrimes\">J.D. Grimes</a>、<a href=\"https://profiles.wordpress.org/jakubtyrcha\">jakub.tyrcha</a>、<a href=\"https://profiles.wordpress.org/macmanx\">James Huff</a>、<a href=\"https://profiles.wordpress.org/janhenckens\">janhenckens</a>、<a href=\"https://profiles.wordpress.org/japh\">Japh</a>、<a href=\"https://profiles.wordpress.org/jaspermdegroot\">Jasper de Groot</a>、<a href=\"https://profiles.wordpress.org/jazbek\">jazbek</a>、<a href=\"https://profiles.wordpress.org/jcroucher\">jcroucher</a>、<a href=\"https://profiles.wordpress.org/jfarthing84\">Jeff Farthing</a>、<a href=\"https://profiles.wordpress.org/jeffstieler\">Jeff Stieler</a>、<a href=\"https://profiles.wordpress.org/jeffmatson\">JeffMatson</a>、<a href=\"https://profiles.wordpress.org/cheffheid\">Jeffrey de Wit</a>、<a href=\"https://profiles.wordpress.org/jeichorn\">jeichorn</a>、<a href=\"https://profiles.wordpress.org/jeremyfelt\">Jeremy Felt</a>、<a href=\"https://profiles.wordpress.org/jpry\">Jeremy Pry</a>、<a href=\"https://profiles.wordpress.org/slimndap\">Jeroen Schmit</a>、<a href=\"https://profiles.wordpress.org/jesin\">Jesin A</a>、<a href=\"https://profiles.wordpress.org/engelen\">Jesper van Engelen</a>、<a href=\"https://profiles.wordpress.org/jim912\">jim912</a>、<a href=\"https://profiles.wordpress.org/jliman\">jliman</a>、<a href=\"https://profiles.wordpress.org/jmayhak\">jmayhak</a>、<a href=\"https://profiles.wordpress.org/jnylen0\">jnylen0</a>、<a href=\"https://profiles.wordpress.org/jobst\">Jobst Schmalenbach</a>、<a href=\"https://profiles.wordpress.org/joedolson\">Joe Dolson</a>、<a href=\"https://profiles.wordpress.org/joehoyle\">Joe Hoyle</a>、<a href=\"https://profiles.wordpress.org/joemcgill\">Joe McGill</a>、<a href=\"https://profiles.wordpress.org/joehills\">joehills</a>、<a href=\"https://profiles.wordpress.org/johnbillion\">John Blackbourn</a>、<a href=\"https://profiles.wordpress.org/johnjamesjacoby\">John James Jacoby</a>、<a href=\"https://profiles.wordpress.org/johnpbloch\">John P. Bloch</a>、<a href=\"https://profiles.wordpress.org/mindctrl\">John Parris</a>、<a href=\"https://profiles.wordpress.org/duck_\">Jon Cave</a>、<a href=\"https://profiles.wordpress.org/jonathanbardo\">Jonathan Bardo</a>、<a href=\"https://profiles.wordpress.org/desrosj\">Jonathan Desrosiers</a>、<a href=\"https://profiles.wordpress.org/joostdevalk\">Joost de Valk</a>、<a href=\"https://profiles.wordpress.org/koke\">Jorge Bernal</a>、<a href=\"https://profiles.wordpress.org/betzster\">Josh Betz</a>、<a href=\"https://profiles.wordpress.org/jjeaton\">Josh Eaton</a>、<a href=\"https://profiles.wordpress.org/shelob9\">Josh Pollock</a>、<a href=\"https://profiles.wordpress.org/jrf\">jrf</a>、<a href=\"https://profiles.wordpress.org/juhise\">Juhi Saxena</a>、<a href=\"https://profiles.wordpress.org/juliobox\">Julio Potier</a>、<a href=\"https://profiles.wordpress.org/justdaiv\">justdaiv</a>、<a href=\"https://profiles.wordpress.org/justinsainton\">Justin Sainton</a>、<a href=\"https://profiles.wordpress.org/jshreve\">Justin Shreve</a>、<a href=\"https://profiles.wordpress.org/jtsternberg\">Justin Sternberg</a>、<a href=\"https://profiles.wordpress.org/greenshady\">Justin Tadlock</a>、<a href=\"https://profiles.wordpress.org/kadamwhite\">K.Adam White</a>、<a href=\"https://profiles.wordpress.org/trepmal\">Kailey (trepmal)</a>、<a href=\"https://profiles.wordpress.org/kalenjohnson\">KalenJohnson</a>、<a href=\"https://profiles.wordpress.org/karinedo\">karinedo</a>、<a href=\"https://profiles.wordpress.org/karpstrucking\">karpstrucking</a>、<a href=\"https://profiles.wordpress.org/ryelle\">Kelly Dwan</a>、<a href=\"https://profiles.wordpress.org/kevinb\">Kevin Behrens</a>、<a href=\"https://profiles.wordpress.org/kevinlangleyjr\">Kevin Langley</a>、<a href=\"https://profiles.wordpress.org/kevinatelement\">kevinatelement</a>、<a href=\"https://profiles.wordpress.org/kitchin\">kitchin</a>、<a href=\"https://profiles.wordpress.org/ixkaito\">Kite</a>、<a href=\"https://profiles.wordpress.org/kovshenin\">Konstantin Kovshenin</a>、<a href=\"https://profiles.wordpress.org/obenland\">Konstantin Obenland</a>、<a href=\"https://profiles.wordpress.org/kraftner\">kraftner</a>、<a href=\"https://profiles.wordpress.org/drozdz\">Krzysiek Drozdz</a>、<a href=\"https://profiles.wordpress.org/kurtpayne\">Kurt Payne</a>、<a href=\"https://profiles.wordpress.org/laceous\">laceous</a>、<a href=\"https://profiles.wordpress.org/lancewillett\">Lance Willett</a>、<a href=\"https://profiles.wordpress.org/offereins\">Laurens Offereins</a>、<a href=\"https://profiles.wordpress.org/lcherpit\">lcherpit</a>、<a href=\"https://profiles.wordpress.org/ldinclaux\">ldinclaux</a>、<a href=\"https://profiles.wordpress.org/leewillis77\">Lee Willis</a>、<a href=\"https://profiles.wordpress.org/leemon\">leemon</a>、<a href=\"https://profiles.wordpress.org/lessbloat\">lessbloat</a>、<a href=\"https://profiles.wordpress.org/linuxologos\">linuxologos</a>、<a href=\"https://profiles.wordpress.org/spmlucas\">Lucas Karpiuk</a>、<a href=\"https://profiles.wordpress.org/lucatume\">lucatume</a>、<a href=\"https://profiles.wordpress.org/luciole135\">luciole135</a>、<a href=\"https://profiles.wordpress.org/lucymtc\">lucymtc</a>、<a href=\"https://profiles.wordpress.org/lukecarbis\">Luke Carbis</a>、<a href=\"https://profiles.wordpress.org/madalinungureanu\">madalin.ungureanu</a>、<a href=\"https://profiles.wordpress.org/mako09\">Mako</a>、<a href=\"https://profiles.wordpress.org/manolis09\">manolis09</a>、<a href=\"https://profiles.wordpress.org/iworks\">Marcin Pietrzak</a>、<a href=\"https://profiles.wordpress.org/tyxla\">Marin Atanasov</a>、<a href=\"https://profiles.wordpress.org/nofearinc\">Mario Peshev</a>、<a href=\"https://profiles.wordpress.org/clorith\">Marius (Clorith)</a>、<a href=\"https://profiles.wordpress.org/markjaquith\">Mark Jaquith</a>、<a href=\"https://profiles.wordpress.org/markoheijnen\">Marko Heijnen</a>、<a href=\"https://profiles.wordpress.org/mechter\">Markus</a>、<a href=\"https://profiles.wordpress.org/wilto\">Mat Marquis</a>、<a href=\"https://profiles.wordpress.org/matheusfd\">Matheus Martins</a>、<a href=\"https://profiles.wordpress.org/mattbagwell\">Matt Bagwell</a>、<a href=\"https://profiles.wordpress.org/mgibbs189\">Matt Gibbs</a>、<a href=\"https://profiles.wordpress.org/sivel\">Matt Martz</a>、<a href=\"https://profiles.wordpress.org/matt\">Matt Mullenweg</a>、<a href=\"https://profiles.wordpress.org/veraxus\">Matt van Andel</a>、<a href=\"https://profiles.wordpress.org/mboynes\">Matthew Boynes</a>、<a href=\"https://profiles.wordpress.org/mattheu\">Matthew Haines-Young</a>、<a href=\"https://profiles.wordpress.org/mazurstas\">mazurstas</a>、<a href=\"https://profiles.wordpress.org/mbrandys\">mbrandys</a>、<a href=\"https://profiles.wordpress.org/mdmcginn\">mdmcginn</a>、<a href=\"https://profiles.wordpress.org/mehulkaklotar\">mehulkaklotar</a>、<a href=\"https://profiles.wordpress.org/melchoyce\">Mel Choyce</a>、<a href=\"https://profiles.wordpress.org/meloniq\">meloniq</a>、<a href=\"https://profiles.wordpress.org/micahmills\">micahmills</a>、<a href=\"https://profiles.wordpress.org/micahwave\">micahwave</a>、<a href=\"https://profiles.wordpress.org/mdawaffe\">Michael Adams (mdawaffe)</a>、<a href=\"https://profiles.wordpress.org/michael-arestad\">Michael Arestad</a>、<a href=\"https://profiles.wordpress.org/cainm\">Michael Cain</a>、<a href=\"https://profiles.wordpress.org/michielhab\">Michiel Habraken</a>、<a href=\"https://profiles.wordpress.org/mcguive7\">Mickey Kay</a>、<a href=\"https://profiles.wordpress.org/mdgl\">Mike Glendinning</a>、<a href=\"https://profiles.wordpress.org/mikehansenme\">Mike Hansen</a>、<a href=\"https://profiles.wordpress.org/mikejolley\">Mike Jolley</a>、<a href=\"https://profiles.wordpress.org/thaicloud\">Mike Jordan</a>、<a href=\"https://profiles.wordpress.org/mikeschinkel\">Mike Schinkel</a>、<a href=\"https://profiles.wordpress.org/mikeschroder\">Mike Schroder</a>、<a href=\"https://profiles.wordpress.org/dimadin\">Milan Dinic</a>、<a href=\"https://profiles.wordpress.org/mismith227\">mismith227</a>、<a href=\"https://profiles.wordpress.org/misterunknown\">misterunknown</a>、<a href=\"https://profiles.wordpress.org/mitchoyoshitaka\">mitcho (Michael Yoshitaka Erlewine)</a>、<a href=\"https://profiles.wordpress.org/monika\">Monika</a>、<a href=\"https://profiles.wordpress.org/morganestes\">Morgan Estes</a>、<a href=\"https://profiles.wordpress.org/mor10\">Morten Rand-Hendriksen</a>、<a href=\"https://profiles.wordpress.org/mt8biz\">moto hachi ( mt8.biz )</a>、<a href=\"https://profiles.wordpress.org/usermrpapa\">Mr Papa</a>、<a href=\"https://profiles.wordpress.org/mrmist\">mrmist</a>、<a href=\"https://profiles.wordpress.org/mulvane\">mulvane</a>、<a href=\"https://profiles.wordpress.org/neoscrib\">neoscrib</a>、<a href=\"https://profiles.wordpress.org/next-season\">NExT-Season</a>、<a href=\"https://profiles.wordpress.org/niallkennedy\">Niall Kennedy</a>、<a href=\"https://profiles.wordpress.org/nicholas_io\">nicholas_io</a>、<a href=\"https://profiles.wordpress.org/nickciske\">Nick Ciske</a>、<a href=\"https://profiles.wordpress.org/celloexpressions\">Nick Halsey</a>、<a href=\"https://profiles.wordpress.org/nickduncan\">NickDuncan</a>、<a href=\"https://profiles.wordpress.org/rahe\">Nicolas Juen</a>、<a href=\"https://profiles.wordpress.org/nikeo\">nikeo</a>、<a href=\"https://profiles.wordpress.org/nikschavan\">Nikhil Chavan</a>、<a href=\"https://profiles.wordpress.org/niklasbr\">Niklas</a>、<a href=\"https://profiles.wordpress.org/nikolovtmw\">Nikola Nikolov</a>、<a href=\"https://profiles.wordpress.org/nbachiyski\">Nikolay Bachiyski</a>、<a href=\"https://profiles.wordpress.org/rabmalin\">Nilambar Sharma</a>、<a href=\"https://profiles.wordpress.org/originalexe\">OriginalEXE</a>、<a href=\"https://profiles.wordpress.org/pareshradadiya-1\">Paresh Radadiya</a>、<a href=\"https://profiles.wordpress.org/swissspidy\">Pascal Birchler</a>、<a href=\"https://profiles.wordpress.org/obrienlabs\">Pat O&#8217;Brien</a>、<a href=\"https://profiles.wordpress.org/pbearne\">Paul Bearne</a>、<a href=\"https://profiles.wordpress.org/pauldewouters\">Paul de Wouters</a>、<a href=\"https://profiles.wordpress.org/figureone\">Paul Ryan</a>、<a href=\"https://profiles.wordpress.org/paulwilde\">Paul Wilde</a>、<a href=\"https://profiles.wordpress.org/pavelevap\">pavelevap</a>、<a href=\"https://profiles.wordpress.org/sirbrillig\">Payton Swick</a>、<a href=\"https://profiles.wordpress.org/peterwilsoncc\">Peter Wilson</a>、<a href=\"https://profiles.wordpress.org/walbo\">Petter Walbo Johnsgard</a>、<a href=\"https://profiles.wordpress.org/petya\">Petya Raykovska</a>、<a href=\"https://profiles.wordpress.org/pfefferle\">pfefferle</a>、<a href=\"https://profiles.wordpress.org/philiparthurmoore\">Philip Arthur Moore</a>、<a href=\"https://profiles.wordpress.org/philiplakin\">PhilipLakin</a>、<a href=\"https://profiles.wordpress.org/corphi\">Philipp Cordes</a>、<a href=\"https://profiles.wordpress.org/delawski\">Piotr Delawski</a>、<a href=\"https://profiles.wordpress.org/psoluch\">Piotr Soluch</a>、<a href=\"https://profiles.wordpress.org/mordauk\">Pippin Williamson</a>、<a href=\"https://profiles.wordpress.org/prasad-nevase\">Prasad Nevase</a>、<a href=\"https://profiles.wordpress.org/nprasath002\">Prasath Nadarajah</a>、<a href=\"https://profiles.wordpress.org/pratikchaskar\">Pratik</a>、<a href=\"https://profiles.wordpress.org/rachelbaker\">Rachel Baker</a>、<a href=\"https://profiles.wordpress.org/rajnikmit\">rajnikmit</a>、<a href=\"https://profiles.wordpress.org/racase\">Rakesh Lawaju (Racase Lawaju)</a>、<a href=\"https://profiles.wordpress.org/ramay\">ramay</a>、<a href=\"https://profiles.wordpress.org/ramiy\">Rami Yushuvaev</a>、<a href=\"https://profiles.wordpress.org/raulillana\">Raul Illana</a>、<a href=\"https://profiles.wordpress.org/renoirb\">renoirb</a>、<a href=\"https://profiles.wordpress.org/rhubbardreverb\">rhubbardreverb</a>、<a href=\"https://profiles.wordpress.org/rhyswynne\">Rhys Wynne</a>、<a href=\"https://profiles.wordpress.org/rianrietveld\">Rian Rietveld</a>、<a href=\"https://profiles.wordpress.org/iamfriendly\">Richard Tape</a>、<a href=\"https://profiles.wordpress.org/miqrogroove\">Robert Chapin</a>、<a href=\"https://profiles.wordpress.org/rodrigosprimo\">Rodrigo Primo</a>、<a href=\"https://profiles.wordpress.org/rommelxcastro\">Rommel Castro</a>、<a href=\"https://profiles.wordpress.org/wpmuguru\">Ron Rennick</a>、<a href=\"https://profiles.wordpress.org/ronalfy\">Ronald Huereca</a>、<a href=\"https://profiles.wordpress.org/kingkool68\">Russell Heimlich</a>、<a href=\"https://profiles.wordpress.org/ruudjoyo\">Ruud Laan</a>、<a href=\"https://profiles.wordpress.org/ryankienstra\">Ryan Kienstra</a>、<a href=\"https://profiles.wordpress.org/markel\">Ryan Markel</a>、<a href=\"https://profiles.wordpress.org/rmccue\">Ryan McCue</a>、<a href=\"https://profiles.wordpress.org/welcher\">Ryan Welcher</a>、<a href=\"https://profiles.wordpress.org/zeo\">Safirul Alredha</a>、<a href=\"https://profiles.wordpress.org/salcode\">Sal Ferrarello</a>、<a href=\"https://profiles.wordpress.org/sammybeats\">Sam Brodie</a>、<a href=\"https://profiles.wordpress.org/sam2kb\">sam2kb</a>、<a href=\"https://profiles.wordpress.org/solarissmoke\">Samir Shah</a>、<a href=\"https://profiles.wordpress.org/samuelsidler\">Samuel Sidler</a>、<a href=\"https://profiles.wordpress.org/otto42\">Samuel Wood (Otto)</a>、<a href=\"https://profiles.wordpress.org/sanketparmar\">Sanket Parmar</a>、<a href=\"https://profiles.wordpress.org/rosso99\">Sara Rosso</a>、<a href=\"https://profiles.wordpress.org/sarciszewski\">sarciszewski</a>、<a href=\"https://profiles.wordpress.org/sgrant\">Scott Grant</a>、<a href=\"https://profiles.wordpress.org/sc0ttkclark\">Scott Kingsley Clark</a>、<a href=\"https://profiles.wordpress.org/coffee2code\">Scott Reilly</a>、<a href=\"https://profiles.wordpress.org/greglone\">ScreenfeedFr</a>、<a href=\"https://profiles.wordpress.org/scribu\">scribu</a>、<a href=\"https://profiles.wordpress.org/sdavis2702\">Sean Davis</a>、<a href=\"https://profiles.wordpress.org/seanchayes\">Sean Hayes</a>、<a href=\"https://profiles.wordpress.org/sebastianpisula\">Sebastian Pisula</a>、<a href=\"https://profiles.wordpress.org/sergeybiryukov\">Sergey Biryukov</a>、<a href=\"https://profiles.wordpress.org/serpent7776\">serpent7776</a>、<a href=\"https://profiles.wordpress.org/several27\">several27</a>、<a href=\"https://profiles.wordpress.org/shimakyohsuke\">shimakyohsuke</a>、<a href=\"https://profiles.wordpress.org/side777\">side777</a>、<a href=\"https://profiles.wordpress.org/pross\">Simon Prosser</a>、<a href=\"https://profiles.wordpress.org/simonwheatley\">Simon Wheatley</a>、<a href=\"https://profiles.wordpress.org/siobhan\">Siobhan</a>、<a href=\"https://profiles.wordpress.org/sirzooro\">sirzooro</a>、<a href=\"https://profiles.wordpress.org/sjmur\">sjmur</a>、<a href=\"https://profiles.wordpress.org/smerriman\">smerriman</a>、<a href=\"https://profiles.wordpress.org/spacedmonkey\">Spacedmonkey</a>、<a href=\"https://profiles.wordpress.org/khromov\">Stanislav Khromov</a>、<a href=\"https://profiles.wordpress.org/metodiew\">Stanko Metodiev</a>、<a href=\"https://profiles.wordpress.org/stebbiv\">stebbiv</a>、<a href=\"https://profiles.wordpress.org/miglosh\">Stefan Froehlich</a>、<a href=\"https://profiles.wordpress.org/sboisvert\">Stephane Boisvert</a>、<a href=\"https://profiles.wordpress.org/sillybean\">Stephanie Leary</a>、<a href=\"https://profiles.wordpress.org/netweb\">Stephen Edgar</a>、<a href=\"https://profiles.wordpress.org/stephenharris\">Stephen Harris</a>、<a href=\"https://profiles.wordpress.org/stevegrunwell\">Steve Grunwell</a>、<a href=\"https://profiles.wordpress.org/stevehenty\">stevehenty</a>、<a href=\"https://profiles.wordpress.org/stevehoneynz\">SteveHoneyNZ</a>、<a href=\"https://profiles.wordpress.org/stevenkword\">Steven Word</a>、<a href=\"https://profiles.wordpress.org/charlestonsw\">Store Locator Plus</a>、<a href=\"https://profiles.wordpress.org/sudar\">Sudar Muthu</a>、<a href=\"https://profiles.wordpress.org/brainstormforce\">Sujay</a>、<a href=\"https://profiles.wordpress.org/5um17\">Sumit Singh</a>、<a href=\"https://profiles.wordpress.org/summerblue\">summerblue</a>、<a href=\"https://profiles.wordpress.org/sunnyratilal\">Sunny Ratilal</a>、<a href=\"https://profiles.wordpress.org/iamtakashi\">Takashi Irie</a>、<a href=\"https://profiles.wordpress.org/miyauchi\">Takayuki Miyauchi</a>、<a href=\"https://profiles.wordpress.org/karmatosed\">Tammie Lister</a>、<a href=\"https://profiles.wordpress.org/tanner-m\">Tanner Moushey</a>、<a href=\"https://profiles.wordpress.org/tbcorr\">tbcorr</a>、<a href=\"https://profiles.wordpress.org/tychay\">Terry Chay</a>、<a href=\"https://profiles.wordpress.org/tharsheblows\">tharsheblows</a>、<a href=\"https://profiles.wordpress.org/themiked\">theMikeD</a>、<a href=\"https://profiles.wordpress.org/thomaswm\">thomaswm</a>、<a href=\"https://profiles.wordpress.org/tfrommen\">Thorsten Frommen</a>、<a href=\"https://profiles.wordpress.org/tott\">Thorsten Ott</a>、<a href=\"https://profiles.wordpress.org/tigertech\">tigertech</a>、<a href=\"https://profiles.wordpress.org/tillkruess\">Till Kruss</a>、<a href=\"https://profiles.wordpress.org/tevko\">Tim Evko</a>、<a href=\"https://profiles.wordpress.org/tmatsuur\">tmatsuur</a>、<a href=\"https://profiles.wordpress.org/tmeister\">tmeister</a>、<a href=\"https://profiles.wordpress.org/tobiasbg\">TobiasBg</a>、<a href=\"https://profiles.wordpress.org/willmot\">Tom Willmot</a>、<a href=\"https://profiles.wordpress.org/tomharrigan\">TomHarrigan</a>、<a href=\"https://profiles.wordpress.org/tommarshall\">tommarshall</a>、<a href=\"https://profiles.wordpress.org/tomsommer\">tomsommer</a>、<a href=\"https://profiles.wordpress.org/skithund\">Toni Viemero</a>、<a href=\"https://profiles.wordpress.org/toro_unit\">Toro_Unit (Hiroshi Urabe)</a>、<a href=\"https://profiles.wordpress.org/liljimmi\">Tracy (LilJimmi) Levesque</a>、<a href=\"https://profiles.wordpress.org/rilwis\">Tran Ngoc Tuan Anh</a>、<a href=\"https://profiles.wordpress.org/wpsmith\">Travis Smith</a>、<a href=\"https://profiles.wordpress.org/trenzterra\">trenzterra</a>、<a href=\"https://profiles.wordpress.org/tryon\">Tryon Eggleston</a>、<a href=\"https://profiles.wordpress.org/tszming\">tszming</a>、<a href=\"https://profiles.wordpress.org/junsuijin\">ty</a>、<a href=\"https://profiles.wordpress.org/tywayne\">Ty Carlson</a>、<a href=\"https://profiles.wordpress.org/grapplerulrich\">Ulrich</a>、<a href=\"https://profiles.wordpress.org/sorich87\">Ulrich Sossou</a>、<a href=\"https://profiles.wordpress.org/umeshsingla\">Umesh Kumar</a>、<a href=\"https://profiles.wordpress.org/umeshnevase\">Umesh Nevase</a>、<a href=\"https://profiles.wordpress.org/utkarshpatel\">Utkarsh</a>、<a href=\"https://profiles.wordpress.org/vilkatis\">vilkatis</a>、<a href=\"https://profiles.wordpress.org/voldemortensen\">voldemortensen</a>、<a href=\"https://profiles.wordpress.org/walterebert\">Walter Ebert</a>、<a href=\"https://profiles.wordpress.org/walterbarcelos\">walterbarcelos</a>、<a href=\"https://profiles.wordpress.org/webdevmattcrom\">webdevmattcrom</a>、<a href=\"https://profiles.wordpress.org/wen-solutions\">WEN Solutions</a>、<a href=\"https://profiles.wordpress.org/wenthemes\">WEN Themes</a>、<a href=\"https://profiles.wordpress.org/westonruter\">Weston Ruter</a>、<a href=\"https://profiles.wordpress.org/wmertens\">wmertens</a>、<a href=\"https://profiles.wordpress.org/wojtekszkutnik\">Wojtek Szkutnik</a>、<a href=\"https://profiles.wordpress.org/theode\">WP Plugin Dev dot com</a>、<a href=\"https://profiles.wordpress.org/wpdev101\">wpdev101</a>、<a href=\"https://profiles.wordpress.org/alphawolf\">wpseek</a>、<a href=\"https://profiles.wordpress.org/wturrell\">wturrell</a>、<a href=\"https://profiles.wordpress.org/yamchhetri\">Yam Chhetri</a>、<a href=\"https://profiles.wordpress.org/yoavf\">Yoav Farhi</a>、<a href=\"https://profiles.wordpress.org/oxymoron\">Zach Wills</a>、<a href=\"https://profiles.wordpress.org/zrothauser\">Zack Rothauser</a>和<a href=\"https://profiles.wordpress.org/tollmanz\">Zack Tollman</a>。</p>\n<p>特别感谢<a href=\"http://siobhanmckeown.com/\">Siobhan McKeown</a>与<a href=\"http://www.sararosso.com/newsletter/\">Sara Rosso</a>制作发布视频，及<a href=\"http://camikaos.com/\">Cami Kaos</a>的配音。</p>\n<p>最后，让我们感谢为发布视频制作了字幕的贡献者，这次的发布视频被翻译成了23种语言！</p>\n<p>如果您想帮忙，请查阅<a href=\"https://make.wordpress.org/\">Make WordPress</a>和我们的<a href=\"https://make.wordpress.org/core/\">核心开发博客</a>。感谢您选择WordPress，我们4.5见！</p>\n</div>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:50:\"https://cn.wordpress.org/2015/12/13/clifford/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:2:\"10\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:5;a:6:{s:4:\"data\";s:45:\"\n		\n		\n		\n		\n		\n				\n\n		\n		\n				\n			\n		\n\n\n\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:8:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:25:\"WordPress 4.3“Billie”\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:43:\"https://cn.wordpress.org/2015/08/21/billie/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:52:\"https://cn.wordpress.org/2015/08/21/billie/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 20 Aug 2015 19:04:38 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"https://cn.wordpress.org/?p=995\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:49:\"WordPress 4.3简体中文版现已开放下载。\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:9:\"enclosure\";a:3:{i:0;a:5:{s:4:\"data\";s:0:\"\";s:7:\"attribs\";a:1:{s:0:\"\";a:3:{s:3:\"url\";s:46:\"https://s.w.org/images/core/4.3/formatting.mp4\";s:6:\"length\";s:7:\"1574782\";s:4:\"type\";s:9:\"video/mp4\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:1;a:5:{s:4:\"data\";s:0:\"\";s:7:\"attribs\";a:1:{s:0:\"\";a:3:{s:3:\"url\";s:46:\"https://s.w.org/images/core/4.3/formatting.ogv\";s:6:\"length\";s:7:\"1939540\";s:4:\"type\";s:9:\"video/ogg\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:2;a:5:{s:4:\"data\";s:0:\"\";s:7:\"attribs\";a:1:{s:0:\"\";a:3:{s:3:\"url\";s:47:\"https://s.w.org/images/core/4.3/formatting.webm\";s:6:\"length\";s:6:\"686435\";s:4:\"type\";s:10:\"video/webm\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Jimmy Xu\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:22076:\"<div style=\"width: 692px\">\nWordPress 4.3简体中文版现已<a href=\"https://cn.wordpress.org/releases/\">开放下载</a>，或在您的WordPress仪表盘中升级。我们将此版本命名为“Billie”，以纪念爵士钢琴手<a href=\"https://zh.wikipedia.org/zh-cn/%E6%AF%94%E8%8E%89%C2%B7%E8%8D%B7%E8%8E%89%E6%88%B4\">比莉·荷莉戴</a>。4.3中的新功能会让您更容易自定义网站及内容格式。</p>\n<div id=\"v-T54Iy7Tw-1\" class=\"video-player\"><video id=\"v-T54Iy7Tw-1-video\" width=\"620\" height=\"348\" poster=\"https://videos.files.wordpress.com/T54Iy7Tw/video-7601c95191_scruberthumbnail_1.jpg\" controls=\"true\" preload=\"metadata\" dir=\"ltr\" lang=\"en\"><source src=\"https://videos.files.wordpress.com/T54Iy7Tw/video-7601c95191_dvd.mp4\" type=\"video/mp4; codecs=&quot;avc1.64001E, mp4a.40.2&quot;\" /><source src=\"https://videos.files.wordpress.com/T54Iy7Tw/video-7601c95191_fmt1.ogv\" type=\"video/ogg; codecs=&quot;theora, vorbis&quot;\" /><div><img alt=\"Introducing WordPress 4.3 &quot;Billie&quot;\" src=\"https://videos.files.wordpress.com/T54Iy7Tw/video-7601c95191_scruberthumbnail_1.jpg\" width=\"620\" height=\"348\" /></div><p>Introducing WordPress 4.3 &quot;Billie&quot;</p></video></div>\n<hr />\n<h2>定制器菜单</h2>\n<div><img src=\"https://s.w.org/images/core/4.3/menu-customizer.png\" alt=\"\" /></div>\n<p>建立您的菜单，更新，然后指定至适当位置，同时还能在定制器里即时预览。流线式定制器设计提供对手机友好且更方便的介面。随着每个版本发布，它将变得更快、更好用。</p>\n<hr />\n<h2>格式快捷键</h2>\n<p><div style=\"width: 640px;\" class=\"wp-video\"><video class=\"wp-video-shortcode\" id=\"video-995-4\" width=\"640\" height=\"360\" loop=\"1\" autoplay=\"1\" preload=\"metadata\" controls=\"controls\"><source type=\"video/mp4\" src=\"https://s.w.org/images/core/4.3/formatting.mp4?_=4\" /><source type=\"video/webm\" src=\"https://s.w.org/images/core/4.3/formatting.webm?_=4\" /><source type=\"video/ogg\" src=\"https://s.w.org/images/core/4.3/formatting.ogv?_=4\" /><a href=\"https://s.w.org/images/core/4.3/formatting.mp4\">https://s.w.org/images/core/4.3/formatting.mp4</a></video></div><br />\n您的写作流程伴随着WordPress 4.3全新格式快捷键功能将变得更快。使用星号来建立清单、井号建立一个标题。别再打断您的工作；您的文字搭配<code>*</code>和<code>#</code>看起来更加美好。</p>\n<hr />\n<h2>站点图标</h2>\n<p><img src=\"https://s.w.org/images/core/4.3/site-icon-customizer.png\" alt=\"\" /><br />\n在浏览器标签、收藏夹和移动设备主画面以站点图标作为您的站点代表。在定制器里新增您独一无二的站点图标；当您切换主题时仍保持不变。使您的站点呈现出自己的品牌。</p>\n<hr />\n<h2>更好的密码</h2>\n<p><img src=\"https://s.w.org/images/core/4.3/better-passwords.png\" alt=\"\" /><br />\n借助WordPress改进的密码设定功能使网站更安全。不再使用电子邮件接收密码，而是取得一个密码重设链接。当您在网站新增用户或编辑用户资料时，WordPress将会自动产生一个安全密码。</p>\n<hr />\n<h2>其他改善</h2>\n<ul>\n<li><strong>更顺滑的管理体验</strong> – 经过改进的跨管理界面的列表视图使您的WordPress更方便并且更容易在任何装置上运作。</li>\n<li><strong>关闭页面的评论</strong> – 新建立的页面将关闭评论，将讨论局限在您的博客，只在它们应该出现的地方显示。</li>\n<li><strong>快速自定义您的站点</strong> – 无论您是否在前台，都可以点击工具栏的自定义链接迅速为您的网站做出更改。</li>\n</ul>\n<hr />\n<h2>开发团队</h2>\n<p><a class=\"alignleft\" href=\"https://profiles.wordpress.org/obenland\"><img id=\"grav-2370ea5912750f4cb0f3c51ae1cbca55-0\" class=\"grav-hashed\" src=\"https://www.gravatar.com/avatar/2370ea5912750f4cb0f3c51ae1cbca55?d=mm&amp;s=180&amp;r=G\" alt=\"Konstantin Obenland\" width=\"80\" height=\"80\" /></a><br />\n此次发布由<a href=\"http://konstantin.obenland.it/\">Konstantin Obenland</a>领头，并得到了以下个人的帮助。这次发布包含了246人的贡献。在您喜欢的音乐服务中听听比莉·荷莉戴，并看看下面这些个人资料吧：</p>\n<p><a href=\"https://profiles.wordpress.org/mercime\">@mercime</a>、<a href=\"https://profiles.wordpress.org/aaroncampbell\">Aaron D. Campbell</a>、<a href=\"https://profiles.wordpress.org/jorbin\">Aaron Jorbin</a>、<a href=\"https://profiles.wordpress.org/adamkheckler\">Adam Heckler</a>、<a href=\"https://profiles.wordpress.org/adamsilverstein\">Adam Silverstein</a>、<a href=\"https://profiles.wordpress.org/akibjorklund\">Aki Bjorklund</a>、<a href=\"https://profiles.wordpress.org/akirk\">Alex Kirk</a>、<a href=\"https://profiles.wordpress.org/viper007bond\">Alex Mills (Viper007Bond)</a>、<a href=\"https://profiles.wordpress.org/tellyworth\">Alex Shiels</a>、<a href=\"https://profiles.wordpress.org/deconf\">Alin Marcu</a>、<a href=\"https://profiles.wordpress.org/andfinally\">andfinally</a>、<a href=\"https://profiles.wordpress.org/afercia\">Andrea Fercia</a>、<a href=\"https://profiles.wordpress.org/andg\">Andrea Gandino</a>、<a href=\"https://profiles.wordpress.org/nacin\">Andrew Nacin</a>、<a href=\"https://profiles.wordpress.org/azaozz\">Andrew Ozz</a>、<a href=\"https://profiles.wordpress.org/afragen\">Andy Fragen</a>、<a href=\"https://profiles.wordpress.org/ankit-k-gupta\">Ankit K Gupta</a>、<a href=\"https://profiles.wordpress.org/antpb\">Anthony Burchell</a>、<a href=\"https://profiles.wordpress.org/anubisthejackle\">anubisthejackle</a>、<a href=\"https://profiles.wordpress.org/aramzs\">Aram Zucker-Scharff</a>、<a href=\"https://profiles.wordpress.org/arjunskumar\">Arjun S Kumar</a>、<a href=\"https://profiles.wordpress.org/avnarun\">avnarun</a>、<a href=\"https://profiles.wordpress.org/brad2dabone\">Bad Feather</a>、<a href=\"https://profiles.wordpress.org/bcole808\">Ben Cole</a>、<a href=\"https://profiles.wordpress.org/empireoflight\">Ben Dunkle</a>、<a href=\"https://profiles.wordpress.org/binarykitten\">BinaryKitten</a>、<a href=\"https://profiles.wordpress.org/birgire\">Birgir Erlendsson (birgire)</a>、<a href=\"https://profiles.wordpress.org/bjornjohansen\">Bjorn Johansen</a>、<a href=\"https://profiles.wordpress.org/bolo1988\">bolo1988</a>、<a href=\"https://profiles.wordpress.org/boonebgorges\">Boone B. Gorges</a>、<a href=\"https://profiles.wordpress.org/bradt\">Brad Touesnard</a>、<a href=\"https://profiles.wordpress.org/bramd\">Bram Duvigneau</a>、<a href=\"https://profiles.wordpress.org/kraftbj\">Brandon Kraft</a>、<a href=\"https://profiles.wordpress.org/krogsgard\">Brian Krogsgard</a>、<a href=\"https://profiles.wordpress.org/brianlayman\">Brian Layman</a>、<a href=\"https://profiles.wordpress.org/icaleb\">Caleb Burks</a>、<a href=\"https://profiles.wordpress.org/calevans\">CalEvans</a>、<a href=\"https://profiles.wordpress.org/chasewiseman\">Chase Wiseman</a>、<a href=\"https://profiles.wordpress.org/chipbennett\">Chip Bennett</a>、<a href=\"https://profiles.wordpress.org/chouby\">Chouby</a>、<a href=\"https://profiles.wordpress.org/c3mdigital\">Chris Olbekson</a>、<a href=\"https://profiles.wordpress.org/chriscct7\">chriscct7</a>、<a href=\"https://profiles.wordpress.org/posykrat\">Clement Biron</a>、<a href=\"https://profiles.wordpress.org/craig-ralston\">Craig Ralston</a>、<a href=\"https://profiles.wordpress.org/danielbachhuber\">Daniel Bachhuber</a>、<a href=\"https://profiles.wordpress.org/redsweater\">Daniel Jalkut (Red Sweater)</a>、<a href=\"https://profiles.wordpress.org/mte90\">Daniele Mte90 Scasciafratte</a>、<a href=\"https://profiles.wordpress.org/daniluk4000\">daniluk4000</a>、<a href=\"https://profiles.wordpress.org/dmchale\">Dave McHale</a>、<a href=\"https://profiles.wordpress.org/daveal\">DaveAl</a>、<a href=\"https://profiles.wordpress.org/davidakennedy\">David A. Kennedy</a>、<a href=\"https://profiles.wordpress.org/dlh\">David Herrera</a>、<a href=\"https://profiles.wordpress.org/daxelrod\">daxelrod</a>、<a href=\"https://profiles.wordpress.org/denis-de-bernardy\">Denis de Bernardy</a>、<a href=\"https://profiles.wordpress.org/realloc\">Dennis Ploetner</a>、<a href=\"https://profiles.wordpress.org/valendesigns\">Derek Herman</a>、<a href=\"https://profiles.wordpress.org/dd32\">Dion Hulse</a>、<a href=\"https://profiles.wordpress.org/dipeshkakadiya\">dipesh.kakadiya</a>、<a href=\"https://profiles.wordpress.org/dmsnell\">dmsnell</a>、<a href=\"https://profiles.wordpress.org/ocean90\">Dominik Schilling</a>、<a href=\"https://profiles.wordpress.org/drewapicture\">Drew Jaynes</a>、<a href=\"https://profiles.wordpress.org/kucrut\">Dzikri Aziz</a>、<a href=\"https://profiles.wordpress.org/eclev91\">eclev91</a>、<a href=\"https://profiles.wordpress.org/eligijus\">eligijus</a>、<a href=\"https://profiles.wordpress.org/eliorivero\">Elio Rivero</a>、<a href=\"https://profiles.wordpress.org/iseulde\">Ella Iseulde Van Dorpe</a>、<a href=\"https://profiles.wordpress.org/ericlewis\">Eric Andrew Lewis</a>、<a href=\"https://profiles.wordpress.org/ebinnion\">Eric Binnion</a>、<a href=\"https://profiles.wordpress.org/ericmann\">Eric Mann</a>、<a href=\"https://profiles.wordpress.org/fab1en\">Fabien Quatravaux</a>、<a href=\"https://profiles.wordpress.org/flixos90\">Felix Arntz</a>、<a href=\"https://profiles.wordpress.org/francoeurdavid\">francoeurdavid</a>、<a href=\"https://profiles.wordpress.org/frank-klein\">Frank Klein</a>、<a href=\"https://profiles.wordpress.org/gabrielperezs\">gabrielperezs</a>、<a href=\"https://profiles.wordpress.org/voldemortensen\">Garth Mortensen</a>、<a href=\"https://profiles.wordpress.org/garyj\">Gary Jones</a>、<a href=\"https://profiles.wordpress.org/pento\">Gary Pendergast</a>、<a href=\"https://profiles.wordpress.org/georgestephanis\">George Stephanis</a>、<a href=\"https://profiles.wordpress.org/glennm\">glennm</a>、<a href=\"https://profiles.wordpress.org/gtuk\">gtuk</a>、<a href=\"https://profiles.wordpress.org/hailin\">hailin</a>、<a href=\"https://profiles.wordpress.org/hauvong\">hauvong</a>、<a href=\"https://profiles.wordpress.org/helen\">Helen Hou-Sandí</a>、<a href=\"https://profiles.wordpress.org/henrikakselsen\">henrikakselsen</a>、<a href=\"https://profiles.wordpress.org/hnle\">Hinaloe</a>、<a href=\"https://profiles.wordpress.org/hrishiv90\">Hrishikesh Vaipurkar</a>、<a href=\"https://profiles.wordpress.org/hugobaeta\">Hugo Baeta</a>、<a href=\"https://profiles.wordpress.org/polevaultweb\">Iain Poulson</a>、<a href=\"https://profiles.wordpress.org/imath\">imath</a>、<a href=\"https://profiles.wordpress.org/ipstenu\">Ipstenu (Mika Epstein)</a>、<a href=\"https://profiles.wordpress.org/isaacchapman\">isaacchapman</a>、<a href=\"https://profiles.wordpress.org/izem\">izem</a>、<a href=\"https://profiles.wordpress.org/jdgrimes\">J.D. Grimes</a>、<a href=\"https://profiles.wordpress.org/jacklenox\">Jack Lenox</a>、<a href=\"https://profiles.wordpress.org/jadpm\">jadpm</a>、<a href=\"https://profiles.wordpress.org/jamesgol\">jamesgol</a>、<a href=\"https://profiles.wordpress.org/jancbeck\">jancbeck</a>、<a href=\"https://profiles.wordpress.org/jfarthing84\">Jeff Farthing</a>、<a href=\"https://profiles.wordpress.org/jeremyfelt\">Jeremy Felt</a>、<a href=\"https://profiles.wordpress.org/jpry\">Jeremy Pry</a>、<a href=\"https://profiles.wordpress.org/jmichaelward\">Jeremy Ward</a>、<a href=\"https://profiles.wordpress.org/jesin\">Jesin A</a>、<a href=\"https://profiles.wordpress.org/jipmoors\">jipmoors</a>、<a href=\"https://profiles.wordpress.org/joedolson\">Joe Dolson</a>、<a href=\"https://profiles.wordpress.org/joehoyle\">Joe Hoyle</a>、<a href=\"https://profiles.wordpress.org/joemcgill\">Joe McGill</a>、<a href=\"https://profiles.wordpress.org/jkudish\">Joey Kudish</a>、<a href=\"https://profiles.wordpress.org/johnbillion\">John Blackbourn</a>、<a href=\"https://profiles.wordpress.org/johnjamesjacoby\">John James Jacoby</a>、<a href=\"https://profiles.wordpress.org/picard102\">John Leschinski</a>、<a href=\"https://profiles.wordpress.org/joostdevalk\">Joost de Valk</a>、<a href=\"https://profiles.wordpress.org/jpyper\">Jpyper</a>、<a href=\"https://profiles.wordpress.org/jrf\">jrf</a>、<a href=\"https://profiles.wordpress.org/juliobox\">Julio Potier</a>、<a href=\"https://profiles.wordpress.org/jtsternberg\">Justin Sternberg</a>、<a href=\"https://profiles.wordpress.org/ungestaltbar\">Kai</a>、<a href=\"https://profiles.wordpress.org/karinchristen\">karinchristen</a>、<a href=\"https://profiles.wordpress.org/karpstrucking\">karpstrucking</a>、<a href=\"https://profiles.wordpress.org/ryelle\">Kelly Dwan</a>、<a href=\"https://profiles.wordpress.org/kevkoeh\">Kevin Koehler</a>、<a href=\"https://profiles.wordpress.org/kitchin\">kitchin</a>、<a href=\"https://profiles.wordpress.org/ixkaito\">Kite</a>、<a href=\"https://profiles.wordpress.org/kovshenin\">Konstantin Kovshenin</a>、<a href=\"https://profiles.wordpress.org/lancewillett\">Lance Willett</a>、<a href=\"https://profiles.wordpress.org/leewillis77\">Lee Willis</a>、<a href=\"https://profiles.wordpress.org/leogopal\">Leo Gopal</a>、<a href=\"https://profiles.wordpress.org/loushou\">loushou</a>、<a href=\"https://profiles.wordpress.org/lumaraf\">Lumaraf</a>、<a href=\"https://profiles.wordpress.org/tyxla\">Marin Atanasov</a>、<a href=\"https://profiles.wordpress.org/nofearinc\">Mario Peshev</a>、<a href=\"https://profiles.wordpress.org/clorith\">Marius (Clorith)</a>、<a href=\"https://profiles.wordpress.org/markjaquith\">Mark Jaquith</a>、<a href=\"https://profiles.wordpress.org/markoheijnen\">Marko Heijnen</a>、<a href=\"https://profiles.wordpress.org/marsjaninzmarsa\">marsjaninzmarsa</a>、<a href=\"https://profiles.wordpress.org/martinsachse\">martinsachse</a>、<a href=\"https://profiles.wordpress.org/matt\">Matt Mullenweg</a>、<a href=\"https://profiles.wordpress.org/veraxus\">Matt van Andel</a>、<a href=\"https://profiles.wordpress.org/mattwiebe\">Matt Wiebe</a>、<a href=\"https://profiles.wordpress.org/mattyrob\">mattyrob</a>、<a href=\"https://profiles.wordpress.org/maxxsnake\">maxxsnake</a>、<a href=\"https://profiles.wordpress.org/melchoyce\">Mel Choyce</a>、<a href=\"https://profiles.wordpress.org/nikonratm\">Michael</a>、<a href=\"https://profiles.wordpress.org/mdawaffe\">Michael Adams (mdawaffe)</a>、<a href=\"https://profiles.wordpress.org/michael-arestad\">Michael Arestad</a>、<a href=\"https://profiles.wordpress.org/michaelryanmcneill\">michaelryanmcneill</a>、<a href=\"https://profiles.wordpress.org/mcguive7\">Mickey Kay</a>、<a href=\"https://profiles.wordpress.org/mihai\">mihai</a>、<a href=\"https://profiles.wordpress.org/mikehansenme\">Mike Hansen</a>、<a href=\"https://profiles.wordpress.org/mnelson4\">Mike Nelson</a>、<a href=\"https://profiles.wordpress.org/dh-shredder\">Mike Schroder</a>、<a href=\"https://profiles.wordpress.org/dimadin\">Milan Dinic</a>、<a href=\"https://profiles.wordpress.org/morganestes\">Morgan Estes</a>、<a href=\"https://profiles.wordpress.org/mrutz\">mrutz</a>、<a href=\"https://profiles.wordpress.org/nabil_kadimi\">nabil_kadimi</a>、<a href=\"https://profiles.wordpress.org/Nao\">Naoko Takano</a>、<a href=\"https://profiles.wordpress.org/nazmulhossainnihal\">Nazmul Hossain Nihal</a>、<a href=\"https://profiles.wordpress.org/nicholas_io\">nicholas_io</a>、<a href=\"https://profiles.wordpress.org/celloexpressions\">Nick Halsey</a>、<a href=\"https://profiles.wordpress.org/nickmomrik\">Nick Momrik</a>、<a href=\"https://profiles.wordpress.org/nbachiyski\">Nikolay Bachiyski</a>、<a href=\"https://profiles.wordpress.org/rabmalin\">Nilambar Sharma</a>、<a href=\"https://profiles.wordpress.org/onnimonni\">Onni Hakala</a>、<a href=\"https://profiles.wordpress.org/ozh\">Ozh</a>、<a href=\"https://profiles.wordpress.org/pareshradadiya-1\">Paresh Radadiya</a>、<a href=\"https://profiles.wordpress.org/swissspidy\">Pascal Birchler</a>、<a href=\"https://profiles.wordpress.org/djpaul\">Paul Gibbs</a>、<a href=\"https://profiles.wordpress.org/paulwilde\">Paul Wilde</a>、<a href=\"https://profiles.wordpress.org/pavelevap\">pavelevap</a>、<a href=\"https://profiles.wordpress.org/gungeekatx\">Pete Nelson</a>、<a href=\"https://profiles.wordpress.org/peterwilsoncc\">Peter Wilson</a>、<a href=\"https://profiles.wordpress.org/peterrknight\">PeterRKnight</a>、<a href=\"https://profiles.wordpress.org/philiparthurmoore\">Philip Arthur Moore</a>、<a href=\"https://profiles.wordpress.org/mordauk\">Pippin Williamson</a>、<a href=\"https://profiles.wordpress.org/pragunbhutani\">pragunbhutani</a>、<a href=\"https://profiles.wordpress.org/rachelbaker\">Rachel Baker</a>、<a href=\"https://profiles.wordpress.org/ramiy\">Rami Yushuvaev</a>、<a href=\"https://profiles.wordpress.org/rarylson\">rarylson</a>、<a href=\"https://profiles.wordpress.org/lamosty\">Rastislav Lamos</a>、<a href=\"https://profiles.wordpress.org/rauchg\">rauchg</a>、<a href=\"https://profiles.wordpress.org/ravinderk\">Ravinder Kumar</a>、<a href=\"https://profiles.wordpress.org/rclations\">RC Lations</a>、<a href=\"https://profiles.wordpress.org/greuben\">Reuben Gunday</a>、<a href=\"https://profiles.wordpress.org/rianrietveld\">Rian Rietveld</a>、<a href=\"https://profiles.wordpress.org/ritteshpatel\">Ritesh Patel</a>、<a href=\"https://profiles.wordpress.org/miqrogroove\">Robert Chapin</a>、<a href=\"https://profiles.wordpress.org/rdall\">Robert Dall</a>、<a href=\"https://profiles.wordpress.org/rodrigosprimo\">Rodrigo Primo</a>、<a href=\"https://profiles.wordpress.org/rommelxcastro\">Rommel Castro</a>、<a href=\"https://profiles.wordpress.org/magicroundabout\">Ross Wintle</a>、<a href=\"https://profiles.wordpress.org/rhurling\">Rouven Hurling</a>、<a href=\"https://profiles.wordpress.org/ryan\">Ryan Boren</a>、<a href=\"https://profiles.wordpress.org/rmarks\">Ryan Marks</a>、<a href=\"https://profiles.wordpress.org/rmccue\">Ryan McCue</a>、<a href=\"https://profiles.wordpress.org/ohryan\">Ryan Neudorf</a>、<a href=\"https://profiles.wordpress.org/welcher\">Ryan Welcher</a>、<a href=\"https://profiles.wordpress.org/sagarjadhav\">Sagar Jadhav</a>、<a href=\"https://profiles.wordpress.org/salcode\">Sal Ferrarello</a>、<a href=\"https://profiles.wordpress.org/solarissmoke\">Samir Shah</a>、<a href=\"https://profiles.wordpress.org/santagada\">santagada</a>、<a href=\"https://profiles.wordpress.org/sc0ttkclark\">Scott Kingsley Clark</a>、<a href=\"https://profiles.wordpress.org/coffee2code\">Scott Reilly</a>、<a href=\"https://profiles.wordpress.org/wonderboymusic\">Scott Taylor</a>、<a href=\"https://profiles.wordpress.org/scribu\">scribu</a>、<a href=\"https://profiles.wordpress.org/scruffian\">scruffian</a>、<a href=\"https://profiles.wordpress.org/seanchayes\">Sean Hayes</a>、<a href=\"https://profiles.wordpress.org/sebastiantiede\">Sebastian</a>、<a href=\"https://profiles.wordpress.org/sergeybiryukov\">Sergey Biryukov</a>、<a href=\"https://profiles.wordpress.org/shooper\">Shawn Hooper</a>、<a href=\"https://profiles.wordpress.org/designsimply\">Sheri Bigelow</a>、<a href=\"https://profiles.wordpress.org/simonwheatley\">Simon Wheatley</a>、<a href=\"https://profiles.wordpress.org/siobhan\">Siobhan</a>、<a href=\"https://profiles.wordpress.org/metodiew\">Stanko Metodiev</a>、<a href=\"https://profiles.wordpress.org/stephdau\">Stephane Daury (stephdau)</a>、<a href=\"https://profiles.wordpress.org/netweb\">Stephen Edgar</a>、<a href=\"https://profiles.wordpress.org/stevegrunwell\">Steve Grunwell</a>、<a href=\"https://profiles.wordpress.org/stevenkword\">Steven Word</a>、<a href=\"https://profiles.wordpress.org/stuartshields\">stuartshields</a>、<a href=\"https://profiles.wordpress.org/sudar\">Sudar</a>、<a href=\"https://profiles.wordpress.org/sunnyratilal\">Sunny Ratilal</a>、<a href=\"https://profiles.wordpress.org/taka2\">taka2</a>、<a href=\"https://profiles.wordpress.org/tharsheblows\">tharsheblows</a>、<a href=\"https://profiles.wordpress.org/thorbrink\">Thor Brink</a>、<a href=\"https://profiles.wordpress.org/creativeinfusion\">Tim Smith</a>、<a href=\"https://profiles.wordpress.org/tlexcellent\">tlexcellent</a>、<a href=\"https://profiles.wordpress.org/tmatsuur\">tmatsuur</a>、<a href=\"https://profiles.wordpress.org/tobiasbg\">TobiasBg</a>、<a href=\"https://profiles.wordpress.org/tomasm\">Tomas Mackevicius</a>、<a href=\"https://profiles.wordpress.org/tomharrigan\">TomHarrigan</a>、<a href=\"https://profiles.wordpress.org/toro_unit\">Toro_Unit (Hiroshi Urabe)</a>、<a href=\"https://profiles.wordpress.org/toru\">Toru Miki</a>、<a href=\"https://profiles.wordpress.org/liljimmi\">Tracy (LilJimmi) Levesque</a>、<a href=\"https://profiles.wordpress.org/tryon\">Tryon Eggleston</a>、<a href=\"https://profiles.wordpress.org/tywayne\">Ty Carlson</a>、<a href=\"https://profiles.wordpress.org/desaiuditd\">Udit Desai</a>、<a href=\"https://profiles.wordpress.org/vivekbhusal\">vivekbhusal</a>、<a href=\"https://profiles.wordpress.org/westonruter\">Weston Ruter</a>、<a href=\"https://profiles.wordpress.org/willnorris\">Will Norris</a>、<a href=\"https://profiles.wordpress.org/willgladstone\">willgladstone</a>、<a href=\"https://profiles.wordpress.org/earnjam\">William Earnhardt</a>、<a href=\"https://profiles.wordpress.org/willstedt\">willstedt</a>、<a href=\"https://profiles.wordpress.org/eltobiano\">WPMU DEV Jose</a>、<a href=\"https://profiles.wordpress.org/yoavf\">Yoav Farhi</a>、<a href=\"https://profiles.wordpress.org/ysalame\">Yuri Salame</a>、<a href=\"https://profiles.wordpress.org/oxymoron\">Zach Wills</a>、<a href=\"https://profiles.wordpress.org/katzwebdesign\">Zack Katz</a>和<a href=\"https://profiles.wordpress.org/tollmanz\">Zack Tollman</a>。</p>\n<p>特别感谢<a href=\"http://siobhanmckeown.com/\">Siobhan McKeown</a>制作发布视频、<a href=\"http://hugobaeta.com/\">Hugo Baeta</a>的设计和<a href=\"http://jacklenox.com/\">Jack Lenox</a>的配音。</p>\n<p>最后，让我们感谢为发布视频制作了字幕的贡献者，这次的发布视频被翻译成了30种语言！</p>\n<p>如果您想帮忙，请查阅<a href=\"https://make.wordpress.org/\">Make WordPress</a>和我们的<a href=\"https://make.wordpress.org/core/\">核心开发博客</a>。感谢您选择WordPress，我们4.4见！\n</div>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:48:\"https://cn.wordpress.org/2015/08/21/billie/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:2:\"13\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:6;a:6:{s:4:\"data\";s:42:\"\n		\n		\n		\n		\n		\n				\n\n		\n		\n				\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:25:\"WordPress 4.2“Powell”\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:43:\"https://cn.wordpress.org/2015/04/24/powell/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:52:\"https://cn.wordpress.org/2015/04/24/powell/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 23 Apr 2015 19:32:36 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"https://cn.wordpress.org/?p=977\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:49:\"WordPress 4.2简体中文版现已开放下载。\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Jimmy Xu\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:30183:\"<div style=\"width: 692px\">\nWordPress 4.2简体中文版现已<a href=\"https://cn.wordpress.org/releases/\">开放下载</a>，或在您的WordPress仪表盘中升级。我们将此版本命名为“Powell”，以纪念爵士钢琴手<a href=\"https://en.wikipedia.org/wiki/Bud_Powell\">巴德·鲍威尔</a>。4.2中的新功能会帮助您与全世界交流共享。</p>\n<div id=\"v-e9kH4FzP-1\" class=\"video-player\"><video id=\"v-e9kH4FzP-1-video\" width=\"620\" height=\"348\" poster=\"https://videos.files.wordpress.com/e9kH4FzP/wordpress-4-2_scruberthumbnail_2.jpg\" controls=\"true\" preload=\"metadata\" dir=\"ltr\" lang=\"en\"><source src=\"https://videos.files.wordpress.com/e9kH4FzP/wordpress-4-2_dvd.mp4\" type=\"video/mp4; codecs=&quot;avc1.64001E, mp4a.40.2&quot;\" /><source src=\"https://videos.files.wordpress.com/e9kH4FzP/wordpress-4-2_fmt1.ogv\" type=\"video/ogg; codecs=&quot;theora, vorbis&quot;\" /><div><img alt=\"Introducing WordPress 4.2 &quot;Powell&quot;\" src=\"https://videos.files.wordpress.com/e9kH4FzP/wordpress-4-2_scruberthumbnail_2.jpg\" width=\"620\" height=\"348\" /></div><p>Introducing WordPress 4.2 &quot;Powell&quot;</p></video></div>\n<hr style=\"margin: 2em 0 3em\" />\n<h2 style=\"text-align: center;margin: 15px 0 20px;font-family: sans-serif;font-size: 26px\">更方便地共享内容</h2>\n<p><img class=\"alignnone size-full wp-image-3677\" src=\"https://wordpress.org/news/files/2015/04/4.2-press-this-2.jpg\" alt=\"按这里\" width=\"1000\" height=\"832\" /><br />\n收藏、编辑、发布，向您介绍最新的”按这里“工具。在工具菜单中，将”按这里“加入到您的浏览器书签或移动设备主屏幕，然后您就可以迅雷不及掩耳地共享您的内容。共享您喜欢的视频、图片和内容从来没有像现在这样简单快捷。</p>\n<hr style=\"margin: 2em 0 3em\" />\n<h2 style=\"text-align: center;margin: 15px 0 20px;font-family: sans-serif;font-size: 26px\">扩展的字符集支持</h2>\n<p><img class=\"alignnone size-full wp-image-3676\" src=\"https://wordpress.org/news/files/2015/04/4.2-characters.png\" alt=\"字符集支持：颜文字和特殊字符\" width=\"1000\" height=\"832\" /><br />\n无论您使用何种语言，在WordPress中写作都将变得更好。WordPress 4.2将原生支持许多新字符，包括中日韩文字、音乐和数学符号，以及象形文字。</p>\n<p>即使您没有在使用以上那些字符，您仍可获益——WordPress现已支持颜文字！发挥创意并用<img src=\"https://s.w.org/images/core/emoji/2.3/72x72/1f499.png\" alt=\"?\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" />、<img src=\"https://s.w.org/images/core/emoji/2.3/72x72/1f438.png\" alt=\"?\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" />、<img src=\"https://s.w.org/images/core/emoji/2.3/72x72/1f412.png\" alt=\"?\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" />、<img src=\"https://s.w.org/images/core/emoji/2.3/72x72/1f355.png\" alt=\"?\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" />与所有其他<a href=\"https://codex.wordpress.org/Emoji\">颜文字</a>来装点您的内容。</p>\n<hr style=\"margin: 2em 0 3em\" />\n<p><img class=\"alignright size-medium wp-image-3656\" src=\"https://wordpress.org/news/files/2015/04/4.2-theme-switcher-300x230.png\" alt=\"定制器中的主题切换器\" width=\"288\" height=\"221\" /></p>\n<h3 style=\"margin: 0 0 5px 0;font-size: 16px;font-weight: bold\">在定制器中切换主题</h3>\n<p>您可以在定制器中浏览和预览已安装的主题，并可让主题在您的站点亮相之前确保它能够搭配您的内容。</p>\n<div style=\"clear: both\"></div>\n<p><img class=\"alignright size-medium wp-image-3653\" src=\"https://wordpress.org/news/files/2015/04/4.2-embeds-300x230.png\" alt=\"Tumbr.com oEmbed样例\" width=\"288\" height=\"221\" /></p>\n<h3 style=\"margin: 0 0 5px 0;font-size: 16px;font-weight: bold\">更多的嵌入内容</h3>\n<p>把Tumblr.com和Kickstarter的链接粘贴进编辑器，那些内容就将魔法般地出现在您眼前。您的发布和编辑体验会随着我们的每次发布变得更密不可分。</p>\n<div style=\"clear: both\"></div>\n<p><img class=\"alignright size-medium wp-image-3654\" src=\"https://wordpress.org/news/files/2015/04/4.2-plugins-300x230.png\" alt=\"内联插件升级\" width=\"288\" height=\"221\" /></p>\n<h3 style=\"margin: 0 0 5px 0;font-size: 16px;font-weight: bold\">更流畅的插件升级</h3>\n<p>向无聊的加载屏幕说再见，并向简单顺滑的插件升级说你好。点击<em>现在升级</em>，您即可以看到魔法发生。</p>\n<div style=\"clear: both\"></div>\n<hr style=\"margin: 2em 0 3em\" />\n<h2 style=\"text-align: center;margin: 15px 0 20px;font-family: sans-serif;font-size: 26px\">引擎盖下</h2>\n<h5>utf8mb4支持</h5>\n<p>数据库字符编码已从utf8变为utf8mb4，加入了对所有4字节字符的支持。</p>\n<h5>JavaScript无障碍</h5>\n<p>您现在可以在JavaScript中通过<code>wp.a11y.speak()</code>向屏幕阅读器发送音频提醒。传入字符串，更新就会被发送到专用的ARIA即时通知区域。</p>\n<h5>分离共享的条目信息</h5>\n<p>不同分类法间共享的条目信息将在其中一条获得更新时分离。您可以在<a href=\"https://developer.wordpress.org/plugins/taxonomy/working-with-split-terms-in-wp-4-2/\">插件开发者手册</a>中获取更多信息。</p>\n<h5>复杂查询排序</h5>\n<p><code>WP_Query</code>、<code>WP_Comment_Query</code>和<code>WP_User_Query</code>现在支持使用具名的元查询条款进行复杂排序。</p>\n<hr style=\"margin: 2em 0 3em\" />\n<h2 style=\"text-align: center;margin: 15px 0 20px;font-family: sans-serif;font-size: 26px\">开发团队</h2>\n<p><a class=\"alignleft\" href=\"https://profiles.wordpress.org/drewapicture\"><img id=\"grav-95c934fa2c3362794bf62ff8c59ada08-0\" class=\"grav-hashed\" src=\"https://www.gravatar.com/avatar/95c934fa2c3362794bf62ff8c59ada08?d=mm&amp;s=180&amp;r=G\" alt=\"Drew Jaynes\" width=\"90\" height=\"90\" /></a></p>\n<p>此次发布由<a href=\"http://werdswords.com/\">Drew Jaynes</a>领头，并得到了以下个人的帮助。这次发布包含了283人的贡献，创下新高。在您喜欢的音乐服务中听听巴德·鲍威尔，并看看下面这些个人资料吧：</p>\n<p><a href=\"https://profiles.wordpress.org/mercime\">@mercime</a>、<a href=\"https://profiles.wordpress.org/a5hleyrich\">A5hleyRich</a>、<a href=\"https://profiles.wordpress.org/aaroncampbell\">Aaron D. Campbell</a>、<a href=\"https://profiles.wordpress.org/jorbin\">Aaron Jorbin</a>、<a href=\"https://profiles.wordpress.org/abhishekfdd\">abhishekfdd</a>、<a href=\"https://profiles.wordpress.org/adamsilverstein\">Adam Silverstein</a>、<a href=\"https://profiles.wordpress.org/mrahmadawais\">Ahmad Awais</a>、<a href=\"https://profiles.wordpress.org/alexkingorg\">Alex King</a>、<a href=\"https://profiles.wordpress.org/viper007bond\">Alex Mills (Viper007Bond)</a>、<a href=\"https://profiles.wordpress.org/deconf\">Alin Marcu</a>、<a href=\"https://profiles.wordpress.org/collinsinternet\">Allan Collins</a>、<a href=\"https://profiles.wordpress.org/afercia\">Andrea Fercia</a>、<a href=\"https://profiles.wordpress.org/awbauer\">Andrew Bauer</a>、<a href=\"https://profiles.wordpress.org/nacin\">Andrew Nacin</a>、<a href=\"https://profiles.wordpress.org/norcross\">Andrew Norcross</a>、<a href=\"https://profiles.wordpress.org/azaozz\">Andrew Ozz</a>、<a href=\"https://profiles.wordpress.org/ankitgadertcampcom\">Ankit Gade</a>、<a href=\"https://profiles.wordpress.org/ankit-k-gupta\">Ankit K Gupta</a>、<a href=\"https://profiles.wordpress.org/atimmer\">Anton Timmermans</a>、<a href=\"https://profiles.wordpress.org/aramzs\">Aram Zucker-Scharff</a>、<a href=\"https://profiles.wordpress.org/arminbraun\">ArminBraun</a>、<a href=\"https://profiles.wordpress.org/ashfame\">Ashfame</a>、<a href=\"https://profiles.wordpress.org/filosofo\">Austin Matzko</a>、<a href=\"https://profiles.wordpress.org/avryl\">avryl</a>、<a href=\"https://profiles.wordpress.org/barrykooij\">Barry Kooij</a>、<a href=\"https://profiles.wordpress.org/beaulebens\">Beau Lebens</a>、<a href=\"https://profiles.wordpress.org/bendoh\">Ben Doherty (Oomph、Inc)</a>、<a href=\"https://profiles.wordpress.org/bananastalktome\">Billy Schneider</a>、<a href=\"https://profiles.wordpress.org/boonebgorges\">Boone B. Gorges</a>、<a href=\"https://profiles.wordpress.org/kraftbj\">Brandon Kraft</a>、<a href=\"https://profiles.wordpress.org/krogsgard\">Brian Krogsgard</a>、<a href=\"https://profiles.wordpress.org/bswatson\">Brian Watson</a>、<a href=\"https://profiles.wordpress.org/calevans\">CalEvans</a>、<a href=\"https://profiles.wordpress.org/carolinegeven\">carolinegeven</a>、<a href=\"https://profiles.wordpress.org/caseypatrickdriscoll\">Casey Driscoll</a>、<a href=\"https://profiles.wordpress.org/caspie\">Caspie</a>、<a href=\"https://profiles.wordpress.org/cdog\">Catalin Dogaru</a>、<a href=\"https://profiles.wordpress.org/chipbennett\">Chip Bennett</a>、<a href=\"https://profiles.wordpress.org/chipx86\">chipx86</a>、<a href=\"https://profiles.wordpress.org/chrico\">ChriCo</a>、<a href=\"https://profiles.wordpress.org/cbaldelomar\">Chris Baldelomar</a>、<a href=\"https://profiles.wordpress.org/c3mdigital\">Chris Olbekson</a>、<a href=\"https://profiles.wordpress.org/cfoellmann\">Christian Foellmann</a>、<a href=\"https://profiles.wordpress.org/cfinke\">Christopher Finke</a>、<a href=\"https://profiles.wordpress.org/clifgriffin\">Clifton Griffin</a>、<a href=\"https://profiles.wordpress.org/codix\">Code Master</a>、<a href=\"https://profiles.wordpress.org/corphi\">Corphi</a>、<a href=\"https://profiles.wordpress.org/couturefreak\">Courtney Ivey</a>、<a href=\"https://profiles.wordpress.org/craig-ralston\">Craig Ralston</a>、<a href=\"https://profiles.wordpress.org/cweiske\">cweiske</a>、<a href=\"https://profiles.wordpress.org/extendwings\">Daisuke Takahashi</a>、<a href=\"https://profiles.wordpress.org/timersys\">Damian</a>、<a href=\"https://profiles.wordpress.org/danielbachhuber\">Daniel Bachhuber</a>、<a href=\"https://profiles.wordpress.org/redsweater\">Daniel Jalkut (Red Sweater)</a>、<a href=\"https://profiles.wordpress.org/dkotter\">Darin Kotter</a>、<a href=\"https://profiles.wordpress.org/nerrad\">Darren Ethier (nerrad)</a>、<a href=\"https://profiles.wordpress.org/dllh\">Daryl L. L. Houston (dllh)</a>、<a href=\"https://profiles.wordpress.org/dmchale\">Dave McHale</a>、<a href=\"https://profiles.wordpress.org/davidakennedy\">David A. Kennedy</a>、<a href=\"https://profiles.wordpress.org/davidanderson\">David Anderson</a>、<a href=\"https://profiles.wordpress.org/dlh\">David Herrera</a>、<a href=\"https://profiles.wordpress.org/folletto\">Davide &#8216;Folletto&#8217; Casali</a>、<a href=\"https://profiles.wordpress.org/davideugenepratt\">davideugenepratt</a>、<a href=\"https://profiles.wordpress.org/davidhamiltron\">davidhamiltron</a>、<a href=\"https://profiles.wordpress.org/denis-de-bernardy\">Denis de Bernardy</a>、<a href=\"https://profiles.wordpress.org/valendesigns\">Derek Herman</a>、<a href=\"https://profiles.wordpress.org/dsmart\">Derek Smart</a>、<a href=\"https://profiles.wordpress.org/designsimply\">designsimply</a>、<a href=\"https://profiles.wordpress.org/dd32\">Dion Hulse</a>、<a href=\"https://profiles.wordpress.org/dipeshkakadiya\">dipesh.kakadiya</a>、<a href=\"https://profiles.wordpress.org/ocean90\">Dominik Schilling</a>、<a href=\"https://profiles.wordpress.org/doublesharp\">doublesharp</a>、<a href=\"https://profiles.wordpress.org/dzerycz\">DzeryCZ</a>、<a href=\"https://profiles.wordpress.org/kucrut\">Dzikri Aziz</a>、<a href=\"https://profiles.wordpress.org/emazovetskiy\">e.mazovetskiy</a>、<a href=\"https://profiles.wordpress.org/oso96_2000\">Eduardo Reveles</a>、<a href=\"https://profiles.wordpress.org/cais\">Edward Caissie</a>、<a href=\"https://profiles.wordpress.org/eliorivero\">Elio Rivero</a>、<a href=\"https://profiles.wordpress.org/iseulde\">Ella Iseulde Van Dorpe</a>、<a href=\"https://profiles.wordpress.org/elliottcarlson\">elliottcarlson</a>、<a href=\"https://profiles.wordpress.org/enej\">enej</a>、<a href=\"https://profiles.wordpress.org/ebinnion\">Eric Binnion</a>、<a href=\"https://profiles.wordpress.org/ericlewis\">Eric Lewis</a>、<a href=\"https://profiles.wordpress.org/ethitter\">Erick Hitter</a>、<a href=\"https://profiles.wordpress.org/evansolomon\">Evan Solomon</a>、<a href=\"https://profiles.wordpress.org/fab1en\">Fabien Quatravaux</a>、<a href=\"https://profiles.wordpress.org/fhwebcs\">fhwebcs</a>、<a href=\"https://profiles.wordpress.org/floriansimeth\">Florian Simeth</a>、<a href=\"https://profiles.wordpress.org/bueltge\">Frank</a>、<a href=\"https://profiles.wordpress.org/frankpw\">Frank P. Walentynowicz</a>、<a href=\"https://profiles.wordpress.org/f-j-kaiser\">Franz Josef Kaiser</a>、<a href=\"https://profiles.wordpress.org/garyc40\">Gary Cao</a>、<a href=\"https://profiles.wordpress.org/garyj\">Gary Jones</a>、<a href=\"https://profiles.wordpress.org/pento\">Gary Pendergast</a>、<a href=\"https://profiles.wordpress.org/geertdd\">Geert De Deckere</a>、<a href=\"https://profiles.wordpress.org/genkisan\">genkisan</a>、<a href=\"https://profiles.wordpress.org/georgestephanis\">George Stephanis</a>、<a href=\"https://profiles.wordpress.org/grahamarmfield\">Graham Armfield</a>、<a href=\"https://profiles.wordpress.org/webord\">Gustavo Bordoni</a>、<a href=\"https://profiles.wordpress.org/hakre\">hakre</a>、<a href=\"https://profiles.wordpress.org/harishchaudhari\">Harish Chaudhari</a>、<a href=\"https://profiles.wordpress.org/hauvong\">hauvong</a>、<a href=\"https://profiles.wordpress.org/helen\">Helen Hou-Sandí</a>、<a href=\"https://profiles.wordpress.org/herbmillerjr\">herbmillerjr</a>、<a href=\"https://profiles.wordpress.org/hew\">Hew</a>、<a href=\"https://profiles.wordpress.org/horike\">horike</a>、<a href=\"https://profiles.wordpress.org/hlashbrooke\">Hugh Lashbrooke</a>、<a href=\"https://profiles.wordpress.org/hugobaeta\">Hugo Baeta</a>、<a href=\"https://profiles.wordpress.org/iandunn\">Ian Dunn</a>、<a href=\"https://profiles.wordpress.org/ianmjones\">ianmjones</a>、<a href=\"https://profiles.wordpress.org/idealien\">idealien</a>、<a href=\"https://profiles.wordpress.org/imath\">imath</a>、<a href=\"https://profiles.wordpress.org/ipstenu\">Ipstenu (Mika Epstein)</a>、<a href=\"https://profiles.wordpress.org/jdgrimes\">J.D. Grimes</a>、<a href=\"https://profiles.wordpress.org/jacklenox\">Jack Lenox</a>、<a href=\"https://profiles.wordpress.org/jamescollins\">James Collins</a>、<a href=\"https://profiles.wordpress.org/janhenckens\">janhenckens</a>、<a href=\"https://profiles.wordpress.org/cheffheid\">Jeff de Wit</a>、<a href=\"https://profiles.wordpress.org/jfarthing84\">Jeff Farthing</a>、<a href=\"https://profiles.wordpress.org/jeremyfelt\">Jeremy Felt</a>、<a href=\"https://profiles.wordpress.org/jesin\">Jesin A</a>、<a href=\"https://profiles.wordpress.org/jipmoors\">jipmoors</a>、<a href=\"https://profiles.wordpress.org/jartes\">Joan Artes</a>、<a href=\"https://profiles.wordpress.org/joedolson\">Joe Dolson</a>、<a href=\"https://profiles.wordpress.org/joemcgill\">Joe McGill</a>、<a href=\"https://profiles.wordpress.org/yo-l1982\">Joel Bernerman</a>、<a href=\"https://profiles.wordpress.org/joen\">Joen Asmussen</a>、<a href=\"https://profiles.wordpress.org/johnbillion\">John Blackbourn</a>、<a href=\"https://profiles.wordpress.org/johneckman\">John Eckman</a>、<a href=\"https://profiles.wordpress.org/johnjamesjacoby\">John James Jacoby</a>、<a href=\"https://profiles.wordpress.org/jlevandowski\">John Levandowski</a>、<a href=\"https://profiles.wordpress.org/desrosj\">Jonathan Desrosiers</a>、<a href=\"https://profiles.wordpress.org/joostdekeijzer\">joost de keijzer</a>、<a href=\"https://profiles.wordpress.org/joostdevalk\">Joost de Valk</a>、<a href=\"https://profiles.wordpress.org/jcastaneda\">Jose Castaneda</a>、<a href=\"https://profiles.wordpress.org/joshlevinson\">Josh Levinson</a>、<a href=\"https://profiles.wordpress.org/jphase\">jphase</a>、<a href=\"https://profiles.wordpress.org/juliobox\">Julio Potier</a>、<a href=\"https://profiles.wordpress.org/kopepasah\">Justin Kopepasah</a>、<a href=\"https://profiles.wordpress.org/jtsternberg\">Justin Sternberg</a>、<a href=\"https://profiles.wordpress.org/justincwatt\">Justin Watt</a>、<a href=\"https://profiles.wordpress.org/kadamwhite\">K.Adam White</a>、<a href=\"https://profiles.wordpress.org/trepmal\">Kailey (trepmal)</a>、<a href=\"https://profiles.wordpress.org/ryelle\">Kelly Dwan</a>、<a href=\"https://profiles.wordpress.org/kevdotbadger\">Kevin Ruscoe</a>、<a href=\"https://profiles.wordpress.org/kpdesign\">Kim Parsell</a>、<a href=\"https://profiles.wordpress.org/ixkaito\">Kite</a>、<a href=\"https://profiles.wordpress.org/kovshenin\">Konstantin Kovshenin</a>、<a href=\"https://profiles.wordpress.org/obenland\">Konstantin Obenland</a>、<a href=\"https://profiles.wordpress.org/lancewillett\">Lance Willett</a>、<a href=\"https://profiles.wordpress.org/mindrun\">Leonard</a>、<a href=\"https://profiles.wordpress.org/leopeo\">Leonardo Giacone</a>、<a href=\"https://profiles.wordpress.org/lgladdy\">Liam Gladdy</a>、<a href=\"https://profiles.wordpress.org/magicroundabout\">magicroundabout</a>、<a href=\"https://profiles.wordpress.org/maimairel\">maimairel</a>、<a href=\"https://profiles.wordpress.org/mako09\">Mako</a>、<a href=\"https://profiles.wordpress.org/funkatronic\">Manny Fleurmond</a>、<a href=\"https://profiles.wordpress.org/marcelomazza\">marcelomazza</a>、<a href=\"https://profiles.wordpress.org/marcochiesi\">Marco Chiesi</a>、<a href=\"https://profiles.wordpress.org/mkaz\">Marcus Kazmierczak</a>、<a href=\"https://profiles.wordpress.org/tyxla\">Marin Atanasov</a>、<a href=\"https://profiles.wordpress.org/nofearinc\">Mario Peshev</a>、<a href=\"https://profiles.wordpress.org/clorith\">Marius (Clorith)</a>、<a href=\"https://profiles.wordpress.org/markjaquith\">Mark Jaquith</a>、<a href=\"https://profiles.wordpress.org/senff\">Mark Senff</a>、<a href=\"https://profiles.wordpress.org/markoheijnen\">Marko Heijnen</a>、<a href=\"https://profiles.wordpress.org/mzak\">Matt</a>、<a href=\"https://profiles.wordpress.org/sivel\">Matt Martz</a>、<a href=\"https://profiles.wordpress.org/matt\">Matt Mullenweg</a>、<a href=\"https://profiles.wordpress.org/mattwiebe\">Matt Wiebe</a>、<a href=\"https://profiles.wordpress.org/mboynes\">Matthew Boynes</a>、<a href=\"https://profiles.wordpress.org/mattheweppelsheimer\">Matthew Eppelsheimer</a>、<a href=\"https://profiles.wordpress.org/mattheu\">Matthew Haines-Young</a>、<a href=\"https://profiles.wordpress.org/mattyrob\">mattyrob</a>、<a href=\"https://profiles.wordpress.org/maxcutler\">Max Cutler</a>、<a href=\"https://profiles.wordpress.org/mehulkaklotar\">mehulkaklotar</a>、<a href=\"https://profiles.wordpress.org/melchoyce\">Mel Choyce</a>、<a href=\"https://profiles.wordpress.org/meloniq\">meloniq</a>、<a href=\"https://profiles.wordpress.org/mgibbs189\">mgibbs189</a>、<a href=\"https://profiles.wordpress.org/mdawaffe\">Michael Adams (mdawaffe)</a>、<a href=\"https://profiles.wordpress.org/michael-arestad\">Michael Arestad</a>、<a href=\"https://profiles.wordpress.org/tw2113\">Michael Beckwith</a>、<a href=\"https://profiles.wordpress.org/michalzuber\">michalzuber</a>、<a href=\"https://profiles.wordpress.org/mdgl\">Mike Glendinning</a>、<a href=\"https://profiles.wordpress.org/mikehansenme\">Mike Hansen</a>、<a href=\"https://profiles.wordpress.org/thaicloud\">Mike Jordan</a>、<a href=\"https://profiles.wordpress.org/mikeschinkel\">Mike Schinkel</a>、<a href=\"https://profiles.wordpress.org/mikengarrett\">MikeNGarrett</a>、<a href=\"https://profiles.wordpress.org/dimadin\">Milan Dinic</a>、<a href=\"https://profiles.wordpress.org/mmn-o\">mmn-o</a>、<a href=\"https://profiles.wordpress.org/batmoo\">Mohammad Jangda</a>、<a href=\"https://profiles.wordpress.org/momdad\">MomDad</a>、<a href=\"https://profiles.wordpress.org/morganestes\">Morgan Estes</a>、<a href=\"https://profiles.wordpress.org/morpheu5\">Morpheu5</a>、<a href=\"https://profiles.wordpress.org/Nao\">Naoko Takano</a>、<a href=\"https://profiles.wordpress.org/nathan_dawson\">nathan_dawson</a>、<a href=\"https://profiles.wordpress.org/neil_pie\">Neil Pie</a>、<a href=\"https://profiles.wordpress.org/celloexpressions\">Nick Halsey</a>、<a href=\"https://profiles.wordpress.org/nicnicnicdevos\">nicnicnicdevos</a>、<a href=\"https://profiles.wordpress.org/nikv\">Nikhil Vimal</a>、<a href=\"https://profiles.wordpress.org/ninnypants\">ninnypants</a>、<a href=\"https://profiles.wordpress.org/nitkr\">nitkr</a>、<a href=\"https://profiles.wordpress.org/nunomorgadinho\">Nuno Morgadinho</a>、<a href=\"https://profiles.wordpress.org/originalexe\">OriginalEXE</a>、<a href=\"https://profiles.wordpress.org/pareshradadiya-1\">Paresh Radadiya</a>、<a href=\"https://profiles.wordpress.org/pathawks\">Pat Hawks</a>、<a href=\"https://profiles.wordpress.org/pbearne\">Paul Bearne</a>、<a href=\"https://profiles.wordpress.org/paulschreiber\">Paul Schreiber</a>、<a href=\"https://profiles.wordpress.org/paulwilde\">Paul Wilde</a>、<a href=\"https://profiles.wordpress.org/pavelevap\">pavelevap</a>、<a href=\"https://profiles.wordpress.org/sirbrillig\">Payton Swick</a>、<a href=\"https://profiles.wordpress.org/petemall\">Pete Mall</a>、<a href=\"https://profiles.wordpress.org/gungeekatx\">Pete Nelson</a>、<a href=\"https://profiles.wordpress.org/peterwilsoncc\">Peter Wilson</a>、<a href=\"https://profiles.wordpress.org/mordauk\">Pippin Williamson</a>、<a href=\"https://profiles.wordpress.org/podpirate\">podpirate</a>、<a href=\"https://profiles.wordpress.org/postpostmodern\">postpostmodern</a>、<a href=\"https://profiles.wordpress.org/nprasath002\">Prasath Nadarajah</a>、<a href=\"https://profiles.wordpress.org/prasoon2211\">prasoon2211</a>、<a href=\"https://profiles.wordpress.org/cyman\">Primoz Cigler</a>、<a href=\"https://profiles.wordpress.org/r-a-y\">r-a-y</a>、<a href=\"https://profiles.wordpress.org/rachelbaker\">Rachel Baker</a>、<a href=\"https://profiles.wordpress.org/rahulbhangale\">rahulbhangale</a>、<a href=\"https://profiles.wordpress.org/ramiy\">Rami Yushuvaev</a>、<a href=\"https://profiles.wordpress.org/lamosty\">Rastislav Lamos</a>、<a href=\"https://profiles.wordpress.org/ravindra-pal-singh\">Ravindra Pal Singh</a>、<a href=\"https://profiles.wordpress.org/rianrietveld\">Rian Rietveld</a>、<a href=\"https://profiles.wordpress.org/ritteshpatel\">Ritesh Patel</a>、<a href=\"https://profiles.wordpress.org/miqrogroove\">Robert Chapin</a>、<a href=\"https://profiles.wordpress.org/rodrigosprimo\">Rodrigo Primo</a>、<a href=\"https://profiles.wordpress.org/ryan\">Ryan Boren</a>、<a href=\"https://profiles.wordpress.org/rmarks\">Ryan Marks</a>、<a href=\"https://profiles.wordpress.org/sagarjadhav\">sagarjadhav</a>、<a href=\"https://profiles.wordpress.org/samo9789\">samo9789</a>、<a href=\"https://profiles.wordpress.org/samuelsidler\">samuelsidler</a>、<a href=\"https://profiles.wordpress.org/sgrant\">Scott Grant</a>、<a href=\"https://profiles.wordpress.org/coffee2code\">Scott Reilly</a>、<a href=\"https://profiles.wordpress.org/wonderboymusic\">Scott Taylor</a>、<a href=\"https://profiles.wordpress.org/scottgonzalez\">scott.gonzalez</a>、<a href=\"https://profiles.wordpress.org/greglone\">ScreenfeedFr</a>、<a href=\"https://profiles.wordpress.org/scribu\">scribu</a>、<a href=\"https://profiles.wordpress.org/seanchayes\">Sean Hayes</a>、<a href=\"https://profiles.wordpress.org/sergejmueller\">Sergej Muller</a>、<a href=\"https://profiles.wordpress.org/sergeybiryukov\">Sergey Biryukov</a>、<a href=\"https://profiles.wordpress.org/sevenspark\">sevenspark</a>、<a href=\"https://profiles.wordpress.org/simonwheatley\">Simon Wheatley</a>、<a href=\"https://profiles.wordpress.org/siobhan\">Siobhan</a>、<a href=\"https://profiles.wordpress.org/sippis\">sippis</a>、<a href=\"https://profiles.wordpress.org/slobodanmanic\">Slobodan Manic</a>、<a href=\"https://profiles.wordpress.org/solarissmoke\">solarissmoke</a>、<a href=\"https://profiles.wordpress.org/stephdau\">Stephane Daury</a>、<a href=\"https://profiles.wordpress.org/sillybean\">Stephanie Leary</a>、<a href=\"https://profiles.wordpress.org/netweb\">Stephen Edgar</a>、<a href=\"https://profiles.wordpress.org/stevegrunwell\">Steve Grunwell</a>、<a href=\"https://profiles.wordpress.org/stevehickeydesign\">stevehickeydesign</a>、<a href=\"https://profiles.wordpress.org/stevenkword\">Steven Word</a>、<a href=\"https://profiles.wordpress.org/iamtakashi\">Takashi Irie</a>、<a href=\"https://profiles.wordpress.org/hissy\">Takuro Hishikawa</a>、<a href=\"https://profiles.wordpress.org/themiked\">theMikeD</a>、<a href=\"https://profiles.wordpress.org/thomaswm\">thomaswm</a>、<a href=\"https://profiles.wordpress.org/ipm-frommen\">Thorsten Frommen</a>、<a href=\"https://profiles.wordpress.org/tillkruess\">Till</a>、<a href=\"https://profiles.wordpress.org/timothyblynjacobs\">Timothy Jacobs</a>、<a href=\"https://profiles.wordpress.org/tiqbiz\">tiqbiz</a>、<a href=\"https://profiles.wordpress.org/tmatsuur\">tmatsuur</a>、<a href=\"https://profiles.wordpress.org/tmeister\">tmeister</a>、<a href=\"https://profiles.wordpress.org/tschutter\">Tobias Schutter</a>、<a href=\"https://profiles.wordpress.org/tobiasbg\">TobiasBg</a>、<a href=\"https://profiles.wordpress.org/tomdxw\">tomdxw</a>、<a href=\"https://profiles.wordpress.org/travisnorthcutt\">Travis Northcutt</a>、<a href=\"https://profiles.wordpress.org/trishasalas\">trishasalas</a>、<a href=\"https://profiles.wordpress.org/tywayne\">Ty Carlson</a>、<a href=\"https://profiles.wordpress.org/uamv\">UaMV</a>、<a href=\"https://profiles.wordpress.org/desaiuditd\">Udit Desai</a>、<a href=\"https://profiles.wordpress.org/sorich87\">Ulrich Sossou</a>、<a href=\"https://profiles.wordpress.org/veritaserum\">Veritaserum</a>、<a href=\"https://profiles.wordpress.org/voldemortensen\">voldemortensen</a>、<a href=\"https://profiles.wordpress.org/volodymyrc\">VolodymyrC</a>、<a href=\"https://profiles.wordpress.org/vortfu\">vortfu</a>、<a href=\"https://profiles.wordpress.org/welcher\">welcher</a>、<a href=\"https://profiles.wordpress.org/westonruter\">Weston Ruter</a>、<a href=\"https://profiles.wordpress.org/earnjam\">William Earnhardt</a>和<a href=\"https://profiles.wordpress.org/wordpressorru\">WordPressor</a>。</p>\n<p>特别感谢<a href=\"http://siobhanmckeown.com/\">Siobhan McKeown</a>制作发布视频及<a href=\"http://camikaos.com/\">Cami Kaos</a>为视频配音。</p>\n<p>最后，让我们感谢为发布视频制作了字幕的贡献者，这次的发布视频被翻译成了30种语言！</p>\n<p><a href=\"https://profiles.wordpress.org/adrianpop\">Adrian Pop</a>、<a href=\"https://profiles.wordpress.org/deconf\">Alin Marcu</a>、<a href=\"https://profiles.wordpress.org/bagerathan\">Bagerathan Sivarajah</a>、<a href=\"https://profiles.wordpress.org/besnik\">Besnik</a>、<a href=\"https://profiles.wordpress.org/bjornjohansen\">Bjørn Johansen</a>、Chantal Coolsma、<a href=\"https://profiles.wordpress.org/cubells\">cubells</a>、Daisuke Takahashi、<a href=\"https://profiles.wordpress.org/dianakc\">Diana K. Cury</a>、<a href=\"https://profiles.wordpress.org/djzone\">DjZoNe</a>、<a href=\"https://profiles.wordpress.org/dyrer\">dyrer</a>、<a href=\"https://profiles.wordpress.org/semblance\">Elzette Roelofse</a>、<a href=\"https://profiles.wordpress.org/fxbtacoverdoenard\">fxbtacoverdoenard</a>、<a href=\"https://profiles.wordpress.org/gabriel-reguly\">Gabriel Reguly</a>、<a href=\"https://profiles.wordpress.org/miss_jwo\">Jenny Wong</a>、<a href=\"https://profiles.wordpress.org/garyj\">Gary Jones</a>、<a href=\"https://profiles.wordpress.org/hgmb\">Håvard Grimelid</a>、<a href=\"https://profiles.wordpress.org/intoxstudio\">Joachim Jensen</a>、<a href=\"https://profiles.wordpress.org/jimmyxu\">Jimmy Xu</a>、<a href=\"https://profiles.wordpress.org/nukaga\">Junko Nukaga</a>、<a href=\"https://profiles.wordpress.org/pokeraitis\">Justina</a>、<a href=\"https://profiles.wordpress.org/kosvrouvas\">Kostas Vrouvas</a>、<a href=\"https://profiles.wordpress.org/eclare\">Krzysztof Trynkiewicz</a>、<a href=\"https://profiles.wordpress.org/goblindegook\">Luís Rodrigues</a>、<a href=\"https://profiles.wordpress.org/luisrull\">Luis Rull</a>、<a href=\"https://profiles.wordpress.org/culturemark\">Mark Thomas Gazel </a>、<a href=\"https://profiles.wordpress.org/clorith\">Marius Jensen</a>、<a href=\"https://profiles.wordpress.org/matthee\">matthee</a>、<a href=\"https://profiles.wordpress.org/damst\">Mattias Tengblad</a>、Matúš Záhradník、Mayuko Moriyama、<a href=\"https://profiles.wordpress.org/michalvittek\">Michal Vittek</a>、<a href=\"https://profiles.wordpress.org/dimadin\">Milan Dinić</a>、<a href=\"https://profiles.wordpress.org/mrshemek\">MrShemek</a>、<a href=\"https://profiles.wordpress.org/Nao\">Naoko Takano</a>、<a href=\"https://profiles.wordpress.org/pavelevap\">pavelevap</a>、<a href=\"https://profiles.wordpress.org/peterhoob\">Peter Holme Obrestad</a>、<a href=\"https://profiles.wordpress.org/petya\">Petya Raykovska</a>、Przemysław Mirota、<a href=\"https://profiles.wordpress.org/qraczek\">qraczek</a>、<a href=\"https://profiles.wordpress.org/bi0xid\">Rafa Poveda</a>、<a href=\"https://profiles.wordpress.org/ramiy\">Rami Yushuvaev</a>、<a href=\"https://profiles.wordpress.org/rasheed\">Rasheed Bydousi</a>、<a href=\"https://profiles.wordpress.org/gwgan\">Rhoslyn Prys</a>、<a href=\"https://profiles.wordpress.org/robee\">Robert Axelsen</a>、<a href=\"https://profiles.wordpress.org/sergeybiryukov\">Sergey Biryukov</a>、<a href=\"https://profiles.wordpress.org/siobhyb\">Siobhan Bamber</a>、<a href=\"https://profiles.wordpress.org/netweb\">Stephen Edgar</a>、<a href=\"https://profiles.wordpress.org/tohave\">ک To Have داشتن</a>、<a href=\"https://profiles.wordpress.org/zodiac1978\">Torsten Landsiedel</a>、<a href=\"https://profiles.wordpress.org/egalego\">Victor J. Quesada</a>、<a href=\"https://profiles.wordpress.org/wolly\">Wolly</a>、<a href=\"https://profiles.wordpress.org/xavivars\">Xavi Ivars</a>和<a href=\"https://profiles.wordpress.org/xibe\">Xavier Borderie</a>。</p>\n<p>如果您想帮忙，请查阅<a href=\"https://make.wordpress.org/\">Make WordPress</a>和我们的<a href=\"https://make.wordpress.org/core/\">核心开发博客</a>。感谢您选择WordPress，我们4.3见！\n</div>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:48:\"https://cn.wordpress.org/2015/04/24/powell/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:2:\"27\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:7;a:6:{s:4:\"data\";s:42:\"\n		\n		\n		\n		\n		\n				\n\n		\n		\n				\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:24:\"WordPress 4.1“Dinah”\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"https://cn.wordpress.org/2014/12/23/dinah/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:51:\"https://cn.wordpress.org/2014/12/23/dinah/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 23 Dec 2014 01:34:27 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"https://cn.wordpress.org/?p=959\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:49:\"WordPress 4.1简体中文版现已开放下载。\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Jimmy Xu\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:25152:\"<div style=\"width: 692px\">\nWordPress 4.1简体中文版现已<a href=\"https://cn.wordpress.org/releases/\">开放下载</a>，或在您的WordPress仪表盘中升级。我们将此版本命名为“Dinah”，以纪念爵士歌手<a href=\"https://en.wikipedia.org/wiki/Dinah_Washington\">黛娜·华盛顿</a>。WordPress 4.1中的新功能帮助您聚焦于您的写作，新的默认主题也能让您有型地展示您的文章。</p>\n<hr />\n<h2 style=\"text-align: center;margin: 15px 0 20px;font-family: sans-serif;font-size: 26px\">向您介绍Twenty Fifteen</h2>\n<p><img class=\"aligncenter size-large wp-image-3389\" src=\"https://wordpress.org/news/files/2014/12/2015-laptop-1024x533.png\" alt=\"2015-laptop\" width=\"692\" height=\"360\" /></p>\n<h3 style=\"margin: 0 0 5px 0;font-size: 16px;font-weight: bold\">Twenty Fifteen，我们最新的默认主题，是一套以明晰为中心的面向博客的主题。</h3>\n<p><img class=\"alignright wp-image-3426 size-medium\" src=\"https://wordpress.org/news/files/2014/12/2015-phones-languages-small-300x250.png\" alt=\"\" width=\"300\" height=\"250\" />感谢<a href=\"\\&quot;%s\\&quot;\">Google的Noto字体家族</a>，Twenty Fifteen有着无懈可击的语言支持。</p>\n<p>简单的排版在任何屏幕尺寸上都容易阅读。</p>\n<p>您的内容永远居于最中，无论是在手机、平板、膝上型电脑还是台式机上阅读都是如此。</p>\n<hr style=\"clear: both\" />\n<h2 style=\"text-align: center;margin: 15px 0 20px;font-family: sans-serif;font-size: 26px\">免打扰写作</h2>\n<p><img class=\"aligncenter size-large wp-image-3392\" src=\"https://wordpress.org/news/files/2014/12/dfw-screen-1024x614.png\" alt=\"dfw-screen\" width=\"692\" height=\"415\" /></p>\n<h3 style=\"text-align: center;margin: 0 0 5px 0;font-size: 16px;font-weight: bold\"><em>去写吧</em></h3>\n<p>有时，您需要集中精力遣词造句。试试打开<strong>免打扰写作模式</strong>，在您开始打字时，所有会让您分心的东西都会淡出，让您只注意您的写作。您的所有编辑工具都会在您需要用到它们时立刻出现。</p>\n<hr />\n<h2 style=\"text-align: center;margin: 15px 0 20px;font-family: sans-serif;font-size: 26px\">细节之处</h2>\n<h5><strong><img class=\"alignleft wp-image-3405\" src=\"https://wordpress.org/news/files/2014/12/icon-language2.png\" alt=\"\" width=\"80\" height=\"80\" /></strong>选择语言</h5>\n<p>现在，WordPress 4.1已经有了40多种语言版本，我们也一直在进行更多翻译。您可以在常规选项中切换到任意一种语言。</p>\n<h5><strong><img class=\"alignleft wp-image-3406\" src=\"https://wordpress.org/news/files/2014/12/icon-logout1.png\" alt=\"\" width=\"80\" height=\"80\" /></strong>随处登出</h5>\n<p>如果您曾经担心过忘记在公用电脑上登出，您现在可以前往您的个人资料页面并登出您的所有会话。</p>\n<h5><strong><img class=\"alignleft wp-image-3407\" src=\"https://wordpress.org/news/files/2014/12/icon-vine1.png\" alt=\"\" width=\"80\" height=\"80\" /></strong>Vine嵌入</h5>\n<p>嵌入来自Vine的视频也已被简化为了将URL粘贴进文章里。查看我们支持的嵌入的<a href=\"https://codex.wordpress.org/Embeds\">完整列表</a>。</p>\n<h5><strong><img class=\"alignleft wp-image-3408\" src=\"https://wordpress.org/news/files/2014/12/icon-recommended1.png\" alt=\"\" width=\"80\" height=\"80\" /></strong>插件推荐</h5>\n<p>插件安装器现在会为您推荐值得一试的插件。推荐是基于您和其他用户已经安装的插件做出的。</p>\n<hr />\n<h2 style=\"text-align: center;margin: 15px 0 20px;font-family: sans-serif;font-size: 26px\">引擎盖下</h2>\n<h5>复杂查询</h5>\n<p>元数据、日期和信息查询现已支持高级条件逻辑，如嵌套语句和多种操作符——<code>A AND ( B OR C )</code>。</p>\n<h5>定制器API</h5>\n<p>定制器现在能够根据当前预览的页面有条件地显示面板和小节。</p>\n<h5>主题中的<code>&lt;title&gt;</code>标签</h5>\n<p><code>add_theme_support( \'title-tag\' )</code>让WordPress来处理复杂的页面标题。</p>\n<h5>开发者参考</h5>\n<p>通过对内联代码文档的改善，<a href=\"https://developer.wordpress.org/reference/\">开发者参考</a>现在比以往任何时候都更完整。</p>\n<hr />\n<h2 style=\"text-align: center;margin: 15px 0 20px;font-family: sans-serif;font-size: 26px\">合唱团</h2>\n<p>本次发布由<a href=\"https://profiles.wordpress.org/johnbillion\">John Blackbourn</a>领头，并得到了如下个人的帮助。在您喜欢的音乐服务中听听黛娜·华盛顿，并看看下面这些个人资料吧：</p>\n<p><a href=\"https://profiles.wordpress.org/aaroncampbell\">Aaron D. Campbell</a>、<a href=\"https://profiles.wordpress.org/jorbin\">Aaron Jorbin</a>、<a href=\"https://profiles.wordpress.org/adamsilverstein\">Adam Silverstein</a>、<a href=\"https://profiles.wordpress.org/akumria\">akumria</a>、<a href=\"https://profiles.wordpress.org/xknown\">Alex Concha</a>、<a href=\"https://profiles.wordpress.org/viper007bond\">Alex Mills (Viper007Bond)</a>、<a href=\"https://profiles.wordpress.org/tellyworth\">Alex Shiels</a>、<a href=\"https://profiles.wordpress.org/collinsinternet\">Allan Collins</a>、<a href=\"https://profiles.wordpress.org/momo360modena\">Amaury Balmer</a>、<a href=\"https://profiles.wordpress.org/amruta123b\">Amruta Bhosale</a>、<a href=\"https://profiles.wordpress.org/afercia\">Andrea Fercia</a>、<a href=\"https://profiles.wordpress.org/andg\">Andrea Gandino</a>、<a href=\"https://profiles.wordpress.org/sumobi\">Andrew Munro (sumobi)</a>、<a href=\"https://profiles.wordpress.org/nacin\">Andrew Nacin</a>、<a href=\"https://profiles.wordpress.org/azaozz\">Andrew Ozz</a>、<a href=\"https://profiles.wordpress.org/andrewryno\">Andrew Ryno</a>、<a href=\"https://profiles.wordpress.org/rarst\">Andrey &#8220;Rarst&#8221; Savchenko</a>、<a href=\"https://profiles.wordpress.org/ankitgadertcampcom\">Ankit Gade</a>、<a href=\"https://profiles.wordpress.org/ankit-k-gupta\">Ankit K Gupta</a>、<a href=\"https://profiles.wordpress.org/antpb\">antpb</a>、<a href=\"https://profiles.wordpress.org/arippberger\">arippberger</a>、<a href=\"https://profiles.wordpress.org/filosofo\">Austin Matzko</a>、<a href=\"https://profiles.wordpress.org/bainternet\">Bainternet</a>、<a href=\"https://profiles.wordpress.org/barrykooij\">Barry Kooij</a>、<a href=\"https://profiles.wordpress.org/empireoflight\">Ben Dunkle</a>、<a href=\"https://profiles.wordpress.org/benjmay\">Ben May</a>、<a href=\"https://profiles.wordpress.org/neoxx\">Bernhard Riedl</a>、<a href=\"https://profiles.wordpress.org/birgire\">Birgir Erlendsson (birgire)</a>、<a href=\"https://profiles.wordpress.org/bobbingwide\">bobbingwide</a>、<a href=\"https://profiles.wordpress.org/boonebgorges\">Boone B. Gorges</a>、<a href=\"https://profiles.wordpress.org/bradyvercher\">Brady Vercher</a>、<a href=\"https://profiles.wordpress.org/bramd\">Bram Duvigneau</a>、<a href=\"https://profiles.wordpress.org/kraftbj\">Brandon Kraft</a>、<a href=\"https://profiles.wordpress.org/briandichiara\">Brian DiChiara</a>、<a href=\"https://profiles.wordpress.org/rzen\">Brian Richards</a>、<a href=\"https://profiles.wordpress.org/bswatson\">Brian Watson</a>、<a href=\"https://profiles.wordpress.org/camdensegal\">Camden Segal</a>、<a href=\"https://profiles.wordpress.org/captaintheme\">Captain Theme</a>、<a href=\"https://profiles.wordpress.org/hiwhatsup\">Carlos Zuniga</a>、<a href=\"https://profiles.wordpress.org/caspie\">Caspie</a>、<a href=\"https://profiles.wordpress.org/ccprice\">ccprice</a>、<a href=\"https://profiles.wordpress.org/mackensen\">Charles Fulton</a>、<a href=\"https://profiles.wordpress.org/chrico\">ChriCo</a>、<a href=\"https://profiles.wordpress.org/aprea\">Chris Aprea</a>、<a href=\"https://profiles.wordpress.org/chrisbliss18\">Chris Jean</a>、<a href=\"https://profiles.wordpress.org/cmmarslender\">Chris Marslender</a>、<a href=\"https://profiles.wordpress.org/jazzs3quence\">Chris Reynolds</a>、<a href=\"https://profiles.wordpress.org/chriscct7\">chriscct7</a>、<a href=\"https://profiles.wordpress.org/chrisl27\">chrisl27</a>、<a href=\"https://profiles.wordpress.org/cfoellmann\">Christian Foellmann</a>、<a href=\"https://profiles.wordpress.org/cfinke\">Christopher Finke</a>、<a href=\"https://profiles.wordpress.org/cyclometh\">Corey Snow</a>、<a href=\"https://profiles.wordpress.org/corphi\">Corphi</a>、<a href=\"https://profiles.wordpress.org/curtjen\">curtjen</a>、<a href=\"https://profiles.wordpress.org/colorful-tones\">Damon Cook</a>、<a href=\"https://profiles.wordpress.org/dancameron\">Dan Cameron</a>、<a href=\"https://profiles.wordpress.org/danielbachhuber\">Daniel Bachhuber</a>、<a href=\"https://profiles.wordpress.org/convissor\">Daniel Convissor</a>、<a href=\"https://profiles.wordpress.org/nerrad\">Darren Ethier (nerrad)</a>、<a href=\"https://profiles.wordpress.org/koop\">Daryl Koopersmith</a>、<a href=\"https://profiles.wordpress.org/dmchale\">Dave McHale</a>、<a href=\"https://profiles.wordpress.org/davidakennedy\">David A. Kennedy</a>、<a href=\"https://profiles.wordpress.org/dlh\">David Herrera</a>、<a href=\"https://profiles.wordpress.org/davidjlaietta\">David Laietta</a>、<a href=\"https://profiles.wordpress.org/technical_mastermind\">David Wood</a>、<a href=\"https://profiles.wordpress.org/davidthemachine\">DavidTheMachine</a>、<a href=\"https://profiles.wordpress.org/dcavins\">dcavins</a>、<a href=\"https://profiles.wordpress.org/realloc\">Dennis Ploetner</a>、<a href=\"https://profiles.wordpress.org/dd32\">Dion Hulse</a>、<a href=\"https://profiles.wordpress.org/wedi\">Dirk Weise</a>、<a href=\"https://profiles.wordpress.org/ocean90\">Dominik Schilling</a>、<a href=\"https://profiles.wordpress.org/dominikschwind-1\">Dominik Schwind</a>、<a href=\"https://profiles.wordpress.org/drewapicture\">Drew Jaynes</a>、<a href=\"https://profiles.wordpress.org/dustyf\">Dustin Filippini</a>、<a href=\"https://profiles.wordpress.org/dustinhartzler\">Dustin Hartzler</a>、<a href=\"https://profiles.wordpress.org/eliorivero\">Elio Rivero</a>、<a href=\"https://profiles.wordpress.org/ebinnion\">Eric Binnion</a>、<a href=\"https://profiles.wordpress.org/ew_holmes\">Eric Holmes</a>、<a href=\"https://profiles.wordpress.org/ericlewis\">Eric Lewis</a>、<a href=\"https://profiles.wordpress.org/fab1en\">Fabien Quatravaux</a>、<a href=\"https://profiles.wordpress.org/florianziegler\">florianziegler</a>、<a href=\"https://profiles.wordpress.org/hereswhatidid\">Gabe Shackle</a>、<a href=\"https://profiles.wordpress.org/garyc40\">Gary Cao</a>、<a href=\"https://profiles.wordpress.org/pento\">Gary Pendergast</a>、<a href=\"https://profiles.wordpress.org/soulseekah\">Gennady Kovshenin</a>、<a href=\"https://profiles.wordpress.org/babbardel\">George Olaru</a>、<a href=\"https://profiles.wordpress.org/georgestephanis\">George Stephanis</a>、<a href=\"https://profiles.wordpress.org/gregrickaby\">Greg Rickaby</a>、<a href=\"https://profiles.wordpress.org/gcorne\">Gregory Cornelius</a>、<a href=\"https://profiles.wordpress.org/tivnet\">Gregory Karpinsky (@tivnet)</a>、<a href=\"https://profiles.wordpress.org/bordoni\">Gustavo Bordoni</a>、<a href=\"https://profiles.wordpress.org/hardy101\">hardy101</a>、<a href=\"https://profiles.wordpress.org/hauvong\">hauvong</a>、<a href=\"https://profiles.wordpress.org/helen\">Helen Hou-Sandí</a>、<a href=\"https://profiles.wordpress.org/heshiming\">heshiming</a>、<a href=\"https://profiles.wordpress.org/honeysilvas\">honeysilvas</a>、<a href=\"https://profiles.wordpress.org/hugodelgado\">hugodelgado</a>、<a href=\"https://profiles.wordpress.org/iandstewart\">Ian Stewart</a>、<a href=\"https://profiles.wordpress.org/ianmjones\">ianmjones</a>、<a href=\"https://profiles.wordpress.org/igmoweb\">Ignacio Cruz Moreno</a>、<a href=\"https://profiles.wordpress.org/imath\">imath</a>、<a href=\"https://profiles.wordpress.org/ipstenu\">Ipstenu (Mika Epstein)</a>、<a href=\"https://profiles.wordpress.org/ivankristianto\">Ivan Kristianto</a>、<a href=\"https://profiles.wordpress.org/jdgrimes\">J.D. Grimes</a>、<a href=\"https://profiles.wordpress.org/jaimieolmstead\">jaimieolmstead</a>、<a href=\"https://profiles.wordpress.org/jakubtyrcha\">jakub.tyrcha</a>、<a href=\"https://profiles.wordpress.org/janhenckens\">janhenckens</a>、<a href=\"https://profiles.wordpress.org/avryl\">Janneke Van Dorpe</a>、<a href=\"https://profiles.wordpress.org/japh\">Japh</a>、<a href=\"https://profiles.wordpress.org/jwenerd\">Jared Wenerd</a>、<a href=\"https://profiles.wordpress.org/jarednova\">jarednova</a>、<a href=\"https://profiles.wordpress.org/jeanyoungkim\">jeanyoungkim</a>、<a href=\"https://profiles.wordpress.org/jfarthing84\">Jeff Farthing</a>、<a href=\"https://profiles.wordpress.org/jeffstieler\">Jeff Stieler</a>、<a href=\"https://profiles.wordpress.org/jeremyfelt\">Jeremy Felt</a>、<a href=\"https://profiles.wordpress.org/jeherve\">Jeremy Herve</a>、<a href=\"https://profiles.wordpress.org/jesin\">Jesin A</a>、<a href=\"https://profiles.wordpress.org/jayjdk\">Jesper Johansen (jayjdk)</a>、<a href=\"https://profiles.wordpress.org/engelen\">Jesper van Engelen</a>、<a href=\"https://profiles.wordpress.org/jessepollak\">Jesse Pollak</a>、<a href=\"https://profiles.wordpress.org/jipmoors\">jipmoors</a>、<a href=\"https://profiles.wordpress.org/joedolson\">Joe Dolson</a>、<a href=\"https://profiles.wordpress.org/joemcgill\">Joe McGill</a>、<a href=\"https://profiles.wordpress.org/johneckman\">John Eckman</a>、<a href=\"https://profiles.wordpress.org/johnrom\">johnrom</a>、<a href=\"https://profiles.wordpress.org/johnstonphilip\">johnstonphilip</a>、<a href=\"https://profiles.wordpress.org/jb510\">Jon Brown</a>、<a href=\"https://profiles.wordpress.org/duck_\">Jon Cave</a>、<a href=\"https://profiles.wordpress.org/jbrinley\">Jonathan Brinley</a>、<a href=\"https://profiles.wordpress.org/desrosj\">Jonathan Desrosiers</a>、<a href=\"https://profiles.wordpress.org/joostdevalk\">Joost de Valk</a>、<a href=\"https://profiles.wordpress.org/softmodeling\">Jordi Cabot</a>、<a href=\"https://profiles.wordpress.org/joshuaabenazer\">Joshua Abenazer</a>、<a href=\"https://profiles.wordpress.org/tai\">JOTAKI Taisuke</a>、<a href=\"https://profiles.wordpress.org/jrf\">jrf</a>、<a href=\"https://profiles.wordpress.org/julien731\">julien731</a>、<a href=\"https://profiles.wordpress.org/justinsainton\">Justin Sainton</a>、<a href=\"https://profiles.wordpress.org/jtsternberg\">Justin Sternberg</a>、<a href=\"https://profiles.wordpress.org/kadamwhite\">K.Adam White</a>、<a href=\"https://profiles.wordpress.org/trepmal\">Kailey (trepmal)</a>、<a href=\"https://profiles.wordpress.org/ixkaito\">Kaito</a>、<a href=\"https://profiles.wordpress.org/kamelkev\">kamelkev</a>、<a href=\"https://profiles.wordpress.org/karpstrucking\">karpstrucking</a>、<a href=\"https://profiles.wordpress.org/keesiemeijer\">keesiemeijer</a>、<a href=\"https://profiles.wordpress.org/ryelle\">Kelly Dwan</a>、<a href=\"https://profiles.wordpress.org/kevinlangleyjr\">Kevin Langley</a>、<a href=\"https://profiles.wordpress.org/kdoran\">Kiko Doran</a>、<a href=\"https://profiles.wordpress.org/kpdesign\">Kim Parsell</a>、<a href=\"https://profiles.wordpress.org/kwight\">Kirk Wight</a>、<a href=\"https://profiles.wordpress.org/kitchin\">kitchin</a>、<a href=\"https://profiles.wordpress.org/knutsp\">Knut Sparhell</a>、<a href=\"https://profiles.wordpress.org/kovshenin\">Konstantin Kovshenin</a>、<a href=\"https://profiles.wordpress.org/obenland\">Konstantin Obenland</a>、<a href=\"https://profiles.wordpress.org/kosvrouvas\">Kostas Vrouvas</a>、<a href=\"https://profiles.wordpress.org/kraftner\">kraftner</a>、<a href=\"https://profiles.wordpress.org/kristastevens\">kristastevens</a>、<a href=\"https://profiles.wordpress.org/kurtpayne\">Kurt Payne</a>、<a href=\"https://profiles.wordpress.org/lancewillett\">Lance Willett</a>、<a href=\"https://profiles.wordpress.org/offereins\">Laurens Offereins</a>、<a href=\"https://profiles.wordpress.org/linuxologos\">linuxologos</a>、<a href=\"https://profiles.wordpress.org/ideag\">Liuiza Arunas</a>、<a href=\"https://profiles.wordpress.org/loushou\">loushou</a>、<a href=\"https://profiles.wordpress.org/latz\">Lutz Schroer</a>、<a href=\"https://profiles.wordpress.org/manoz69\">Manoz69</a>、<a href=\"https://profiles.wordpress.org/mantismamita\">mantismamita</a>、<a href=\"https://profiles.wordpress.org/marcosf\">marco</a>、<a href=\"https://profiles.wordpress.org/nofearinc\">Mario Peshev</a>、<a href=\"https://profiles.wordpress.org/clorith\">Marius (Clorith)</a>、<a href=\"https://profiles.wordpress.org/landakram\">Mark Hudnall</a>、<a href=\"https://profiles.wordpress.org/markjaquith\">Mark Jaquith</a>、<a href=\"https://profiles.wordpress.org/senff\">Mark Senff</a>、<a href=\"https://profiles.wordpress.org/markoheijnen\">Marko Heijnen</a>、<a href=\"https://profiles.wordpress.org/marsjaninzmarsa\">marsjaninzmarsa</a>、<a href=\"https://profiles.wordpress.org/matveb\">Matias Ventura</a>、<a href=\"https://profiles.wordpress.org/matt\">Matt Mullenweg</a>、<a href=\"https://profiles.wordpress.org/mattwiebe\">Matt Wiebe</a>、<a href=\"https://profiles.wordpress.org/mboynes\">Matthew Boynes</a>、<a href=\"https://profiles.wordpress.org/mattheu\">Matthew Haines-Young</a>、<a href=\"https://profiles.wordpress.org/mattkeys\">mattkeys</a>、<a href=\"https://profiles.wordpress.org/mlteal\">Maura Teal</a>、<a href=\"https://profiles.wordpress.org/melchoyce\">Mel Choyce</a>、<a href=\"https://profiles.wordpress.org/merty\">Mert Yazicioglu</a>、<a href=\"https://profiles.wordpress.org/mdawaffe\">Michael Adams (mdawaffe)</a>、<a href=\"https://profiles.wordpress.org/michael-arestad\">Michael Arestad</a>、<a href=\"https://profiles.wordpress.org/tw2113\">Michael Beckwith</a>、<a href=\"https://profiles.wordpress.org/cainm\">Michael Cain</a>、<a href=\"https://profiles.wordpress.org/smashcut\">Michael Pick</a>、<a href=\"https://profiles.wordpress.org/michalzuber\">michalzuber</a>、<a href=\"https://profiles.wordpress.org/chellycat\">Michelle Langston</a>、<a href=\"https://profiles.wordpress.org/mcsf\">Miguel Fonseca</a>、<a href=\"https://profiles.wordpress.org/mikehansenme\">Mike Hansen</a>、<a href=\"https://profiles.wordpress.org/mikejolley\">Mike Jolley</a>、<a href=\"https://profiles.wordpress.org/mnelson4\">Mike Nelson</a>、<a href=\"https://profiles.wordpress.org/dh-shredder\">Mike Schroder</a>、<a href=\"https://profiles.wordpress.org/mikeyarce\">Mikey Arce</a>、<a href=\"https://profiles.wordpress.org/studionashvegas\">Mitch Canter (studionashvegas)</a>、<a href=\"https://profiles.wordpress.org/morganestes\">Morgan Estes</a>、<a href=\"https://profiles.wordpress.org/mor10\">Morten Rand-Hendriksen</a>、<a href=\"https://profiles.wordpress.org/mvd7793\">mvd7793</a>、<a href=\"https://profiles.wordpress.org/alex-ye\">Nashwan Doaqan</a>、<a href=\"https://profiles.wordpress.org/niallkennedy\">Niall Kennedy</a>、<a href=\"https://profiles.wordpress.org/celloexpressions\">Nick Halsey</a>、<a href=\"https://profiles.wordpress.org/nikv\">Nikhil Vimal (NikV)</a>、<a href=\"https://profiles.wordpress.org/nikolovtmw\">Nikola Nikolov</a>、<a href=\"https://profiles.wordpress.org/nobleclem\">nobleclem</a>、<a href=\"https://profiles.wordpress.org/noplanman\">noplanman</a>、<a href=\"https://profiles.wordpress.org/nvwd\">Nowell VanHoesen</a>、<a href=\"https://profiles.wordpress.org/originalexe\">OriginalEXE</a>、<a href=\"https://profiles.wordpress.org/p_enrique\">p_enrique</a>、<a href=\"https://profiles.wordpress.org/pushplaybang\">Paul</a>、<a href=\"https://profiles.wordpress.org/pauldewouters\">Paul de Wouters</a>、<a href=\"https://profiles.wordpress.org/paulschreiber\">Paul Schreiber</a>、<a href=\"https://profiles.wordpress.org/paulwilde\">Paul Wilde</a>、<a href=\"https://profiles.wordpress.org/pavelevap\">pavelevap</a>、<a href=\"https://profiles.wordpress.org/peterchester\">Peter Chester</a>、<a href=\"https://profiles.wordpress.org/donutz\">Peter J. Herrel</a>、<a href=\"https://profiles.wordpress.org/westi\">Peter Westwood</a>、<a href=\"https://profiles.wordpress.org/peterwilsoncc\">Peter Wilson</a>、<a href=\"https://profiles.wordpress.org/philiparthurmoore\">Philip Arthur Moore</a>、<a href=\"https://profiles.wordpress.org/phpmypython\">phpmypython</a>、<a href=\"https://profiles.wordpress.org/mordauk\">Pippin Williamson</a>、<a href=\"https://profiles.wordpress.org/nprasath002\">Prasath Nadarajah</a>、<a href=\"https://profiles.wordpress.org/psycleuk\">psycleuk</a>、<a href=\"https://profiles.wordpress.org/ptahdunbar\">Ptah Dunbar</a>、<a href=\"https://profiles.wordpress.org/quietnic\">quietnic</a>、<a href=\"https://profiles.wordpress.org/rachelbaker\">Rachel Baker</a>、<a href=\"https://profiles.wordpress.org/ramiy\">Rami Yushuvaev</a>、<a href=\"https://profiles.wordpress.org/ramiabraham\">ramiabraham</a>、<a href=\"https://profiles.wordpress.org/greuben\">Reuben Gunday</a>、<a href=\"https://profiles.wordpress.org/rianrietveld\">Rian Rietveld</a>、<a href=\"https://profiles.wordpress.org/richardmtl\">Richard Archambault</a>、<a href=\"https://profiles.wordpress.org/rickalee\">Ricky Lee Whittemore</a>、<a href=\"https://profiles.wordpress.org/miqrogroove\">Robert Chapin</a>、<a href=\"https://profiles.wordpress.org/rodrigosprimo\">Rodrigo Primo</a>、<a href=\"https://profiles.wordpress.org/ryan\">Ryan Boren</a>、<a href=\"https://profiles.wordpress.org/ryankienstra\">Ryan Kienstra</a>、<a href=\"https://profiles.wordpress.org/rmccue\">Ryan McCue</a>、<a href=\"https://profiles.wordpress.org/sakinshrestha\">Sakin Shrestha</a>、<a href=\"https://profiles.wordpress.org/samhotchkiss\">Sam Hotchkiss</a>、<a href=\"https://profiles.wordpress.org/otto42\">Samuel Wood (Otto)</a>、<a href=\"https://profiles.wordpress.org/sc0ttkclark\">Scott Kingsley Clark</a>、<a href=\"https://profiles.wordpress.org/coffee2code\">Scott Reilly</a>、<a href=\"https://profiles.wordpress.org/wonderboymusic\">Scott Taylor</a>、<a href=\"https://profiles.wordpress.org/sergeybiryukov\">Sergey Biryukov</a>、<a href=\"https://profiles.wordpress.org/shooper\">Shawn Hooper</a>、<a href=\"https://profiles.wordpress.org/simonp303\">Simon Pollard</a>、<a href=\"https://profiles.wordpress.org/simonwheatley\">Simon Wheatley</a>、<a href=\"https://profiles.wordpress.org/skaeser\">skaeser</a>、<a href=\"https://profiles.wordpress.org/slobodanmanic\">Slobodan Manic</a>、<a href=\"https://profiles.wordpress.org/socki03\">socki03</a>、<a href=\"https://profiles.wordpress.org/solarissmoke\">solarissmoke</a>、<a href=\"https://profiles.wordpress.org/stephdau\">Stephane Daury</a>、<a href=\"https://profiles.wordpress.org/netweb\">Stephen Edgar</a>、<a href=\"https://profiles.wordpress.org/stephenharris\">Stephen Harris</a>、<a href=\"https://profiles.wordpress.org/stevegrunwell\">Steve Grunwell</a>、<a href=\"https://profiles.wordpress.org/5um17\">Sumit Singh</a>、<a href=\"https://profiles.wordpress.org/tacoverdo\">TacoVerdo</a>、<a href=\"https://profiles.wordpress.org/iamtakashi\">Takashi Irie</a>、<a href=\"https://profiles.wordpress.org/miyauchi\">Takayuki Miyauchi</a>、<a href=\"https://profiles.wordpress.org/karmatosed\">Tammie</a>、<a href=\"https://profiles.wordpress.org/tareq1988\">Tareq Hasan</a>、<a href=\"https://profiles.wordpress.org/tlovett1\">Taylor Lovett</a>、<a href=\"https://profiles.wordpress.org/ipm-frommen\">Thorsten Frommen</a>、<a href=\"https://profiles.wordpress.org/tillkruess\">Till Kruss</a>、<a href=\"https://profiles.wordpress.org/tschutter\">Tobias Schutter</a>、<a href=\"https://profiles.wordpress.org/tobiasbg\">TobiasBg</a>、<a href=\"https://profiles.wordpress.org/tmtrademark\">Toby McKes</a>、<a href=\"https://profiles.wordpress.org/tjnowell\">Tom J Nowell</a>、<a href=\"https://profiles.wordpress.org/tomasm\">Tomas Mackevicius</a>、<a href=\"https://profiles.wordpress.org/tomharrigan\">TomHarrigan</a>、<a href=\"https://profiles.wordpress.org/topher1kenobe\">Topher</a>、<a href=\"https://profiles.wordpress.org/zodiac1978\">Torsten Landsiedel</a>、<a href=\"https://profiles.wordpress.org/liljimmi\">Tracy Levesque</a>、<a href=\"https://profiles.wordpress.org/transom\">transom</a>、<a href=\"https://profiles.wordpress.org/wpsmith\">Travis Smith</a>、<a href=\"https://profiles.wordpress.org/tywayne\">Ty Carlson</a>、<a href=\"https://profiles.wordpress.org/desaiuditd\">Udit Desai</a>、<a href=\"https://profiles.wordpress.org/umeshsingla\">Umesh Kumar</a>、<a href=\"https://profiles.wordpress.org/vinod-dalvi\">Vinod Dalvi</a>、<a href=\"https://profiles.wordpress.org/vlajos\">vlajos</a>、<a href=\"https://profiles.wordpress.org/voldemortensen\">voldemortensen</a>、<a href=\"https://profiles.wordpress.org/westonruter\">Weston Ruter</a>、<a href=\"https://profiles.wordpress.org/yoavf\">Yoav Farhi</a>、<a href=\"https://profiles.wordpress.org/nobinobi\">Yuta Sekine</a>、<a href=\"https://profiles.wordpress.org/zrothauser\">Zack Rothauser</a>和<a href=\"https://profiles.wordpress.org/tollmanz\">Zack Tollman</a>。<br />\n本次发布得到了283人的贡献，再次创下新高。</p>\n<p>如果您想帮忙，请查阅<a href=\"https://make.wordpress.org/\">Make WordPress</a>和我们的<a href=\"https://make.wordpress.org/core/\">核心开发博客</a>。</p>\n<p>感谢您选择WordPress。节日快乐，我们4.2见！\n</p></div>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:47:\"https://cn.wordpress.org/2014/12/23/dinah/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:2:\"29\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:8;a:6:{s:4:\"data\";s:45:\"\n		\n		\n		\n		\n		\n				\n		\n\n		\n		\n				\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:27:\"WordPress 4.0.1安全更新\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:52:\"https://cn.wordpress.org/2014/11/21/wordpress-4-0-1/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:61:\"https://cn.wordpress.org/2014/11/21/wordpress-4-0-1/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 21 Nov 2014 03:51:39 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:2:{i:0;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:1;a:5:{s:4:\"data\";s:8:\"Security\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"https://cn.wordpress.org/?p=942\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:45:\"WordPress 4.0.1简体中文版现已可用。\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Jimmy Xu\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:3034:\"<p>WordPress 4.0.1现已发布，这是一次对所有较早版本的<strong>重要安全更新</strong>，我们强烈建议您立即升级您的站点。</p>\n<p>支持后台自动更新的站点将在未来几个小时内被自动升级到WordPress 4.0.1。如果您仍在使用WordPress 3.9.2、3.8.4或3.7.4，请升级到3.9.3、3.8.5或3.7.5来保证您站点的安全性。（我们不对旧版本提供支持，所以也请考虑升级到4.0.1来使用我们最新最强大的版本。）</p>\n<p>WordPress 3.9.2与更早版本均受一严重的跨站脚本漏洞影响，可能使匿名用户危害站点安全。此漏洞由<a href=\"http://klikki.fi/\">Jouko Pynnonen</a>报告。这项问题并不影响4.0版，但4.0.1版也修正了如下8个安全问题：</p>\n<ul>\n<li>三个可被网站文章作者利用的跨站脚本问题，由<a href=\"http://joncave.co.uk/\">Jon Cave</a>、<a href=\"http://www.miqrogroove.com/\">Robert Chapin</a>与WordPress安全团队的<a href=\"https://johnblackbourn.com/\">John Blackbourn</a>发现。</li>\n<li>一个可能被用来诱使用户修改密码的跨站请求伪造。</li>\n<li>一项在检查密码时可能引发拒绝服务的问题，由<a href=\"http://www.behindthefirewalls.com/\">Javier Nieto Arevalo</a>与<a href=\"http://www.devconsole.info/\">Andres Rojas Guerrero</a>发现。</li>\n<li>在WordPress发起HTTP请求时对服务器侧请求伪造攻击的额外防护，由Ben Bidner（vortfu）报告。</li>\n<li>一项极不可能发生的散列碰撞，可能导致2008年之后从未登录过的账户被盗，由<a href=\"http://david.dw-perspective.org.uk/\">David Anderson</a>报告。</li>\n<li>WordPress现在会在用户想起密码、登录并修改电子邮件地址后使早前发出的密码重设邮件中的链接失效，由<a href=\"https://twitter.com/MomenBassel\">Momen Bassel</a>、<a href=\"http://c0dehouse.blogspot.in/\">Tanoy Bose</a>与<a href=\"https://managewp.com/\">ManageWP的Bojan Slavković</a>独立报告。</li>\n</ul>\n<p>4.0.1版也修正了4.0中的23个bug，我们也做出了两项强化修改，包括在从上传的照片中提取EXIF数据时进行更好的验证，由<a href=\"http://www.securesolutions.no/\">Chris Andrè Dale</a>报告。</p>\n<p>我们感谢这些问题被<a href=\"https://codex.wordpress.org/FAQ_Security\">负责任地透漏</a>给我们的安全小组。要获取更多信息，请参见<a href=\"https://codex.wordpress.org/Version_4.0.1\">发布说明</a>或查阅<a href=\"https://core.trac.wordpress.org/log/branches/4.0?rev=30475&amp;stop_rev=29710\">修改列表</a>。</p>\n<p><a href=\"https://cn.wordpress.org/releases/\">下载WordPress 4.0.1简体中文版</a>或在仪表盘→更新中点击“现在更新”。</p>\n<p><em>已经在测试WordPress 4.1了？包含这些安全更新的beta 2现已发布（<a href=\"https://wordpress.org/wordpress-4.1-beta2.zip\">zip</a>）。更多有关4.1的信息，请参见<a href=\"https://wordpress.org/news/2014/11/wordpress-4-1-beta-1/\">beta 1发布说明</a>。</em></p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:57:\"https://cn.wordpress.org/2014/11/21/wordpress-4-0-1/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:2:\"21\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:9;a:6:{s:4:\"data\";s:44:\"\n		\n		\n		\n		\n		\n				\n\n		\n		\n				\n			\n		\n\n\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:8:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:24:\"WordPress 4.0“Benny”\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"https://cn.wordpress.org/2014/09/05/benny/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:51:\"https://cn.wordpress.org/2014/09/05/benny/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 05 Sep 2014 00:38:11 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:30:\"http://cn.wordpress.org/?p=925\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:49:\"WordPress 4.0简体中文版现已开放下载。\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:9:\"enclosure\";a:2:{i:0;a:5:{s:4:\"data\";s:0:\"\";s:7:\"attribs\";a:1:{s:0:\"\";a:3:{s:3:\"url\";s:40:\"http://s.w.org/images/core/4.0/embed.mp4\";s:6:\"length\";s:7:\"3521313\";s:4:\"type\";s:9:\"video/mp4\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:1;a:5:{s:4:\"data\";s:0:\"\";s:7:\"attribs\";a:1:{s:0:\"\";a:3:{s:3:\"url\";s:40:\"http://s.w.org/images/core/4.0/focus.mp4\";s:6:\"length\";s:7:\"5181557\";s:4:\"type\";s:9:\"video/mp4\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Jimmy Xu\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:23516:\"<div style=\"width: 692px\">\nWordPress 4.0简体中文版现已<a href=\"https://cn.wordpress.org/wordpress-4.0-zh_CN.zip\">开放下载</a>，或在您的WordPress仪表盘中升级。我们将此版本命名为“Benny”，以纪念<a href=\"https://zh.wikipedia.org/wiki/%E7%8F%AD%E5%B0%BC%C2%B7%E5%8F%A4%E5%BE%B7%E6%9B%BC\">本尼·古德曼</a>，爵士单簧管家和乐队指挥。这次发布为您带来了更顺滑的写作和管理体验，我们希望您喜欢。<br />\n<div id=\"v-bUdzKMro-1\" class=\"video-player\"><video id=\"v-bUdzKMro-1-video\" width=\"692\" height=\"388\" poster=\"https://videos.files.wordpress.com/bUdzKMro/wordpress-4-0_scruberthumbnail_0.jpg\" controls=\"true\" preload=\"metadata\" dir=\"ltr\" lang=\"en\"><source src=\"https://videos.files.wordpress.com/bUdzKMro/wordpress-4-0_dvd.mp4\" type=\"video/mp4; codecs=&quot;avc1.64001E, mp4a.40.2&quot;\" /><source src=\"https://videos.files.wordpress.com/bUdzKMro/wordpress-4-0_fmt1.ogv\" type=\"video/ogg; codecs=&quot;theora, vorbis&quot;\" /><div><img alt=\"Introducing WordPress 4.0 &quot;Benny&quot;\" src=\"https://videos.files.wordpress.com/bUdzKMro/wordpress-4-0_scruberthumbnail_0.jpg\" width=\"692\" height=\"388\" /></div><p>Introducing WordPress 4.0 &quot;Benny&quot;</p></video></div></p>\n<hr />\n<h2>优雅地管理媒体</h2>\n<p><img class=\"alignnone size-full wp-image-3316\"  src=\"//i1.wp.com/i0.wp.com/wordpress.org/news/files/2014/09/media.jpg?resize=692%2C406\" alt=\"媒体库\" width=\"632\" height=\"371\" /><br />\n在美丽、无尽的网格中浏览您上传的文件。无论您想查看或编辑多少文件，新的详情预览都能使这一过程无比迅捷。</p>\n<hr />\n<h2>管理嵌入现在前所未有地简单</h2>\n<div style=\"width: 640px;\" class=\"wp-video\"><video class=\"wp-video-shortcode\" id=\"video-925-5\" width=\"640\" height=\"360\" preload=\"metadata\" controls=\"controls\"><source type=\"video/mp4\" src=\"https://s.w.org/images/core/4.0/embed.mp4?_=5\" /><a href=\"https://s.w.org/images/core/4.0/embed.mp4\">https://s.w.org/images/core/4.0/embed.mp4</a></video></div>\n<p>在空行中粘贴一行YouTube URL，它就会魔术般地变成嵌入视频。现在用一条tweet试试。是的——嵌入现在变成了视觉体验。编辑器现在能够显示嵌入内容的真实预览，为您节约时间，也给您自信。</p>\n<p>我们也增加了默认支持的服务数量——您现在可以嵌入来自CollegeHumor的视频、来自YouTube的播放列表和来自TED的演讲。<a href=\"https://codex.wordpress.org/Embeds\">查阅所有WordPress支持的嵌入</a>。</p>\n<hr />\n<h2>专注于您的内容</h2>\n<div style=\"width: 640px;\" class=\"wp-video\"><video class=\"wp-video-shortcode\" id=\"video-925-6\" width=\"640\" height=\"360\" preload=\"metadata\" controls=\"controls\"><source type=\"video/mp4\" src=\"https://s.w.org/images/core/4.0/focus.mp4?_=6\" /><a href=\"https://s.w.org/images/core/4.0/focus.mp4\">https://s.w.org/images/core/4.0/focus.mp4</a></video></div>\n<p>写作和编辑现在变得更顺滑、更身临其境。随着您的写作，编辑器将会自动扩展来适应您的内容，并保证格式工具总是可用。</p>\n<hr />\n<h2>寻找正确的插件</h2>\n<p><img class=\"aligncenter size-large wp-image-3309\"  src=\"//i1.wp.com/i0.wp.com/wordpress.org/news/files/2014/09/add-plugin1.png?resize=692%2C405\" alt=\"添加插件\" width=\"632\" height=\"370\" /><br />\nWordPress的插件目录中现在有多于30,000个免费且开源的插件。WordPress 4.0通过加入新的条件、改善的搜索器和更可视化的浏览体验使找到符合您需要的插件变得更简单。</p>\n<hr />\n<h2>乐团</h2>\n<p>本次发布由<a href=\"http://helenhousandi.com/\">Helen Hou-Sandí</a>领头，并得到了以下优秀个人的协助。本次发布有275名贡献者参与，创下新高。在您喜欢的音乐服务中找找本尼·古德曼，并看看下面这些个人资料吧：</p>\n<p><a href=\"https://profiles.wordpress.org/sharonaustin\">_Redd</a>、<a href=\"https://profiles.wordpress.org/aaroncampbell\">Aaron D. Campbell</a>、<a href=\"https://profiles.wordpress.org/jorbin\">Aaron Jorbin</a>、<a href=\"https://profiles.wordpress.org/adamsilverstein\">Adam Silverstein</a>、<a href=\"https://profiles.wordpress.org/viper007bond\">Alex Mills (Viper007Bond)</a>、<a href=\"https://profiles.wordpress.org/tellyworth\">Alex Shiels</a>、<a href=\"https://profiles.wordpress.org/alexanderrohmann\">Alexander Rohmann</a>、<a href=\"https://profiles.wordpress.org/aliso\">Alison Barrett</a>、<a href=\"https://profiles.wordpress.org/collinsinternet\">Allan Collins</a>、<a href=\"https://profiles.wordpress.org/amit\">Amit Gupta</a>、<a href=\"https://profiles.wordpress.org/sabreuse\">Amy Hendrix (sabreuse)</a>、<a href=\"https://profiles.wordpress.org/afercia\">Andrea Fercia</a>、<a href=\"https://profiles.wordpress.org/andrezrv\">Andres Villarreal</a>、<a href=\"https://profiles.wordpress.org/zamfeer\">Andrew Mowe</a>、<a href=\"https://profiles.wordpress.org/nacin\">Andrew Nacin</a>、<a href=\"https://profiles.wordpress.org/azaozz\">Andrew Ozz</a>、<a href=\"https://profiles.wordpress.org/andy\">Andy Skelton</a>、<a href=\"https://profiles.wordpress.org/ankit-k-gupta\">Ankit K Gupta</a>、<a href=\"https://profiles.wordpress.org/atimmer\">Anton Timmermans</a>、<a href=\"https://profiles.wordpress.org/arnee\">arnee</a>、<a href=\"https://profiles.wordpress.org/aubreypwd\">Aubrey Portwood</a>、<a href=\"https://profiles.wordpress.org/filosofo\">Austin Matzko</a>、<a href=\"https://profiles.wordpress.org/empireoflight\">Ben Dunkle</a>、<a href=\"https://profiles.wordpress.org/kau-boy\">Bernhard Kau</a>、<a href=\"https://profiles.wordpress.org/boonebgorges\">Boone Gorges</a>、<a href=\"https://profiles.wordpress.org/bradyvercher\">Brady Vercher</a>、<a href=\"https://profiles.wordpress.org/bramd\">bramd</a>、<a href=\"https://profiles.wordpress.org/kraftbj\">Brandon Kraft</a>、<a href=\"https://profiles.wordpress.org/krogsgard\">Brian Krogsgard</a>、<a href=\"https://profiles.wordpress.org/brianlayman\">Brian Layman</a>、<a href=\"https://profiles.wordpress.org/rzen\">Brian Richards</a>、<a href=\"https://profiles.wordpress.org/camdensegal\">Camden Segal</a>、<a href=\"https://profiles.wordpress.org/lukecarbis\">Carbis</a>、<a href=\"https://profiles.wordpress.org/sixhours\">Caroline Moore</a>、<a href=\"https://profiles.wordpress.org/mackensen\">Charles Fulton</a>、<a href=\"https://profiles.wordpress.org/chouby\">Chouby</a>、<a href=\"https://profiles.wordpress.org/chrico\">ChriCo</a>、<a href=\"https://profiles.wordpress.org/c3mdigital\">Chris Olbekson</a>、<a href=\"https://profiles.wordpress.org/chrisl27\">chrisl27</a>、<a href=\"https://profiles.wordpress.org/caxelsson\">Christian Axelsson</a>、<a href=\"https://profiles.wordpress.org/cfinke\">Christopher Finke</a>、<a href=\"https://profiles.wordpress.org/boda1982\">Christopher Spires</a>、<a href=\"https://profiles.wordpress.org/clifgriffin\">Clifton Griffin</a>、<a href=\"https://profiles.wordpress.org/jupiterwise\">Corey McKrill</a>、<a href=\"https://profiles.wordpress.org/corphi\">Corphi</a>、<a href=\"https://profiles.wordpress.org/extendwings\">Daisuke Takahashi</a>、<a href=\"https://profiles.wordpress.org/ghost1227\">Dan Griffiths</a>、<a href=\"https://profiles.wordpress.org/danielbachhuber\">Daniel Bachhuber</a>、<a href=\"https://profiles.wordpress.org/danielhuesken\">Daniel Husken</a>、<a href=\"https://profiles.wordpress.org/redsweater\">Daniel Jalkut (Red Sweater)</a>、<a href=\"https://profiles.wordpress.org/dannydehaan\">Danny de Haan</a>、<a href=\"https://profiles.wordpress.org/dkotter\">Darin Kotter</a>、<a href=\"https://profiles.wordpress.org/koop\">Daryl Koopersmith</a>、<a href=\"https://profiles.wordpress.org/dllh\">Daryl L. L. Houston (dllh)</a>、<a href=\"https://profiles.wordpress.org/davidakennedy\">David A. Kennedy</a>、<a href=\"https://profiles.wordpress.org/dlh\">David Herrera</a>、<a href=\"https://profiles.wordpress.org/dnaber-de\">David Naber</a>、<a href=\"https://profiles.wordpress.org/davidthemachine\">DavidTheMachine</a>、<a href=\"https://profiles.wordpress.org/debaat\">DeBAAT</a>、<a href=\"https://profiles.wordpress.org/dd32\">Dion Hulse</a>、<a href=\"https://profiles.wordpress.org/ocean90\">Dominik Schilling</a>、<a href=\"https://profiles.wordpress.org/donncha\">Donncha O Caoimh</a>、<a href=\"https://profiles.wordpress.org/drewapicture\">Drew Jaynes</a>、<a href=\"https://profiles.wordpress.org/dustyn\">Dustyn Doyle</a>、<a href=\"https://profiles.wordpress.org/eddiemoya\">Eddie Moya</a>、<a href=\"https://profiles.wordpress.org/oso96_2000\">Eduardo Reveles</a>、<a href=\"https://profiles.wordpress.org/edwin-at-studiojoyocom\">Edwin Siebel</a>、<a href=\"https://profiles.wordpress.org/ehg\">ehg</a>、<a href=\"https://profiles.wordpress.org/tmeister\">Enrique Chavez</a>、<a href=\"https://profiles.wordpress.org/erayalakese\">erayalakese</a>、<a href=\"https://profiles.wordpress.org/ericlewis\">Eric Andrew Lewis</a>、<a href=\"https://profiles.wordpress.org/ebinnion\">Eric Binnion</a>、<a href=\"https://profiles.wordpress.org/ericmann\">Eric Mann</a>、<a href=\"https://profiles.wordpress.org/ejdanderson\">Evan Anderson</a>、<a href=\"https://profiles.wordpress.org/eherman24\">Evan Herman</a>、<a href=\"https://profiles.wordpress.org/fab1en\">Fabien Quatravaux</a>、<a href=\"https://profiles.wordpress.org/fahmiadib\">Fahmi Adib</a>、<a href=\"https://profiles.wordpress.org/feedmeastraycat\">feedmeastraycat</a>、<a href=\"https://profiles.wordpress.org/frank-klein\">Frank Klein</a>、<a href=\"https://profiles.wordpress.org/garhdez\">garhdez</a>、<a href=\"https://profiles.wordpress.org/garyc40\">Gary Cao</a>、<a href=\"https://profiles.wordpress.org/garyj\">Gary Jones</a>、<a href=\"https://profiles.wordpress.org/pento\">Gary Pendergast</a>、<a href=\"https://profiles.wordpress.org/garza\">garza</a>、<a href=\"https://profiles.wordpress.org/gauravmittal1995\">gauravmittal1995</a>、<a href=\"https://profiles.wordpress.org/gavra\">Gavrisimo</a>、<a href=\"https://profiles.wordpress.org/georgestephanis\">George Stephanis</a>、<a href=\"https://profiles.wordpress.org/grahamarmfield\">Graham Armfield</a>、<a href=\"https://profiles.wordpress.org/vancoder\">Grant Mangham</a>、<a href=\"https://profiles.wordpress.org/gcorne\">Gregory Cornelius</a>、<a href=\"https://profiles.wordpress.org/bordoni\">Gustavo Bordoni</a>、<a href=\"https://profiles.wordpress.org/harrym\">harrym</a>、<a href=\"https://profiles.wordpress.org/hebbet\">hebbet</a>、<a href=\"https://profiles.wordpress.org/hinnerk\">Hinnerk Altenburg</a>、<a href=\"https://profiles.wordpress.org/hlashbrooke\">Hugh Lashbrooke</a>、<a href=\"https://profiles.wordpress.org/iljoja\">iljoja</a>、<a href=\"https://profiles.wordpress.org/imath\">imath</a>、<a href=\"https://profiles.wordpress.org/ipstenu\">Ipstenu (Mika Epstein)</a>、<a href=\"https://profiles.wordpress.org/issuu\">issuu</a>、<a href=\"https://profiles.wordpress.org/jdgrimes\">J.D. Grimes</a>、<a href=\"https://profiles.wordpress.org/jacklenox\">Jack Lenox</a>、<a href=\"https://profiles.wordpress.org/jackreichert\">Jack Reichert</a>、<a href=\"https://profiles.wordpress.org/jacobdubail\">Jacob Dubail</a>、<a href=\"https://profiles.wordpress.org/janhenkg\">JanHenkG</a>、<a href=\"https://profiles.wordpress.org/avryl\">Janneke Van Dorpe</a>、<a href=\"https://profiles.wordpress.org/jwenerd\">Jared Wenerd</a>、<a href=\"https://profiles.wordpress.org/jaza613\">Jaza613</a>、<a href=\"https://profiles.wordpress.org/jeffstieler\">Jeff Stieler</a>、<a href=\"https://profiles.wordpress.org/jeremyfelt\">Jeremy Felt</a>、<a href=\"https://profiles.wordpress.org/jpry\">Jeremy Pry</a>、<a href=\"https://profiles.wordpress.org/slimndap\">Jeroen Schmit</a>、<a href=\"https://profiles.wordpress.org/jerrysarcastic\">Jerry Bates (jerrysarcastic)</a>、<a href=\"https://profiles.wordpress.org/jesin\">Jesin A</a>、<a href=\"https://profiles.wordpress.org/jayjdk\">Jesper Johansen (jayjdk)</a>、<a href=\"https://profiles.wordpress.org/engelen\">Jesper van Engelen</a>、<a href=\"https://profiles.wordpress.org/jesper800\">Jesper van Engelen</a>、<a href=\"https://profiles.wordpress.org/jessepollak\">Jesse Pollak</a>、<a href=\"https://profiles.wordpress.org/jgadbois\">jgadbois</a>、<a href=\"https://profiles.wordpress.org/jartes\">Joan Artes</a>、<a href=\"https://profiles.wordpress.org/joedolson\">Joe Dolson</a>、<a href=\"https://profiles.wordpress.org/joehoyle\">Joe Hoyle</a>、<a href=\"https://profiles.wordpress.org/jkudish\">Joey Kudish</a>、<a href=\"https://profiles.wordpress.org/johnbillion\">John Blackbourn</a>、<a href=\"https://profiles.wordpress.org/johnjamesjacoby\">John James Jacoby</a>、<a href=\"https://profiles.wordpress.org/johnzanussi\">John Zanussi</a>、<a href=\"https://profiles.wordpress.org/duck_\">Jon Cave</a>、<a href=\"https://profiles.wordpress.org/jonnyauk\">jonnyauk</a>、<a href=\"https://profiles.wordpress.org/joostdevalk\">Joost de Valk</a>、<a href=\"https://profiles.wordpress.org/softmodeling\">Jordi Cabot</a>、<a href=\"https://profiles.wordpress.org/jjeaton\">Josh Eaton</a>、<a href=\"https://profiles.wordpress.org/tai\">JOTAKI Taisuke</a>、<a href=\"https://profiles.wordpress.org/juliobox\">Julio Potier</a>、<a href=\"https://profiles.wordpress.org/justinsainton\">Justin Sainton</a>、<a href=\"https://profiles.wordpress.org/jtsternberg\">Justin Sternberg</a>、<a href=\"https://profiles.wordpress.org/greenshady\">Justin Tadlock</a>、<a href=\"https://profiles.wordpress.org/kadamwhite\">K.Adam White</a>、<a href=\"https://profiles.wordpress.org/trepmal\">Kailey (trepmal)</a>、<a href=\"https://profiles.wordpress.org/ixkaito\">Kaito</a>、<a href=\"https://profiles.wordpress.org/kapeels\">kapeels</a>、<a href=\"https://profiles.wordpress.org/ryelle\">Kelly Dwan</a>、<a href=\"https://profiles.wordpress.org/kevinlangleyjr\">Kevin Langley</a>、<a href=\"https://profiles.wordpress.org/kworthington\">Kevin Worthington</a>、<a href=\"https://profiles.wordpress.org/kpdesign\">Kim Parsell</a>、<a href=\"https://profiles.wordpress.org/kwight\">Kirk Wight</a>、<a href=\"https://profiles.wordpress.org/kitchin\">kitchin</a>、<a href=\"https://profiles.wordpress.org/knutsp\">Knut Sparhell</a>、<a href=\"https://profiles.wordpress.org/kovshenin\">Konstantin Kovshenin</a>、<a href=\"https://profiles.wordpress.org/obenland\">Konstantin Obenland</a>、<a href=\"https://profiles.wordpress.org/kurtpayne\">Kurt Payne</a>、<a href=\"https://profiles.wordpress.org/lancewillett\">Lance Willett</a>、<a href=\"https://profiles.wordpress.org/leewillis77\">Lee Willis</a>、<a href=\"https://profiles.wordpress.org/lessbloat\">lessbloat</a>、<a href=\"https://profiles.wordpress.org/layotte\">Lew Ayotte</a>、<a href=\"https://profiles.wordpress.org/lritter\">lritter</a>、<a href=\"https://profiles.wordpress.org/lgedeon\">Luke Gedeon</a>、<a href=\"https://profiles.wordpress.org/m_i_n\">m_i_n</a>、<a href=\"https://profiles.wordpress.org/funkatronic\">Manny Fleurmond</a>、<a href=\"https://profiles.wordpress.org/targz-1\">Manuel Schmalstieg</a>、<a href=\"https://profiles.wordpress.org/clorith\">Marius Jensen (Clorith)</a>、<a href=\"https://profiles.wordpress.org/markjaquith\">Mark Jaquith</a>、<a href=\"https://profiles.wordpress.org/markoheijnen\">Marko Heijnen</a>、<a href=\"https://profiles.wordpress.org/mjbanks\">Matt Banks</a>、<a href=\"https://profiles.wordpress.org/sivel\">Matt Martz</a>、<a href=\"https://profiles.wordpress.org/matt\">Matt Mullenweg</a>、<a href=\"https://profiles.wordpress.org/mattwiebe\">Matt Wiebe</a>、<a href=\"https://profiles.wordpress.org/mboynes\">Matthew Boynes</a>、<a href=\"https://profiles.wordpress.org/mdbitz\">Matthew Denton</a>、<a href=\"https://profiles.wordpress.org/mattheweppelsheimer\">Matthew Eppelsheimer</a>、<a href=\"https://profiles.wordpress.org/mattheu\">Matthew Haines-Young</a>、<a href=\"https://profiles.wordpress.org/mattyrob\">mattyrob</a>、<a href=\"https://profiles.wordpress.org/meekyhwang\">meekyhwang</a>、<a href=\"https://profiles.wordpress.org/melchoyce\">Mel Choyce</a>、<a href=\"https://profiles.wordpress.org/midxcat\">mi_cat</a>、<a href=\"https://profiles.wordpress.org/mdawaffe\">Michael Adams (mdawaffe)</a>、<a href=\"https://profiles.wordpress.org/michalzuber\">michalzuber</a>、<a href=\"https://profiles.wordpress.org/mauteri\">Mike Auteri</a>、<a href=\"https://profiles.wordpress.org/mikehansenme\">Mike Hansen</a>、<a href=\"https://profiles.wordpress.org/mikejolley\">Mike Jolley</a>、<a href=\"https://profiles.wordpress.org/mikelittle\">Mike Little</a>、<a href=\"https://profiles.wordpress.org/mikemanger\">Mike Manger</a>、<a href=\"https://profiles.wordpress.org/dh-shredder\">Mike Schroder</a>、<a href=\"https://profiles.wordpress.org/mikeyarce\">Mikey Arce</a>、<a href=\"https://profiles.wordpress.org/dimadin\">Milan Dinic</a>、<a href=\"https://profiles.wordpress.org/mnelson4\">mnelson4</a>、<a href=\"https://profiles.wordpress.org/morganestes\">Morgan Estes</a>、<a href=\"https://profiles.wordpress.org/usermrpapa\">Mr Papa</a>、<a href=\"https://profiles.wordpress.org/mrmist\">mrmist</a>、<a href=\"https://profiles.wordpress.org/m_uysl\">Mustafa Uysal</a>、<a href=\"https://profiles.wordpress.org/muvimotv\">MuViMoTV</a>、<a href=\"https://profiles.wordpress.org/nabil_kadimi\">nabil_kadimi</a>、<a href=\"https://profiles.wordpress.org/namibia\">Namibia</a>、<a href=\"https://profiles.wordpress.org/alex-ye\">Nashwan Doaqan</a>、<a href=\"https://profiles.wordpress.org/nd987\">nd987</a>、<a href=\"https://profiles.wordpress.org/neil_pie\">Neil Pie</a>、<a href=\"https://profiles.wordpress.org/niallkennedy\">Niall Kennedy</a>、<a href=\"https://profiles.wordpress.org/celloexpressions\">Nick Halsey</a>、<a href=\"https://profiles.wordpress.org/nbachiyski\">Nikolay Bachiyski</a>、<a href=\"https://profiles.wordpress.org/schoenwaldnils\">Nils Schonwald</a>、<a href=\"https://profiles.wordpress.org/ninos-ego\">Ninos</a>、<a href=\"https://profiles.wordpress.org/nvwd\">Nowell VanHoesen</a>、<a href=\"https://profiles.wordpress.org/compute\">Patrick Hesselberg</a>、<a href=\"https://profiles.wordpress.org/pbearne\">Paul Bearne</a>、<a href=\"https://profiles.wordpress.org/pdclark\">Paul Clark</a>、<a href=\"https://profiles.wordpress.org/paulwilde\">Paul Wilde</a>、<a href=\"https://profiles.wordpress.org/paulschreiber\">paulschreiber</a>、<a href=\"https://profiles.wordpress.org/pavelevap\">pavelevap</a>、<a href=\"https://profiles.wordpress.org/westi\">Peter Westwood</a>、<a href=\"https://profiles.wordpress.org/philiparthurmoore\">Philip Arthur Moore</a>、<a href=\"https://profiles.wordpress.org/philipjohn\">Philip John</a>、<a href=\"https://profiles.wordpress.org/senlin\">Piet</a>、<a href=\"https://profiles.wordpress.org/psoluch\">Piotr Soluch</a>、<a href=\"https://profiles.wordpress.org/mordauk\">Pippin Williamson</a>、<a href=\"https://profiles.wordpress.org/purzlbaum\">purzlbaum</a>、<a href=\"https://profiles.wordpress.org/rachelbaker\">Rachel Baker</a>、<a href=\"https://profiles.wordpress.org/rclations\">RC Lations</a>、<a href=\"https://profiles.wordpress.org/iamfriendly\">Richard Tape</a>、<a href=\"https://profiles.wordpress.org/rickalee\">Ricky Lee Whittemore</a>、<a href=\"https://profiles.wordpress.org/rob1n\">rob1n</a>、<a href=\"https://profiles.wordpress.org/miqrogroove\">Robert Chapin</a>、<a href=\"https://profiles.wordpress.org/rdall\">Robert Dall</a>、<a href=\"https://profiles.wordpress.org/harmr\">RobertHarm</a>、<a href=\"https://profiles.wordpress.org/rohan013\">Rohan Rawat</a>、<a href=\"https://profiles.wordpress.org/rhurling\">Rouven Hurling</a>、<a href=\"https://profiles.wordpress.org/ruudjoyo\">Ruud Laan</a>、<a href=\"https://profiles.wordpress.org/ryan\">Ryan Boren</a>、<a href=\"https://profiles.wordpress.org/rmccue\">Ryan McCue</a>、<a href=\"https://profiles.wordpress.org/sammybeats\">Sam Brodie</a>、<a href=\"https://profiles.wordpress.org/otto42\">Samuel Wood (Otto)</a>、<a href=\"https://profiles.wordpress.org/sathishn\">sathishn</a>、<a href=\"https://profiles.wordpress.org/coffee2code\">Scott Reilly</a>、<a href=\"https://profiles.wordpress.org/wonderboymusic\">Scott Taylor</a>、<a href=\"https://profiles.wordpress.org/greglone\">ScreenfeedFr</a>、<a href=\"https://profiles.wordpress.org/scribu\">scribu</a>、<a href=\"https://profiles.wordpress.org/seanchayes\">Sean Hayes</a>、<a href=\"https://profiles.wordpress.org/nessworthy\">Sean Nessworthy</a>、<a href=\"https://profiles.wordpress.org/sergejmueller\">Sergej Muller</a>、<a href=\"https://profiles.wordpress.org/sergeybiryukov\">Sergey Biryukov</a>、<a href=\"https://profiles.wordpress.org/shanebp\">shanebp</a>、<a href=\"https://profiles.wordpress.org/shaunandrews\">Shaun Andrews</a>、<a href=\"https://profiles.wordpress.org/simonwheatley\">Simon Wheatley</a>、<a href=\"https://profiles.wordpress.org/simonp303\">simonp303</a>、<a href=\"https://profiles.wordpress.org/slobodanmanic\">Slobodan Manic</a>、<a href=\"https://profiles.wordpress.org/solarissmoke\">solarissmoke</a>、<a href=\"https://profiles.wordpress.org/sphoid\">sphoid</a>、<a href=\"https://profiles.wordpress.org/stephdau\">Stephane Daury</a>、<a href=\"https://profiles.wordpress.org/netweb\">Stephen Edgar</a>、<a href=\"https://profiles.wordpress.org/stompweb\">Steven Jones</a>、<a href=\"https://profiles.wordpress.org/strangerstudios\">strangerstudios</a>、<a href=\"https://profiles.wordpress.org/5um17\">Sumit Singh</a>、<a href=\"https://profiles.wordpress.org/sumobi\">sumobi</a>、<a href=\"https://profiles.wordpress.org/t4k1s\">t4k1s</a>、<a href=\"https://profiles.wordpress.org/iamtakashi\">Takashi Irie</a>、<a href=\"https://profiles.wordpress.org/taylorde\">Taylor Dewey</a>、<a href=\"https://profiles.wordpress.org/thomasvanderbeek\">Thomas van der Beek</a>、<a href=\"https://profiles.wordpress.org/tillkruess\">Till Kruss</a>、<a href=\"https://profiles.wordpress.org/codenameeli\">Tim &#8216;Eli&#8217; Dalbey</a>、<a href=\"https://profiles.wordpress.org/tobiasbg\">TobiasBg</a>、<a href=\"https://profiles.wordpress.org/tjnowell\">Tom J Nowell</a>、<a href=\"https://profiles.wordpress.org/willmot\">Tom Willmot</a>、<a href=\"https://profiles.wordpress.org/topher1kenobe\">Topher</a>、<a href=\"https://profiles.wordpress.org/torresga\">torresga</a>、<a href=\"https://profiles.wordpress.org/liljimmi\">Tracy Levesque</a>、<a href=\"https://profiles.wordpress.org/wpsmith\">Travis Smith</a>、<a href=\"https://profiles.wordpress.org/treyhunner\">treyhunner</a>、<a href=\"https://profiles.wordpress.org/umeshsingla\">Umesh Kumar</a>、<a href=\"https://profiles.wordpress.org/vinod-dalvi\">Vinod Dalvi</a>、<a href=\"https://profiles.wordpress.org/vlajos\">vlajos</a>、<a href=\"https://profiles.wordpress.org/voldemortensen\">voldemortensen</a>、<a href=\"https://profiles.wordpress.org/westonruter\">Weston Ruter</a>、<a href=\"https://profiles.wordpress.org/winterdev\">winterDev</a>、<a href=\"https://profiles.wordpress.org/wojtekszkutnik\">Wojtek Szkutnik</a>、<a href=\"https://profiles.wordpress.org/yoavf\">Yoav Farhi</a>、<a href=\"https://profiles.wordpress.org/katzwebdesign\">Zack Katz</a>、<a href=\"https://profiles.wordpress.org/tollmanz\">Zack Tollman</a>和<a href=\"https://profiles.wordpress.org/zoerooney\">Zoe Rooney</a>。也感谢制作发行视频<a href=\"http://michaelpick.wordpress.com/\">Michael Pick</a>，与制作音乐的Helen和<a href=\"http://adriansandi.com/\">Adrián Sandí</a>。</p>\n<p>如果您想帮忙，请查阅<a href=\"https://make.wordpress.org/\">Make WordPress</a>和我们的<a href=\"https://make.wordpress.org/core/\">核心开发博客</a>。感谢选择WordPress，我们4.1见！\n</div>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:47:\"https://cn.wordpress.org/2014/09/05/benny/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:2:\"41\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}}}s:27:\"http://www.w3.org/2005/Atom\";a:1:{s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:0:\"\";s:7:\"attribs\";a:1:{s:0:\"\";a:3:{s:4:\"href\";s:30:\"https://cn.wordpress.org/feed/\";s:3:\"rel\";s:4:\"self\";s:4:\"type\";s:19:\"application/rss+xml\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:44:\"http://purl.org/rss/1.0/modules/syndication/\";a:2:{s:12:\"updatePeriod\";a:1:{i:0;a:5:{s:4:\"data\";s:6:\"hourly\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:15:\"updateFrequency\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"1\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}}}}}}}}s:4:\"type\";i:128;s:7:\"headers\";O:42:\"Requests_Utility_CaseInsensitiveDictionary\":1:{s:7:\"\0*\0data\";a:8:{s:6:\"server\";s:5:\"nginx\";s:4:\"date\";s:29:\"Mon, 20 Nov 2017 02:10:17 GMT\";s:12:\"content-type\";s:34:\"application/rss+xml; charset=UTF-8\";s:6:\"x-olaf\";s:3:\"⛄\";s:13:\"last-modified\";s:29:\"Thu, 16 Nov 2017 02:15:15 GMT\";s:4:\"link\";s:61:\"<https://cn.wordpress.org/wp-json/>; rel=\"https://api.w.org/\"\";s:15:\"x-frame-options\";s:10:\"SAMEORIGIN\";s:4:\"x-nc\";s:11:\"HIT lax 250\";}}s:5:\"build\";s:14:\"20170811130708\";}','no'),(20537,'_transient_timeout_feed_mod_7d1d7866a17d17cf5f79e1f075b87a31','1511187018','no'),(20538,'_transient_feed_mod_7d1d7866a17d17cf5f79e1f075b87a31','1511143818','no'),(20539,'_transient_timeout_feed_d117b5738fbd35bd8c0391cda1f2b5d9','1511187020','no'),(20540,'_transient_feed_d117b5738fbd35bd8c0391cda1f2b5d9','a:4:{s:5:\"child\";a:1:{s:0:\"\";a:1:{s:3:\"rss\";a:1:{i:0;a:6:{s:4:\"data\";s:3:\"\n\n\n\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:7:\"version\";s:3:\"2.0\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:1:{s:0:\"\";a:1:{s:7:\"channel\";a:1:{i:0;a:6:{s:4:\"data\";s:61:\"\n	\n	\n	\n	\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:1:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:16:\"WordPress Planet\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://planet.wordpress.org/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"language\";a:1:{i:0;a:5:{s:4:\"data\";s:2:\"en\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:47:\"WordPress Planet - http://planet.wordpress.org/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"item\";a:50:{i:0;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:105:\"WPTavern: GitHub Launches Security Alerts for JavaScript and Ruby Projects, Python Support Coming in 2018\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=76663\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:115:\"https://wptavern.com/github-launches-security-alerts-for-javascript-and-ruby-projects-python-support-coming-in-2018\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:1873:\"<p><a href=\"https://i2.wp.com/wptavern.com/wp-content/uploads/2015/04/github-octocat.jpg?ssl=1\"><img /></a></p>\n<p>Last month <a href=\"https://wptavern.com/github-launches-new-dependency-graph-feature-with-security-alerts-coming-soon\" rel=\"noopener\" target=\"_blank\">GitHub launched its Dependency Graph feature</a> that tracks a repository&#8217;s dependencies and sub-dependencies under the Insights tab. This week the company rolled out an expansion of the feature and will now <a href=\"https://github.com/blog/2470-introducing-security-alerts-on-github\" rel=\"noopener\" target=\"_blank\">identify known vulnerabilities and send notifications</a> with suggested fixes from the GitHub community.</p>\n<p>Dependency graphs and security alerts are automatically enabled for public repositories, provided the repository owner has defined the dependencies in <a href=\"https://help.github.com/articles/listing-the-packages-that-a-repository-depends-on\" rel=\"noopener\" target=\"_blank\">one of the supported manifest file types</a>, such as package.json or Gemfile. (Private repo owners have to opt in.) The vulnerability alerts are not public &#8211; they will only be shown to those who have been granted access to the vulnerability alerts.</p>\n<p><a href=\"https://i1.wp.com/wptavern.com/wp-content/uploads/2017/11/github-dependency-vulnerability.png?ssl=1\"><img /></a></p>\n<p>GitHub uses data from the <a href=\"https://nvd.nist.gov/\" rel=\"noopener\" target=\"_blank\">National Vulnerability Database</a> to alert repository owners about publicly disclosed vulnerabilities that have <a href=\"https://cve.mitre.org/\" rel=\"noopener\" target=\"_blank\">CVE IDs</a>. Vulnerability detection is currently limited to JavaScript and Ruby projects but Python support is next on the roadmap for 2018. PHP, which is a bet less widely used in projects on GitHub, is likely further down the list.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sat, 18 Nov 2017 00:25:19 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:1;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:60:\"WPTavern: WordCamp Europe 2018 Speaker Applications Now Open\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=76608\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:71:\"https://wptavern.com/wordcamp-europe-2018-speaker-applications-now-open\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3019:\"<p>WordCamp Europe 2018 has opened the <a href=\"https://2018.europe.wordcamp.org/2017/11/15/are-you-ready-to-speak-at-the-largest-wordpress-event-in-europe/\" rel=\"noopener\" target=\"_blank\">call for speakers</a> and will be accepting applications through January 15. The organizing team recommends that speakers already have some experience ahead of applying to speak at the largest WordPress event in Europe, but a dedicated Content Team will also be available with resources for helping speakers create a successful presentation.</p>\n<p>The 2017 event received a total of 235 speaker applications and 43 were selected for the main event. Organizers plan to stick to the same format and are calling for 40-minute talks (30 min + 10 min Q&amp;A) as well as 10-minute lightning talks. This year the event will experiment with hosting community workshops and organizers plan to open a separate call for workshop leaders next week.</p>\n<p>The Content Team put out a specific call for more technical talks at the 2018 event after a <a href=\"https://2018.europe.wordcamp.org/2017/11/10/how-your-feedback-will-help-us-shape-the-next-wordcamp-europe/\" rel=\"noopener\" target=\"_blank\">community survey</a> showed that more developer-oriented talks are what the audience is looking for. More than half of those surveyed identified themselves as developers (54%), with business owners (12%) the next largest demographic.</p>\n<p><a href=\"https://i0.wp.com/wptavern.com/wp-content/uploads/2017/11/Screen-Shot-2017-11-17-at-11.44.21-AM.png?ssl=1\"><img /></a></p>\n<p>The survey also showed that 37% of respondents have been working with WordPress for more than 9 years and roughly 90% of attendees have been using WordPress for 4-9+ years. Advanced development was the most highly requested topic for presentations, selected by 53% of respondents, followed by design (45%).</p>\n<p><a href=\"https://i2.wp.com/wptavern.com/wp-content/uploads/2017/11/Screen-Shot-2017-11-17-at-11.54.06-AM.png?ssl=1\"><img /></a></p>\n<p>The survey results offer some insight about which topics might fare well at WCEU in 2018. Organizers have also compiled an extensive <a href=\"https://apply.wp-europe.org/ideas\" rel=\"noopener\" target=\"_blank\">list of ideas and topics</a> to inspire speaker applicants.</p>\n<p>A batch of 1,000 Early Bird tickets recently <a href=\"https://wptavern.com/wordcamp-europe-2018-early-bird-tickets-now-on-sale\" rel=\"noopener\" target=\"_blank\">went on sale</a> and there are still 680 available. Attendees who purchase a ticket before December 31, 2017, will receive a limited-edition swag item. The organizing team plans to release tickets in batches, as in previous years, but will not be setting specific expectations on sales this year, according to PR representative Letizia Barbi. The Sava Center venue, an international congress and cultural center, is the largest audience hall in Serbia and will accommodate all who want to attend WCEU 2018. Barbi said it should also scale down nicely in case of a smaller turn out.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 17 Nov 2017 19:19:30 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:2;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:99:\"WPTavern: WooCommerce Explores the Possibilities and Challenges for E-Commerce in the Gutenberg Era\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=76597\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:110:\"https://wptavern.com/woocommerce-explores-the-possibilities-and-challenges-for-e-commerce-in-the-gutenberg-era\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:4350:\"<p>The next release of WordPress (5.0) will introduce the new Gutenberg editor and contributors plan to keep it rolling towards the eventual goal of providing a full site building experience. Nearly every WordPress theme and plugin developer will be impacted by the change and many are starting to look ahead to how their products may interact with Gutenberg in the future.</p>\n<p>What will e-commerce look like in the Gutenberg era? The WooCommerce design team has published <a href=\"https://woocommerce.com/2017/11/woocommerce-gutenberg/\" rel=\"noopener\" target=\"_blank\">a preview of some of their &#8220;Wootenberg&#8221; experiments</a>, along with a gif demonstrating what a block-based editing experience may look like in the context of working with products. The team sees a lot of potential for putting the power of visual product editing into the hands of users.</p>\n<p><a href=\"https://i0.wp.com/wptavern.com/wp-content/uploads/2017/11/wootenberg.gif?ssl=1\"><img /></a></p>\n<p>The example shows a quick exploration of page layout with product blocks and the team also posted an idea of what basic product authoring may look like with a predefined product template that includes the featured image, product title, description, and price as new Gutenberg blocks. But will it be possible to have complex product creation fit into a block-based editor? The WooCommerce team admits in the post that they don&#8217;t yet know how this will work.</p>\n<p>&#8220;One thing that isn’t yet 100% clear is how complex plugins like WooCommerce will work with Gutenberg,&#8221; Automattic designer/developer James Koster said. &#8220;A simple product with a description, a price, and a category is one thing. But a product with variations, for each of which you want to upload a different image, and need to manage/track stock is quite another. Imagining a WYSIWYG editing experience for that kind of data is a little fuzzier.&#8221;</p>\n<p>Koster referenced Gutenberg&#8217;s newly merged support for meta boxes, the first step in making product authoring possible. However, the Gutenberg team is still experimenting and isn&#8217;t yet set on a solution for implementing meta boxes.</p>\n<p>&#8220;How this works with WooCommerce in the long term is unclear,&#8221; Koster said. &#8220;But you can rest assured it’s something we’ll be dedicating more time to investigating as WordPress approaches the 5.0 release.&#8221; Koster concludes the post by asking readers if visual product editing, with the flexibility to rearrange product/shop layouts, is something that interests them.</p>\n<p>&#8220;If there’s one thing that WooCommerce should perhaps learn from Shopify’s rapid growth, it’s that many &#8216;would-be&#8217; shop owners don’t care to spend hours upon hours tweaking the layout of their shop, and that pre-built easy-to-use software that looks good and feels good, but can still be extended in complex ways, is what attracts many users,&#8221; Jesse Nickles commented on the post. &#8220;While this may be the underlying goal of Gutenberg, it perhaps doesn’t crossover clearly to the e-commerce world.&#8221;</p>\n<p>Koster said he agrees that users don&#8217;t always need visual editing experiences and that simple things like price changes should be quick and painless.</p>\n<p>&#8220;How we present data-driven editing alongside the Gutenberg experience will ultimately determine the success of the project from a WooCommerce perspective,&#8221; Koster said.</p>\n<p>Support for meta boxes is one the most challenging aspects of the Gutenberg project that the team has yet to solve. Exploring the possibilities of flexible page layouts for products is exciting, but even the WooCommerce team is left wondering how this is all going to work with more complex CMS data. Smaller product teams without the collective knowledge and resources of WooCommerce may have a more difficult time finding the bandwidth to experiment and rebuild their products in time for WordPress 5.0.</p>\n<p>The WooCommerce team invites any users interested in Gutenberg-related UX changes to join the plugin&#8217;s <a href=\"https://woocommerce.com/design-feedback/\" rel=\"noopener\" target=\"_blank\">design feedback group</a>, as they continue to explore how the new editor will work in the context of complex e-commerce product creation and display.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 17 Nov 2017 04:30:43 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:3;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:113:\"WPTavern: GDPR for WordPress Project Gains Momentum, Proposal Receives Positive Response from Developer Community\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=76484\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:123:\"https://wptavern.com/gdpr-for-wordpress-project-gains-momentum-proposal-receives-positive-response-from-developer-community\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:5743:\"<p><a href=\"https://i2.wp.com/wptavern.com/wp-content/uploads/2017/10/WP-GDPR-Compliance.png?ssl=1\"><img /></a></p>\n<p>Community feedback on the new <a href=\"https://www.gdprwp.com\" rel=\"noopener\" target=\"_blank\">GDPR for WordPress project</a>, created by WordCamp Denmark organizer Kåre Mulvad Steffensen and WP Pusher creator Peter Suhm, has started rolling in after the two launched a survey for developers. The project aims to provide an industry standard for getting plugins compliant with EU General Data Protection Regulation (GDPR) legislation ahead of the May 2018 deadline.</p>\n<p>Steffensen <a href=\"https://www.gdprwp.com/status-the-gdpr-interface/\" rel=\"noopener\" target=\"_blank\">published</a> some initial results of the survey after having it open for two weeks. So far, 90% of respondents have answered that they would consider implementing a GDPR &#8220;file&#8221; types solution for their plugins if a standard was available. Only 4.9% of the 40 developers who responded said they have a plan for making their plugins GDPR compliant and 43.9% said they do not currently have a plan. The remaining 24.4% were developers of plugins that do not handle personal data.</p>\n<p>&#8220;Our talks with Paul Sieminski from <a href=\"https://automattic.com/\" rel=\"noopener\" target=\"_blank\">Automattic</a> and Dovy Paukstys from the <a href=\"https://reduxframework.com/\" rel=\"noopener\" target=\"_blank\">Redux options framework</a> have reassured us that we still do have a need for a GDPR structure which can help the community establish a basis for handling GDPR compliance,&#8221; Steffensen said.</p>\n<p>Steffensen and Suhm created a <a href=\"https://github.com/GDPRWP/standard\" rel=\"noopener\" target=\"_blank\">GitHub repository</a> where they have outlined their proposal for a PHP object interface that plugin developers could add to their codebases as a standard way of indicating how their plugins work with personal data.</p>\n<p>&#8220;The nature of such an interface puts some responsibility in the hands of the developer to identify any place personal data is stored,&#8221; Steffensen said. &#8220;What kind of data it is, and for what purpose as well as how it should be handled upon deletion. The Interface approach will allow a community-wide adoption, without setting limitations on how plugin developers choose to work with their data – something we obviously can’t control.&#8221;</p>\n<p>The idea is that plugin developers could then build other tools on top of this framework using specific functions that correspond to GDPR requirements, such as functions that allow users to access their data, implement the right to be forgotten, report data breaches, and delete and anonymize data. Developers could also build plugins that offer a plain language description of what personal data a plugin collects and how it is handled.</p>\n<p>In speaking with Dovy Paukstys on how this could work with Redux, Steffensen said the options framework may be able to facilitate compliance for the 500,000+ sites where it is active and the developers who use it to build plugins.</p>\n<p>&#8220;Dovy from Redux has a coder&#8217;s view on this,&#8221; Steffensen said. &#8220;Our object interface (PHP) would be something his framework could provide an easy way to utilize for the many developers using Redux.  The redux users (developers) could essentially do this themselves also, but since Redux is a framework it makes sense to see if they can build something that will make it near instant for developers to provide compliance for the GDPR.&#8221;</p>\n<p>Steffensen said the team is aware that the first version of the interface will not render plugins, and by extension their sites, instantly compliant. The interface they are proposing is not one that could be held legally accountable, but the goal is to make it possible for developers to build accountable systems on top of it.</p>\n<h3>GDPR for WordPress Project Founders Consider Accepting Sponsorships</h3>\n<p>With 189 <a href=\"http://www.gdprcountdownclock.com/\" rel=\"noopener\" target=\"_blank\">days remaining before the GDPR goes into effect</a>, the team will need to work quickly to make a solution available with enough time for interested developers to incorporate it into their plugins. They have not yet set up a way to accept donations but are considering it.</p>\n<p>&#8220;We aren&#8217;t actively seeking funding, but would love any funds that would help us allocate the time needed to keep the momentum going,&#8221; Steffensen said. &#8220;We&#8217;re lucky that the <a href=\"https://wptavern.com/gdpr-for-wordpress-project-seeks-to-provide-a-standard-for-plugin-compliance\" rel=\"noopener\" target=\"_blank\">WP Tavern article</a> brought attention to our GDPR approach and have caught the eyes of some of the key players in the ecosystem. One such company is Mailpoet that was the first to raise the idea of sponsoring our work.&#8221;</p>\n<p>Steffensen works at <a href=\"http://Peytz.dk\" rel=\"noopener\" target=\"_blank\">Peytz.dk</a>, a Danish WordPress agency that wants to support the community and has allocated some of his time to work on the project. He said any funding/donations they receive would be spent on pushing the roadmap forward, investing time in coding, and possibly seeking further advice from people who they cannot expect to be in it for free.</p>\n<p>In addition to looking at ways to receive donations, the team plans to keep the survey open for developers for awhile longer to try to make more connections in the community. Steffensen said they hope respondents will help them gain insight on the developer community&#8217;s readiness and also enable them to reach out to any plugin owners who could play a key role in a wider adoption.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 16 Nov 2017 20:58:22 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:4;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:58:\"WPTavern: Consultants Are WordPress’ Boots on the Ground\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=76619\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:66:\"https://wptavern.com/consultants-are-wordpress-boots-on-the-ground\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:1173:\"<blockquote><p>A business can’t survive without strong sales &amp; customer service, two competencies that are arguably the lifeblood of a company.</p>\n<p>Many of you reading this fill that exact gap for the open source WordPress project. I don’t mean this as a slight to the thousands of wonderful people who build the software, document it, and support it in the forums, but that consultants (doing it right or wrong) are also fueling this locomotive too.</p>\n<p>There are no official sales or customer service channels at WordPress.org and us consultants bear the brunt of it — for better or worse — and that’s where our job comes in. Just as you trust a core contributor to spot-check her code and ensure that we’ve <em>sanitized all the things! </em></p>\n<p><em>Consultants are the boots on the ground, and as you’ll see below in my feedback section, represent a disproportionate ratio of launching many more websites than an individual website owner. &#8211; Matt Medeiros<br />\n</em></p></blockquote>\n<p>From <a href=\"https://mattreport.com/growth-of-wordpress/\">The blue-collar WordPress worker and the 2,500+ websites built to grow the CMS</a>.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 16 Nov 2017 20:07:32 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Jeff Chandler\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:5;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:90:\"WPTavern: WPWeekly Episode 294 – HeroPress, Community, and WinningWP With Topher DeRosia\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:58:\"https://wptavern.com?p=76578&preview=true&preview_id=76578\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:95:\"https://wptavern.com/wpweekly-episode-294-heropress-community-and-winningwp-with-topher-derosia\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:2958:\"<p>In this episode, <a href=\"https://jjj.blog/\">John James Jacoby</a> and I are joined by <a href=\"https://topher1kenobe.com/\">Topher DeRosia</a>, founder of <a href=\"https://heropress.com/\">HeroPress</a>. DeRosia provides an update on HeroPress and explains his new role creating <a href=\"https://www.youtube.com/channel/UCt8Sa48zWN_WcordE7TaUBg\">WordPress training videos</a> for <a href=\"https://winningwp.com/\">WinningWP</a>. Jacoby and I discussed the news of the week including, Press This removed in WordPress 4.9, Meta box support in Gutenberg, and WP-SpamShield removed from the directory.</p>\n<p>Near the end of the show, we discuss whether or not consultants, agencies, and site builders have been left out of the discussion and not factored into WordPress&#8217; growth over the years.</p>\n<h2>Stories Discussed:</h2>\n<p><a href=\"https://wptavern.com/press-this-removed-from-wordpress-4-9-in-favor-of-a-plugin\">Press This Removed from WordPress 4.9 in Favor of a Plugin</a><br />\n<a href=\"https://wptavern.com/bianca-welds-awarded-kim-parsell-travel-scholarship\">Bianca Welds Awarded Kim Parsell Travel Scholarship</a><br />\n<a href=\"https://wptavern.com/wordcamp-europe-2018-early-bird-tickets-now-on-sale\">WordCamp Europe 2018 Early Bird Tickets Now on Sale</a><br />\n<a href=\"https://wptavern.com/gutenberg-contributors-explore-alternative-to-using-iframes-for-meta-boxes\">Gutenberg Contributors Explore Alternative to Using iframes for Meta Boxes</a><br />\n<a href=\"https://wptavern.com/wp-spamshield-plugin-removed-from-wordpress-org-author-plans-to-pull-all-plugins-from-the-directory\">WP-SpamShield Plugin Removed from WordPress.org, Author Plans to Pull All Plugins from the Directory</a><br />\n<a href=\"https://mattreport.com/growth-of-wordpress/?utm_content=bufferee910&utm_medium=social&utm_source=twitter.com&utm_campaign=buffer\">The blue-collar WordPress worker and the 2,500+ websites built to grow the CMS</a></p>\n<h2>Picks of the Week:</h2>\n<p><a href=\"https://wptavern.com/how-to-whitelist-comments-in-wordpress\">How to Whitelist Comments in WordPress</a></p>\n<p><a href=\"https://wordpress.org/plugins/dark-mode/\">Dark Mode</a> is an experimental feature plugin that darkens the colors of the WordPress backend.</p>\n<h2>WPWeekly Meta:</h2>\n<p><strong>Next Episode:</strong> Wednesday, November 22nd 3:00 P.M. Eastern</p>\n<p><strong>Subscribe To WPWeekly Via Itunes: </strong><a href=\"https://itunes.apple.com/us/podcast/wordpress-weekly/id694849738\" target=\"_blank\" rel=\"noopener\">Click here to subscribe</a></p>\n<p><strong>Subscribe To WPWeekly Via RSS: </strong><a href=\"https://wptavern.com/feed/podcast\" target=\"_blank\" rel=\"noopener\">Click here to subscribe</a></p>\n<p><strong>Subscribe To WPWeekly Via Stitcher Radio: </strong><a href=\"http://www.stitcher.com/podcast/wordpress-weekly-podcast?refid=stpr\" target=\"_blank\" rel=\"noopener\">Click here to subscribe</a></p>\n<p><strong>Listen To Episode #294:</strong><br />\n</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 16 Nov 2017 03:13:49 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Jeff Chandler\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:6;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:130:\"WPTavern: WordPress 4.9 Released with Major Improvements to Customizer Workflow, Updated Code Editors, and New Core Gallery Widget\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=76391\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:139:\"https://wptavern.com/wordpress-4-9-released-with-major-improvements-to-customizer-workflow-updated-code-editors-and-new-core-gallery-widget\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:5359:\"<p><a href=\"https://wordpress.org/news/2017/11/tipton/\" rel=\"noopener\" target=\"_blank\">WordPress 4.9</a> &#8220;Tipton&#8221; was released today, named for Oklahoma-born jazz musician <a href=\"https://en.wikipedia.org/wiki/Billy_Tipton\" rel=\"noopener\" target=\"_blank\">William Lee Tipton</a>, a gifted pianist and saxophonist. This update introduces major improvements to the design and collaboration workflow in the Customizer, improves WordPress&#8217; built-in code editor, and enhances core text and media widgets.</p>\n<h4>Draft, Schedule, and Preview Changes in the Customizer</h4>\n<p>Prior to 4.9, users could get a live preview of their sites in the Customizer but any changes they made would need to be saved immediately or discarded. This update makes it possible to draft and schedule changes in the Customizer, and even share a preview link to collaborate on changes before making them live. Users can now stage content, such as new pages, a new set of widgets, a different combination of menu items, and schedule it all to publish at a future date.</p>\n<p><a href=\"https://i2.wp.com/wptavern.com/wp-content/uploads/2017/11/customizer-publish-settings-schedule-e1510636315310.png?ssl=1\"><img /></a></p>\n<p>This release also brings the ability to search, browse, and preview themes directly in the Customizer. The search interface includes filters for subject, features, and layout, just like the ones on the &#8220;Add Themes&#8221; screen in wp-admin. It does not yet include the featured, popular, latest, or favorites tabs, so users will need to navigate back to the admin if they want to browse those categories.</p>\n<p><a href=\"https://i1.wp.com/wptavern.com/wp-content/uploads/2017/11/theme-browser-customizer.png?ssl=1\"><img /></a></p>\n<p>The menu creation process has also been updated in the Customizer to be less confusing with a rethink of the UI and revised copy.</p>\n<h4>Syntax Highlighting and Error Checking Added to the Code Editors</h4>\n<p>WordPress 4.9 brings syntax highlighting, linting, and auto-completion to the built-in code editors by incorporating the <a href=\"https://codemirror.net/\">CodeMirror</a> library. These long-awaited improvements are now available in the theme and plugin editors as well as the custom HTML widget and additional CSS box in the Customizer. The feature comes with <a href=\"https://wptavern.com/wordpress-4-9-protects-users-from-fatal-errors-created-in-the-theme-and-plugin-editors\" rel=\"noopener\" target=\"_blank\">prominent warnings</a> about directly editing themes and plugins and protection against saving code that would cause a fatal error.</p>\n<p><a href=\"https://i1.wp.com/wptavern.com/wp-content/uploads/2017/11/editor-css-error-e1510640427941.png?ssl=1\"><img /></a></p>\n<h4>New Core Gallery Widget and Support for Shortcodes and Embedded Media in the Text Widget</h4>\n<p><a href=\"https://i0.wp.com/wptavern.com/wp-content/uploads/2017/09/core-gallery-widget.png?ssl=1\"><img /></a><a href=\"https://wptavern.com/new-core-gallery-widget-targeted-for-wordpress-4-9\" rel=\"noopener\" target=\"_blank\">WordPress 4.9 adds a new gallery widget</a> to the collection of core media widgets (audio, image, and video) that were introduced in 4.8. It brings the same gallery-creation features to widgets that have long been available in the post and page editors.</p>\n<p>These incremental changes will help users get ready for Gutenberg&#8217;s block-based interface. The plan is to eventually transition widgets over to blocks after Gutenberg is in core and the plugin already has support for a gallery block, as well as a Custom HTML block.</p>\n<p>As of 4.9, users can now embed media in the Text widget, including images, video, and audio by clicking the &#8220;Add Media&#8221; button. In order to make this possible, WordPress contributors also needed to <a href=\"https://wptavern.com/wordpress-4-9-will-support-shortcodes-and-embedded-media-in-the-text-widget\" rel=\"noopener\" target=\"_blank\">add shortcode support to widgets</a>, a feature that users have requested for nearly a decade. With this now built into core, hundreds of thousands of WordPress sites will no longer need additional code from plugins and themes to use shortcodes in widgets.</p>\n<p>Widgets have also been improved to offer a better migration experience with updated logic for mapping widgets between two themes’ widget areas.</p>\n<h4>On Towards Gutenberg</h4>\n<p>WordPress 4.9 also includes a notice in the about.php page of the admin, inviting users to help test or contribute to Gutenberg. It is the first time a feature plugin has been highlighted so prominently on the page users see after they update to the latest version.</p>\n<p><a href=\"https://i2.wp.com/wptavern.com/wp-content/uploads/2017/11/Screen-Shot-2017-11-15-at-4.33.01-PM-e1510785254925.png?ssl=1\"><img /></a></p>\n<p>The Gutenberg project has been getting a lot of attention over the past few months as the WordPress community looks ahead to the 5.0 release that will introduce the new editor to the world. Meanwhile, contributors to 4.9 have been working in tandem to make significant improvements to existing features, enabling users to do more with widgets and overall site design than ever before. This release was led by Weston Ruter and Mel Choyce with help from 443 contributors, 42% (185) of them contributing to WordPress for the first time.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 16 Nov 2017 01:24:33 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:7;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"Dev Blog: WordPress 4.9 “Tipton”\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"https://wordpress.org/news/?p=4968\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"https://wordpress.org/news/2017/11/tipton/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:38602:\"<h2>Major Customizer Improvements, Code Error Checking, and More!&nbsp;?</h2>\n<img src=\"https://i1.wp.com/wordpress.org/news/files/2017/11/banner.png?fit=2400%2C1200&ssl=1\" alt=\"\" />\n<p>Version 4.9 of WordPress, named “Tipton” in honor of jazz musician and band leader Billy Tipton, is available for download or update in your WordPress dashboard. New features in 4.9 will smooth your design workflow and keep you safe from coding errors.</p>\n<p>Featuring design drafts, scheduling, and locking, along with preview links, the Customizer workflow improves collaboration for content creators. What’s more, code syntax highlighting and error checking will make for a clean and smooth site building experience. Finally, if all that wasn’t pretty great, we’ve got an awesome new Gallery widget and improvements to theme browsing and switching.</p>\n<hr class=\"wp-block-separator\" />\n<h2>Customizer Workflow Improved </h2>\n<img src=\"https://i0.wp.com/wordpress.org/news/files/2017/11/customizer-workflow-improved-small.png?w=632&ssl=1\" alt=\"\" />\n<h3>Draft and Schedule Site Design Customizations</h3>\n<p>Yes, you read that right. Just like you can draft and revise posts and schedule them to go live on the date and time you choose, you can now tinker with your site’s design and schedule those design changes to go live as you please.</p>\n<h3>Collaborate with Design Preview Links</h3>\n<p>Need to get some feedback on proposed site design changes? WordPress 4.9 gives you a preview link you can send to colleagues and customers so that you can collect and integrate feedback before you schedule the changes to go live. Can we say collaboration++?</p>\n<h3>Design Locking Guards Your Changes</h3>\n<p>Ever encounter a scenario where two designers walk into a project and designer A overrides designer B’s beautiful changes? WordPress 4.9’s design lock feature (similar to post locking) secures your draft design so that no one can make changes to it or erase all your hard work.</p>\n<h3>A Prompt to Protect Your Work</h3>\n<p>Were you lured away from your desk before you saved your new draft design? Fear not, when you return, WordPress 4.9 will politely ask whether or not you’d like to save your unsaved changes.</p>\n<hr class=\"wp-block-separator\" />\n<h2>Coding Enhancements</h2>\n<img src=\"https://i2.wp.com/wordpress.org/news/files/2017/11/coding-enhancements-small.png?w=632&ssl=1\" alt=\"\" />\n<h3>Syntax Highlighting and Error Checking? Yes, Please!</h3>\n<p>You’ve got a display problem but can’t quite figure out exactly what went wrong in the CSS you lovingly wrote. With syntax highlighting and error checking for CSS editing and the Custom HTML widget introduced in WordPress 4.8.1, you’ll pinpoint coding errors quickly. Practically guaranteed to help you scan code more easily, and suss out &amp; fix code errors quickly.</p>\n<h3>Sandbox for Safety</h3>\n<p>The dreaded white screen. You’ll avoid it when working on themes and plugin code because WordPress 4.9 will warn you about saving an error. You’ll sleep better at night.</p>\n<h3>Warning: Potential Danger Ahead!</h3>\n<p>When you edit themes and plugins directly, WordPress 4.9 will politely warn you that this is a dangerous practice and will recommend that you draft and test changes before updating your file. Take the safe route: You’ll thank you. Your team and customers will thank you.</p>\n<hr class=\"wp-block-separator\" />\n<h2>Even More Widget Updates </h2>\n<img src=\"https://i1.wp.com/wordpress.org/news/files/2017/11/even-more-widget-updates-small.png?w=632&ssl=1\" alt=\"\" />\n<h3>The New Gallery Widget</h3>\n<p>An incremental improvement to the media changes hatched in WordPress 4.8, you can now add a gallery via this new widget. Yes!</p>\n<h3>Press a Button, Add Media</h3>\n<p>Want to add media to your text widget? Embed images, video, and audio directly into the widget along with your text, with our simple but useful Add Media button. Woo!</p>\n<hr class=\"wp-block-separator\" />\n<h2>Site Building Improvements </h2>\n<img src=\"https://i1.wp.com/wordpress.org/news/files/2017/11/site-building-improvements-small.png?w=632&ssl=1\" alt=\"\" />\n<h3>More Reliable Theme Switching</h3>\n<p>When you switch themes, widgets sometimes think they can just move location. Improvements in WordPress 4.9 offer more persistent menu and widget placement when you decide it’s time for a new theme. </p>\n<h3>Find and Preview the Perfect Theme</h3>\n<p>Looking for a new theme for your site? Now, from within the Customizer, you can search, browse, and preview over 2600 themes before deploying changes to your site. What’s more, you can speed your search with filters for subject, features, and layout.</p>\n<h3>Better Menu Instructions = Less Confusion</h3>\n<p>Were you confused by the steps to create a new menu? Perhaps no longer! We’ve ironed out the UX for a smoother menu creation process. Newly updated copy will guide you.</p>\n<hr class=\"wp-block-separator\" />\n<h2>Lend a Hand with Gutenberg ?</h2>\n<img src=\"https://i2.wp.com/wordpress.org/news/files/2017/11/gutenberg-1.png?w=632&ssl=1\" alt=\"\" />\n<p>WordPress is working on a new way to create and control your content and we’d love to have your help. Interested in being an <a href=\"https://wordpress.org/plugins/gutenberg/\">early tester</a> or getting involved with the Gutenberg project? <a href=\"https://github.com/WordPress/gutenberg\">Contribute on GitHub</a>.</p>\n<p>(PS: this post was written in Gutenberg!)</p>\n<hr class=\"wp-block-separator\" />\n<h2>Developer Happiness ?</h2>\n<h3><a href=\"https://make.wordpress.org/core/2017/11/01/improvements-to-the-customize-js-api-in-4-9/\">Customizer JS API Improvements</a></h3>\n<p>We’ve made numerous improvements to the Customizer JS API in WordPress 4.9, eliminating many pain points. (Hello, default parameters for constructs! Goodbye repeated ID for constructs!) There are also new base control templates, a date/time control, and section/panel/global notifications to name a few. <a href=\"https://make.wordpress.org/core/2017/11/01/improvements-to-the-customize-js-api-in-4-9/\">Check out the full list.</a></p>\n<h3><a href=\"https://make.wordpress.org/core/2017/10/22/code-editing-improvements-in-wordpress-4-9/\">CodeMirror available for use in your themes and plugins</a></h3>\n<p>We’ve introduced a new code editing library, CodeMirror, for use within core. CodeMirror allows for syntax highlighting, error checking, and validation when creating code writing or editing experiences within your plugins, like CSS or JavaScript include fields.</p>\n<h3><a href=\"https://make.wordpress.org/core/2017/10/30/mediaelement-upgrades-in-wordpress-4-9/\">MediaElement.js upgraded to 4.2.6</a></h3>\n<p>WordPress 4.9 includes an upgraded version of MediaElement.js, which removes dependencies on jQuery, improves accessibility, modernizes the UI, and fixes many bugs.</p>\n<h3><a href=\"https://make.wordpress.org/core/2017/10/15/improvements-for-roles-and-capabilities-in-4-9/\">Roles and Capabilities Improvements</a></h3>\n<p>New capabilities have been introduced that allow granular management of plugins and translation files. In addition, the site switching process in multisite has been fine-tuned to update the available roles and capabilities in a more reliable and coherent way.</p>\n<hr class=\"wp-block-separator\" />\n<h2>The Squad</h2>\n<p>This release was led by <a href=\"https://choycedesign.com/\">Mel Choyce</a> and <a href=\"https://weston.ruter.net/\">Weston Ruter</a>, with the help of the following fabulous folks. There are 443 contributors with props in this release, with 185 of them contributing for the first time. Pull up some Billy Tipton on your music service of choice, and check out some of their profiles:</p>\n<p><a href=\"https://profiles.wordpress.org/aaroncampbell\">Aaron D. Campbell</a>, <a href=\"https://profiles.wordpress.org/jorbin\">Aaron Jorbin</a>, <a href=\"https://profiles.wordpress.org/aaronrutley\">Aaron Rutley</a>, <a href=\"https://profiles.wordpress.org/ibachal\">Achal Jain</a>, <a href=\"https://profiles.wordpress.org/kawauso\">Adam Harley (Kawauso)</a>, <a href=\"https://profiles.wordpress.org/adamsilverstein\">Adam Silverstein</a>, <a href=\"https://profiles.wordpress.org/adamwills\">AdamWills</a>, <a href=\"https://profiles.wordpress.org/adhun\">Adhun Anand</a>, <a href=\"https://profiles.wordpress.org/aegis123\">aegis123</a>, <a href=\"https://profiles.wordpress.org/afzalmultani\">Afzal Multani</a>, <a href=\"https://profiles.wordpress.org/mrahmadawais\">Ahmad Awais</a>, <a href=\"https://profiles.wordpress.org/ajayghaghretiya1\">Ajay Ghaghretiya</a>, <a href=\"https://profiles.wordpress.org/ajoah\">ajoah</a>, <a href=\"https://profiles.wordpress.org/soniakash\">Akash Soni</a>, <a href=\"https://profiles.wordpress.org/akbarhusen\">akbarhusen</a>, <a href=\"https://profiles.wordpress.org/schlessera\">Alain Schlesser</a>, <a href=\"https://profiles.wordpress.org/xavortm\">Alex Dimitrov</a>, <a href=\"https://profiles.wordpress.org/alpipego\">Alex Goller</a>, <a href=\"https://profiles.wordpress.org/alexvorn2\">Alexandru Vornicescu</a>, <a href=\"https://profiles.wordpress.org/alibasheer\">alibasheer</a>, <a href=\"https://profiles.wordpress.org/alxndr\">alxndr</a>, <a href=\"https://profiles.wordpress.org/afercia\">Andrea Fercia</a>, <a href=\"https://profiles.wordpress.org/andreagobetti\">andreagobetti</a>, <a href=\"https://profiles.wordpress.org/aduth\">Andrew Duthie</a>, <a href=\"https://profiles.wordpress.org/nacin\">Andrew Nacin</a>, <a href=\"https://profiles.wordpress.org/norcross\">Andrew Norcross</a>, <a href=\"https://profiles.wordpress.org/azaozz\">Andrew Ozz</a>, <a href=\"https://profiles.wordpress.org/andrewtaylor-1\">Andrew Taylor</a>, <a href=\"https://profiles.wordpress.org/afragen\">Andy Fragen</a>, <a href=\"https://profiles.wordpress.org/andizer\">Andy Meerwaldt</a>, <a href=\"https://profiles.wordpress.org/kelderic\">Andy Mercer</a>, <a href=\"https://profiles.wordpress.org/la-geek\">Angelika Reisiger</a>, <a href=\"https://profiles.wordpress.org/anhskohbo\">anhskohbo</a>, <a href=\"https://profiles.wordpress.org/ankit-k-gupta\">Ankit K Gupta</a>, <a href=\"https://profiles.wordpress.org/ahortin\">Anthony Hortin</a>, <a href=\"https://profiles.wordpress.org/atimmer\">Anton Timmermans</a>, <a href=\"https://profiles.wordpress.org/antonrinas\">antonrinas</a>, <a href=\"https://profiles.wordpress.org/appchecker\">appchecker</a>, <a href=\"https://profiles.wordpress.org/arena94\">arena94</a>, <a href=\"https://profiles.wordpress.org/bsop\">Arnaud Coolsaet</a>, <a href=\"https://profiles.wordpress.org/arnaudban\">ArnaudBan</a>, <a href=\"https://profiles.wordpress.org/aryamaaru\">Arun</a>, <a href=\"https://profiles.wordpress.org/mrasharirfan\">Ashar Irfan</a>, <a href=\"https://profiles.wordpress.org/atachibana\">atachibana</a>, <a href=\"https://profiles.wordpress.org/atanasangelovdev\">Atanas Angelov</a>, <a href=\"https://profiles.wordpress.org/audrasjb\">audrasjb</a>, <a href=\"https://profiles.wordpress.org/avinapatel\">Avina Patel</a>, <a href=\"https://profiles.wordpress.org/ayeshrajans\">Ayesh Karunaratne</a>, <a href=\"https://profiles.wordpress.org/barryceelen\">Barry Ceelen</a>, <a href=\"https://profiles.wordpress.org/bduclos\">bduclos</a>, <a href=\"https://profiles.wordpress.org/pixolin\">Bego Mario Garde</a>, <a href=\"https://profiles.wordpress.org/behzod\">Behzod Saidov</a>, <a href=\"https://profiles.wordpress.org/bcole808\">Ben Cole</a>, <a href=\"https://profiles.wordpress.org/empireoflight\">Ben Dunkle</a>, <a href=\"https://profiles.wordpress.org/benoitchantre\">benoitchantre</a>, <a href=\"https://profiles.wordpress.org/bnap00\">Bharat Parsiya</a>, <a href=\"https://profiles.wordpress.org/bhaveshkhadodara\">bhavesh khadodara</a>, <a href=\"https://profiles.wordpress.org/bplv\">Biplav</a>, <a href=\"https://profiles.wordpress.org/biranit\">Biranit</a>, <a href=\"https://profiles.wordpress.org/birgire\">Birgir Erlendsson (birgire)</a>, <a href=\"https://profiles.wordpress.org/biskobe\">biskobe</a>, <a href=\"https://profiles.wordpress.org/bjornw\">BjornW</a>, <a href=\"https://profiles.wordpress.org/blackbam\">Blackbam</a>, <a href=\"https://profiles.wordpress.org/blobfolio\">Blobfolio</a>, <a href=\"https://profiles.wordpress.org/bobbingwide\">bobbingwide</a>, <a href=\"https://profiles.wordpress.org/gitlost\">bonger</a>, <a href=\"https://profiles.wordpress.org/boonebgorges\">Boone B. Gorges</a>, <a href=\"https://profiles.wordpress.org/bor0\">Boro Sitnikovski</a>, <a href=\"https://profiles.wordpress.org/bradparbs\">Brad Parbs</a>, <a href=\"https://profiles.wordpress.org/bradyvercher\">Brady Vercher</a>, <a href=\"https://profiles.wordpress.org/kraftbj\">Brandon Kraft</a>, <a href=\"https://profiles.wordpress.org/brentjettgmailcom\">Brent Jett</a>, <a href=\"https://profiles.wordpress.org/brianlayman\">Brian Layman</a>, <a href=\"https://profiles.wordpress.org/monopine\">Brian Meyer</a>, <a href=\"https://profiles.wordpress.org/borgesbruno\">Bruno Borges</a>, <a href=\"https://profiles.wordpress.org/bseddon\">bseddon</a>, <a href=\"https://profiles.wordpress.org/bhargavbhandari90\">Bunty</a>, <a href=\"https://profiles.wordpress.org/carldanley\">Carl Danley</a>, <a href=\"https://profiles.wordpress.org/poena\">Carolina Nymark</a>, <a href=\"https://profiles.wordpress.org/sixhours\">Caroline Moore</a>, <a href=\"https://profiles.wordpress.org/carolinegeven\">carolinegeven</a>, <a href=\"https://profiles.wordpress.org/caercam\">Charlie Merland</a>, <a href=\"https://profiles.wordpress.org/chetanchauhan\">Chetan Chauhan</a>, <a href=\"https://profiles.wordpress.org/ketuchetan\">chetansatasiya</a>, <a href=\"https://profiles.wordpress.org/choongsavvii\">choong</a>, <a href=\"https://profiles.wordpress.org/chouby\">Chouby</a>, <a href=\"https://profiles.wordpress.org/chrishardie\">Chris Hardie</a>, <a href=\"https://profiles.wordpress.org/crunnells\">Chris Runnells</a>, <a href=\"https://profiles.wordpress.org/christian1012\">Christian Chung</a>, <a href=\"https://profiles.wordpress.org/christophherr\">Christoph Herr</a>, <a href=\"https://profiles.wordpress.org/chsxf\">chsxf</a>, <a href=\"https://profiles.wordpress.org/chrisvendiadvertisingcom\">cjhaas</a>, <a href=\"https://profiles.wordpress.org/cliffseal\">Cliff Seal</a>, <a href=\"https://profiles.wordpress.org/code-monkey\">code-monkey</a>, <a href=\"https://profiles.wordpress.org/collizo4sky\">Collins Agbonghama</a>, <a href=\"https://profiles.wordpress.org/corvidism\">corvidism</a>, <a href=\"https://profiles.wordpress.org/csloisel\">csloisel</a>, <a href=\"https://profiles.wordpress.org/daedalon\">Daedalon</a>, <a href=\"https://profiles.wordpress.org/danielbachhuber\">Daniel Bachhuber </a>, <a href=\"https://profiles.wordpress.org/danieltj\">Daniel James</a>, <a href=\"https://profiles.wordpress.org/mte90\">Daniele Scasciafratte</a>, <a href=\"https://profiles.wordpress.org/dany2217\">dany2217</a>, <a href=\"https://profiles.wordpress.org/davepullig\">Dave Pullig</a>, <a href=\"https://profiles.wordpress.org/davefx\">DaveFX</a>, <a href=\"https://profiles.wordpress.org/davidakennedy\">David A. Kennedy</a>, <a href=\"https://profiles.wordpress.org/davilera\">David Aguilera</a>, <a href=\"https://profiles.wordpress.org/davidanderson\">David Anderson</a>, <a href=\"https://profiles.wordpress.org/davidbinda\">David Binovec</a>, <a href=\"https://profiles.wordpress.org/turtlepod\">David Chandra Purnama</a>, <a href=\"https://profiles.wordpress.org/dlh\">David Herrera</a>, <a href=\"https://profiles.wordpress.org/dshanske\">David Shanske</a>, <a href=\"https://profiles.wordpress.org/straussd\">David Strauss</a>, <a href=\"https://profiles.wordpress.org/jdtrower\">David Trower</a>, <a href=\"https://profiles.wordpress.org/folletto\">Davide \'Folletto\' Casali</a>, <a href=\"https://profiles.wordpress.org/daymobrew\">daymobrew</a>, <a href=\"https://profiles.wordpress.org/valendesigns\">Derek Herman</a>, <a href=\"https://profiles.wordpress.org/designsimply\">designsimply</a>, <a href=\"https://profiles.wordpress.org/diedeexterkate\">DiedeExterkate</a>, <a href=\"https://profiles.wordpress.org/dingo_bastard\">dingo-d</a>, <a href=\"https://profiles.wordpress.org/dd32\">Dion Hulse</a>, <a href=\"https://profiles.wordpress.org/dipeshkakadiya\">dipeshkakadiya</a>, <a href=\"https://profiles.wordpress.org/div33\">Divyesh Ladani</a>, <a href=\"https://profiles.wordpress.org/dency\">Dixita Dusara</a>, <a href=\"https://profiles.wordpress.org/dixitadusara\">dixitadusara</a>, <a href=\"https://profiles.wordpress.org/ocean90\">Dominik Schilling</a>, <a href=\"https://profiles.wordpress.org/dominikschwind-1\">Dominik Schwind</a>, <a href=\"https://profiles.wordpress.org/drewapicture\">Drew Jaynes</a>, <a href=\"https://profiles.wordpress.org/dsawardekar\">dsawardekar</a>, <a href=\"https://profiles.wordpress.org/kucrut\">Dzikri Aziz</a>, <a href=\"https://profiles.wordpress.org/eatonz\">Eaton</a>, <a href=\"https://profiles.wordpress.org/eclev91\">eclev91</a>, <a href=\"https://profiles.wordpress.org/eddhurst\">Edd Hurst</a>, <a href=\"https://profiles.wordpress.org/egregor\">EGregor</a>, <a href=\"https://profiles.wordpress.org/iseulde\">Ella Iseulde Van Dorpe</a>, <a href=\"https://profiles.wordpress.org/elvishp2006\">elvishp2006</a>, <a href=\"https://profiles.wordpress.org/enricosorcinelli\">enrico.sorcinelli</a>, <a href=\"https://profiles.wordpress.org/ericlewis\">Eric Andrew Lewis</a>, <a href=\"https://profiles.wordpress.org/euthelup\">euthelup</a>, <a href=\"https://profiles.wordpress.org/circlecube\">Evan Mullins</a>, <a href=\"https://profiles.wordpress.org/eventualo\">eventualo</a>, <a href=\"https://profiles.wordpress.org/fab1en\">Fabien Quatravaux</a>, <a href=\"https://profiles.wordpress.org/psiico\">FancyThought</a>, <a href=\"https://profiles.wordpress.org/felipeelia\">Felipe Elia</a>, <a href=\"https://profiles.wordpress.org/flixos90\">Felix Arntz</a>, <a href=\"https://profiles.wordpress.org/fergbrain\">fergbrain</a>, <a href=\"https://profiles.wordpress.org/mista-flo\">Florian TIAR</a>, <a href=\"https://profiles.wordpress.org/gmariani405\">Gabriel Mariani</a>, <a href=\"https://profiles.wordpress.org/voldemortensen\">Garth Mortensen</a>, <a href=\"https://profiles.wordpress.org/pento\">Gary Pendergast</a>, <a href=\"https://profiles.wordpress.org/soulseekah\">Gennady Kovshenin</a>, <a href=\"https://profiles.wordpress.org/georgestephanis\">George Stephanis</a>, <a href=\"https://profiles.wordpress.org/girishpanchal\">Girish Lohar</a>, <a href=\"https://profiles.wordpress.org/gkloveweb\">Govind Kumar</a>, <a href=\"https://profiles.wordpress.org/grahamarmfield\">Graham Armfield</a>, <a href=\"https://profiles.wordpress.org/gregross\">Greg Ross</a>, <a href=\"https://profiles.wordpress.org/gcorne\">Gregory Cornelius</a>, <a href=\"https://profiles.wordpress.org/grosbouff\">grosbouff</a>, <a href=\"https://profiles.wordpress.org/wido\">Guido Scialfa</a>, <a href=\"https://profiles.wordpress.org/ghosttoast\">Gustave F. Gerhardt</a>, <a href=\"https://profiles.wordpress.org/guzzilar\">guzzilar</a>, <a href=\"https://profiles.wordpress.org/hardeepasrani\">Hardeep Asrani</a>, <a href=\"https://profiles.wordpress.org/hazemnoor\">Hazem Noor</a>, <a href=\"https://profiles.wordpress.org/hazimayesh\">hazimayesh</a>, <a href=\"https://profiles.wordpress.org/helen\">Helen Hou-Sandí</a>, <a href=\"https://profiles.wordpress.org/henrywright-1\">Henry</a>, <a href=\"https://profiles.wordpress.org/henrywright\">Henry Wright</a>, <a href=\"https://profiles.wordpress.org/herregroen\">herregroen</a>, <a href=\"https://profiles.wordpress.org/hnle\">Hinaloe</a>, <a href=\"https://profiles.wordpress.org/howdy_mcgee\">Howdy_McGee</a>, <a href=\"https://profiles.wordpress.org/hlashbrooke\">Hugh Lashbrooke</a>, <a href=\"https://profiles.wordpress.org/hugobaeta\">Hugo Baeta</a>, <a href=\"https://profiles.wordpress.org/jcc9873\">Iacopo C</a>, <a href=\"https://profiles.wordpress.org/imath\">imath</a>, <a href=\"https://profiles.wordpress.org/ippei-sumida\">Ippei Sumida</a>, <a href=\"https://profiles.wordpress.org/ipstenu\">Ipstenu (Mika Epstein)</a>, <a href=\"https://profiles.wordpress.org/ireneyoast\">Irene Strikkers</a>, <a href=\"https://profiles.wordpress.org/ivankristianto\">Ivan Kristianto</a>, <a href=\"https://profiles.wordpress.org/ixmati\">ixmati</a>, <a href=\"https://profiles.wordpress.org/jdgrimes\">J.D. Grimes</a>, <a href=\"https://profiles.wordpress.org/jhoffmann\">j.hoffmann</a>, <a href=\"https://profiles.wordpress.org/jnylen0\">James Nylen</a>, <a href=\"https://profiles.wordpress.org/jankimoradiya\">Janki Moradiya</a>, <a href=\"https://profiles.wordpress.org/octalmage\">Jason Stallings</a>, <a href=\"https://profiles.wordpress.org/jbpaul17\">Jeff Paul</a>, <a href=\"https://profiles.wordpress.org/jmdodd\">Jennifer M. Dodd</a>, <a href=\"https://profiles.wordpress.org/jeremyfelt\">Jeremy Felt</a>, <a href=\"https://profiles.wordpress.org/jpry\">Jeremy Pry</a>, <a href=\"https://profiles.wordpress.org/jipmoors\">Jip Moors</a>, <a href=\"https://profiles.wordpress.org/jjcomack\">jjcomack</a>, <a href=\"https://profiles.wordpress.org/jkhongusc\">jkhongusc</a>, <a href=\"https://profiles.wordpress.org/joedolson\">Joe Dolson</a>, <a href=\"https://profiles.wordpress.org/joehoyle\">Joe Hoyle</a>, <a href=\"https://profiles.wordpress.org/joemcgill\">Joe McGill</a>, <a href=\"https://profiles.wordpress.org/johnbillion\">John Blackbourn</a>, <a href=\"https://profiles.wordpress.org/johneckman\">John Eckman</a>, <a href=\"https://profiles.wordpress.org/johnjamesjacoby\">John James Jacoby</a>, <a href=\"https://profiles.wordpress.org/johnregan3\">John Regan</a>, <a href=\"https://profiles.wordpress.org/johnpgreen\">johnpgreen</a>, <a href=\"https://profiles.wordpress.org/johnroper100\">johnroper100</a>, <a href=\"https://profiles.wordpress.org/jonathanbardo\">Jonathan Bardo</a>, <a href=\"https://profiles.wordpress.org/desrosj\">Jonathan Desrosiers</a>, <a href=\"https://profiles.wordpress.org/spacedmonkey\">Jonny Harris</a>, <a href=\"https://profiles.wordpress.org/joostdevalk\">Joost de Valk</a>, <a href=\"https://profiles.wordpress.org/chanthaboune\">Josepha</a>, <a href=\"https://profiles.wordpress.org/shelob9\">Josh Pollock</a>, <a href=\"https://profiles.wordpress.org/joyously\">Joy</a>, <a href=\"https://profiles.wordpress.org/jrf\">jrf</a>, <a href=\"https://profiles.wordpress.org/jsepia\">jsepia</a>, <a href=\"https://profiles.wordpress.org/jsonfry\">jsonfry</a>, <a href=\"https://profiles.wordpress.org/juhise\">Juhi Saxena</a>, <a href=\"https://profiles.wordpress.org/jlambe\">Julien</a>, <a href=\"https://profiles.wordpress.org/kopepasah\">Justin Kopepasah</a>, <a href=\"https://profiles.wordpress.org/jtsternberg\">Justin Sternberg</a>, <a href=\"https://profiles.wordpress.org/kadamwhite\">K.Adam White</a>, <a href=\"https://profiles.wordpress.org/thekt12\">Karthik Thayyil</a>, <a href=\"https://profiles.wordpress.org/keesiemeijer\">keesiemeijer</a>, <a href=\"https://profiles.wordpress.org/ryelle\">Kelly Dwan</a>, <a href=\"https://profiles.wordpress.org/captainn\">Kevin Newman</a>, <a href=\"https://profiles.wordpress.org/kpdesign\">Kim Parsell</a>, <a href=\"https://profiles.wordpress.org/kiranpotphode\">Kiran Potphode</a>, <a href=\"https://profiles.wordpress.org/ixkaito\">Kite</a>, <a href=\"https://profiles.wordpress.org/kovshenin\">Konstantin Kovshenin</a>, <a href=\"https://profiles.wordpress.org/obenland\">Konstantin Obenland</a>, <a href=\"https://profiles.wordpress.org/kmgalanakis\">Konstantinos Galanakis</a>, <a href=\"https://profiles.wordpress.org/koopersmith\">koopersmith</a>, <a href=\"https://profiles.wordpress.org/kekkakokkers\">Kristin Kokkersvold</a>, <a href=\"https://profiles.wordpress.org/lalitpendhare\">lalitpendhare</a>, <a href=\"https://profiles.wordpress.org/lancewillett\">Lance Willett</a>, <a href=\"https://profiles.wordpress.org/laurelfulford\">Laurel Fulford</a>, <a href=\"https://profiles.wordpress.org/lemacarl\">lemacarl</a>, <a href=\"https://profiles.wordpress.org/lessbloat\">lessbloat</a>, <a href=\"https://profiles.wordpress.org/llemurya\">llemurya</a>, <a href=\"https://profiles.wordpress.org/lukecavanagh\">Luke Cavanagh</a>, <a href=\"https://profiles.wordpress.org/mariovalney\">M&#225;rio Valney</a>, <a href=\"https://profiles.wordpress.org/m1tk00\">m1tk00</a>, <a href=\"https://profiles.wordpress.org/maedahbatool\">Maedah Batool</a>, <a href=\"https://profiles.wordpress.org/mp518\">Mahesh Prajapati</a>, <a href=\"https://profiles.wordpress.org/mahvash-fatima\">Mahvash Fatima</a>, <a href=\"https://profiles.wordpress.org/travel_girl\">Maja Benke</a>, <a href=\"https://profiles.wordpress.org/mako09\">Mako</a>, <a href=\"https://profiles.wordpress.org/manolis09\">manolis09</a>, <a href=\"https://profiles.wordpress.org/manuelaugustin\">manuelaugustin</a>, <a href=\"https://profiles.wordpress.org/mbootsman\">Marcel Bootsman</a>, <a href=\"https://profiles.wordpress.org/clorith\">Marius L. J.</a>, <a href=\"https://profiles.wordpress.org/mariusvetrici\">Marius Vetrici</a>, <a href=\"https://profiles.wordpress.org/markjaquith\">Mark Jaquith</a>, <a href=\"https://profiles.wordpress.org/mrwweb\">Mark Root-Wiley</a>, <a href=\"https://profiles.wordpress.org/markcallen\">markcallen</a>, <a href=\"https://profiles.wordpress.org/markoheijnen\">Marko Heijnen</a>, <a href=\"https://profiles.wordpress.org/matheusgimenez\">MatheusGimenez</a>, <a href=\"https://profiles.wordpress.org/mgibbs189\">Matt Gibbs</a>, <a href=\"https://profiles.wordpress.org/matt\">Matt Mullenweg</a>, <a href=\"https://profiles.wordpress.org/matthiasthiel\">matthias.thiel</a>, <a href=\"https://profiles.wordpress.org/mattyrob\">mattyrob</a>, <a href=\"https://profiles.wordpress.org/maximeculea\">Maxime Culea</a>, <a href=\"https://profiles.wordpress.org/mdifelice\">mdifelice</a>, <a href=\"https://profiles.wordpress.org/megane9988\">megane9988</a>, <a href=\"https://profiles.wordpress.org/melchoyce\">Mel Choyce</a>, <a href=\"https://profiles.wordpress.org/menakas\">Menaka S.</a>, <a href=\"https://profiles.wordpress.org/michaelarestad\">Michael Arestad</a>, <a href=\"https://profiles.wordpress.org/mizejewski\">Michele Mizejewski</a>, <a href=\"https://profiles.wordpress.org/stubgo\">Miina Sikk</a>, <a href=\"https://profiles.wordpress.org/mihai2u\">Mike Crantea</a>, <a href=\"https://profiles.wordpress.org/mikehansenme\">Mike Hansen</a>, <a href=\"https://profiles.wordpress.org/mikeschinkel\">Mike Schinkel</a>, <a href=\"https://profiles.wordpress.org/mikeschroder\">Mike Schroder</a>, <a href=\"https://profiles.wordpress.org/dimadin\">Milan Dinić</a>, <a href=\"https://profiles.wordpress.org/milana_cap\">Milana Cap</a>, <a href=\"https://profiles.wordpress.org/milindmore22\">Milind More</a>, <a href=\"https://profiles.wordpress.org/mirucon\">Mirucon</a>, <a href=\"https://profiles.wordpress.org/studionashvegas\">Mitch Canter</a>, <a href=\"https://profiles.wordpress.org/mitraval192\">Mithun Raval</a>, <a href=\"https://profiles.wordpress.org/mkomar\">mkomar</a>, <a href=\"https://profiles.wordpress.org/monikarao\">monikarao</a>, <a href=\"https://profiles.wordpress.org/morganestes\">Morgan Estes</a>, <a href=\"https://profiles.wordpress.org/mt8biz\">moto hachi ( mt8.biz )</a>, <a href=\"https://profiles.wordpress.org/msebel\">msebel</a>, <a href=\"https://profiles.wordpress.org/munyagu\">munyagu</a>, <a href=\"https://profiles.wordpress.org/mythemeshop\">MyThemeShop</a>, <a href=\"https://profiles.wordpress.org/ndoublehwp\">N\'DoubleH</a>, <a href=\"https://profiles.wordpress.org/nathanatmoz\">Nathan Johnson</a>, <a href=\"https://profiles.wordpress.org/nenad\">nenad</a>, <a href=\"https://profiles.wordpress.org/nicbertino\">nic.bertino</a>, <a href=\"https://profiles.wordpress.org/ndiego\">Nick Diego</a>, <a href=\"https://profiles.wordpress.org/celloexpressions\">Nick Halsey </a>, <a href=\"https://profiles.wordpress.org/nikeo\">Nicolas GUILLAUME</a>, <a href=\"https://profiles.wordpress.org/nicollle\">nicollle</a>, <a href=\"https://profiles.wordpress.org/jainnidhi\">Nidhi Jain</a>, <a href=\"https://profiles.wordpress.org/nikschavan\">Nikhil Chavan</a>, <a href=\"https://profiles.wordpress.org/rabmalin\">Nilambar Sharma</a>, <a href=\"https://profiles.wordpress.org/nileshdudakiya94\">Nileshdudakiya94</a>, <a href=\"https://profiles.wordpress.org/nishitlangaliya\">Nishit Langaliya</a>, <a href=\"https://profiles.wordpress.org/justnorris\">Norris</a>, <a href=\"https://profiles.wordpress.org/obradovic\">obradovic</a>, <a href=\"https://profiles.wordpress.org/ov3rfly\">Ov3rfly</a>, <a href=\"https://profiles.wordpress.org/paaljoachim\">Paal Joachim Romdahl</a>, <a href=\"https://profiles.wordpress.org/palmiak\">palmiak</a>, <a href=\"https://profiles.wordpress.org/parthsanghvi\">Parth Sanghvi</a>, <a href=\"https://profiles.wordpress.org/swissspidy\">Pascal Birchler</a>, <a href=\"https://profiles.wordpress.org/obrienlabs\">Pat O\'Brien</a>, <a href=\"https://profiles.wordpress.org/patel\">patel</a>, <a href=\"https://profiles.wordpress.org/pbearne\">Paul Bearne</a>, <a href=\"https://profiles.wordpress.org/pbiron\">Paul Biron</a>, <a href=\"https://profiles.wordpress.org/pauldechov\">Paul Dechov</a>, <a href=\"https://profiles.wordpress.org/paulwilde\">Paul Wilde</a>, <a href=\"https://profiles.wordpress.org/sirbrillig\">Payton Swick</a>, <a href=\"https://profiles.wordpress.org/pcarvalho\">pcarvalho</a>, <a href=\"https://profiles.wordpress.org/pedromendonca\">Pedro Mendon&#231;a</a>, <a href=\"https://profiles.wordpress.org/gungeekatx\">Pete Nelson</a>, <a href=\"https://profiles.wordpress.org/pessoft\">Peter \"Pessoft\" Kol&#237;nek</a>, <a href=\"https://profiles.wordpress.org/donutz\">Peter J. Herrel</a>, <a href=\"https://profiles.wordpress.org/petertoi\">Peter Toi</a>, <a href=\"https://profiles.wordpress.org/westi\">Peter Westwood</a>, <a href=\"https://profiles.wordpress.org/peterwilsoncc\">Peter Wilson</a>, <a href=\"https://profiles.wordpress.org/philipjohn\">Philip John</a>, <a href=\"https://profiles.wordpress.org/delawski\">Piotr Delawski</a>, <a href=\"https://profiles.wordpress.org/mordauk\">Pippin Williamson</a>, <a href=\"https://profiles.wordpress.org/plastikschnitzer\">Plastikschnitzer</a>, <a href=\"https://profiles.wordpress.org/powerzilly\">powerzilly</a>, <a href=\"https://profiles.wordpress.org/pratikgandhi\">Pratik Gandhi</a>, <a href=\"https://profiles.wordpress.org/presslabs\">Presslabs</a>, <a href=\"https://profiles.wordpress.org/punit5658\">Punit Patel</a>, <a href=\"https://profiles.wordpress.org/purnendu\">Purnendu Dash</a>, <a href=\"https://profiles.wordpress.org/r-a-y\">r-a-y</a>, <a href=\"https://profiles.wordpress.org/rachelbaker\">Rachel Baker</a>, <a href=\"https://profiles.wordpress.org/rafa8626\">rafa8626</a>, <a href=\"https://profiles.wordpress.org/rahmohn\">Rahmohn</a>, <a href=\"https://profiles.wordpress.org/ramiy\">Rami Yushuvaev</a>, <a href=\"https://profiles.wordpress.org/ramon-fincken\">ramon fincken</a>, <a href=\"https://profiles.wordpress.org/jontyravi\">Ravi Vaghela</a>, <a href=\"https://profiles.wordpress.org/rclations\">RC Lations</a>, <a href=\"https://profiles.wordpress.org/redrambles\">redrambles</a>, <a href=\"https://profiles.wordpress.org/arena\">RENAUT</a>, <a href=\"https://profiles.wordpress.org/greuben\">Reuben Gunday</a>, <a href=\"https://profiles.wordpress.org/rfair404\">rfair404</a>, <a href=\"https://profiles.wordpress.org/youknowriad\">Riad Benguella</a>, <a href=\"https://profiles.wordpress.org/rianrietveld\">Rian Rietveld</a>, <a href=\"https://profiles.wordpress.org/riddhiehta02\">Riddhi Mehta</a>, <a href=\"https://profiles.wordpress.org/rinkuyadav999\">Rinku Y</a>, <a href=\"https://profiles.wordpress.org/rcutmore\">Rob Cutmore</a>, <a href=\"https://profiles.wordpress.org/rodrigosprimo\">Rodrigo Primo</a>, <a href=\"https://profiles.wordpress.org/ronakganatra\">Ronak Ganatra</a>, <a href=\"https://profiles.wordpress.org/rugved\">rugved</a>, <a href=\"https://profiles.wordpress.org/rushabh4486\">Rushabh Shah</a>, <a href=\"https://profiles.wordpress.org/ryan\">Ryan Boren</a>, <a href=\"https://profiles.wordpress.org/ryanduff\">Ryan Duff</a>, <a href=\"https://profiles.wordpress.org/stunnedbeast\">Ryan Holmes</a>, <a href=\"https://profiles.wordpress.org/rmarks\">Ryan Marks</a>, <a href=\"https://profiles.wordpress.org/rmccue\">Ryan McCue</a>, <a href=\"https://profiles.wordpress.org/ohryan\">Ryan Neudorf</a>, <a href=\"https://profiles.wordpress.org/ryanplas\">Ryan Plas</a>, <a href=\"https://profiles.wordpress.org/welcher\">Ryan Welcher</a>, <a href=\"https://profiles.wordpress.org/ryanrolds\">ryanrolds</a>, <a href=\"https://profiles.wordpress.org/ryotsun\">ryotsun</a>, <a href=\"https://profiles.wordpress.org/manchumahara\">Sabuj Kundu</a>, <a href=\"https://profiles.wordpress.org/sagarprajapati\">Sagar Prajapati</a>, <a href=\"https://profiles.wordpress.org/sagarladani\">sagarladani</a>, <a href=\"https://profiles.wordpress.org/sa3idho\">Said El Bakkali</a>, <a href=\"https://profiles.wordpress.org/samikeijonen\">Sami Keijonen</a>, <a href=\"https://profiles.wordpress.org/viralsampat\">Sampat Viral</a>, <a href=\"https://profiles.wordpress.org/samuelsidler\">Samuel Sidler</a>, <a href=\"https://profiles.wordpress.org/otto42\">Samuel Wood (Otto)</a>, <a href=\"https://profiles.wordpress.org/tinkerbelly\">sarah semark</a>, <a href=\"https://profiles.wordpress.org/sathyapulse\">sathyapulse</a>, <a href=\"https://profiles.wordpress.org/sboisvert\">sboisvert</a>, <a href=\"https://profiles.wordpress.org/scottdeluzio\">Scott DeLuzio</a>, <a href=\"https://profiles.wordpress.org/sc0ttkclark\">Scott Kingsley Clark</a>, <a href=\"https://profiles.wordpress.org/scottlee\">Scott Lee</a>, <a href=\"https://profiles.wordpress.org/coffee2code\">Scott Reilly</a>, <a href=\"https://profiles.wordpress.org/wonderboymusic\">Scott Taylor</a>, <a href=\"https://profiles.wordpress.org/scribu\">scribu</a>, <a href=\"https://profiles.wordpress.org/sebastianpisula\">Sebastian Pisula</a>, <a href=\"https://profiles.wordpress.org/sebsz\">SeBsZ</a>, <a href=\"https://profiles.wordpress.org/sergeybiryukov\">Sergey Biryukov</a>, <a href=\"https://profiles.wordpress.org/sgr33n\">Sergio De Falco</a>, <a href=\"https://profiles.wordpress.org/shamim51\">Shamim Hasan</a>, <a href=\"https://profiles.wordpress.org/shooper\">Shawn Hooper</a>, <a href=\"https://profiles.wordpress.org/shital\">shital</a>, <a href=\"https://profiles.wordpress.org/shramee\">shramee</a>, <a href=\"https://profiles.wordpress.org/nomnom99\">Siddharth Thevaril</a>, <a href=\"https://profiles.wordpress.org/pross\">Simon Prosser</a>, <a href=\"https://profiles.wordpress.org/skostadinov\">skostadinov</a>, <a href=\"https://profiles.wordpress.org/slaffik\">Slava Abakumov</a>, <a href=\"https://profiles.wordpress.org/someecards\">someecards</a>, <a href=\"https://profiles.wordpress.org/soean\">Soren Wrede</a>, <a href=\"https://profiles.wordpress.org/spencerfinnell\">spencerfinnell</a>, <a href=\"https://profiles.wordpress.org/spocke\">spocke</a>, <a href=\"https://profiles.wordpress.org/metodiew\">Stanko Metodiev</a>, <a href=\"https://profiles.wordpress.org/stephdau\">Stephane Daury (stephdau)</a>, <a href=\"https://profiles.wordpress.org/netweb\">Stephen Edgar</a>, <a href=\"https://profiles.wordpress.org/stephenharris\">Stephen Harris</a>, <a href=\"https://profiles.wordpress.org/stevegrunwell\">Steve Grunwell</a>, <a href=\"https://profiles.wordpress.org/stevepuddick\">Steve Puddick</a>, <a href=\"https://profiles.wordpress.org/stevenlinx\">stevenlinx</a>, <a href=\"https://profiles.wordpress.org/dualcube_subrata\">Subrata Mal</a>, <a href=\"https://profiles.wordpress.org/subrataemfluence\">Subrata Sarkar</a>, <a href=\"https://profiles.wordpress.org/sudar\">Sudar Muthu</a>, <a href=\"https://profiles.wordpress.org/musus\">Susumu Seino</a>, <a href=\"https://profiles.wordpress.org/svrooij\">svrooij</a>, <a href=\"https://profiles.wordpress.org/takahashi_fumiki\">Takahashi Fumiki</a>, <a href=\"https://profiles.wordpress.org/miyauchi\">Takayuki Miyauchi</a>, <a href=\"https://profiles.wordpress.org/karmatosed\">Tammie Lister</a>, <a href=\"https://profiles.wordpress.org/buley\">Taylor</a>, <a href=\"https://profiles.wordpress.org/tejas5989\">tejas5989</a>, <a href=\"https://profiles.wordpress.org/terwdan\">terwdan</a>, <a href=\"https://profiles.wordpress.org/tharsheblows\">tharsheblows</a>, <a href=\"https://profiles.wordpress.org/thingsym\">thingsym</a>, <a href=\"https://profiles.wordpress.org/tfirdaus\">Thoriq Firdaus</a>, <a href=\"https://profiles.wordpress.org/tfrommen\">Thorsten Frommen</a>, <a href=\"https://profiles.wordpress.org/timothyblynjacobs\">Timothy Jacobs</a>, <a href=\"https://profiles.wordpress.org/tmatsuur\">tmatsuur</a>, <a href=\"https://profiles.wordpress.org/tobi823\">tobi823</a>, <a href=\"https://profiles.wordpress.org/toddnestor\">Todd Nestor</a>, <a href=\"https://profiles.wordpress.org/tobifjellner\">Tor-Bjorn Fjellner</a>, <a href=\"https://profiles.wordpress.org/zodiac1978\">Torsten Landsiedel</a>, <a href=\"https://profiles.wordpress.org/toru\">Toru Miki</a>, <a href=\"https://profiles.wordpress.org/toscho\">toscho</a>, <a href=\"https://profiles.wordpress.org/transl8or\">transl8or</a>, <a href=\"https://profiles.wordpress.org/truongwp\">truongwp</a>, <a href=\"https://profiles.wordpress.org/tuanmh\">tuanmh</a>, <a href=\"https://profiles.wordpress.org/tv-productions\">TV productions</a>, <a href=\"https://profiles.wordpress.org/uicestone\">uicestone</a>, <a href=\"https://profiles.wordpress.org/grapplerulrich\">Ulrich</a>, <a href=\"https://profiles.wordpress.org/umangvaghela123\">Umang Vaghela</a>, <a href=\"https://profiles.wordpress.org/umeshnevase\">Umesh Nevase</a>, <a href=\"https://profiles.wordpress.org/upadalavipul\">upadalavipul</a>, <a href=\"https://profiles.wordpress.org/utkarshpatel\">Utkarsh</a>, <a href=\"https://profiles.wordpress.org/vhauri\">vhauri</a>, <a href=\"https://profiles.wordpress.org/williampatton\">williampatton</a>, <a href=\"https://profiles.wordpress.org/withinboredom\">withinboredom</a>, <a href=\"https://profiles.wordpress.org/wojtekszkutnik\">Wojtek Szkutnik</a>, <a href=\"https://profiles.wordpress.org/xkon\">Xenos (xkon) Konstantinos</a>, <a href=\"https://profiles.wordpress.org/yahil\">Yahil Madakiya</a>, <a href=\"https://profiles.wordpress.org/yonivh\">yonivh</a>, <a href=\"https://profiles.wordpress.org/yrpwayne\">yrpwayne</a>, <a href=\"https://profiles.wordpress.org/zachwtx\">zachwtx</a>, and <a href=\"https://profiles.wordpress.org/zanematthew\">Zane Matthew</a>.</p>\n<p>Finally, thanks to all the community translators who worked on WordPress 4.9. Their efforts bring WordPress 4.9 fully translated to 43 languages at release time, with more on the way.</p>\n<p>Do you want to report on WordPress 4.9? <a href=\"https://s.w.org/images/core/4.9/wp-4-9_press-kit.zip\">We&#x27;ve compiled a press kit featuring information about the release features, and some media assets to help you along</a>.</p>\n<p>If you want to follow along or help out, check out <a href=\"https://make.wordpress.org/\">Make WordPress</a> and our <a href=\"https://make.wordpress.org/core/\">core development blog</a>.</p>\n<p>Thanks for choosing WordPress!</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 16 Nov 2017 01:16:37 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:10:\"Mel Choyce\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:8;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:108:\"WPTavern: Gutenberg 1.7 Adds Multi-Block Transform Functionality, Drops iframes Implementation of Meta Boxes\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=76552\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:118:\"https://wptavern.com/gutenberg-1-7-adds-multi-block-transform-functionality-drops-iframes-implementation-of-meta-boxes\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:4469:\"<p><a href=\"https://make.wordpress.org/core/2017/11/15/whats-new-in-gutenberg-15th-november/\" rel=\"noopener\" target=\"_blank\">Gutenberg 1.7</a> was released today, two weeks after version 1.6, with a fresh round of new features, design updates, and the groundwork for nested blocks and block extensibility.</p>\n<p>Last week contributors began exploring <a href=\"https://wptavern.com/gutenberg-contributors-explore-alternative-to-using-iframes-for-meta-boxes\" rel=\"noopener\" target=\"_blank\">an alternative to using iframes for meta boxes</a>. This experiment has landed in 1.7 so that the plugin now <a href=\"https://github.com/WordPress/gutenberg/pull/3345\" rel=\"noopener\" target=\"_blank\">renders meta boxes inline</a>. Gutenberg engineer Riad Benguella, who wrote and merged the code, said that it doesn&#8217;t fix all the meta box issues and might create some new ones, but it &#8220;gets us closer to where we want to go.&#8221; Pre-rendering meta boxes and creating a migration path for existing ones is next on the agenda.</p>\n<p>One of the most exciting new features in 1.7 is the <a href=\"https://github.com/WordPress/gutenberg/pull/3357\" rel=\"noopener\" target=\"_blank\">multi-block transform functionality</a> that allows users to select multiple blocks and instantly transform them into other block types. It works like a little bit of Gutenberg magic. By default, users can select multiple paragraphs and transform them into a list or select multiple images and transform them into a gallery.</p>\n<p><a href=\"https://i2.wp.com/wptavern.com/wp-content/uploads/2017/11/Screen-Shot-2017-11-15-at-2.50.25-PM-e1510779367673.png?ssl=1\"><img /></a></p>\n<p>After selecting two or more blocks, the user can click on the block&#8217;s settings in the toolbar to transform them. They can also be easily changed back to single blocks. The multi-block transform functionality has been added to the Blocks API so that developers can set isMultiBlock to true to specify blocks that can be transformed.</p>\n<p><a href=\"https://i0.wp.com/wptavern.com/wp-content/uploads/2017/11/Screen-Shot-2017-11-15-at-3.31.49-PM-e1510781927286.png?ssl=1\"><img /></a></p>\n<p>Version 1.7 introduces a new toggle that the team is testing for <a href=\"https://github.com/WordPress/gutenberg/pull/3311\" rel=\"noopener\" target=\"_blank\">switching between the top fixed toolbar and the contextual toolbars attached to each block</a>. It provides an easy way for users to test both types of toolbar styles, but may be temporary as the pull request was submitted as a suggestion for an A/B test.</p>\n<p><a href=\"https://i2.wp.com/wptavern.com/wp-content/uploads/2017/11/Screen-Shot-2017-11-15-at-4.03.38-PM.png?ssl=1\"><img /></a></p>\n<p>Gutenberg 1.7 <a href=\"https://github.com/WordPress/gutenberg/pull/2743\" rel=\"noopener\" target=\"_blank\">paves the way for nested blocks</a> in the data structure. It also adds <a href=\"https://github.com/WordPress/gutenberg/pull/3318\" rel=\"noopener\" target=\"_blank\">hooks for block extensibility</a> and contributors are currently testing how these work internally.</p>\n<p>A few other notable features in this release include the following:</p>\n<ul>\n<li>Added <a href=\"https://github.com/WordPress/gutenberg/pull/2896\" rel=\"noopener\" target=\"_blank\">@-mention autocomplete for users</a> in a site</li>\n<li>Allow <a href=\"https://github.com/WordPress/gutenberg/pull/2792\" rel=\"noopener\" target=\"_blank\">pasting standalone images</a> and uploading them (also supports pasting base64 encoded images)</li>\n<li>Full <a href=\"https://github.com/WordPress/gutenberg/pull/3401\" rel=\"noopener\" target=\"_blank\">design update to focus styles</a> around the UI</li>\n<li>Placed <a href=\"https://github.com/WordPress/gutenberg/pull/3459\" rel=\"noopener\" target=\"_blank\">&#8220;table of contents&#8221; button in the header area</a>, disabled when there are no blocks in the content, added paragraph count</li>\n</ul>\n<p>Gutenberg&#8217;s documentation has also been <a href=\"https://github.com/WordPress/gutenberg/pull/3381\" rel=\"noopener\" target=\"_blank\">moved</a> to <a href=\"https://wordpress.org/gutenberg/handbook/\" rel=\"noopener\" target=\"_blank\">https://wordpress.org/gutenberg/handbook/</a>, signaling the project is getting closer to becoming part of WordPress. The new editor will be included in WordPress 5.0, which will ship when Gutenberg is ready. A notice in the 4.9 about.php page invites users to start testing the feature plugin ahead of its inclusion in core.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 15 Nov 2017 23:57:52 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:9;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:27:\"Matt: Post Status Interview\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:22:\"https://ma.tt/?p=47650\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:44:\"https://ma.tt/2017/11/post-status-interview/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:676:\"<p>In the lead-up <a href=\"https://2017.us.wordcamp.org/\">to WordCamp US</a> we&#x27;re in right now <a href=\"https://poststatus.com/interview-matt-mullenweg-wordpress-ecosystem-draft-podcast/\">I chatted with Brian Krogsgard at Post Status in an hour podcast</a> and we spoke about the core releases this year, Gutenberg, React, WooCommerce, and WordPress.org. On the 29th I&#x27;ll be <a href=\"https://wptavern.com/\">talking to WP Tavern</a>, so tune in then as well. For something completely different, I was on the <a href=\"https://offrcrd.com/episodes/matt-mullenweg/\">new OFF RCRD podcast with Cory Levy about the earliest days at Automattic and entrepreneurship</a>.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 15 Nov 2017 17:06:57 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"Matt\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:10;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:85:\"HeroPress: My journey to WordPress taught me that my talents are best used elsewhere.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:56:\"https://heropress.com/?post_type=heropress-essays&p=2269\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:178:\"https://heropress.com/essays/journey-wordpress-taught-talents-best-used-elsewhere/#utm_source=rss&utm_medium=rss&utm_campaign=journey-wordpress-taught-talents-best-used-elsewhere\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:10329:\"<img width=\"960\" height=\"480\" src=\"https://heropress.com/wp-content/uploads/2017/11/111517-1024x512.jpg\" class=\"attachment-large size-large wp-post-image\" alt=\"Pull Quote: Together we\'ll create the future of WordPress.\" /><p>My first website was built using Frontpage. Then I discovered Geocities, which at the time made it easy to break and fix code and have it instantly live for others to find on the world wide web. It was an optimal learning environment for me. I learned HTML and CSS by copying, pasting, and then tweaking every which way until it was doing something absurd like flashing hot pink text. It was the Wild West and there were no real rules yet except for those in this new language.</p>\n<blockquote><p>Like any language, I was learning little by little in search of ways to bend the rules and “speak” like a native.</p></blockquote>\n<p>I only coded for fun, but many years later, I made a website for a job. I used Dreamweaver because I was told all professionals used Dreamweaver. I found it easy to use, much easier than Frontpage, especially for building a larger more complex website. I started learning how to read PHP and doing a lot of what was needed in the metadata and the code for basic SEO.</p>\n<h3>Finding WordPress</h3>\n<p>Fast forward another few years. I set up several free sites for nonprofits using Webs, Weebly, other page builders whose names I can’t recall, Joomla, and then, one day I stumbled upon WordPress. I wasn’t sure if I liked it at first because the out of the box theme was ugly and I couldn’t figure out how to manipulate it. Then, I found a theme on Themeforest that installed the styles and the demo content. This was worth the $30. This gave me the ability to tweak the theme because I knew enough HTML and CSS to change things in the file editor. I was still coding like I did in my Geocities days, only my aesthetics had improved.</p>\n<p>I cringe relaying that experience now. I knew enough to be really dangerous. I didn’t do any form of version control, I didn’t do any backups, I didn’t vet my plugins, or even know how to properly vet my plugins.</p>\n<blockquote><p>I am so lucky nothing went terribly wrong.</p></blockquote>\n<p>On one hand, WordPress gave me an easy way to dive right in and do everything on my own. On the other hand, it made it too easy for me to download bad plugins, edit things I probably should not have been touching, and in the end, I guess that’s okay because when I was serious about maintaining a website, I did take the time to learn more about what I needed to know.</p>\n<h3>Finding What I Needed</h3>\n<p>What I know today is that I am not a developer. I’m not even a designer. I have fun with the creation process, but there are other people who are much more talented and efficient in those processes and I’m happy to pay them for their expertise. I have learned what I need to know about the framework and can talk to designers and developers about what I’m looking for and ensure they know what they’re doing. I can pick out reliable themes and plugins. I can advise our clients, who are mostly nonprofits and social enterprises, on the best path for a sustainable website. I understand the need for disaster recovery, backups, and security. I understand the value of paid premium licenses and ongoing support.</p>\n<p>These are all things that in my days of starting out I didn’t know I needed. Even if someone tried to explain it to me, I probably wouldn’t have felt that I needed them. Sometimes I can be stubborn and I need to experience the pain points myself before I buy into what everyone else is saying. I used to learn best from failure.</p>\n<blockquote><p>I still learn from failure, but when it comes to WordPress, I have also surrounded myself with a community who help me grow and learn.</p></blockquote>\n<p>In 2013, I started attending the Fort Worth WordPress meetup. The group was still pretty small at the time, but they were very inviting. I picked up some new tips and tricks that I used right away. While my eyes glazed over at some of the more advanced details, I understood the possibilities and that the work was beyond my capabilities. I learned how to ask for help with those things. Remember, I’m not a designer or a developer, so this meant hiring for those skills from the network of people I met in the WordPress community.</p>\n<p>Over the last 4 ½ years I’ve been able to sell numerous WordPress projects and some of them are incredibly custom and complex. In return, I’ve been able to provide freelance work for members of my community; I’ve been able to give back via WordCamps sharing my experience with project scoping, sales, and negotiations. We all have something of value to share. No matter your area of expertise, you can give something back to the community.</p>\n<h3>The Real Value</h3>\n<p>The best thing about WordPress is not the tool itself. It’s the people who use it or are wanting to try it. The WordPress community is what makes WordPress and WordCamps really great. My hope is that as a community we can help WordPress evolve and adapt and that we can leverage technology, including WordPress, for the greater good.</p>\n<p>We’ve already done this and that’s why WordPress powers almost 30% of the web. We’ve been doing it for years, but the technology landscape is changing rapidly. Are we keeping up?</p>\n<p>A few weeks ago, Chris Lema asked me and a group of other WordPressers, “What could destroy WordPress, and how would you fix it?” We answered this a number of ways and you’ve probably come up with your own answer. My answer? I think that the evolution of technology could destroy WordPress.</p>\n<p>To fix that we would need to evolve, dream big, and create the innovative changes that would keep WordPress alive. We can’t wait until the changes are already in place. It would take far too long for such a large ecosystem to catch up, and in the meantime, it would start to disappear. Look at Kodak; my kids don’t even know what a Kodak moment is. That’s just sad.</p>\n<h3>What is our dream as a community?</h3>\n<p>Will people talk about WordPress in the past tense or will we find ways to help it thrive?</p>\n<p>Even as we work towards the same dream, there are still complex challenges to overcome. We’ll likely fail many times as we try to innovate. This is actually good; we’ll learn from those mistakes, but we might become jaded. We’ll certainly have moments of frustration. We might even try another framework, and the grass might actually be greener on the other side. Yet, the fact that we are such a close knit community sets us apart.</p>\n<blockquote><p>Imagine what could happen if a community this large banded together towards one dream.</p></blockquote>\n<p>We could pave a path towards something really great. It feels like a huge undertaking. It’s something that could paralyze us if we tried to get it “right” before we started. The key is to set common goals, but to individually start working and living on purpose. Then, we can come together in a more meaningful way.</p>\n<p>In my recent keynote at WordCamp DFW I shared a bit of my heritage and my life story so that people could understand my passion for social impact. Everyone has a story that makes them a unique fit to tackle different challenges. When we put our collective skills together, we can make a difference.</p>\n<p>John F. Kennedy said, “One person can make difference, and everyone should try,” and Nelson Mandela said, “It is in our hands to make a difference.”</p>\n<p>Many paths have been paved so that we could live in a different world. Now, our dreams pave the way for future. Together we’ll create the future of WordPress.</p>\n<div class=\"rtsocial-container rtsocial-container-align-right rtsocial-horizontal\"><div class=\"rtsocial-twitter-horizontal\"><div class=\"rtsocial-twitter-horizontal-button\"><a title=\"Tweet: My journey to WordPress taught me that my talents are best used elsewhere.\" class=\"rtsocial-twitter-button\" href=\"https://twitter.com/share?text=My%20journey%20to%20WordPress%20taught%20me%20that%20my%20talents%20are%20best%20used%20elsewhere.&via=heropress&url=https%3A%2F%2Fheropress.com%2Fessays%2Fjourney-wordpress-taught-talents-best-used-elsewhere%2F\" rel=\"nofollow\" target=\"_blank\"></a></div></div><div class=\"rtsocial-fb-horizontal fb-light\"><div class=\"rtsocial-fb-horizontal-button\"><a title=\"Like: My journey to WordPress taught me that my talents are best used elsewhere.\" class=\"rtsocial-fb-button rtsocial-fb-like-light\" href=\"https://www.facebook.com/sharer.php?u=https%3A%2F%2Fheropress.com%2Fessays%2Fjourney-wordpress-taught-talents-best-used-elsewhere%2F\" rel=\"nofollow\" target=\"_blank\"></a></div></div><div class=\"rtsocial-linkedin-horizontal\"><div class=\"rtsocial-linkedin-horizontal-button\"><a class=\"rtsocial-linkedin-button\" href=\"https://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fheropress.com%2Fessays%2Fjourney-wordpress-taught-talents-best-used-elsewhere%2F&title=My+journey+to+WordPress+taught+me+that+my+talents+are+best+used+elsewhere.\" rel=\"nofollow\" target=\"_blank\" title=\"Share: My journey to WordPress taught me that my talents are best used elsewhere.\"></a></div></div><div class=\"rtsocial-pinterest-horizontal\"><div class=\"rtsocial-pinterest-horizontal-button\"><a class=\"rtsocial-pinterest-button\" href=\"https://pinterest.com/pin/create/button/?url=https://heropress.com/essays/journey-wordpress-taught-talents-best-used-elsewhere/&media=https://heropress.com/wp-content/uploads/2017/11/111517-150x150.jpg&description=My journey to WordPress taught me that my talents are best used elsewhere.\" rel=\"nofollow\" target=\"_blank\" title=\"Pin: My journey to WordPress taught me that my talents are best used elsewhere.\"></a></div></div><a rel=\"nofollow\" class=\"perma-link\" href=\"https://heropress.com/essays/journey-wordpress-taught-talents-best-used-elsewhere/\" title=\"My journey to WordPress taught me that my talents are best used elsewhere.\"></a></div><p>The post <a rel=\"nofollow\" href=\"https://heropress.com/essays/journey-wordpress-taught-talents-best-used-elsewhere/\">My journey to WordPress taught me that my talents are best used elsewhere.</a> appeared first on <a rel=\"nofollow\" href=\"https://heropress.com\">HeroPress</a>.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 15 Nov 2017 12:10:41 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:16:\"Sheryle Gillihan\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:11;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:43:\"Dev Blog: WordPress 4.9 Release Candidate 3\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"https://wordpress.org/news/?p=5184\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:69:\"https://wordpress.org/news/2017/11/wordpress-4-9-release-candidate-3/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:4080:\"<p>The third release candidate for WordPress 4.9 is now available.</p>\n<p>A release candidate (RC) means we think we’re done, but with millions of users and thousands of plugins and themes, it’s possible we’ve missed something. In fact, we did miss some things in RC1 and RC2. This third release candidate was not originally scheduled, but due a number of defects uncovered through your testing of RC2 (thank you!), we are putting out another 4.9 release candidate.</p>\n<p>We hope to ship WordPress 4.9 on <strong>Tuesday, November 14</strong> (that&#8217;s <em>tomorrow</em>) at 23:00 UTC, but we still need your help to get there. If you haven’t tested 4.9 yet, now is the time! If there are additional defects uncovered through testing between now and the release time, we may delay the 4.9 release to the following day.</p>\n<p>To test WordPress 4.9, you can use the <a href=\"https://wordpress.org/plugins/wordpress-beta-tester/\">WordPress Beta Tester</a> plugin or you can <a href=\"https://wordpress.org/wordpress-4.9-RC3.zip\">download the release candidate here</a> (zip).</p>\n<p>We&#8217;ve made <a href=\"https://core.trac.wordpress.org/log/branches/4.9?action=stop_on_copy&mode=stop_on_copy&rev=42178&stop_rev=42133\">just over 20 changes</a> since releasing RC2 last week (as we did between RC1 and RC2). For more details about what’s new in version 4.9, check out the <a href=\"https://wordpress.org/news/2017/10/wordpress-4-9-beta-1/\">Beta 1</a>, <a href=\"https://wordpress.org/news/2017/10/wordpress-4-9-beta-2/\">Beta 2</a>, <a href=\"https://wordpress.org/news/2017/10/wordpress-4-9-beta-3/\">Beta 3</a>, <a href=\"https://wordpress.org/news/2017/10/wordpress-4-9-beta-4/\">Beta 4</a>, <a href=\"https://wordpress.org/news/2017/10/wordpress-4-9-release-candidate/\">RC1</a>, and <a href=\"https://wordpress.org/news/2017/11/wordpress-4-9-release-candidate-2/\">RC2</a> blog posts. A few specific areas to test in RC3:</p>\n<ul>\n<li>Switching between the Visual and Text tabs of the editor, and the syncing of the cursor between those two tabs.</li>\n<li>Overriding linting errors in the Customizer&#8217;s Additional CSS editor.</li>\n<li>Adding nav menu items for Custom Links in the Customizer.</li>\n<li>Scheduling customization drafts (stubbed posts/pages) for publishing in the Customizer.</li>\n<li>Autosave revisions for changes in the Customizer.</li>\n<li>About page styling.</li>\n</ul>\n<p><strong>Developers</strong>, please test your plugins and themes against WordPress 4.9 and update your plugin’s <em>Tested up to</em> version in the readme to 4.9. If you find compatibility problems please be sure to post to the support forums so we can figure those out before the final release — we work hard to avoid breaking things. Please see the summative <a href=\"https://make.wordpress.org/core/2017/11/07/wordpress-4-9-field-guide/\">field guide</a> to the 4.9 <a href=\"https://make.wordpress.org/core/tag/4.9+dev-notes/\">developer notes</a> on the <a href=\"https://make.wordpress.org/core/\">core development blog</a>.</p>\n<p>Do you speak a language other than English? <a href=\"https://translate.wordpress.org/projects/wp/dev\">Help us translate WordPress into more than 100 languages!</a></p>\n<p><strong>If you think you’ve found a bug</strong>, you can post to the <a href=\"https://wordpress.org/support/forum/alphabeta\">Alpha/Beta area</a> in the support forums. We’d love to hear from you! If you’re comfortable writing a reproducible bug report, <a href=\"https://make.wordpress.org/core/reports/\">file one on WordPress Trac</a>, where you can also find <a href=\"https://core.trac.wordpress.org/tickets/major\">a list of known bugs</a>.</p>\n<p><em>Didn&#8217;t squash them all <img src=\"https://s.w.org/images/core/emoji/2.3/72x72/1f41b.png\" alt=\"?\" class=\"wp-smiley\" /></em><br />\n<em>We want to release Tuesday</em><br />\n<em>New features not bugs <img src=\"https://s.w.org/images/core/emoji/2.3/72x72/2728.png\" alt=\"✨\" class=\"wp-smiley\" /></em></p>\n<p>Thanks for your continued help testing out the latest versions of WordPress.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 14 Nov 2017 06:53:48 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"Weston Ruter\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:12;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:77:\"WPTavern: iA Writer 5 for iOS Released, Web Collaboration Version Coming Soon\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=76417\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:87:\"https://wptavern.com/ia-writer-5-for-ios-released-web-collaboration-version-coming-soon\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:4453:\"<p><a href=\"https://i1.wp.com/wptavern.com/wp-content/uploads/2017/11/Screen-Shot-2017-11-13-at-3.40.57-PM.png?ssl=1\"><img /></a></p>\n<p><a href=\"https://ia.net/writer/blog/95-keyboard-ia-writer-5/\" rel=\"noopener\" target=\"_blank\">iA Writer 5 for iOS</a> was released last week, nearly a year after <a href=\"https://ia.net/writer/blog/ia-writer-4/\" rel=\"noopener\" target=\"_blank\">version 4</a>. This update is free for those who purchased version 4 from the iOS App Store. iA Writer 5 for Mac is still in the works. The free Android version of the app is receiving incremental improvements that will bring it to parity with version 5 in the near future.</p>\n<p>iA Writer is a plain text writing and editing app that is popular with authors, academics, and long-form writers. It&#8217;s also a favorite among WordPress users who look to third-party apps for to provide a more focused, distraction-free writing environment. In April 2016, version 3.1.4 for Mac and iOS introduced publishing drafts to WordPress.com and Jetpack-powered sites.</p>\n<p>Version 5 focuses on making everything accessible through the keyboard by bringing the Open Quickly feature in iA Writer for Mac to iOS. The app&#8217;s creators said the goal of the design process was to &#8220;allow the writer to do everything without leaving the keyboard, including file handling, export, and all commands.&#8221; The new Quick Search feature is now built into the keyboard bar along with with a fully configurable keyboard. This allows users to quickly do things like create new files, switch to night mode, and export to PDF without leaving the keyboard.</p>\n<p><a href=\"https://i0.wp.com/wptavern.com/wp-content/uploads/2017/11/Screen-Shot-2017-11-12-at-11.20.56-PM.png?ssl=1\"><img /></a></p>\n<p>This release adds new organization features that allow users to select multiple files and folders and move, rename, or delete them from the Library. It also introduces Smart Folders which can be created based on a set of rules. Version 5 <a href=\"https://ia.net/writer/blog/files-in-ios11/\" rel=\"noopener\" target=\"_blank\">adds support for iOS11’s Files system</a>, allowing users to open and edit text files from any storage provider that works with Files. Support for Dropbox, Google Drive, and Box is already available with more providers coming soon.</p>\n<p><a href=\"https://i0.wp.com/wptavern.com/wp-content/uploads/2017/11/Screen-Shot-2017-11-13-at-12.54.33-PM.png?ssl=1\"><img /></a></p>\n<p>The makers of iA Writer are interested in <a href=\"https://ia.net/writer/blog/ia-writer-5-forging-the-hammer/\" rel=\"noopener\" target=\"_blank\">exploring other platforms</a> if there is sufficient interest, including the possibility of creating a Windows version. Demand doesn&#8217;t seem to be very high, as the writing app&#8217;s fans are primarily Apple-only users.</p>\n<blockquote class=\"twitter-tweet\">\n<p lang=\"en\" dir=\"ltr\">How badly do you want a Windows version of iA Writer?</p>\n<p>&mdash; iA Writer (@iAWriter) <a href=\"https://twitter.com/iAWriter/status/920297492280852480?ref_src=twsrc%5Etfw\">October 17, 2017</a></p></blockquote>\n<p></p>\n<p>However, users across multiple platforms have requested a web version of iA Writer, and the company confirmed in September that they are already working on it. After releasing a big Material Design <a href=\"https://ia.net/writer/blog/turbocharged-ia-writer-for-android/\" rel=\"noopener\" target=\"_blank\">update to the iA for Android app </a>in October, the creators said Android users will be the first to have access to the web version:</p>\n<blockquote><p>The biggest request from you was collaboration, in other words, iA Writer for Web. iA Writer for Android will stay free and you will be able to connect and subscribe to the Web version via the app, if you wish to. If you could tell us what you’d expect to pay for it, that would be very helpful&#8230;As part of our commitment to continually improve iA Writer on all platforms, Android will likely be the first to gain access to the upcoming Web collaboration.</p></blockquote>\n<p>The upcoming web version should provide a sort of bridge for users on other desktop platforms without an iA Writer app.</p>\n<p>There&#8217;s no target release date for iA Writer 5 for Mac but iA Inc has <a href=\"https://twitter.com/iA/status/917679399008215041\" rel=\"noopener\" target=\"_blank\">confirmed</a> that it will also be a free update for those who have purchased the previous version.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 13 Nov 2017 22:00:30 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:13;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:92:\"WPTavern: Watch the State of the Woo! After You Give WooCommerce Your Name and Email Address\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=76497\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:102:\"https://wptavern.com/watch-the-state-of-the-woo-after-you-give-woocommerce-your-name-and-email-address\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:1557:\"<p>If you didn&#8217;t watch the live stream or attend <a href=\"https://wooconf.com/\">WooConf</a> in-person, you&#8217;re in luck as videos from the event are starting to come online. The first talk highlights is the <a href=\"https://wptavern.com/woocommerce-stores-on-track-to-surpass-10b-in-sales-this-year\">State of the Woo</a> by Todd Wilkens, Head of WooCommerce. Wilkens shares stats, provides an overview of projects the team is working on, what to expect in new versions, and explains the relationship between WooCommerce and Jetpack.</p>\n<p></p>\n<p>The video is available to watch for free, but viewers must provide their first and last name as well as an email address. Clicking the play button without entering this information displays a message that says Please enter your full name. This is a classic technique used by many internet marketers.</p>\n<p>Although you can provide fake information in order to watch the video for free, I feel it&#8217;s an unnecessary burden. The WooCommerce team could obtain the same information with a form in the post. An alternative to watching the video is reading the company&#8217;s<a href=\"https://woocommerce.com/2017/11/wooconf-state-of-the-woo/?utm_campaign=coschedule&utm_source=twitter&utm_medium=WooCommerce&utm_content=WooConf%3A%20State%20of%20the%20Woo\"> great overview</a> of Wilkens&#8217; session. The team plans to publish other talks from WooConf in the coming weeks.</p>\n<p><strong>Updated November 14th: </strong>An Automattic employee has removed the email form and made it skippable.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 13 Nov 2017 21:25:29 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Jeff Chandler\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:14;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:25:\"Matt: Product and Process\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:22:\"https://ma.tt/?p=47646\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"https://ma.tt/2017/11/product-and-process/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:713:\"<blockquote class=\"wp-block-quote blocks-quote-style-1\">\n<p>When I look back over the last 25 years, in some ways what seems most precious is not what we have made but how we have made it and what we have learned as a consequence of that. I always think that there are two products at the end of a programme; there is the physical product or the service, the thing that you have managed to make, and then there is all that you have learned. The power of what you have learned enables you to do the next thing and it enables you to do the next thing better. — Jony Ive</p>\n</blockquote>\n<p>From the <a href=\"https://www.wallpaper.com/design/jony-ive-apple-park\">Wallpaper article on the new Apple campus</a>.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sat, 11 Nov 2017 05:01:05 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"Matt\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:15;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:110:\"WPTavern: WP-SpamShield Plugin Removed from WordPress.org, Author Plans to Pull All Plugins from the Directory\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=76434\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:120:\"https://wptavern.com/wp-spamshield-plugin-removed-from-wordpress-org-author-plans-to-pull-all-plugins-from-the-directory\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:6048:\"<p>The <a href=\"https://wordpress.org/plugins/WP-SpamShield/\" rel=\"noopener\" target=\"_blank\">WP-SpamShield</a> plugin was removed from the WordPress.org directory this week due to what the Plugin Review Team has deemed a violation of the guidelines and a possible miscommunication.</p>\n<p>Two weeks ago, the author of WP-SPamShield and the author of the Plugin Organizer plugin exchanged contentious remarks in a <a href=\"https://wordpress.org/support/topic/please-remove-code-that-maliciously-disables-wp-spamshield/\" rel=\"noopener\" target=\"_blank\">support forum thread</a> where each accused the other of targeting each others&#8217; plugins. This resulted in both parties adding code that disabled the others&#8217; plugins, and both were asked by the Plugin Team to remove the code.</p>\n<p>WP-SpamShield&#8217;s author, Scott Allen, has <a href=\"https://www.redsandmarketing.com/blog/wp-spamshield-removed-wordpress-org-directory-without-cause/\" rel=\"noopener\" target=\"_blank\">published an account of his interactions with the Plugin Team</a> with updates for users who are monitoring the status of the plugin. Although the team rarely discloses why a plugin was removed, representative Mika Epstein <a href=\"https://wordpress.org/support/topic/plugin-removed-from-repository-6/page/2/#post-9671552\" rel=\"noopener\" target=\"_blank\">responded</a> to Allen when he said he had not received an answer about what guideline the plugin had violated:</p>\n<blockquote><p>Sorry, I thought it was clear that it’s issues regarding the <a href=\"https://wordpress.org/support/guidelines/\" rel=\"noopener\" target=\"_blank\">forum guidelines</a> and rule #9:<br />\n <em>Intentionally attempting to exploit loopholes in the guidelines</em>.</p>\n<p>To whit, you were asked to make a change and did so incompletely. If this was not intentional, then I apologize.</p>\n<p>I’ve sent you a followup email, trying to clarify what we would accept as solutions to the issue (I came up with 3 options, but I’m open to hearing more).</p>\n<p>I understand why you’re angry and we will respect any decision you make regarding this. Nothing that has happened thus far is insurmountable or permanent.</p></blockquote>\n<p>In the post Allen published, he said his experiences with the Plugin Team over the past 10 years have caused him to decide to move his plugins off of WordPress.org. When I contacted him to see if he plans to update his code according to the Plugin Team&#8217;s suggestions, he said he doesn&#8217;t agree with the solutions the team is offering, nor their assessment of the situation.</p>\n<p>&#8220;They really were not solutions,&#8221; Allen said. &#8220;It was just rehashing the same issues we&#8217;d already discussed. Unfortunately, neither Otto nor Mika have the security expertise to be making the dictates they were making, so there were no realistic solutions.&#8221;</p>\n<p>Allen also claimed that Epstein&#8217;s report about him making a change and it being incomplete was not accurate and that the Plugin Team did not seem to be on the same page:</p>\n<blockquote><p>We literally did exactly what they asked and made the changes. Two weeks ago Mika had emailed me and indicated things were good. (No code updates since then.) Then two weeks of silence, and then angry email from Otto out of the blue yesterday telling us it was booted. The issue he brought up was different code.</p>\n<p>The two of them cannot make up their minds on what is acceptable, and what is not. The arbitrary removal was the last straw though. WordPress.org is the only venue that would do that. We repeatedly asked them what rule we broke, to no answer. Only after I called Mika out on the forum did she come up with something &#8211; Rule 9 &#8211; exploiting a loophole in the rules. Seriously? It&#8217;s impossible for developers to comply with rules that are constantly changing.</p></blockquote>\n<p>Allen confirmed that his team at Red Sand Media Group plans to pull all seven of its plugins from WordPress.org as the result of the incident but will continue maintaining and hosting them elsewhere.</p>\n<p>&#8220;Developers cannot operate like that,&#8221; Allen said. &#8220;People depend on us. While it might hurt a bit in the short term, in the long term, we have to do it. There really need to be some major reforms to the way plugins are handled.&#8221;</p>\n<p>WP-SpamShield was installed on more than 100,000 WordPress sites before it was removed. There is currently no standard way to notify users why a plugin was removed from the directory, but the original dispute between the WP-SpamShield and Plugin Organizer authors is public, as well as a few exchanges between Allen and the Plugin Team. Allen said he is still working out the details of how to notify users that his plugins will be hosted elsewhere from now on.</p>\n<p>&#8220;We&#8217;ll come up with a good plan in the next few days,&#8221; he said. &#8220;Some people have been notified already because WordFence let them know yesterday that WPSS was removed. (They knew before I did.)&#8221;</p>\n<p>Samuel &#8220;Otto&#8221; Wood said the Plugin Team is still willing to put Allen&#8217;s plugins back up if he removes the code in question and that the team is not offended by a plugin developer being angry over a decision. At this time Allen appears to be unwilling to comply with the team&#8217;s most recent requests.</p>\n<p>In the meantime, users who know that WP-SpamShield was been removed are waiting to hear if they need to begin looking for a replacement. Allen said that users shouldn&#8217;t need to replace the plugin, since the it will continue to work as before. However, some users are not comfortable installing free plugins hosted outside of WordPress.org. Allen&#8217;s team is figuring out a plan for how they will deliver updates to the plugin and will post more information for users on the <a href=\"https://www.redsandmarketing.com/blog/wp-spamshield-removed-wordpress-org-directory-without-cause/\" rel=\"noopener\" target=\"_blank\">Red Sand Marketing blog</a>.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sat, 11 Nov 2017 04:19:08 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:16;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:103:\"WPTavern: Weglot Passes €44K in Monthly Revenue, Plans to Expand into More CMS and E-commerce Markets\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=76296\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:111:\"https://wptavern.com/weglot-passes-e44k-in-monthly-revenue-plans-to-expand-into-more-cms-and-e-commerce-markets\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:5746:\"<p><a href=\"https://wordpress.org/plugins/weglot/\" rel=\"noopener\" target=\"_blank\">Weglot</a>, a SaaS-based multilingual plugin that entered the WordPress market last year, has <a href=\"http://blog.weglot.com/21000-44000-euro-monthly-company-rises/\" rel=\"noopener\" target=\"_blank\">passed €44,000 in monthly revenue</a>. The company received <a href=\"https://wptavern.com/weglot-multilingual-plugin-closes-450k-in-seed-funding\" rel=\"noopener\" target=\"_blank\">€450K in seed funding</a> in May 2017 and has nearly doubled its user base in the past six months. Co-founder Rémy Berda reports that the plugin is approaching 20,000 users and that more than 20,000 websites are connected to the Weglot API, if you include the company&#8217;s Shopify product and those using the JS script directly.</p>\n<p>WordPress customers currently represent 75% of Weglot&#8217;s revenue with Shopify at 25%, but Berda says the two markets are growing at the same rate. In May, the company&#8217;s customer distribution was primarily in the US and France, which made sense as the product&#8217;s founders are French and Weglot was first marketed to the French WordPress community. Weglot&#8217;s customer distribution has become more global over the past six months and the US has now overtaken France as the strongest market for the multilingual plugin. Canada has also passed Germany, and Berda said he thinks the distribution will eventually align progressively with global WordPress usage.</p>\n<a href=\"https://i1.wp.com/wptavern.com/wp-content/uploads/2017/11/chart-1.png?ssl=1\"><img /></a>Weglot customer distribution as of November 2017\n<p>Despite having only recently entered the WordPress community in a niche with well-established competitors, Weglot&#8217;s cofounders are confident their SaaS approach is the road to success for becoming the best multilingual solution for WordPress. The team is aiming for its product to become the highest rated multilingual plugin in the WordPress directory within the next six months.</p>\n<p><a href=\"https://wpml.org/\" rel=\"noopener\" target=\"_blank\">WPML</a>, a purely commercial product and the most widely used, has been in business since 2009 and is active on more than 500K sites. <a href=\"https://wordpress.org/plugins/polylang/\" rel=\"noopener\" target=\"_blank\">Polylang</a>, a popular free plugin with a commercial option, is installed on more than 300,000 sites and has a 4.7-star rating on WordPress.org. <a href=\"https://wordpress.org/plugins/qtranslate-x/\" rel=\"noopener\" target=\"_blank\">qTranslate X</a> is also a formidable competitor with more than 100,000 active installs and a 4.7-star rating.</p>\n<p>&#8220;For now the two biggest plugins in terms of active installs are WPML and Polylang,&#8221; Berda said. &#8220;Both don&#8217;t have a SaaS approach. Polylang recently released the PRO version (it was only free previously) but it is still sold as a piece of software, not a SaaS. We are convinced that SaaS is the right approach as it allows us to be in constant relation with users and make the product evolve faster. It&#8217;s also healthier in terms of business.&#8221;</p>\n<p>Although he has no precise statistics on how many, Berda said he sees a lot of former WPML and Polylang users (freelancers and agencies) in their support center who have opted to use Weglot on their new projects. This indicates that Weglot may not so much be whittling away at the existing customer base of other plugins but is finding success at attracting customers who are starting new projects.</p>\n<p>In their efforts to stake a claim in the WordPress ecosystem, the Weglot team has found that being active in the community is important to having a successful product.</p>\n<p>&#8220;WordPress is really huge so there is no magical formula for marketing,&#8221; Berda said. &#8220;I think what is important is to accept that it takes time. You must keep improving your product forever while being active in the community and do it not only with high intensity but for a long time.&#8221;</p>\n<p>The €450K in seed funding Weglot received earlier this year has helped the team to expand its support and development team, but it has also made it possible for the company to invest more in the community. They have now sponsored a dozen WordCamps across the world, including WordCamp Europe in Paris.</p>\n<p>Berda&#8217;s advice to other WordPress entrepreneurs who are looking for funding is to consider the option carefully and understand how it will impact the company&#8217;s future and ability to act independently.</p>\n<p>&#8220;My recommendation would be to think twice about raising money as it takes time,&#8221; Berda said. &#8220;It changes your governance and it temporarily distracts you from your number one focus &#8211; your users. Raise only if you are sure you will have a return with the money invested. Not every business need to raise money.&#8221;</p>\n<p>Fueled by their success in the WordPress market, Weglot plans to expand into other CMS and e-commerce markets, including BigCommerce and Jimdo, followed by Drupal, Magento, and Joomla. Berda said the company also plans to release an open version of the API for developers to integrate their non-CMS websites built on technologies like Symfony and Laravel.</p>\n<p>&#8220;In 2018, we will be adding many things: We will start using machine learning to improve the quality of automatic translations,&#8221; Berda said. &#8220;We will also leverage the fact that we are SaaS to add some insights about language usage for the users so they can see what languages are performing better. Finally, we will add extra features to manage multilingual SEO. In terms of monthly recurring revenue, we aim to reach €70,000 in 6 months.&#8221;</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 10 Nov 2017 20:04:34 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:17;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:122:\"WPTavern: Jetpack 5.5 Removes Syntax Highlighting and Gallery Widget for Compatibility with Upcoming WordPress 4.9 Release\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=76369\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:133:\"https://wptavern.com/jetpack-5-5-removes-syntax-highlighting-and-gallery-widget-for-compatibility-with-upcoming-wordpress-4-9-release\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:2878:\"<p><a href=\"https://jetpack.com/2017/11/08/jetpack-5-5-compatibility-enhancements/\" rel=\"noopener\" target=\"_blank\">Jetpack 5.5</a> was released yesterday with several important changes that ensure the plugin is compatible with the upcoming WordPress 4.9 release scheduled for November 14. The plugin will be able to shed some weight, as core improvements will make Jetpack&#8217;s syntax highlighting and gallery widget obsolete.</p>\n<p>WordPress 4.9 incorporates <a href=\"https://codemirror.net/\" rel=\"noopener\" target=\"_blank\">CodeMirror</a>, which brings syntax highlighting, linting, and auto-completion to the built-in code editors. Jetpack 5.5+ will rely on WordPress to handle syntax highlighting and the Custom CSS module has been updated to be fully compatible with <a href=\"https://make.wordpress.org/core/2017/10/22/code-editing-improvements-in-wordpress-4-9/\" rel=\"noopener\" target=\"_blank\">core&#8217;s new code editing improvements</a>.</p>\n<a href=\"https://i0.wp.com/wptavern.com/wp-content/uploads/2017/11/Screen-Shot-2017-11-08-at-12.30.08-PM.png?ssl=1\"><img /></a>image credit: <a href=\"https://make.wordpress.org/core/2017/10/22/code-editing-improvements-in-wordpress-4-9/\">make.wordpress.org</a>\n<p>Jetpack 5.5 also adds compatibility for WordPress 4.9&#8217;s <a href=\"https://wptavern.com/new-core-gallery-widget-targeted-for-wordpress-4-9\" rel=\"noopener\" target=\"_blank\">new core gallery widget</a>. When users update to 4.9, Jetpack will automatically migrate its own <a href=\"https://jetpack.com/support/extra-sidebar-widgets/gallery-widget/\" rel=\"noopener\" target=\"_blank\">gallery widgets</a> to use the widget included in core.</p>\n<p>The release also includes several other changes for compatibility with WordPress 4.9:</p>\n<ul>\n<li>Press This sharing button removed, since the feature is being <a href=\"https://wptavern.com/press-this-removed-from-wordpress-4-9-in-favor-of-a-plugin\" rel=\"noopener\" target=\"_blank\">removed from core in favor of a plugin</a></li>\n<li>Changes to ensure compatibility with <a href=\"https://make.wordpress.org/core/2017/10/15/improvements-for-roles-and-capabilities-in-4-9/\" rel=\"noopener\" target=\"_blank\">role and capability updates in WordPress 4.9</a></li>\n<li>Remove code for processing Contact Form shortcodes in widgets, as <a href=\"https://wptavern.com/wordpress-4-9-will-support-shortcodes-and-embedded-media-in-the-text-widget\" rel=\"noopener\" target=\"_blank\">WordPress adds support for shortcodes in widgets in 4.9</a></li>\n</ul>\n<p>Jetpack 5.5 also improves the connection process between the plugin and WordPress.com, which should reduce recent issue users have experienced when migrating their sites from HTTP to HTTPS. A full list of the changes in this release is available in the plugin&#8217;s <a href=\"https://wordpress.org/plugins/jetpack/#developers\" rel=\"noopener\" target=\"_blank\">changelog</a>.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 08 Nov 2017 20:13:37 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:18;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:43:\"HeroPress: From the Outskirts to an Insider\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:56:\"https://heropress.com/?post_type=heropress-essays&p=2259\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:138:\"https://heropress.com/essays/from-the-outskirts-to-an-insider/#utm_source=rss&utm_medium=rss&utm_campaign=from-the-outskirts-to-an-insider\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:11213:\"<img width=\"960\" height=\"480\" src=\"https://heropress.com/wp-content/uploads/2017/11/110817-1024x512.jpg\" class=\"attachment-large size-large wp-post-image\" alt=\"Pull Quote: WordPress has changed lives. It has given people a voice. It has brought people together.\" /><p>WordPress wasn’t the first blogging platform I tried. My very first blog was set up using Blogspot (now Blogger). I didn’t even know I wanted a blog to tell you the truth. But let me take a step back.</p>\n<p>I am a techie. A very “untechie” techie, but a techie nonetheless. I actually went to university with a plan to study mathematics and become an actuarial scientist (math and money made for a perfect career, I thought). After one year of university-level mathematics, I decided that I was done with the subject and I stuck with the computer science courses I had also taken. It turned out I had a knack for programming and was often found in the computer lab, debugging my friends’ assignments.</p>\n<p>Following my graduation, I worked for several years as a programmer before deciding that I had no interest in coding for the rest of my life. I moved on and up, studying management and information systems, which led me into more managerial positions. On my way there, I decided that I needed to have a personal website. I bought a domain (not my real name though) and starting looking into building my website.</p>\n<p>My very first job out of university had been with a web development company as web administrator, where I had picked up quite a bit of HTML, so I figured it would be easy to just build my own website. While researching the latest and best, it struck me that being able to easily add content would be cool, as I had seen early content management systems used back in that job (Tango, anyone?).</p>\n<h3>Blogging Begins</h3>\n<p>Suddenly my search results were showing me something called blogging. This was 2005, and blogs were still pretty new. I was excited by the concept, that I could have an easy way to put my thoughts out into cyberspace. I signed up for Blogspot and dove in. For all of 2 days. I wanted to change the design and the layout of my new blog, but I couldn’t. I was stuck in the box that Blogspot provided. A little more searching and I found <a href=\"http://wordpress.org/\">WordPress</a>.</p>\n<p>WordPress meant I could install it myself on my own hosting and play around to my heart’s content. It was a techie’s dream. In April 2005, WordPress was at version 1.5 and I was in heaven. I spent days and nights tweaking and customizing my brand new website and blog. I was a WordPresser.</p>\n<p>I was an avid blogger, sharing posts everyday — longer thought-pieces and short asides (who remembers that concept?). The blogging community in Jamaica was small but we were an enthusiastic bunch. Many of my friends were still using other platforms, but I was a diehard WordPress lover. They took comfort in the ease of use of their hosted platforms, while I reveled in being able to completely mess my site up myself (and fix it!).</p>\n<p>I played with themes, and experimented with plugins. Two years later, I was helping other people set up and customize their WordPress blogs, and doing migrations from Blogspot.</p>\n<blockquote><p>I was a WordPress freelancer. I didn’t even know this was a thing people did.</p></blockquote>\n<p>It took me several years before I officially created my freelance consultancy, <a href=\"http://lattitudestudios.com/\">L’Attitude Studios</a> and actually looked to bring in clients.</p>\n<p>Despite the fact that WordPress is the most popular blogging platform in Jamaica, and is used by many web developers to built CMS-based websites, there is not much of a WordPress community. And despite my reading all about WordCamps and community meetups, I didn’t really think of myself as part of an actual community. WordCamps started back in 2006 and there have been hundreds since, but I only went to my first WordCamp in 2016, in Miami.</p>\n<h3>Finding a Place</h3>\n<p>The organizers of <a href=\"http://2016.miami.wordcamp.org/\">WordCamp Miami</a> made me feel so welcome. They were excited to have me come from Jamaica “just” to attend their event. For the first time, I understood that I have a place in the community, not just as a user. I signed up with the WordPress Community team as an organizer of the WordPress Kingston meetups. Full of enthusiasm I came home, ran a survey to find out how people were using WordPress and declared I was starting local meetups. The sound of crickets followed as the interest was low.</p>\n<p>I started a new job and didn’t have time to focus on WordPress, so the meetups fell by the wayside. But I still wanted to contribute. So In 2017, I made the leap to speaking. I decided that there were things I could offer the WordPress community based on my own experiences. <a href=\"https://2017.ottawa.wordcamp.org/\">WordCamp Ottawa</a> became the first WordCamp I spoke at.</p>\n<p>Again, the WordCamp organizers (one of which I had met at WordCamp Miami) were thrilled to have me travel from Jamaica to participate. Funnily, I had to point out to several people that it took less time to get from Jamaica to Ottawa than it did for those traveling from San Francisco.</p>\n<blockquote><p>Everyone I met at WordCamp Ottawa made me feel like a part of the WordPress family, like I belonged.</p></blockquote>\n<p>I still hadn’t got my local meetups going, but I had started making connections in the WordPress space locally. And there seemed to be more interest. I proposed a series of workshops to the organizer of Caribbean Bloggers’ Week. It wouldn’t quite be a WordCamp, which we wouldn’t get permission for, but we could try to do an educational community event to spur interest and raise awareness. <a href=\"http://wpinthecity.com/\">WP in the City</a> was born! Sadly, it had to be postponed, but it will still take shape for 2018.</p>\n<h3>WordCamp US</h3>\n<p>Now bitten by the bug, I set my speaking sights even higher and made a submission to <a href=\"https://2017.us.wordcamp.org/\">WordCamp US</a>. A month later, I was notified that one of my two proposals was accepted. I was to be a <a href=\"https://2017.us.wordcamp.org/speaker/bianca-welds/\">WordCamp US speaker</a>! Now an even bigger part of the WordPress community would be open to me. I set about making plans for Nashville in December.</p>\n<p>By the time you read this, I will be able to announce that I was selected as the recipient of the <a href=\"https://2017.us.wordcamp.org/2017/07/21/kim-parsell-memorial-scholarship-applications-open/\">Kim Parsell Memorial Scholarship</a>. When they notified me, I didn’t even remember I had applied. Kim Parsell was an active member of the WordPress community until her passing in 2015. She was nicknamed “WPMom” because of the care she took in making sure any member of the WordPress community she met felt welcomed and valued.</p>\n<p>Kim was already gone before I actively started taking part in the wider WordPress community. But the community I encountered definitely made me feel welcomed and valued, and now I want to help others feel that way. Going to WordCamp US is going to be an amazing opportunity, in part because of the size and breadth of the community I will get to interact with.</p>\n<h3>Bringing it Home</h3>\n<p>Jamaica is a small country, an island in the middle of the Caribbean sea. Most people know about our biggest stars (like Bob Marley and Usain Bolt), our culture (reggae music and jerk cooking) or our beaches. The people who go usually remember the people. Our community is what makes us a powerhouse. And I want to tap into that for WordPress.</p>\n<p>I want to bring Jamaica into the WordPress community, and bring the WordPress community to Jamaica. I want to get more Jamaicans to WordCamps and actively participating in the WordPress community in other ways (through contributing and meetups).</p>\n<blockquote><p>I want to bring more WordPressers to Jamaica to share and exchange knowledge, not just enjoy the beach.</p></blockquote>\n<p>When I started out, WordPress was just a tool to get me to my goal. For a long time, I didn’t think much about the people behind WordPress, much less considering getting involved myself. Despite my own technical background, I am a newbie where it comes to WordPress development, having remained a tinkerer for much of the last decade. But WordPress is so much more than just code.</p>\n<p>Through WordPress, I have been able to express myself through <a href=\"http://biancawelds.com/blog\">blogging</a> and <a href=\"http://poetry.biancawelds.com/\">poetry</a>. I have been able to help others achieve their own success. I have found people willing to share their knowledge for others (like me) to learn. I have found people willing to hear about my WordPress experiences. I have built a network of contacts always willing to help out.</p>\n<p>Reading through the other essays on HeroPress, it is also clear that WordPress has changed lives. It has given people a voice. It has brought people together.</p>\n<p>WordPress is community. WordPress is my community.</p>\n<div class=\"rtsocial-container rtsocial-container-align-right rtsocial-horizontal\"><div class=\"rtsocial-twitter-horizontal\"><div class=\"rtsocial-twitter-horizontal-button\"><a title=\"Tweet: From the Outskirts to an Insider\" class=\"rtsocial-twitter-button\" href=\"https://twitter.com/share?text=From%20the%20Outskirts%20to%20an%20Insider&via=heropress&url=https%3A%2F%2Fheropress.com%2Fessays%2Ffrom-the-outskirts-to-an-insider%2F\" rel=\"nofollow\" target=\"_blank\"></a></div></div><div class=\"rtsocial-fb-horizontal fb-light\"><div class=\"rtsocial-fb-horizontal-button\"><a title=\"Like: From the Outskirts to an Insider\" class=\"rtsocial-fb-button rtsocial-fb-like-light\" href=\"https://www.facebook.com/sharer.php?u=https%3A%2F%2Fheropress.com%2Fessays%2Ffrom-the-outskirts-to-an-insider%2F\" rel=\"nofollow\" target=\"_blank\"></a></div></div><div class=\"rtsocial-linkedin-horizontal\"><div class=\"rtsocial-linkedin-horizontal-button\"><a class=\"rtsocial-linkedin-button\" href=\"https://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fheropress.com%2Fessays%2Ffrom-the-outskirts-to-an-insider%2F&title=From+the+Outskirts+to+an+Insider\" rel=\"nofollow\" target=\"_blank\" title=\"Share: From the Outskirts to an Insider\"></a></div></div><div class=\"rtsocial-pinterest-horizontal\"><div class=\"rtsocial-pinterest-horizontal-button\"><a class=\"rtsocial-pinterest-button\" href=\"https://pinterest.com/pin/create/button/?url=https://heropress.com/essays/from-the-outskirts-to-an-insider/&media=https://heropress.com/wp-content/uploads/2017/11/110817-150x150.jpg&description=From the Outskirts to an Insider\" rel=\"nofollow\" target=\"_blank\" title=\"Pin: From the Outskirts to an Insider\"></a></div></div><a rel=\"nofollow\" class=\"perma-link\" href=\"https://heropress.com/essays/from-the-outskirts-to-an-insider/\" title=\"From the Outskirts to an Insider\"></a></div><p>The post <a rel=\"nofollow\" href=\"https://heropress.com/essays/from-the-outskirts-to-an-insider/\">From the Outskirts to an Insider</a> appeared first on <a rel=\"nofollow\" href=\"https://heropress.com\">HeroPress</a>.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 08 Nov 2017 12:00:01 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"Bianca Welds\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:19;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:48:\"WPTavern: How to Whitelist Comments in WordPress\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=76372\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:59:\"https://wptavern.com/how-to-whitelist-comments-in-wordpress\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:1078:\"<p>Out-of-the-box, WordPress provides the ability to blacklist comments or configure a set of options to send comments to moderation. If all comments are moderated, there are no options to whitelist comments.</p>\n<p>Searching the plugin directory for comment whitelisting provides few, if any, solutions. However, a cursory search of Google led me to the <a href=\"https://wordpress.org/plugins/comment-whitelist/\">Comment Whitelist</a> plugin by Alejandro Carravedo.</p>\n<img />Comment Whitelist Box\n<p>Comment Whitelist adds a &#8216;Put in Whitelist&#8217; quick moderation link to comments that makes adding email addresses to the list an easy task. One thing to keep in mind is that the whitelist uses email addresses and it&#8217;s possible comments from people impersonating whitelisted users may get published.</p>\n<p>Despite not being updated in more than nine years, the plugin works as advertised. You&#8217;ll need to download the zip file and manually install it as you won&#8217;t be able to find it by searching the plugin directory from the WordPress backend.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 08 Nov 2017 02:50:31 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Jeff Chandler\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:20;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:84:\"WPTavern: Gutenberg Contributors Explore Alternative to Using iframes for Meta Boxes\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=76302\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:95:\"https://wptavern.com/gutenberg-contributors-explore-alternative-to-using-iframes-for-meta-boxes\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:9834:\"<p>The <a href=\"https://wptavern.com/gutenberg-contributors-discuss-the-drawbacks-of-using-iframes-for-meta-boxes\" rel=\"noopener\" target=\"_blank\">discussion surrounding the use of iframes for meta boxes in Gutenberg</a> became more heated over the weekend, as concerned developers implored the team to consider the detriments of the current approach. Responses from Gutenberg&#8217;s leadership initially deflected concerns, presenting the iframe implementation as <a href=\"https://github.com/WordPress/gutenberg/issues/3304#issuecomment-341400365\" rel=\"noopener\" target=\"_blank\">an experiment that &#8220;works &#8216;for now\'&#8221;</a> but isn&#8217;t what the team would ship.</p>\n<p>Instead of getting a response to the specific concerns about performance and accessibility of the iframes approach, Kevin Hoffman was urged to think about the future of meta boxes and &#8220;the cases (if any) that would not be converted to blocks.&#8221; When the developer community is repeatedly asked to test and offer feedback but is met with deflection on issues that are critical to sites using WordPress as a CMS, the GitHub discussions begin to get more heated.</p>\n<p>&#8220;People are worried, and getting frustrated and it seems to me that they have every right to do so because the perception is that the team working on Gutenberg has little understanding of how meta boxes are being used, little concern for what the impact will be, and is going to move forward with their vision no matter what,&#8221; Jimmy Smutek, lead developer at the office of external affairs at Johns Hopkins, said in response to a Gutenberg collaborators&#8217; admission to having been <a href=\"https://github.com/WordPress/gutenberg/issues/3304#issuecomment-341922758\" rel=\"noopener\" target=\"_blank\">dismissive of feedback</a>.</p>\n<p>After several rounds of developers joining the thread to debunk the notion that iframes for meta boxes &#8220;work for now,&#8221; Gutenberg lead developer Matias Ventura <a href=\"https://github.com/WordPress/gutenberg/issues/3304#issuecomment-342129195\" rel=\"noopener\" target=\"_blank\">joined the discussion</a> yesterday and confirmed that the experiment is likely to be dropped fairly soon.</p>\n<p>&#8220;I&#8217;m glad the conversation refocused in the end to the topic&#8217;s issue: is the current approach to meta-boxes in an iframe viable? With the answer being no,&#8221; Ventura said. &#8220;The iframes are an implementation detail I think we can drop relatively easy. So let&#8217;s focus on that.&#8221;</p>\n<p>He also addressed the popular opinion that WordPress should make iterative enhancements to the editor itself (and not the full page) before proceeding with overhauling meta boxes.</p>\n<p>&#8220;What some people have called as the pragmatic approach is not concomitant with the design direction this project has had from the start — heading towards full site customization — and what has dictated our decisions so far,&#8221; Ventura said. &#8220;Nothing here has to be a final solution, we are exploring what is possible within the design premises and putting it out there for testing.&#8221;</p>\n<p>Ventura said that not making changes to the other aspects of the edit screen would certainly be the simplest path for Gutenberg to take but that it &#8220;would not be fair to the goals of the project and the long term users of WordPress.&#8221;</p>\n<p>WordPress developer Gary Jones contended that pursuing a more iterative approach would not change the goals of the project but would make it possible for more sites to come along during the process.</p>\n<p>&#8220;Going one step at a time does not, in any way, compromise the goals of the project,&#8221; Jones said. &#8220;You can still head to full-size customization if that&#8217;s the goal, but by doing it in a stepped way, you&#8217;ll bring the rest of the developer community along with you.&#8221; Jones cited the Customizer as an example of a feature within WordPress with a concept that is being realized over time with many iterations.</p>\n<p>Ventura responded with clarification on the Gutenberg team&#8217;s approach to iterating on the project, a paradigm shift that supports block-based content creation from the outset.</p>\n<p>&#8220;We have proposed a staged approach, from Matt&#8217;s original new focuses post, it just considers the steps differently,&#8221; Ventura said. &#8220;There are generally three stages for the Gutenberg project: from the post editor, to page templates, to site building. What is primordial is that the paradigm is one where the content is a single area, with the block as the primary concept, and where the outcome can be visually represented with clarity and without excessive abstractions.&#8221;</p>\n<p>Ventura also assured those following along on the discussion that the project will not be dropping support for meta boxes but needs more time to experiment with different interface options.</p>\n<p>&#8220;WordPress always moves with the user, and we take the burden of figuring out development paths to ease transitions for our existing code,&#8221; he said. &#8220;As a project, we have said before that we were not dropping support for meta-boxes from WordPress, but also that we had to explore what interface decisions we would have to make within the new paradigm, including the possibility of loading the classic editor when we detect meta-boxes we cannot handle or that directly conflict with an editor that seeks to more clearly delineate what is content and what is meta-data.&#8221;</p>\n<p>He also said the team plans to create more mechanisms to handle incompatibilities as well as &#8220;allowing more things to be opt-in (say if you are comfortable with your meta-boxes showing in Gutenberg you could declare support for it, or vice versa.&#8221;</p>\n<p>A new approach to rendering meta boxes without using iframes is currently underway. Riad Benguella has created <a href=\"https://github.com/WordPress/gutenberg/pull/3345\" rel=\"noopener\" target=\"_blank\">a pull request that attempts to undo the iframes</a> and implement <a href=\"https://github.com/WordPress/gutenberg/issues/3304#issuecomment-342023452\" rel=\"noopener\" target=\"_blank\">a suggestion that Tom Nowell offered</a> during the discussion:</p>\n<blockquote><p>Instead of loading Gutenberg on a settings page, lets load it into the main classic editors page, load metaboxes in their native environment, then hoist their container DOM node into a component via JS.</p>\n<p>We then use a different kind of toggle to make sure the classic editor can still be used. This way:</p>\n<p>&#8211; we avoid the iframe nonsense<br />\n&#8211; metaboxes work as they always have done as far as registration is concerned<br />\n&#8211; the existing JS works as expected, and no hacks are necessary to make things work on the PHP end</p></blockquote>\n<p>The new approach has the advantage of no problems with links, modals, duplicate stylesheets, and the other drawbacks to using iframes.</p>\n<h3>The Gutenberg Team Needs a New Communication Strategy</h3>\n<p>The discussion regarding the long-term viability of using iframes for meta boxes has highlighted a lack of a unified message or communication strategy among Gutenberg leads. Collaborators on the project <a href=\"https://github.com/WordPress/gutenberg/issues/3304#issuecomment-341922758\" rel=\"noopener\" target=\"_blank\">have grown impatient</a> with the community for not grasping the vision, but communication is scattered across various blogs, comments, Slack channels, and GitHub discussions.</p>\n<p>Morten Rand-Hendriksen has opened a new <a href=\"https://github.com/WordPress/gutenberg/issues/3354\" rel=\"noopener\" target=\"_blank\">issue</a> requesting a centralized resource that can serve as a plain language outline of Gutenberg&#8217;s scope, direction, and goals.</p>\n<p>&#8220;My observation is the community is struggling to see the wider scope of the Gutenberg project due to lack of a single authoritative plain language resource containing this information,&#8221; Rand-Hendriksen said. &#8220;This creates a high degree of speculation, miscommunication, and frustration from all parties and the project suffers as a consequence.&#8221;</p>\n<p>Gutenberg does have a documentation hub, but so far those documents are more technical and lack a practical roadmap for how the team is aiming to accomplish its goals. The <a href=\"http://gutenberg-devdoc.surge.sh/reference/faq/\" rel=\"noopener\" target=\"_blank\">FAQ section</a> of the current docs is the closest thing to the plain language resource that Rand-Hendriksen is requesting in his ticket. The readme.txt files for both Gutenberg&#8217;s GitHub repository and the WordPress.org plugin give the impression that the project is simply updating the current editor to be block-based, not overhauling the entire editor screen.</p>\n<p>&#8220;Due to the fractured nature of this information it is challenging for anyone to get a clear picture of the entire project, and though Matias and Matt&#8217;s posts do a good job at explaining the grand vision of the project, they lack concrete plain language breakdowns of the essentials the community need to get a firm understanding of what this project is and where it&#8217;s headed,&#8221; Rand-Hendriksen said. &#8220;They also exist as independent satellites of information circling the project rather than core parts of the project itself.&#8221;</p>\n<p>The community is chiming in on the GitHub <a href=\"https://github.com/WordPress/gutenberg/issues/3354\" rel=\"noopener\" target=\"_blank\">issue</a> with questions they would like to see answered in a more transparent plain language product roadmap. A document like this might help the Gutenberg team to better communicate the goals of the project and avoid sending mixed messages that cause unnecessary confusion.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 07 Nov 2017 22:58:16 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:21;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:67:\"WPTavern: Harare and Nairobi Host 2nd Round of Successful WordCamps\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=76322\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:78:\"https://wptavern.com/harare-and-nairobi-host-2nd-round-of-successful-wordcamps\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:6675:\"<a href=\"https://i0.wp.com/wptavern.com/wp-content/uploads/2017/11/wordcamp-nairobi-2017.jpg?ssl=1\"><img /></a>photo credit: <a href=\"https://twitter.com/wordcampnairobi/status/926817401374523392/photo/1\">WordCamp Nairobi</a>\n<p>Six WordCamps were held over the weekend in cities across the globe, including two in Africa where WordPress events are just starting to take off. Harare and Nairobi hosted their second WordCamps in areas where the WordPress community was virtually non-existent two years ago.</p>\n<p>Harare&#8217;s first camp was part of the WordCamp Incubator program the first year it launched. Nairobi was one of a handful of cities on the short list for the same program but ended up organizing its first camp independently in December 2016. Both communities have continued to flourish, as local leadership and meetup groups have grown.</p>\n<p>Topics at both Harare and Nairobi WordCamps included freelancing, blogging, marketing, and community, with a sprinkling of more technical sessions. <a href=\"https://www.weforum.org/agenda/2017/05/blogging-a-new-frontier-for-african-millennials/\" rel=\"noopener\" target=\"_blank\">Blogging is a popular activity in Africa</a> and those in the local WordPress community are eager to share what they have learned in maintaining and marketing their blogs.</p>\n<blockquote class=\"twitter-tweet\">\n<p lang=\"en\" dir=\"ltr\">Got inspired on&#8230;. <a href=\"https://twitter.com/hashtag/WordCampNairobi?src=hash&ref_src=twsrc%5Etfw\">#WordCampNairobi</a> by <a href=\"https://twitter.com/Jeanwandimi?ref_src=twsrc%5Etfw\">@Jeanwandimi</a> with her Cooperate Blogging Success with WordPress. <a href=\"https://t.co/m1YvcUkU66\">pic.twitter.com/m1YvcUkU66</a></p>\n<p>&mdash; Victor Owuor (@victoravikobits) <a href=\"https://twitter.com/victoravikobits/status/926839909331107840?ref_src=twsrc%5Etfw\">November 4, 2017</a></p></blockquote>\n<p></p>\n<p><a href=\"https://i1.wp.com/wptavern.com/wp-content/uploads/2017/11/beaton.jpg?ssl=1\"><img /></a>&#8220;This year the WordCamp was bigger and better than last year, the tickets sold out, and a local company ZOL Fibroniks was a gold sponsor,&#8221; WordCamp Harare speaker <a href=\"https://becomingthemuse.wordpress.com/2017/11/06/of-a-wordcamp-over-coffee/\" rel=\"noopener\" target=\"_blank\">Beaton Mabaso</a> said. &#8220;The future looks bright. Hello, 2018 is looking promising.&#8221;</p>\n<p>Mabaso is an admin on <a href=\"https://afrobloggers.wordpress.com/\" rel=\"noopener\" target=\"_blank\">Afrobloggers</a>, a blogging community that connects creatives across the continent. He brought his storytelling skills to his WordCamp session titled &#8220;A website is a conversation.&#8221;</p>\n<p>&#8220;One of the best things about a WordCamp is meeting the community, networking, and making new friends,&#8221; Mabaso said. &#8220;It&#8217;s inspiring seeing people representing their grind, opportunities everywhere.&#8221;</p>\n<blockquote class=\"twitter-tweet\">\n<p lang=\"en\" dir=\"ltr\">Really enjoying the amazing learning and networking opportunity at <a href=\"https://twitter.com/hashtag/WordCampNairobi?src=hash&ref_src=twsrc%5Etfw\">#WordCampNairobi</a> <img src=\"https://s.w.org/images/core/emoji/2.3/72x72/1f64c-1f3fd.png\" alt=\"??\" class=\"wp-smiley\" /> <a href=\"https://t.co/4ygb5LRJib\">pic.twitter.com/4ygb5LRJib</a></p>\n<p>&mdash; FOI<img src=\"https://s.w.org/images/core/emoji/2.3/72x72/2b50.png\" alt=\"⭐\" class=\"wp-smiley\" /> (@WambuiFoi) <a href=\"https://twitter.com/WambuiFoi/status/926823454480859137?ref_src=twsrc%5Etfw\">November 4, 2017</a></p></blockquote>\n<p></p>\n<blockquote class=\"twitter-tweet\">\n<p lang=\"en\" dir=\"ltr\">WorldCamp is the highlight of my year as a programmer. l have gained so much already.<br />Cant even wait for the next one.<img src=\"https://s.w.org/images/core/emoji/2.3/72x72/1f601.png\" alt=\"?\" class=\"wp-smiley\" /><img src=\"https://s.w.org/images/core/emoji/2.3/72x72/1f601.png\" alt=\"?\" class=\"wp-smiley\" /><img src=\"https://s.w.org/images/core/emoji/2.3/72x72/1f601.png\" alt=\"?\" class=\"wp-smiley\" /> <a href=\"https://twitter.com/hashtag/WCHRE?src=hash&ref_src=twsrc%5Etfw\">#WCHRE</a> <a href=\"https://twitter.com/hashtag/wchre2017?src=hash&ref_src=twsrc%5Etfw\">#wchre2017</a> <a href=\"https://t.co/Z1XfKGXjBj\">pic.twitter.com/Z1XfKGXjBj</a></p>\n<p>&mdash; Thelma (@thelmachido1) <a href=\"https://twitter.com/thelmachido1/status/927056916571934720?ref_src=twsrc%5Etfw\">November 5, 2017</a></p></blockquote>\n<p></p>\n<p><a href=\"https://2017.nairobi.wordcamp.org/\" rel=\"noopener\" target=\"_blank\">WordCamp Nairobi</a> was originally scheduled for October 14-15 but was <a href=\"https://2017.nairobi.wordcamp.org/postponed-wordcamp-nairobi-2017/\" rel=\"noopener\" target=\"_blank\">postponed</a> to November 4-5 for the safety of attendees during the repeat Presidential elections that took place October 17. Even with the change of dates, the camp was still a success.</p>\n<p>&#8220;We made it despite the challenges that came with the political climate in the country that affected much of the planning,&#8221; WordCamp Nairobi organizer Chekumbe Emmanuel said. &#8220;I am so proud of our local WordPress community for showing up in full force.&#8221;</p>\n<blockquote class=\"twitter-tweet\">\n<p lang=\"en\" dir=\"ltr\"><a href=\"https://twitter.com/hashtag/WordCampNairobi?src=hash&ref_src=twsrc%5Etfw\">#WordCampNairobi</a> <a href=\"https://twitter.com/wordcampnairobi?ref_src=twsrc%5Etfw\">@wordcampnairobi</a> amazing interactive platform full of great ideas on online content. <a href=\"https://t.co/oa2SBtB5Xq\">pic.twitter.com/oa2SBtB5Xq</a></p>\n<p>&mdash; ACE PHOTOGRAPHY KE<img src=\"https://s.w.org/images/core/emoji/2.3/72x72/2122.png\" alt=\"™\" class=\"wp-smiley\" /> (@acephotographyk) <a href=\"https://twitter.com/acephotographyk/status/926770391128969216?ref_src=twsrc%5Etfw\">November 4, 2017</a></p></blockquote>\n<p></p>\n<p>Only a handful of attendees have published wrap up posts so far, but browsing the <a href=\"https://twitter.com/hashtag/wchre?src=hash\" rel=\"noopener\" target=\"_blank\">#wchre</a> and <a href=\"https://twitter.com/hashtag/WordCampNairobi?src=hash\" rel=\"noopener\" target=\"_blank\">#WordCampNairobi</a> hashtags on Twitter show how successful the camps were at connecting and inspiring the local communities. The WordCamp Incubator Program was instrumental in helping put Harare on the WordCamp map in 2016, along with Denpasar and  Medellín. Incubator volunteers are currently <a href=\"https://wptavern.com/wordcamp-incubator-program-gears-up-for-round-2\" rel=\"noopener\" target=\"_blank\">gearing up for a second year</a> of jump starting new WordPress communities and a call for 2018 candidates is anticipated soon.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 07 Nov 2017 06:09:44 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:22;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:43:\"Dev Blog: WordPress 4.9 Release Candidate 2\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"https://wordpress.org/news/?p=5047\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:69:\"https://wordpress.org/news/2017/11/wordpress-4-9-release-candidate-2/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3361:\"<p>The second release candidate for WordPress 4.9 is now available.</p>\n<p>A release candidate (RC) means we think we’re done, but with millions of users and thousands of plugins and themes, it’s possible we’ve missed something. We hope to ship WordPress 4.9 on <strong>Tuesday, November 14</strong> (just over <em>one week</em> from now), but we need your help to get there. If you haven’t tested 4.9 yet, now is the time!</p>\n<p>To test WordPress 4.9, you can use the <a href=\"https://wordpress.org/plugins/wordpress-beta-tester/\">WordPress Beta Tester</a> plugin or you can <a href=\"https://wordpress.org/wordpress-4.9-RC2.zip\">download the release candidate here</a> (zip).</p>\n<p>We&#8217;ve made <a href=\"https://core.trac.wordpress.org/log/trunk/?action=stop_on_copy&mode=stop_on_copy&rev=42124&stop_rev=42049&limit=100&sfp_email=&sfph_mail=\">just over 20 changes</a> since releasing RC 1 last week. For more details about what’s new in version 4.9, check out the <a href=\"https://wordpress.org/news/2017/10/wordpress-4-9-beta-1/\">Beta 1</a>, <a href=\"https://wordpress.org/news/2017/10/wordpress-4-9-beta-2/\">Beta 2</a>, <a href=\"https://wordpress.org/news/2017/10/wordpress-4-9-beta-3/\">Beta 3</a>, <a href=\"https://wordpress.org/news/2017/10/wordpress-4-9-beta-4/\">Beta 4</a>, and <a href=\"https://wordpress.org/news/2017/10/wordpress-4-9-release-candidate/\">RC1</a> blog posts. Specific areas to test in RC2:</p>\n<ul>\n<li>Theme installation in the Customizer.</li>\n<li>Scheduling changes for publishing in the Customizer.</li>\n<li>Switching themes with live preview in the Customizer.</li>\n</ul>\n<p><strong>Developers</strong>, please test your plugins and themes against WordPress 4.9 and update your plugin’s <em>Tested up to</em> version in the readme to 4.9. If you find compatibility problems please be sure to post to the support forums so we can figure those out before the final release — we work hard to avoid breaking things. Please see the summative <a href=\"https://make.wordpress.org/core/2017/11/07/wordpress-4-9-field-guide/\">field guide</a> to the 4.9 <a href=\"https://make.wordpress.org/core/tag/4.9+dev-notes/\">developer notes</a> on the <a href=\"https://make.wordpress.org/core/\">core development blog</a>.</p>\n<p>Do you speak a language other than English? <a href=\"https://translate.wordpress.org/projects/wp/dev\">Help us translate WordPress into more than 100 languages!</a></p>\n<p><strong>If you think you’ve found a bug</strong>, you can post to the <a href=\"https://wordpress.org/support/forum/alphabeta\">Alpha/Beta area</a> in the support forums. We’d love to hear from you! If you’re comfortable writing a reproducible bug report, <a href=\"https://make.wordpress.org/core/reports/\">file one on WordPress Trac</a>, where you can also find <a href=\"https://core.trac.wordpress.org/tickets/major\">a list of known bugs</a>.</p>\n<p>This week&#8217;s haiku is courtesy of <a href=\"https://profiles.wordpress.org/melchoyce/\" class=\"mention\"><span class=\"mentions-prefix\">@</span>melchoyce</a>:</p>\n<p><em>We squashed all the bugs <img src=\"https://s.w.org/images/core/emoji/2.3/72x72/1f41b.png\" alt=\"?\" class=\"wp-smiley\" /></em><br />\n<em>But uh, if not, let us know</em><br />\n<em>Also, test your stuff</em></p>\n<p>Thanks for your continued help testing out the latest versions of WordPress.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 07 Nov 2017 05:33:28 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"Weston Ruter\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:23;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:71:\"Akismet: Version 4.0.1 of the Akismet WordPress Plugin Is Now Available\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"http://blog.akismet.com/?p=1978\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:67:\"https://blog.akismet.com/2017/11/06/akismet-wordpress-plugin-4-0-1/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:1232:\"<p>Version 4.0.1 of <a href=\"http://wordpress.org/plugins/akismet/\">the Akismet plugin for WordPress</a> is now available.</p>\n<p>4.0.1 contains a few helpful changes:</p>\n<ul>\n<li>We fixed a bug that could prevent some sites from connecting Akismet using an existing Jetpack connection.</li>\n<li>We added some code to ensure that any pending Akismet-related events are unscheduled if (heaven forbid) the plugin is deactivated.</li>\n<li>Some of the Akismet JavaScript is now run asynchronously in order to increase the speed with which your pages will appear to load.</li>\n</ul>\n<p>Pretty good, right?  To upgrade, visit the Updates page of your WordPress dashboard and follow the instructions. If you need to download the plugin zip file directly, links to all versions are available in <a href=\"http://wordpress.org/plugins/akismet/\">the WordPress plugins directory</a>.</p><br />  <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/akismet.wordpress.com/1978/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/akismet.wordpress.com/1978/\" /></a> <img alt=\"\" border=\"0\" src=\"https://pixel.wp.com/b.gif?host=blog.akismet.com&blog=116920&post=1978&subd=akismet&ref=&feed=1\" width=\"1\" height=\"1\" />\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 06 Nov 2017 20:29:06 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:17:\"Christopher Finke\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:24;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:61:\"WPTavern: WordCamp Europe 2018 Early Bird Tickets Now on Sale\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=76299\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:72:\"https://wptavern.com/wordcamp-europe-2018-early-bird-tickets-now-on-sale\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:2336:\"<p><a href=\"https://i1.wp.com/wptavern.com/wp-content/uploads/2017/11/wordcamp-europe-2018.png?ssl=1\"><img /></a></p>\n<p>WordCamp Europe 2018 has begun <a href=\"https://2018.europe.wordcamp.org/tickets/\" rel=\"noopener\" target=\"_blank\">early bird ticket sales</a> for its sixth edition in Belgrade, Serbia, June 14-16. Attendees who purchase a ticket before December 31, 2017, will receive a limited-edition swag item.</p>\n<p>WordCamp Europe has sold out in many previous years and organizers of the 2017 event in Paris anticipated that it would be the largest event in WordPress history. They expected to host more than 3,000 attendees but the actual number on the ground was 1,900 &#8211; 5% fewer than the 2,000 who attended in Vienna the previous year. WCEU 2017 <a href=\"https://wptavern.com/wordcamp-europe-2017-posts-24-no-show-rate-cites-early-ticket-sales-and-expensive-location\" rel=\"noopener\" target=\"_blank\">posted a 24% no-show rate</a>, which was more than double that of previous years.</p>\n<p>Putting tickets on sale too early was one of the factors that contributed to the Paris event&#8217;s high no-show rate, in addition to higher local sales, an expensive location, and attendees&#8217; problems obtaining visas. This year ticket sales are starting a little later and batches will be staged out into 2018.</p>\n<p>The WCEU organizing team for Belgrade includes <a href=\"https://2018.europe.wordcamp.org/organizers/\" rel=\"noopener\" target=\"_blank\">54 people</a> leading 10 teams to manage sponsors, PR, volunteers, design, and on-site responsibilities. The event has also added a new Attendee Services team that will assist with things like ticket invoices, visa letters, and other services on the ground.</p>\n<p>A batch of <a href=\"https://2018.europe.wordcamp.org/tickets/\" rel=\"noopener\" target=\"_blank\">1,000 early bird tickets</a> were released today and more than 10% have already been purchased on the first day of sales. Tickets are €40.00 and include two days of presentations, lunch, coffee and snacks, a t-shirt, and a ticket to the After Party. The ticket also gives the attendee access to Contributor Day, which will take place the day before the conference and requires a separate sign up. Tickets are non-refundable but can easily be resold or gifted in the event that the purchaser cannot attend.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 06 Nov 2017 19:54:06 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:25;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:86:\"WPTavern: Gutenberg Contributors Discuss the Drawbacks of Using iframes for Meta Boxes\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=76262\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:97:\"https://wptavern.com/gutenberg-contributors-discuss-the-drawbacks-of-using-iframes-for-meta-boxes\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:10883:\"<a href=\"https://i1.wp.com/wptavern.com/wp-content/uploads/2015/12/paper-box.jpg?ssl=1\"><img /></a>photo credit: <a href=\"http://www.flickr.com/photos/32618149@N00/4187722297\">Closed square box, variation</a> &#8211; <a href=\"https://creativecommons.org/licenses/by-nc-sa/2.0/\">(license)</a>\n<p>A lively and productive discussion regarding Gutenberg&#8217;s use of iframes for meta boxes is happening on GitHub. Yesterday, WordPress developer Kevin Hoffman created an issue titled &#8220;<a href=\"https://github.com/WordPress/gutenberg/issues/3304\" rel=\"noopener\" target=\"_blank\">Are iframes a viable long-term solution for meta boxes?</a>&#8221;</p>\n<p>Gutenberg 1.5 introduced <a href=\"https://wptavern.com/gutenberg-1-5-adds-initial-support-for-meta-boxes-makes-gutenberg-the-default-editor\" rel=\"noopener\" target=\"_blank\">initial support for meta boxes</a>. Hoffman identified several issues with iframes that have been popping up as developers have begun testing the current meta box implementation. He did some performance testing that revealed Gutenberg&#8217;s use of iframes triples the number of asset requests, as it enqueues all of the CSS and JS assets in the parent window as well as in all the iframes.</p>\n<a href=\"https://i1.wp.com/wptavern.com/wp-content/uploads/2017/11/gutenberg-iframes-request.png?ssl=1\"><img /></a>image credit: Kevin Hoffman\n<p>&#8220;Generally speaking, iframes have been discouraged in web development for many years for reasons that are well-documented,&#8221; Hoffman said, before citing a litany of issues that plugin developers have already discovered in testing Gutenberg&#8217;s meta box support. &#8220;Can these issues be addressed without requiring modification of the theme or plugin that generates the meta box? We have to consider that third-party code that has powered meta boxes for years may not have the luxury of being updated in order to be compatible within an iframe.&#8221;</p>\n<p>Gutenberg design lead Tammie Lister responded to Hoffman&#8217;s concerns, indicating that the current implementation of meta boxes is simply an experiment and not necessarily what would land in WordPress 5.0:</p>\n<blockquote><p>It&#8217;s good to think a little that what we have today for meta boxes in Gutenberg is an experiment, in many respects it&#8217;s a holding pattern as the project works out the direction to take. In saying that it&#8217;s one that works &#8216;for now&#8217; but isn&#8217;t what we would ship with.</p>\n<p>All the above said, I think it&#8217;s important to look at what in the future metaboxes will be used for. What are the cases (if any) that would not be converted to blocks? Do all metaboxes have to work on mobile? Is there even an alternative interface that we haven&#8217;t explored? I bet there is. Right now, it&#8217;s about looking at those possibilities and getting on a road that works for the state right now and the future state.</p></blockquote>\n<p>The presentation of this implementation as an experiment that &#8220;works for now&#8221; (but would not be shipped) comes as a surprise after Gutenberg 1.5 arrived with the <a href=\"https://make.wordpress.org/core/2017/10/24/whats-new-in-gutenberg-24th-october/\" rel=\"noopener\" target=\"_blank\">announcement</a> that &#8220;this release includes long awaited meta-boxes support (needs testing!)&#8221;</p>\n<p>Hoffman contends that the iframe approach doesn&#8217;t even work &#8216;for now,&#8217; as the issue was opened in order to cite several major ways where it is broken. If Gutenberg moves forward with the current approach, it would require many plugins to be modified in order to be compatible with WordPress 5.0, which Hoffman said would defeat the whole purpose of supporting legacy meta boxes.</p>\n<p>&#8220;I have not seen any evidence to date that suggests meta boxes will continue working with Gutenberg,&#8221; Hoffman said. &#8220;If the answer is no, then we ought to stop pretending that 5.0 will be just another WordPress release and start being honest about breaking backwards compatibility.&#8221;</p>\n<p>Edwin Cromley, a collaborator on the project, <a href=\"https://github.com/WordPress/gutenberg/issues/3304#issuecomment-341470058\" rel=\"noopener\" target=\"_blank\">said</a> that the team anticipates that certain themes and plugins will be broken and that it is not possible to accommodate every possible use case. He admitted that the iframe solution may not meet the project&#8217;s goals. Instead, he advocates creating the best experience for the vast majority of users.</p>\n<p>However, the current approach would adversely affect many sites out there that use WordPress primarily as a CMS with meta boxes. WordPress core committer Scott Taylor <a href=\"https://github.com/WordPress/gutenberg/issues/3304#issuecomment-341500339\" rel=\"noopener\" target=\"_blank\">expressed concerns</a> about custom post types, many of which do not make use of the traditional &#8220;content&#8221; section in favor of meta boxes only.</p>\n<p>&#8220;In this current iteration, meta box support is an add-on, when in many people&#8217;s reality, meta boxes ARE the UI, the API, the mechanism they use to compose their CMS,&#8221; Taylor said. &#8220;iframes are the gulag.</p>\n<p>&#8220;And we are forgetting the values WP has been built on forever: I should be able to update to the latest version of WP, and have to rewrite nothing. I have so many projects in the wild on WP that I will never touch again. Can I be confident that some of them won&#8217;t break wildly with this change?&#8221;</p>\n<p>Hoffman advocated scaling back the scope of the project to focus on the editor component, a popular opinion that many plugin developers share and one that was illustrated in detail in Yoast&#8217;s post proposing an <a href=\"https://yoast.com/gutenberg-alternative-approach/\" rel=\"noopener\" target=\"_blank\">alternative approach to Gutenberg</a>. This approach stages out the changes to the edit screen, giving developers more time to update their plugins, as well as allowing the Gutenberg team to find an adequate solution for meta boxes.</p>\n<p><a href=\"https://i1.wp.com/wptavern.com/wp-content/uploads/2017/11/gutenberg-scaled-back.png?ssl=1\"><img /></a></p>\n<p>&#8220;I think that goal would be a lot more achievable if Gutenberg stuck to overhauling the editor rather than taking over the entire page,&#8221; Hoffman said. &#8220;Then we could leave the existing hooks in place and meta boxes could continue to communicate with each other as they do now. Also, asset enqueuing would be a non-issue since it would work as it does today.</p>\n<p>&#8220;I&#8217;m in strong agreement with this concept put forth by Yoast, which seems to me like it would maintain much of the work already done while scaling back the scope of the project to focus on the editor component.&#8221;</p>\n<p>Gutenberg engineer Riad Benguella indicated the team is not too keen on working towards this concept.</p>\n<p>&#8220;Reusing Gutenberg pieces to build this concept is relatively doable, but this is not the UX we want to optimize for, we want to build the best possible editor first and make it available for people without backwards compatibility concerns (fresh installs, no metaboxes&#8230;),&#8221; Benguella said.</p>\n<p>&#8220;When we think the ideal vision of Gutenberg is ready to ship, we&#8217;ll have time to discuss upgrade path strategies, a concept like this one is an option for an upgrade path, but definitely not as the final product. Other upgrade paths are also possible.&#8221;</p>\n<p>The WordPress developer community is not, however, in favor of delaying this discussion once again. Many are eager to finally answer the question of how meta boxes will fit into the context of the Gutenberg editor so they know how to prepare. Given the numerous issues with the iframes approach, rendering legacy PHP meta boxes under the new editor will require more experimentation and possibly an alternative solution.</p>\n<p>&#8220;Why devote thousands of hours into developing the ideal editor if it cannot be made compatible with existing sites?&#8221; Hoffman said. &#8220;If the first impression is that it breaks the UI they depend on, users will never experience the ideal editor in the first place.&#8221;</p>\n<p>&#8220;I think it may be a mistake to put this off too far,&#8221; WordPress core committer Aaron Jorbin said. &#8220;Especially since many organizations are going to need at least 1-2 quarters to prepare.&#8221;</p>\n<p>Mark Kaplun suggests the Gutenberg team use a popular plugin as a gauge for the success of current and future meta box support experiments.</p>\n<p>&#8220;My productive suggestion, is to not declare meta boxes ready, as long as Yoast SEO does not properly work in it,&#8221; Kaplun said. &#8220;It is both slightly complex in terms of interactions and it is installed on shit loads of sites. If Gutenberg cannot work with it, probably no one is going to use it.&#8221;</p>\n<p>Greg Schoppe, who has tested and <a href=\"https://gschoppe.com/\" rel=\"noopener\" target=\"_blank\">written extensively on Gutenberg&#8217;s ongoing development</a>, joined the conversation to advocate for Yoast&#8217;s alternative approach to the project as well.</p>\n<p>&#8220;I highly support Yoast&#8217;s view of Gutenberg,&#8221; Schoppe said. &#8220;It is unclear to me how &#8216;upgrade the visual editor&#8217; was reinterpreted to be &#8216;replace the entire post edit interface&#8217; by the Gutenberg team, but it seems directly at odds with the so-called &#8216;Ship of Theseus.&#8217;</p>\n<p>&#8220;In this case, the lack of clear direction and support for the existing standard workflows is actively hurting developers now. How can I move forward building a project, without a trusted set of hooks and tools that I can rely on? It is unconscionable to think that such a large software project would entirely upend the standard workflow for developers in a single update. and it is insane that these conversations are just happening now, in November, when the plan is to have a merge approved at the beginning of the year.&#8221;</p>\n<p>The <a href=\"https://github.com/WordPress/gutenberg/issues/3304\" rel=\"noopener\" target=\"_blank\">discussion regarding the iframes approach to meta boxes</a> was opened yesterday is still relatively new, but so far the Gutenberg team&#8217;s responses have failed to adequately address the concerns of the developer community in this thread. Finding an approach to meta boxes that preserves WordPress&#8217; powerful CMS capabilities, without alienating users and developers, is one of the Gutenberg team&#8217;s greatest challenges. They are still aiming at producing a merge proposal early next year, but with meta boxes still in the experimentation stage, the team&#8217;s anticipated timetable continues to put the project at odds with the WordPress developer community.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 03 Nov 2017 23:44:16 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:26;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:61:\"WPTavern: Bianca Welds Awarded Kim Parsell Travel Scholarship\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=76264\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:72:\"https://wptavern.com/bianca-welds-awarded-kim-parsell-travel-scholarship\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:2512:\"<p><img />The WordPress Foundation has awarded <a href=\"http://biancawelds.com/now/\">Bianca Welds</a> with the <a href=\"https://wptavern.com/the-wordpress-foundation-creates-a-traveling-scholarship-in-memory-of-kim-parsell\">Kim Parsell travel scholarship</a> to <a href=\"https://2017.us.wordcamp.org/2017/11/01/announcing-the-kim-parsell-memorial-scholarship-winner-bianca-welds/\">attend WordCamp US 2017</a>. Welds lives in Jamaica and has been using WordPress since 2005. We featured her on the Tavern in 2015 when she <a href=\"https://wptavern.com/insight-into-the-jamaican-wordpress-community-with-bianca-welds\">provided insight</a> into the Jamaican WordPress community.</p>\n<p>Welds will be <a href=\"https://2017.us.wordcamp.org/session/pah-jamaican-sign-language-and-wordpress/\">presenting at WordCamp US</a> on how a couple is using WordPress to try to increase understanding and participation of the Deaf community in Jamaica.</p>\n<p>&#8220;Besides the fact that I am really excited and honored to have been selected, and humbled by the outpouring of support since the announcement,&#8221; Welds said. &#8220;I&#8217;m looking forward to WordCamp US and meeting even more amazing people from the WordPress community.&#8221;</p>\n<p>Welds has identified a few members of the WordPress community in her area and is attempting to create a nucleus to build on, &#8220;We will be starting meetups in December/January,&#8221; she said. &#8220;We also have a workshop series (a bit of an unWordCamp) being planned to help stir up more interest in WordPress and the community.&#8221;</p>\n<p>If you see Welds at WCUS, be sure to say hi and congratulate her.</p>\n<h2>HeroPress Publishes Essay Dedicated to Kim Parsell</h2>\n<p>Coinciding with the scholarship announcement, HeroPress has <a href=\"https://heropress.com/essays/family-well-loved/\">published an essay</a> that members of the community  contributed too, including myself, in memory of <a href=\"https://wptavern.com/kim-parsell-affectionately-known-as-wpmom-passes-away\">Kim Parsell</a>. The theme of the essay is &#8216;What did the WordPress Community Mean to Kim?&#8217;.</p>\n<p>It has been nearly three years since Kim passed away but in my conversations with her online and in the physical world, I understood what the community meant to her. It meant family, a responsibility she took very seriously. I highly encourage you to read the essay and the beautiful things people had to say about Kim. She is missed by many but her spirit lives on.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 03 Nov 2017 08:07:25 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Jeff Chandler\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:27;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:68:\"WPTavern: Press This Removed from WordPress 4.9 in Favor of a Plugin\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=76223\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:79:\"https://wptavern.com/press-this-removed-from-wordpress-4-9-in-favor-of-a-plugin\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:4493:\"<a href=\"https://i2.wp.com/wptavern.com/wp-content/uploads/2017/11/scissors.jpg?ssl=1\"><img /></a>photo credit: matt-artz <a href=\"http://www.flickr.com/photos/75682414@N06/16694883798\">Tools. 2015</a> &#8211; <a href=\"https://creativecommons.org/licenses/by-nc-nd/2.0/\">(license)</a>\n<p>Press This, a tool that allowed users to quickly clip and publish content from web pages, is set to be <a href=\"https://make.wordpress.org/core/2017/11/02/press-this-in-4-9/\" rel=\"noopener\" target=\"_blank\">removed from WordPress&#8217; upcoming 4.9 release</a>. The feature is being retired and will live out its remaining days as a canonical <a href=\"https://wordpress.org/plugins/press-this/\" rel=\"noopener\" target=\"_blank\">plugin</a>.</p>\n<p>WordPress contributors opted to make a clean break by completely removing Press This and its supporting functions from core. After 4.9 is released, users visiting <strong>wp-admin/press-this.php</strong> will be prompted to install the plugin from WordPress.org.</p>\n<p><a href=\"https://i2.wp.com/wptavern.com/wp-content/uploads/2017/11/press-this-plugin-prompt.png?ssl=1\"><img /></a></p>\n<p>A revamped version of Press This <a href=\"https://make.wordpress.org/core/2015/02/18/press-this-revamp-merge-proposal/\" rel=\"noopener\" target=\"_blank\">landed in WordPress 4.2</a>, released two years ago. Contributors had been talking about switching it to use the REST API instead of admin-ajax since the <a href=\"https://wptavern.com/preview-the-press-this-bookmarklet-redesign-alpha-plugin-now-ready-for-testing\" rel=\"noopener\" target=\"_blank\">2014 redesign of the bookmarklet</a>. This update is still on the plugin&#8217;s roadmap for anyone interested in contributing to its development.</p>\n<p>&#8220;Following the importers and the link manager, it&#8217;s about time to say goodbye to Press This,&#8221; WordPress lead developer Andrew Ozz said in a <a href=\"https://core.trac.wordpress.org/ticket/41689\" rel=\"noopener\" target=\"_blank\">ticket</a> proposing the feature&#8217;s retirement. &#8220;Bookmarklets were popular seven &#8211; eight years ago, and now are considered mostly &#8216;old tech.&#8217; The Press This usage was dwindling for the last several years. Currently it is at under 0.2% of the wp-admin requests (as far as I can tell). It seems best to extract it from core to a plugin, similarly to the importers.&#8221;</p>\n<h3>What Use is Press This without the Bookmarklet?</h3>\n<p>Development on Press This&#8217; accompanying bookmarklet feature has also been discontinued. Older bookmarklets will not work with the new canonical plugin.</p>\n<p>&#8220;Usage of bookmarklets across the web has decreased significantly and bad actors attempting to trick users to preform unsavory actions increased over the years,&#8221; Brandon Kraft said in a post announcing Press This&#8217; retirement. &#8220;Coupled with advancing toward a new editing in experience in core, we decided it was a suitable time to make these changes in one swift move.&#8221;</p>\n<p>Heavy users of Press This might wonder what the feature is worth without the bookmarklet. Posting through the interface will now require more copying and pasting. The URL scanning remains, but it&#8217;s not as efficient as highlighting a portion of text on a page and clicking on the bookmarklet to auto-populate a new post in WordPress. This change makes the plugin simpler to maintain but removes the time-saving feature that made Press This feel like magic.</p>\n<p>&#8220;With the rise of bad actors attempting to trick folks to entering their credentials via phishing attempts, I removed the functionality in an effort to not promote requesting credentials after firing off JavaScript on a random site,&#8221; Kraft said. &#8220;To set expectations, I am not foreseeing a change in this decision; however, I support continued conversation and dialogue.&#8221;</p>\n<p>Kraft opened a GitHub <a href=\"https://github.com/WordPress/press-this/issues/15\" rel=\"noopener\" target=\"_blank\">issue</a> on the plugin&#8217;s new <a href=\"https://github.com/WordPress/press-this\" rel=\"noopener\" target=\"_blank\">repository</a> to centralize any discussion regarding restoring the bookmarklet functionality.</p>\n<p>Any plugin authors who have extended Press This will need to update their plugins with a check for plugin availability as demonstrated in <a href=\"https://core.trac.wordpress.org/browser/trunk/src/wp-admin/press-this.php\" rel=\"noopener\" target=\"_blank\">wp-admin/press-this.php</a>.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 02 Nov 2017 22:18:39 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:28;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:64:\"WPTavern: GitHub Launches Community Forums to Connect Developers\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=76187\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:75:\"https://wptavern.com/github-launches-community-forums-to-connect-developers\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3622:\"<p><a href=\"https://i1.wp.com/wptavern.com/wp-content/uploads/2017/11/Screen-Shot-2017-11-02-at-11.55.24-AM-e1509641805292.png?ssl=1\"><img /></a></p>\n<p>GitHub <a href=\"https://github.community/\" rel=\"noopener\" target=\"_blank\">launched its new community forums</a> this week as another way for the platform&#8217;s 24 million developers to stay connected. The company built them on top of the <a href=\"https://www.lithium.com/products/online-communities/\" rel=\"noopener\" target=\"_blank\">Lithium SaaS community platform</a>, a popular choice for enterprise customers, including Sony, Cisco, HP, Skype, Barclaycard, Symantec, Google, and PayPal.</p>\n<p>The first iteration of the forums includes a gamification aspect that rewards participants for interaction and contribution. Users can &#8220;rank up&#8221; by receiving &#8220;Kudos&#8221; and providing solutions to questions on the forums. GitHub plans to expand on these features in the future.</p>\n<p><a href=\"https://i0.wp.com/wptavern.com/wp-content/uploads/2017/11/Screen-Shot-2017-11-02-at-12.47.22-PM.png?ssl=1\"><img /></a></p>\n<p>Naturally, this style of ranking and participation led users to be curious whether GitHub is aiming to have its forums become a StackOverflow Q&amp;A platform alternative. When asked what the company had in mind when designing this feature, GitHub Community Manager Nadia Padzensky <a href=\"https://github.community/t5/Welcome/What-are-the-primary-use-cases-for-community-forum/m-p/286/highlight/false#M81\" rel=\"noopener\" target=\"_blank\">said</a> the forums provide another avenue for open discussion on ideas and general questions unrelated to specific projects.</p>\n<p>&#8220;Issues don’t always lend themselves well to these kinds of discussions; however, a forum presents a place designed specifically for these types of conversations,&#8221; Padzensky said. &#8220;In the past, we’ve not had a GitHub-owned space for users to engage with each other in this way.&#8221;</p>\n<p>GitHub has also launched an educational section called <a href=\"https://github.community/t5/GitHub-Original-Series/ct-p/GitHubOriginalSeries\" rel=\"noopener\" target=\"_blank\">GitHub Original Series</a> with articles from staff on workflows and features, written on topics that users often ask about in private support emails. The team plans to build out this section of the site while adding more features to the forums.</p>\n<p>&#8220;We are looking to add contests, polls, and better processes and tooling for taking user feature requests,&#8221; Padzensky said. &#8220;Additionally, the Community Forum will adapt to its members needs; Community Forum member activity and feedback will directly help inform what the Community Forum evolves into.&#8221;</p>\n<p>The ability to keep in touch with its user base is perhaps the most important function the forums will provide to GitHub. It offers a space where users can discussion problems they are having with GitHub&#8217;s products and have those concerns heard by staff. This could potentially help the company avoid public relations disasters like last year&#8217;s when a group of open source project maintainers confronted GitHub with an open letter of complaints regarding issue management. The company <a href=\"https://wptavern.com/github-responds-to-letter-from-open-source-project-maintainers\" rel=\"noopener\" target=\"_blank\">admitted to having become disconnected from the needs of its open source community</a> and promised to launch new features that would better serve community-led projects, as well as make it easer for developers to offer feedback on the products it is building.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 02 Nov 2017 19:00:17 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:29;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:61:\"BuddyPress: BuddyPress 2.9.2 Security and Maintenance Release\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:32:\"https://buddypress.org/?p=268770\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:81:\"https://buddypress.org/2017/11/buddypress-2-9-2-security-and-maintenance-release/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:1580:\"<p>BuddyPress 2.9.2 is now available. This is a security and maintenance release. We strongly encourage all BuddyPress sites to upgrade as soon as possible.</p>\n<p>The 2.9.2 release addresses five security issues:</p>\n<ul>\n<li>A Cross Site Request Forgery (CSRF) vulnerability was fixed in the interface used by admins to perform certain actions related to sitewide notices. Reported by <a href=\"https://hackerone.com/jdgrimes\">J.D. Grimes</a>.</li>\n<li>Some uses of serialized data were judged to need hardening. Reported by <a href=\"https://profiles.wordpress.org/johnjamesjacoby/\">John James Jacoby</a> of the BuddyPress security team.</li>\n<li>An open redirect was fixed on the user edit screens. Reported by <a href=\"https://hackerone.com/ysx\">Yasin Soliman (ysx)</a>.</li>\n<li>An unauthorized information disclosure vulnerability was fixed in an AJAX handler. Reported by <a href=\"https://hackerone.com/jdgrimes\">J.D. Grimes</a>.</li>\n<li>A Cross Site Scripting (XSS) vulnerability was fixed in the avatar upload interface. Reported by <a href=\"https://dk.linkedin.com/in/skansing\">Ronnie Skansing</a>.</li>\n</ul>\n<p>These vulnerabilities were reported privately to the BuddyPress team, in accordance with <a href=\"https://make.wordpress.org/core/handbook/testing/reporting-security-vulnerabilities/\">WordPress&#8217;s security policies</a>. Our thanks to all reporters for practicing coordinated disclosure.</p>\n<p>In addition, 2.9.2 includes a change that improves compatibility with the upcoming WordPress 4.9 release, by removing the call to a newly deprecated hook.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 02 Nov 2017 16:30:03 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"Boone Gorges\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:30;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:46:\"Dev Blog: The Month in WordPress: October 2017\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"https://wordpress.org/news/?p=5044\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:71:\"https://wordpress.org/news/2017/11/the-month-in-wordpress-october-2017/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:6092:\"<p>While this month we focused on building new features for WordPress core, we advanced other areas of the project too. Read on to learn more about what the WordPress project accomplished during the month of October.</p>\n<hr class=\"wp-block-separator\" />\n<h2>Take the 2017 Annual WordPress User Survey</h2>\n<p>The annual WordPress User Survey is a great opportunity for you to provide your feedback about how you use WordPress. This year is no exception, as <a href=\"https://wordpressdotorg.polldaddy.com/s/wordpress-2017-survey\">the 2017 WordPress User Survey</a> is out now.</p>\n<p>The information collected in the survey is used to make informed decisions about improvements across the WordPress project, so your answers are incredibly valuable and help shape the future of the platform.</p>\n<h2>WordPress 4.8.3 Security Release</h2>\n<p>At the end of October, <a href=\"https://wordpress.org/news/2017/10/wordpress-4-8-3-security-release/\">WordPress 4.8.3 was released</a> containing an important security fix for all previous versions of WordPress. If your WordPress installation has not updated automatically, please update it now to protect your site.</p>\n<p>This security issue was brought to light by a community member, so if you ever discover a security vulnerability in WordPress core, please do the same and <a href=\"https://make.wordpress.org/core/handbook/testing/reporting-security-vulnerabilities/\">disclose it responsibly</a>.</p>\n<h2>WordPress 4.9 Nearly Ready for Release</h2>\n<p>WordPress 4.9 was in rapid development this month. We released four beta versions and published a <a href=\"https://wordpress.org/news/2017/10/wordpress-4-9-release-candidate/\">release candidate</a>. The target for shipping WordPress 4.9 is November 14 — just two short weeks away. With many new features, this is a hugely exciting release that improves WordPress’ user experience considerably. Notably, you’ll see <a href=\"https://make.wordpress.org/core/2017/10/24/a-new-themes-experience-in-the-customizer/\">improvements to the theme selection experience</a>, plenty of <a href=\"https://make.wordpress.org/core/2017/10/24/widget-improvements-in-wordpress-4-9/\">widget enhancements</a>, drastically improved <a href=\"https://make.wordpress.org/core/2017/10/22/code-editing-improvements-in-wordpress-4-9/\">code editing</a>, and much better <a href=\"https://make.wordpress.org/core/2017/10/15/improvements-for-roles-and-capabilities-in-4-9/\">user role management</a>.</p>\n<p>To get involved in building WordPress Core, jump into the #core channel in the <a href=\"https://make.wordpress.org/chat/\">Making WordPress Slack group</a>, and follow <a href=\"https://make.wordpress.org/core/\">the Core team blog</a>.</p>\n<h2>WordPress Charity Hackathons are Growing</h2>\n<p>For the last few years, the number of <a href=\"https://doaction.org/\">do_action series of WordPress charity hackathons</a> has grown around the world. What started as a community event to assist local nonprofit organizations, has become something many WordPress communities are replicating in an increasing number of cities.</p>\n<p>As of this month, do_action events have been hosted in Cape Town and Johannesburg, South Africa, Beirut, Lebanon, Austin, Texas, and Montréal, Canada. In addition, events are now scheduled for <a href=\"https://doaction.org/event/bristol-2018/\">Bristol, England</a> and <a href=\"https://doaction.org/event/zurich-2018/\">Zurich, Switzerland</a> in 2018.</p>\n<p>To get involved in organizing a do_action event locally, read <a href=\"https://make.wordpress.org/community/handbook/meetup-organizer/event-formats/do_action-charity-hackathon/\">the do_action organizer’s handbook</a> and join the #community-events channel in the <a href=\"https://make.wordpress.org/chat/\">Making WordPress Slack group</a>.</p>\n<h2>Gutenberg Development Advances</h2>\n<p>While work steadily continues on Gutenberg — the new editor for WordPress core — one update from this month addresses one of the primary concerns that some people shared about the project.</p>\n<p>Up until <a href=\"https://make.wordpress.org/core/2017/10/24/whats-new-in-gutenberg-24th-october/\">the release on October 24</a>, Gutenberg did not support the meta boxes that so many WordPress content creators rely on. The new editor now has initial support for meta boxes as well as a host of other critical features for content creation in WordPress.</p>\n<p><a href=\"https://make.wordpress.org/test/handbook/call-for-testing/gutenberg-testing/\">Test out Gutenberg</a> right now and help develop it by joining the #core-editor channel in the <a href=\"https://make.wordpress.org/chat/\">Making WordPress Slack group</a> and following the <a href=\"https://make.wordpress.org/core/\">Core team blog</a>.</p>\n<hr class=\"wp-block-separator\" />\n<h2>Further Reading:</h2>\n<ul>\n<li>DonateWC, a new initiative that assists people in attending WordCamps, <a href=\"https://donatewc.org/wordcamp-stories/wordcamp-cape-town-experience/\">sponsored Trust Nhokovedzo from Harare, Zimbabwe</a> to speak at WordCamp Cape Town, South Africa this month.</li>\n<li><a href=\"https://woocommerce.com/2017/10/saying-goodbye-to-canvas/\">The popular Canvas theme was retired</a> this month to allow WooCommerce to focus on moving their products forward more effectively.</li>\n<li>The next installment of Camp Press, the WordPress community retreat event, will take place <a href=\"https://camp.press/event/iceland2018/\">in Iceland</a>.</li>\n<li>If you run a WordPress meetup group, but are struggling to find content for your events, the WordPress Marketing team <a href=\"https://make.wordpress.org/community/2017/10/04/supporting-for-meetups-with-low-content/\">has put together some ideas</a> to help.</li>\n<li><a href=\"https://2017.us.wordcamp.org/\">WordCamp US 2017</a> is just around the corner — there’s still time to grab your tickets.</li>\n</ul>\n<p><em>If you have a story we should consider including in the next “Month in WordPress” post, please <a href=\"https://make.wordpress.org/community/month-in-wordpress-submissions/\">submit it here</a>.</em></p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 02 Nov 2017 12:02:50 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:15:\"Hugh Lashbrooke\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:31;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:32:\"Matt: New Backpack: Aer Fit Pack\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:22:\"https://ma.tt/?p=47625\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:48:\"https://ma.tt/2017/11/new-backpack-aer-fit-pack/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:979:\"<a href=\"https://ma.tt/2017/11/new-backpack-aer-fit-pack/\"><img src=\"https://i1.wp.com/ma.tt/files/2017/11/11002_fp2_black_34.jpeg?resize=266%2C266&ssl=1\" /></a>\n<p>As an interim update to my <a href=\"https://ma.tt/2017/05/whats-in-my-bag-2017/\">2017 gear post</a>, I&#x27;d like to strongly endorse the <a href=\"https://www.aersf.com/fit-pack-2-black/\">Aer Fit Pack 2</a> as my new primary backpack, replacing the Lululemon bag I suggested before. It has better material, much better zippers, a logical design, more pocket distribution inside, and it&#x27;s cheaper! I put this bag and its predecessor through all the rounds, including taking it to Burning Man, and it&#x27;s been a champ. If you&#x27;re reading this and work for <a href=\"https://automattic.com/\">Automattic</a>, this bag is also now available as an official choice for your bag and it&#x27;ll come embroidered with a cool logo. (Previously we only offered <a href=\"https://www.timbuk2.com/\">Timbuk2</a>.)</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 02 Nov 2017 05:50:47 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"Matt\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:32;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:97:\"WPTavern: Gutenberg 1.6 Improves Writing Experience, Moves Block Toolbar to the Top of the Editor\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=76182\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:107:\"https://wptavern.com/gutenberg-1-6-improves-writing-experience-moves-block-toolbar-to-the-top-of-the-editor\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:6408:\"<p>The Gutenberg plugin&#8217;s Halloween release (<a href=\"https://make.wordpress.org/core/2017/10/31/whats-new-in-gutenberg-31st-october/\" rel=\"noopener\" target=\"_blank\">version 1.6</a>) includes major updates to the writing experience and many performance improvements. The block toolbar has been <a href=\"https://github.com/WordPress/gutenberg/pull/2998\" rel=\"noopener\" target=\"_blank\">relocated to the top of the editor</a>, a suggestion that was mocked up and described in detail in a post on the Yoast SEO blog proposing <a href=\"https://yoast.com/gutenberg-alternative-approach/\" rel=\"noopener\" target=\"_blank\">an alternative approach for Gutenberg</a>.</p>\n<p>Prior to version 1.6, users could inadvertantly end up in a situation like the screenshot below &#8211; with tools and toggles popping into view from all sides of a block.</p>\n<a href=\"https://i1.wp.com/wptavern.com/wp-content/uploads/2017/11/Screen-Shot-2017-11-01-at-5.17.46-PM.png?ssl=1\"><img /></a>Gutenberg prior to version 1.6\n<p>Previously, any small mouse move would pull the block toolbar back into view, which made for a somewhat jarring writing experience. Gutenberg 1.6 makes the block toolbar completely independent of the content by fixing it to the top of the editor. This move reduces the amount of visual distraction in the writing zone, while keeping the toolbar accessible in a way that is familiar to users coming from the Classic Editor.</p>\n<p><a href=\"https://i1.wp.com/wptavern.com/wp-content/uploads/2017/11/Screen-Shot-2017-11-01-at-5.24.34-PM-e1509575932134.png?ssl=1\"><img /></a></p>\n<p>The toolbar will automatically adjust to display tools specific to the block type that is in focus, so that users don&#8217;t have to sift through other tools that are not applicable to that specific type of content. It does not show if no blocks are selected.</p>\n<p><a href=\"https://i2.wp.com/wptavern.com/wp-content/uploads/2017/11/gutenberg-block-toolbar.gif?ssl=1\"><img /></a></p>\n<p>In the ticket proposing the change, Gutenberg designer Joen Asmussen describes it as part of a larger effort to <a href=\"https://github.com/WordPress/gutenberg/issues/2983\" rel=\"noopener\" target=\"_blank\">try to reduce the visual weight of the block</a>.</p>\n<p>&#8220;The cognitive load of the chrome we show around and in context of the block unit has been an ongoing topic for a while,&#8221; Asmussen said. &#8220;Concerns have been noted that it feels heavy, there are many toolbars, options, and it gets in the way of writing.&#8221;</p>\n<p>Placing the block toolbar to the top of the editor is a strong move toward making blocks feel lighter, and version 1.6 includes several other UI tweaks along the same theme. It introduces an alternate style for block boundaries and multi-selection that removes the previous hover and selected styles for blocks, which were somewhat heavy-handed and distracting. Instead, hovering over blocks will simply bring the floating settings dots into view on the side of the block. Contributors also redesigned the selection styles to be more subtle, making the separator, more, and button UI items feel more lightweight.</p>\n<p>Other visual changes include:</p>\n<ul>\n<li>Engage &#8220;edit&#8221; mode when using arrow keys (hides UI)</li>\n<li>Complete rework of arrow keys navigation between blocks—faster, clearer, and respects caret position while traversing text blocks</li>\n<li>Added keyboard shortcuts to navigate regions</li>\n<li>Implement multi-selection mode using just arrow with shift keys and support horizontal arrows</li>\n<li>Change visual style of multi-selected blocks so it has the same color as highlighted text does</li>\n</ul>\n<p>Gutenberg 1.6 introduces the ability to <a href=\"https://github.com/WordPress/gutenberg/pull/3179\" rel=\"noopener\" target=\"_blank\">convert a classic block (post) into several Gutenblocks</a>. The resulting divided block is fairly instantaneous.</p>\n<p><a href=\"https://i1.wp.com/wptavern.com/wp-content/uploads/2017/11/Screen-Shot-2017-11-01-at-6.47.03-PM.png?ssl=1\"><img /></a></p>\n<p><a href=\"https://wptavern.com/gutenberg-1-5-adds-initial-support-for-meta-boxes-makes-gutenberg-the-default-editor\" rel=\"noopener\" target=\"_blank\">Version 1.5</a> of the plugin added initial support for meta boxes in an Extended Settings panel beneath the post content. Version 1.6 changes the UI to make meta boxes part of the main column, instead of a collapsible box. Plugin developers had complained that the UI gave the impression of having been pinned to the bottom as &#8220;a bit of an afterthought.&#8221;</p>\n<p>&#8220;I think the current design does meta boxes a real disservice,&#8221; one tester, Patrick B., <a href=\"https://wptavern.com/gutenberg-1-5-adds-initial-support-for-meta-boxes-makes-gutenberg-the-default-editor#comment-238575\" rel=\"noopener\" target=\"_blank\">commented</a> on our post. &#8220;The current layout and the section heading, “Extended Settings,” makes it look and feel like a bit of an afterthought. Undoubtably, many meta boxes will be able to be moved to their own blocks, but there will still be situations where what is contained under Extended Settings is essential to putting together a page but isn’t appropriate as a block. In that case, Extended Settings just doesn’t feel right and seems easily forgettable. That could create an awkward publishing experience, especially when those fields are required to publish.&#8221;</p>\n<p>Meta boxes now appear below the content without the Extended Settings label and individual accordion items are toggled closed by default. The bottom section appears regardless of whether or not the sidebar Settings panel is toggled open, so it is always there. This is a change from the previous release where toggling the sidebar Settings panel open was required to see the Extended Settings panel.</p>\n<p><a href=\"https://i2.wp.com/wptavern.com/wp-content/uploads/2017/11/Screen-Shot-2017-11-01-at-7.04.00-PM.png?ssl=1\"><img /></a></p>\n<p>Gutenberg 1.6 is a fairly large release with several dozen fixes and performance improvements. For a full list of all the changes, check out the <a href=\"https://make.wordpress.org/core/2017/10/31/whats-new-in-gutenberg-31st-october/\" rel=\"noopener\" target=\"_blank\">release post</a> from Matias Ventura and the plugin&#8217;s <a href=\"https://wordpress.org/plugins/gutenberg/#developers\" rel=\"noopener\" target=\"_blank\">changelog</a>.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 02 Nov 2017 00:18:05 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:33;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:76:\"WPTavern: WPWeekly Episode 293 – WordPress 4.8.3, RIP Firebug, and Patreon\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:58:\"https://wptavern.com?p=76200&preview=true&preview_id=76200\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:81:\"https://wptavern.com/wpweekly-episode-293-wordpress-4-8-3-rip-firebug-and-patreon\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:2805:\"<p>In this episode, <a href=\"https://jjj.blog/\">John James Jacoby</a> and I discuss the news of the week including, a behind the scenes look at how WordPress 4.8.3 was released, WordPress 4.9 RC1, and Patreon launching an app directory along with a free WordPress plugin. We also talk about the difficulties of surveys, from asking the right questions, to organizing the data obtained from them. Last but not least, we pour one out for Firebug.</p>\n<h2>Stories Discussed:</h2>\n<p><a href=\"https://wptavern.com/wordpress-4-8-3-a-security-release-six-weeks-in-the-making\">WordPress 4.8.3, A Security Release Six Weeks in the Making</a><br />\n<a href=\"https://wordpress.org/news/2017/10/wordpress-4-9-release-candidate/\">WordPress 4.9 Release Candidate 1 Released</a><br />\n<a href=\"https://wptavern.com/wordpress-4-9-will-support-shortcodes-and-embedded-media-in-the-text-widget\">WordPress 4.9 Will Support Shortcodes and Embedded Media in the Text Widget</a><br />\n<a href=\"https://wptavern.com/patreon-launches-app-directory-and-free-wordpress-plugin-for-membership-sites\">Patreon Launches App Directory and Free WordPress Plugin for Membership Sites</a><br />\n<a href=\"https://wptavern.com/results-from-the-2017-wordpress-user-survey-are-not-guaranteed-to-be-shared\">Results From the 2017 WordPress User Survey Are Not Guaranteed to Be Shared</a><br />\n<a href=\"https://online.wpcampus.org/\">Call For Speakers for WPCampus Online</a><br />\n<a href=\"https://wptavern.com/goodnight-firebug\">Goodnight Firebug</a></p>\n<h2>Picks of the Week:</h2>\n<p><a href=\"https://heropress.com/essays/family-well-loved/\">A Family Well Loved</a>, a HeroPress essay I contributed too about Kim Parsell and her love for the WordPress community.</p>\n<p><a href=\"https://wordpress.org/plugins/transients-manager/\">Transients Manager</a> by Pippin Williamson is a developer’s tool that provides a UI to manage your site’s transients. You can view, search, edit, and delete transients at will. A toolbar option is also provided that allows you to suspend transient updates to help with testing and debugging.</p>\n<h2>WPWeekly Meta:</h2>\n<p><strong>Next Episode:</strong> Wednesday, November 8th 3:00 P.M. Eastern</p>\n<p><strong>Subscribe To WPWeekly Via Itunes: </strong><a href=\"https://itunes.apple.com/us/podcast/wordpress-weekly/id694849738\" target=\"_blank\" rel=\"noopener\">Click here to subscribe</a></p>\n<p><strong>Subscribe To WPWeekly Via RSS: </strong><a href=\"https://wptavern.com/feed/podcast\" target=\"_blank\" rel=\"noopener\">Click here to subscribe</a></p>\n<p><strong>Subscribe To WPWeekly Via Stitcher Radio: </strong><a href=\"http://www.stitcher.com/podcast/wordpress-weekly-podcast?refid=stpr\" target=\"_blank\" rel=\"noopener\">Click here to subscribe</a></p>\n<p><strong>Listen To Episode #293:</strong><br />\n</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 01 Nov 2017 22:41:47 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Jeff Chandler\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:34;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:97:\"WPTavern: Scotch School Offers Free Course on Getting Started with JavaScript for Web Development\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=76168\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:108:\"https://wptavern.com/scotch-school-offers-free-course-on-getting-started-with-javascript-for-web-development\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:2848:\"<p><a href=\"https://i0.wp.com/wptavern.com/wp-content/uploads/2017/10/Screen-Shot-2017-11-01-at-4.07.32-PM-e1509570496371.png?ssl=1\"><img /></a></p>\n<p>The <a href=\"https://scotch.io/\" rel=\"noopener\" target=\"_blank\">Scotch School</a>, a developer resource with video training and tutorials, is offering its <a href=\"https://scotch.io/courses/getting-started-with-javascript\" rel=\"noopener\" target=\"_blank\">Getting Started with JavaScript for Web Development</a> course for free through the end of this week. If you&#8217;re just now getting started on your journey to <a href=\"https://wptavern.com/state-of-the-word-2015-javascript-and-api-driven-interfaces-are-the-future-of-wordpress\" rel=\"noopener\" target=\"_blank\">learning JavaScript deeply</a>, this 23-lesson video course from <a href=\"https://twitter.com/chrisoncode\" rel=\"noopener\" target=\"_blank\">Chris Sevilleja</a> offers a quick foundation on the basics with 4.7 hours of learning and hands-on practice.</p>\n<p>The course includes lessons that introduce students to the following concepts:</p>\n<ul>\n<li>Types and Variables</li>\n<li>Operators</li>\n<li>Comparisons</li>\n<li>Conditionals, Flow, and Loops</li>\n<li>Functions</li>\n<li>Objects</li>\n<li>Built-in Objects</li>\n</ul>\n<p>After completing the fundamentals, students move on to build a couple of starter applications. At the end of the course Sevilleja guides students through building a bookmarking type application for grabbing links from the web and storing them in local storage. Code for the course is available on GitHub and requires a basic set of tools: a browser with support for ES6 features, DevTools and the console, and a code editor.</p>\n<p>The course is targeted at those who have already learned HTML and CSS but don&#8217;t know JavaScript yet. It&#8217;s also helpful for developers who have jumped into jQuery, Angular, React, or other libraries but haven&#8217;t taken the time to learn the core language first.</p>\n<p>The Scotch School has two other free courses at the moment: <a href=\"https://scotch.io/courses/10-need-to-know-javascript-concepts\" rel=\"noopener\" target=\"_blank\">10 Need to Know JavaScript Concepts</a> and <a href=\"https://scotch.io/courses/build-an-online-shop-with-vue\" rel=\"noopener\" target=\"_blank\">Build an Online Shop with Vue</a>. The site also offers a wide selection tutorials and paid courses on using Angular, React, Sass, CSS, Git, Node, Laravel, HTML, and other technologies.</p>\n<p><a href=\"https://scotch.io/courses/getting-started-with-javascript\" rel=\"noopener\" target=\"_blank\">Getting Started with JavaScript for Web Development</a> will go back to being a paid course next week but WP Tavern readers can use a <a href=\"https://scotch.io/registering?coupon=WPTAVERN\" rel=\"noopener\" target=\"_blank\">coupon for 3 months free</a> to continue learning at the Scotch School.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 01 Nov 2017 21:22:39 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:35;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:30:\"HeroPress: A Family Well Loved\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:56:\"https://heropress.com/?post_type=heropress-essays&p=2240\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:108:\"https://heropress.com/essays/family-well-loved/#utm_source=rss&utm_medium=rss&utm_campaign=family-well-loved\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:15199:\"<img width=\"960\" height=\"480\" src=\"https://heropress.com/wp-content/uploads/2017/11/110117-1024x512.jpg\" class=\"attachment-large size-large wp-post-image\" alt=\"Pull Quote: At WordCamp you also have opportunity to meet new people, who later become friends, & what they bring to your life is priceless. Kim Parsell, 1956-2015\" /><p>There are times when I hear a story from the WordPress community and I think &#8220;That&#8217;s a HeroPress story&#8221;, whether it has been or ever will actually be posted on the site. Some stories are just so great that you think &#8220;Wow, that&#8217;s just really great&#8221;. This week&#8217;s essay is one of those stories, but it won&#8217;t be told by the person it&#8217;s about.</p>\n<p>Kim Parsell has one of my absolute favorite HeroPress stories, but we lost her before HeroPress was even properly started. I&#8217;ve keenly felt the loss of the wisdom and joy she would have brought to HeroPress. I only met her in person once, at the last WordCamp San Francisco. She was so very much in her element, even I could see it, who barely knew her.</p>\n<p>I&#8217;ve literally spent years now, trying to think of an appropriate way to share her story on HeroPress, and I think this year I found it. The WordPress community was Kim&#8217;s family, and she was our mom. I&#8217;m going to let some of the people closest to her tell some of her story.</p>\n<p>&#8212; Topher</p>\n<blockquote class=\"light\"><p><em>From Jeff Chandler</em></p>\n<p>What did the WordPress community mean to Kim Parsell? Family.</p>\n<p>In order to understand how highly valued the WordPress community was to Kim Parsell, you first have to realize her environment.</p>\n<p>Kim was a middle-aged woman who lived off a dirt road, on top of a hill, in Southern rural Ohio. She was often by herself, taking care of the property with only a few neighbors up and down the road.</p>\n<p>She received internet access from towers that broadcasted wireless signals, similar to cell phones but at lower speeds.</p>\n<p>Through WordPress Weekly, Kim gained access to members of the WordPress community where she was able to talk to them on a weekly basis. The show and its after hours sessions provided Kim a chance to mingle with the who&#8217;s who of WordPress at the time. It helped establish long-lasting relationships that would open up future opportunities.</p>\n<p>In a location where not many around her used or even heard of WordPress, the community was an outlet for her to be around like-minded people. Kim had a blast interacting with people online and at WordCamp events. Many members of the WordPress community became her second family, a responsibility she took very seriously.</p></blockquote>\n<hr />\n<a href=\"http://www.kpimages.net/index.php?showimage=248\"><img class=\"wp-image-2243 size-full\" src=\"https://heropress.com/wp-content/uploads/2017/11/20071025160711_dscf2405-pano.jpg\" alt=\"\" width=\"950\" height=\"500\" /></a>My Backyard, Revisited &#8211; 10/25/2007 &#8211; Kim Parsell<br /> Autumn&#8217;s patchwork quilt has finally descended upon this area &#8211; the trees are in full fall color. This was taken yesterday morning. I tried to take this from just about the same vantage point as the previous one &#8211; I think I got pretty close!<br /> Copyright © 2007 Kim Parsell. May not be reproduced without permission. If you&#8217;d like to license an image for usage, contact me at kparsell@kpimages.net for details.\n<hr />\n<blockquote class=\"light\"><p><em>From Carrie Dils</em></p>\n<p>When Topher asked me if I&#8217;d write a few words in remembrance of Kim, I couldn&#8217;t say YES fast enough. I told him I remembered a whole lot more about how she made me feel versus how she felt about WordPress and the community. (I suppose the saying is true that people don&#8217;t remember what you say, they remember how you made them feel).</p>\n<p>I first remember meeting Kim on Twitter, so I went back and did a search to the earliest <a href=\"https://twitter.com/search?q=%40cdils%20AND%20%40kimparsell&src=typd&lang=en\">conversations of ours</a> I could find. They dated back to January 2013, nearly two years to the date after she passed in January 2015. I will always remember Kim, along with Mika Epstein and Andrea Rennick, for their kindness to me when I was new to the community. They were the first &#8220;women of WordPress&#8221; to draw me in and make me feel at home simply by sharing themselves and their knowledge.</p>\n<p>That&#8217;s what community is, right? You share things that are personal, vulnerable even. You share your experiences. In doing that, you naturally invite others to reciprocate. That&#8217;s the environment Kim created with hundreds of others, not just me. Affectionately called #wpmom, Kim was an investor. She invested countless hours into the WordPress project (she had &#8220;props&#8221; for 5 major releases of WP and also volunteered her time for the documentation team). She invested in women who wanted to break into tech. She invested in me.</p>\n<p><a href=\"https://carriedils.com/for-you-kim/\">I still well up with tears</a> when I remember Kim. I&#8217;m proud that the WordPress Foundation now offers a scholarship in her memory. She loved this community and this community loved her right back. Her legacy lives on&#8230;</p></blockquote>\n<hr />\n<a href=\"http://www.kpimages.net/index.php?showimage=243\"><img class=\"size-full wp-image-2244\" src=\"https://heropress.com/wp-content/uploads/2017/11/20070930095922_dscf0913.jpg\" alt=\"\" width=\"800\" height=\"600\" /></a>Eastern Tiger &#8211; Posted on 09/30/2007 &#8211; Kim Parsell<br />An Eastern Tiger Swallowtail perches on some tall ironweed that grows down near the pond. I shot this one when I slipped away from the festivities for a little while during my family reunion back in August. Couldn&#8217;t pass up the opportunity!<br />Copyright © 2007 Kim Parsell. May not be reproduced without permission. If you&#8217;d like to license an image for usage, contact me at kparsell@kpimages.net for details.\n<hr />\n<blockquote class=\"light\"><p><em>From Jayvie Arellano</em></p>\n<p>Kim was a self-reliant person who had a nurturing spirit, and WordPress gave her a channel by which she can channel that energy. I believe that her participation in WordCamps and the docs team enriched her life; every WC she went to, there was always someone she&#8217;s known online that she would connect with and check up on. She was concerned with everyone&#8217;s well-being.</p>\n<p>She wouldn&#8217;t be a coder in our common understanding, but she understood coders. She understood the pitfalls of an isolated life and encouraged people to reach out and be concerned for one another. Her record of kindness and generosity have set an example for a lot of others to follow.</p></blockquote>\n<hr />\n<a href=\"http://www.kpimages.net/index.php?showimage=235\"><img class=\"size-full wp-image-2245\" src=\"https://heropress.com/wp-content/uploads/2017/11/20070819053504_dscf0784.jpg\" alt=\"\" width=\"800\" height=\"600\" /></a>Misty Morning &#8211; Posted on 08/19/2007 &#8211; Kim Parsell<br />Storms the night before gave way to dense fog in early morning. The sun finally began to burn through, creating beautiful pools of light and long morning shadows. Copyright © 2007 Kim Parsell. May not be reproduced without permission. If you&#8217;d like to license an image for usage, contact me at kparsell@kpimages.net for details.\n<hr />\n<blockquote class=\"light\"><p><em>From Jan Dembowski</em></p>\n<p>Kim Parsell was the sort of person who made me want to become a better human being. And the reciprocal of that is that I sought her approval for what I did, how I behaved and how I handled myself in the WordPress community and in life.</p>\n<p>Just to be clear, she never said or did anything that indicated that her approval was needed. Or that it was a condition for her friendship. But she was #wpmom and that’s just how it was for me. Our online interactions were fun and collaborating with her in the WordPress community was a learning experience for me. I used that experience to become better at my job and it showed.</p>\n<p>When I had to deal with a death in my family, she was one of the people I emailed. I needed that interaction and she was there for me with others in the community.</p>\n<p>I met Kim in person at WordCamp SF 2014. She was amazed at how everyone was treating her. All these people she had contact with and everyone was thrilled to meet her. When the time came, she gave a video presentation on the docs team. She was nervous, had some laptop troubles and didn’t feel prepared. She did fine and I was there cheering her on from the sidelines.</p>\n<p>After WCSF 2014 we stayed in touch and I would send her images of things my children did. When I got the news of her passing it was hard. But she left an amazing example. She taught me and others to take care of yourself, take care of those close to you and be a responsible person. How often do you meet someone like that? I’m so glad for having met her. Just by being herself she made me a better person.</p></blockquote>\n<hr />\n<a href=\"http://www.kpimages.net/index.php?showimage=109\"><img class=\"size-full wp-image-2249\" src=\"https://heropress.com/wp-content/uploads/2017/11/20070516131722_dscf0942-1.jpg\" alt=\"\" width=\"800\" height=\"600\" /></a>Fire at Night, Part II &#8211; Posted on 02/17/2007 &#8211; Kim Parsell<br />7/10/2005 &#8211; The colors become more brilliant as the sky darkens even more.<br />Copyright © 2005 Kim Parsell. May not be reproduced without permission. If you&#8217;d like to license an image for usage, contact me at kparsell@kpimages.net for details.\n<hr />\n<blockquote class=\"light\"><p><em>From Drew Jaynes</em></p>\n<p>Kim Parsell was driven. She knew the things she knew, and had a pretty good idea of how to find out the things she didn&#8217;t.</p>\n<p>You&#8217;d be amazed how far the simple quality of that &#8220;self starter&#8221; attitude can take you as a contributor.</p>\n<p>Don&#8217;t get me wrong, I&#8217;m not intentionally diminishing Kim to simply having the will to pull herself up by her proverbial boot straps. It&#8217;s merely to demonstrate the point that Kim&#8217;s temperament and poise in unfamiliar situations was unmatched, and that is one of the reasons why she was able to affect so much positive change in WordPress.</p>\n<p>Kim&#8217;s positive attitude and helping nature was infectious. She had the uncanny ability to walk into a room of complete strangers and walk out with a group of new friends – and newly-gleaned knowledge to go along with it.</p>\n<p>When Kim visited WordCamp San Francisco (the precursor to WordCamp US) for the first time in 2014, it was hugs all around. Literally. Kim had been contributing to WordPress for years and largely never met many of the people she&#8217;d had an opportunity to collaborate with.</p>\n<p>The community summit was being held in conjunction with WCSF that year and the only way she could afford to go was on a travel scholarship offered at the time by the foundation – the same scholarship that now justly bears her name.</p>\n<p>It was an amazing thing to see, made all the more tragic when Kim left us just a few short months later. She was well on her way to realizing her goal of being able to contribute full time and get paid for her effort.</p>\n<p>I&#8217;m sad to say Kim never got there, but her spirit lives on in the people she knew and inspired. Here&#8217;s hoping that the Kim Parsell Memorial Scholarship will serve to further inspire those who follow in her footsteps.</p></blockquote>\n<hr />\n\n<a href=\"https://heropress.com/essays/family-well-loved/img_0366/\"><img width=\"150\" height=\"150\" src=\"https://heropress.com/wp-content/uploads/2017/11/img_0366-150x150.jpg\" class=\"attachment-thumbnail size-thumbnail\" alt=\"A view of the sunrise from Kim\'s home\" /></a>\n<a href=\"https://heropress.com/essays/family-well-loved/img_1045/\"><img width=\"150\" height=\"150\" src=\"https://heropress.com/wp-content/uploads/2017/11/img_1045-150x150.jpg\" class=\"attachment-thumbnail size-thumbnail\" alt=\"Kim and Sam Sidler\" /></a>\n<a href=\"https://heropress.com/essays/family-well-loved/wcphx-friday-night-firepit/\"><img width=\"150\" height=\"150\" src=\"https://heropress.com/wp-content/uploads/2017/11/wcphx-friday-night-firepit-150x150.jpg\" class=\"attachment-thumbnail size-thumbnail\" alt=\"WordCamp Phoenix Friday Night Firepit\" /></a>\n<a href=\"https://heropress.com/essays/family-well-loved/wpdocs-team-openhelp-cropped/\"><img width=\"150\" height=\"150\" src=\"https://heropress.com/wp-content/uploads/2017/11/wpdocs-team-openhelp-cropped-150x150.jpg\" class=\"attachment-thumbnail size-thumbnail\" alt=\"The WP Docs Team\" /></a>\n<a href=\"https://heropress.com/essays/family-well-loved/kim_wcsf14_diag/\"><img width=\"150\" height=\"150\" src=\"https://heropress.com/wp-content/uploads/2017/11/kim_wcsf14_diag-150x150.png\" class=\"attachment-thumbnail size-thumbnail\" alt=\"Picture turned sideways so that a very tall Drew could be in the same picture as a very short Kim.\" /></a>\n<a href=\"https://heropress.com/essays/family-well-loved/kim_wcsf14/\"><img width=\"150\" height=\"150\" src=\"https://heropress.com/wp-content/uploads/2017/11/kim_wcsf14-150x150.jpg\" class=\"attachment-thumbnail size-thumbnail\" alt=\"Kim at WCSF\" /></a>\n\n<h3>Kim Parsell<br />\n1956-2015</h3>\n<div class=\"rtsocial-container rtsocial-container-align-right rtsocial-horizontal\"><div class=\"rtsocial-twitter-horizontal\"><div class=\"rtsocial-twitter-horizontal-button\"><a title=\"Tweet: A Family Well Loved\" class=\"rtsocial-twitter-button\" href=\"https://twitter.com/share?text=A%20Family%20Well%20Loved&via=heropress&url=https%3A%2F%2Fheropress.com%2Fessays%2Ffamily-well-loved%2F\" rel=\"nofollow\" target=\"_blank\"></a></div></div><div class=\"rtsocial-fb-horizontal fb-light\"><div class=\"rtsocial-fb-horizontal-button\"><a title=\"Like: A Family Well Loved\" class=\"rtsocial-fb-button rtsocial-fb-like-light\" href=\"https://www.facebook.com/sharer.php?u=https%3A%2F%2Fheropress.com%2Fessays%2Ffamily-well-loved%2F\" rel=\"nofollow\" target=\"_blank\"></a></div></div><div class=\"rtsocial-linkedin-horizontal\"><div class=\"rtsocial-linkedin-horizontal-button\"><a class=\"rtsocial-linkedin-button\" href=\"https://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fheropress.com%2Fessays%2Ffamily-well-loved%2F&title=A+Family+Well+Loved\" rel=\"nofollow\" target=\"_blank\" title=\"Share: A Family Well Loved\"></a></div></div><div class=\"rtsocial-pinterest-horizontal\"><div class=\"rtsocial-pinterest-horizontal-button\"><a class=\"rtsocial-pinterest-button\" href=\"https://pinterest.com/pin/create/button/?url=https://heropress.com/essays/family-well-loved/&media=https://heropress.com/wp-content/uploads/2017/11/110117-150x150.jpg&description=A Family Well Loved\" rel=\"nofollow\" target=\"_blank\" title=\"Pin: A Family Well Loved\"></a></div></div><a rel=\"nofollow\" class=\"perma-link\" href=\"https://heropress.com/essays/family-well-loved/\" title=\"A Family Well Loved\"></a></div><p>The post <a rel=\"nofollow\" href=\"https://heropress.com/essays/family-well-loved/\">A Family Well Loved</a> appeared first on <a rel=\"nofollow\" href=\"https://heropress.com\">HeroPress</a>.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 01 Nov 2017 12:00:15 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:11:\"Kim Parsell\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:36;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:69:\"WPTavern: WordPress 4.8.3, A Security Release Six Weeks in the Making\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=76178\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:79:\"https://wptavern.com/wordpress-4-8-3-a-security-release-six-weeks-in-the-making\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:6265:\"<p>WordPress 4.8.3 <a href=\"https://wordpress.org/news/2017/10/wordpress-4-8-3-security-release/\">is available</a> and is a security release for 4.8.2 and all previous versions. This release addresses an issue with $wpdb-&gt;prepare() that could lead to a potential SQL injection. While WordPress core is not vulnerable, <a href=\"https://en.wikipedia.org/wiki/Hardening_(computing)\">hardening</a> has been added to prevent plugins and themes from inadvertently causing a vulnerability.</p>\n<p>If you&#8217;re experiencing a bit of déjà vu, it&#8217;s because WordPress 4.8.2 <a href=\"https://wordpress.org/news/2017/09/wordpress-4-8-2-security-and-maintenance-release/\">attempted to solve</a> the same problem. <a href=\"https://blog.ircmaxell.com/2017/10/disclosure-wordpress-wpdb-sql-injection-background.html\">According</a> to <a href=\"https://twitter.com/ircmaxell\">Anthony Ferrara</a> who <a href=\"https://blog.ircmaxell.com/2017/10/disclosure-wordpress-wpdb-sql-injection-technical.html\">reported and disclosed</a> the vulnerability, the patch in 4.8.2 didn&#8217;t solve the underlying problem and broke many sites.</p>\n<p>Ferrara says he reported the issue immediately after 4.8.2 was released and was ignored by the WordPress security team for several weeks.</p>\n<p>&#8220;When I got the attention of the team, they wanted to fix a subset of the issue I reported,&#8221; he said. &#8220;It became clear to me that releasing a partial fix was worse than no fix (for many reasons). So I decided the only way to make the team realize the full extent was to Full Disclosure the issue.&#8221;</p>\n<p>Full Disclosure is the process of publicly sharing technical details of a vulnerability so that the public knows the same amount of information about it as hackers. The threat of full disclosure is typically used to pressure businesses and software creators to act swiftly and release patches as soon as possible.</p>\n<p>On October 26th, Ferrara used his Twitter account to <a href=\"https://twitter.com/ircmaxell/status/923662170092638208\">notify the public</a> that WordPress contained a serious SQLi vulnerability and that because he lacked confidence in the team, fully disclosing it was his only option. His message was retweeted 562 times and liked by 484 people.</p>\n<p>The amount of publicity his Tweet received had an impact as on October 27th, Ferrara reported that constructive discussions resumed with the team and that he would delay the disclosure until October 31st.</p>\n<blockquote class=\"twitter-tweet\">\n<p lang=\"en\" dir=\"ltr\">RE: WP Issue: I constructive discussions have resumed with the security team. I will be delaying FD until at earliest the 31st.</p>\n<p>&mdash; Anthony Ferrara (@ircmaxell) <a href=\"https://twitter.com/ircmaxell/status/923907743555178496?ref_src=twsrc%5Etfw\">October 27, 2017</a></p></blockquote>\n<p></p>\n<p>On October 27th, Ferrara spoke to a member of the WordPress security team who provided a fresh set of eyes to the problem, &#8220;A security team member who hadn’t yet participated in the thread went back to the beginning of the thread and re-read every post,&#8221; he said.</p>\n<p>&#8220;He (correctly I may add) summarized the entirety of the issues, as well as asked a few clarifying questions. He also asked for a little more time but gave me a target of Tuesday, October 31st so it wasn’t wide open. This was the response I was looking for the entire time.&#8221;</p>\n<p>Both parties collaborated on a patch that fixed the issue and WordPress 4.8.3 was released. Although his experience started out frustrating, Ferrara is hopeful that the team will do better with future reports.</p>\n<p>&#8220;I get that there are competing priorities,&#8221; he said. &#8220;But show attention. Show that you’ve read what’s written. And if someone tells you it seems like you don’t understand something, stop and get clarification. And ask for help. Overall, I hope the WP security team moves forward from this. I do honestly see hope.&#8221;</p>\n<p>Aaron Campbell, WordPress Security Team Lead, says that although there were some rough patches in working with Ferrara, they were able to work together to get a fix released in the end. While the threat of full disclosure didn&#8217;t have a huge impact on getting the vulnerability patched, it may have been the catalyst to get a new person involved in the process.</p>\n<p>&#8220;A threat of disclosure certainly adds pressure and possibly stress, but doesn’t actually change the overall equation that much.&#8221; Campbell said. &#8220;An issue isn’t more severe because it’s going to be disclosed, but it can become more rushed (meaning a higher likelihood of mistakes).</p>\n<p>In this case, I actually think the threat of disclosure ended up coinciding with one of the people from our security team joining in to help out. The new person was much better at communicating with Anthony, and it really turned things around.&#8221;</p>\n<p>In the official release post, the WordPress Security Team thanked Ferrara for practicing <a href=\"https://make.wordpress.org/core/handbook/testing/reporting-security-vulnerabilities/\">Responsible Disclosure</a>. This generated some conversation on Twitter on whether responsible disclosure should be renamed to coordinated disclosure.</p>\n<blockquote class=\"twitter-tweet\">\n<p lang=\"en\" dir=\"ltr\">Dear WordPress:</p>\n<p>Stop calling it \"responsible disclosure\". It\'s \"coordinated disclosure\".</p>\n<p>&mdash; Scott Arciszewski (@CiPHPerCoder) <a href=\"https://twitter.com/CiPHPerCoder/status/925384513307504641?ref_src=twsrc%5Etfw\">October 31, 2017</a></p></blockquote>\n<p></p>\n<p>&#8220;I’m not sure I know what the terminology change would be aiming to accomplish,&#8221; Campbell said. &#8220;I do see that some places use this particular phrasing, but honestly I don’t see how it conveys anything that’s not already generally understood with responsible disclosure.&#8221;</p>\n<p>Users are encouraged to update their sites to 4.8.3 as soon as possible. Since this release changes the behavior of esc_sql(), developers are highly encouraged to read this <a href=\"https://make.wordpress.org/core/2017/10/31/changed-behaviour-of-esc_sql-in-wordpress-4-8-3/\">dev note</a> on the Make WordPress Core site.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 01 Nov 2017 10:11:50 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Jeff Chandler\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:37;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"Dev Blog: WordPress 4.8.3 Security Release\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"https://wordpress.org/news/?p=5035\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:68:\"https://wordpress.org/news/2017/10/wordpress-4-8-3-security-release/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:1336:\"<p>WordPress 4.8.3 is now available. This is a <strong>security release</strong> for all previous versions and we strongly encourage you to update your sites immediately.</p>\n<p>WordPress versions 4.8.2 and earlier are affected by an issue where <code>$wpdb-&gt;prepare()</code> can create unexpected and unsafe queries leading to potential SQL injection (SQLi). WordPress core is not directly vulnerable to this issue, but we’ve added hardening to prevent plugins and themes from accidentally causing a vulnerability. Reported by <a href=\"https://twitter.com/ircmaxell\">Anthony Ferrara</a>.</p>\n<p>This release includes a change in behaviour for the <code>esc_sql()</code> function. Most developers will not be affected by this change, you can read more details in the <a href=\"https://make.wordpress.org/core/2017/10/31/changed-behaviour-of-esc_sql-in-wordpress-4-8-3/\">developer note</a>.</p>\n<p>Thank you to the reporter of this issue for practicing <a href=\"https://make.wordpress.org/core/handbook/testing/reporting-security-vulnerabilities/\">responsible disclosure</a>.</p>\n<p><a href=\"https://wordpress.org/download/\">Download WordPress 4.8.3</a> or venture over to Dashboard → Updates and simply click “Update Now.” Sites that support automatic background updates are already beginning to update to WordPress 4.8.3.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 31 Oct 2017 14:20:16 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:15:\"Gary Pendergast\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:38;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:41:\"Dev Blog: WordPress 4.9 Release Candidate\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"https://wordpress.org/news/?p=4963\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:67:\"https://wordpress.org/news/2017/10/wordpress-4-9-release-candidate/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3136:\"<p>The release candidate for WordPress 4.9 is now available.</p>\n<p>RC means we think we’re done, but with millions of users and thousands of plugins and themes, it’s possible we’ve missed something. We hope to ship WordPress 4.9 on <strong>Tuesday, November 14</strong>, but we need your help to get there. If you haven’t tested 4.9 yet, now is the time!</p>\n<p>To test WordPress 4.9, you can use the <a href=\"https://wordpress.org/plugins/wordpress-beta-tester/\">WordPress Beta Tester</a> plugin or you can <a href=\"https://wordpress.org/wordpress-4.9-RC1.zip\">download the release candidate here</a> (zip).</p>\n<p>We&#8217;ve made <a href=\"https://core.trac.wordpress.org/log/trunk/?action=stop_on_copy&mode=stop_on_copy&rev=42049&stop_rev=42022&limit=100&sfp_email=&sfph_mail=\">almost 30 changes</a> since releasing Beta 4 last week. For more details about what’s new in version 4.9, check out the <a href=\"https://wordpress.org/news/2017/10/wordpress-4-9-beta-1/\">Beta 1</a>, <a href=\"https://wordpress.org/news/2017/10/wordpress-4-9-beta-2/\">Beta 2</a>, <a href=\"https://wordpress.org/news/2017/10/wordpress-4-9-beta-3/\">Beta 3</a>, and <a href=\"https://wordpress.org/news/2017/10/wordpress-4-9-beta-4/\">Beta 4</a> blog posts.</p>\n<p><strong>Developers</strong>, please test your plugins and themes against WordPress 4.9 and update your plugin’s <em>Tested up to</em> version in the readme to 4.9. If you find compatibility problems please be sure to post to the support forums so we can figure those out before the final release — we work hard to avoid breaking things. An in-depth field guide to developer-focused changes is coming soon on the <a href=\"https://make.wordpress.org/core/\">core development blog</a>. In the meantime, you can review the <a href=\"https://make.wordpress.org/core/tag/4.9+dev-notes/\">developer notes for 4.9</a>.</p>\n<p>Do you speak a language other than English? <a href=\"https://translate.wordpress.org/projects/wp/dev\">Help us translate WordPress into more than 100 languages!</a></p>\n<p><strong>If you think you’ve found a bug</strong>, you can post to the <a href=\"https://wordpress.org/support/forum/alphabeta\">Alpha/Beta area</a> in the support forums. We’d love to hear from you! If you’re comfortable writing a reproducible bug report, <a href=\"https://make.wordpress.org/core/reports/\">file one on WordPress Trac</a>, where you can also find <a href=\"https://core.trac.wordpress.org/tickets/major\">a list of known bugs</a>.</p>\n<p>This week&#8217;s haiku is courtesy of <a href=\"https://profiles.wordpress.org/pento/\" class=\"mention\"><span class=\"mentions-prefix\">@</span>pento</a>:</p>\n<p><em>this is halloween <img src=\"https://s.w.org/images/core/emoji/2.3/72x72/1f383.png\" alt=\"?\" class=\"wp-smiley\" /></em><br />\n<em>scary, spooky, candy day <img src=\"https://s.w.org/images/core/emoji/2.3/72x72/1f47b.png\" alt=\"?\" class=\"wp-smiley\" /></em><br />\n<em>rc1 is sweet <img src=\"https://s.w.org/images/core/emoji/2.3/72x72/1f36c.png\" alt=\"?\" class=\"wp-smiley\" /></em></p>\n<p>Thanks for your continued help testing out the latest versions of WordPress.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 31 Oct 2017 04:42:38 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:10:\"Mel Choyce\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:39;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:86:\"WPTavern: GDPR for WordPress Project Seeks to Provide a Standard for Plugin Compliance\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=76141\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:97:\"https://wptavern.com/gdpr-for-wordpress-project-seeks-to-provide-a-standard-for-plugin-compliance\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:6641:\"<p><a href=\"https://i2.wp.com/wptavern.com/wp-content/uploads/2017/10/WP-GDPR-Compliance.png?ssl=1\"><img /></a></p>\n<p>WordCamp Denmark organizer <a href=\"https://twitter.com/kaaremulvad\" rel=\"noopener\" target=\"_blank\">Kåre Mulvad Steffensen</a> and WP Pusher creator <a href=\"https://wppusher.com/\" rel=\"noopener\" target=\"_blank\">Peter Suhm</a> are working on a <a href=\"https://www.gdprwp.com/\" rel=\"noopener\" target=\"_blank\">GDPR for WordPress</a> project that aims to provide an industry standard for getting plugins compliant with EU General Data Protection Regulation (GDPR) legislation. The deadline for compliance is May 28, 2018, approximately 200 days from now. The Danish duo met at WordCamp Europe a few years ago and were inspired to work together on several projects, with GDPR compliance for WordPress sites being the most urgent item on their list.</p>\n<p>&#8220;We want to create a standard for plugin creators to describe what kind of data they store and how to handle it,&#8221; Suhm said. &#8220;With a standard like this it will be possible to build tools to make WP sites compliant with GDPR. That basically means things like generating privacy policies, tools to export sensitive data, and tools to delete it completely. GDPR is pretty complex, so there will likely be a lot of tools around this. The first thing we need is a standard. It&#8217;s critical especially for EU based companies, and I can tell you that it&#8217;s something people discuss in every meetup and WordCamp over here.&#8221;</p>\n<p>The GDPR for WordPress site includes a summary of website owners&#8217; obligations in regards to collecting data related to EU citizens. It&#8217;s not comprehensive but gives an idea of what items the standard will need to cover:</p>\n<ul>\n<li>Tell the user: who you are, why you collect the data, for how long and who receives it.</li>\n<li>Get a clear consent, before collecting any data</li>\n<li>Let users access their data, and take it with them</li>\n<li>Let users delete their data</li>\n<li>Let users know if data breaches occur</li>\n</ul>\n<p>Steffensen and Suhm&#8217;s first step is <a href=\"https://goo.gl/forms/U9zp6rS1HSDcKZI42\" rel=\"noopener\" target=\"_blank\">surveying WordPress plugin developers</a> to gauge their awareness of the GDPR. They also want to know if developers would be interested in using a free, open source solution, like a simple file with a map of personal and sensitive data stored by their plugins. The GDPR for WordPress team would then use the tool as a foundation to build tools that can take care of compliance by parsing these files.</p>\n<p>&#8220;When we have the survey data we will continue to work on the standard,&#8221; Suhm said. &#8220;It will be 100% open source, so everyone can use it to build whatever they see fit afterwards. So far it&#8217;s just a lot of ideas and we really want to collect as much input as possible so we can get everyone onboard.&#8221;</p>\n<p>The team has created a roadmap that that they will update based on feedback from plugin developers. They plan to work on the following:</p>\n<ul>\n<li>Methodology to describe how a plugin collects, stores, and uses personal data</li>\n<li>Methodology file builder for plugin developers to use</li>\n<li>Provide a clear visual compliance indicator on every plugin installed</li>\n<li>Privacy policy text builder based on installed (compliant) plugins</li>\n<li>Provide an administrative overview on each users data being stored, across plugins</li>\n<li>Provide an administrative way to send user data to a specific user upon request</li>\n<li>Provide an administrative way to delete user data on a specific user upon request</li>\n<li>Add site wide Explicit consent checkbox, with detailed yet plain English on what data is stored, how it is used and how long. (This is a replacement for the cookie popup) – possible disablement of submitting actions until consent is given? The request to collect data should happen to every user before any data is collected, that might also mean cookies.</li>\n</ul>\n<p>Despite the quickly approaching deadline, solutions aimed at helping WordPress sites to be compliant with the GDPR are virtually non-existent. There are currently only <a href=\"https://wordpress.org/plugins/search/GDPR/\" rel=\"noopener\" target=\"_blank\">six plugins in the directory</a> with descriptions that mention having been built with GDPR compliance and privacy in mind. Many site owners will be woefully unprepared to comply with the legislation.</p>\n<p>A couple of months ago we looked the <a href=\"https://wptavern.com/gravity-forms-stop-entries-plugin-aims-to-help-sites-comply-with-the-eus-gdpr\" rel=\"noopener\" target=\"_blank\">Wider Gravity Forms Stop Entries plugin</a>, which helps site owners protect the privacy of form submissions by preventing them from being stored in the database. Since many plugins don&#8217;t have these options built in, other plugin developers have to extend them to suit their users&#8217; needs. At the moment, there is no standard way of doing this because of the wide variance in how plugins store their data.</p>\n<p>This solution the GDPR for WordPress team is proposing is different in that it aims to give plugin authors a standard for including a meta description of the personal and sensitive data that their plugins stores. The GDPR doesn&#8217;t prohibit plugins from storing personal identifiable data but it does require website owners to detail what, where, and for what purpose it is stored.</p>\n<p>&#8220;The problem right now is that it is almost impossible to figure out what information a WordPress plugin stores and where it is stored,&#8221; Suhm said. &#8220;This will make it possible to build general solutions across plugins to ensure GDPR compliance. An example could be a tool to delete sensitive data from a WordPress site, including the data stored by plugins. That is only possible if plugin authors include some sort of description of their &#8216;data footprint.\'&#8221;</p>\n<p>The biggest challenge the team has is rallying plugin developers to get on board with following a new standard and updating their plugins to provide a data footprint. This is not an easy task as the burden of compliance falls to the website owners, not individual plugin developers. Even if site owners are motivated to educate themselves, the prospect of figuring out what data is being stored and where can be daunting. If the GDPR for WordPress team can successfully get the plugin developer community on board, they can work together to build a suite of tools that help end users get a broad overview of their sites&#8217; GDPR compliance.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 30 Oct 2017 23:20:24 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:40;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:69:\"Post Status: The WordPress product market is completely different now\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"https://poststatus.com/?p=39797\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:73:\"https://poststatus.com/wordpress-product-market-completely-different-now/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:8685:\"<p><em>This article is a member contribution from Scott Bolinger. Scott is the founder of <a href=\"https://hollerwp.com/\">Holler Box</a> and the co-founder of <a href=\"https://apppresser.com/\">AppPresser</a>.</em></p>\n<p>The WordPress economy is changing, and many businesses are feeling it.</p>\n<p>The <a href=\"https://poststatus.com/future-wordpress-economy-im-not-worried/\">market is maturing</a>, and <a href=\"http://chrislema.com/wordpress-economy-shrinking/\">customers are behaving differently</a>. It&#8217;s happening slowly, but I think everyone realizes things are changing.</p>\n<p>Often this change has been discussed in terms of hosts and agencies, but let&#8217;s talk about products.</p>\n<p>I just read an article on Indie Hackers about MH Themes, a premium theme shop that started in 2013. They describe a <a href=\"https://www.indiehackers.com/businesses/mh-themes\">hard-fought journey</a> to a solid $30K in monthly revenue, but they have noticed big changes in the market since they started.</p>\n<p>The author, Michael Hebenstreit, puts it this way:</p>\n<blockquote><p>Back in 2013 it was much easier to launch a WordPress theme and make it somewhat popular. Today the market for WordPress themes has become heavily crowded and oversaturated. It&#8217;s near to impossible to make a theme highly successful without investing lots of time and money in marketing and building a community behind your product.</p></blockquote>\n<p>It comes as no surprise that the theme business is saturated; it <a href=\"http://scottbolinger.com/wordpress-theme-business/\">has been for years</a>. I would now say the plugin business is saturated as well.</p>\n<p>From 2008 to 2010 you could have released just about any decent plugin or theme, and it would have done fairly well, simply because there was very little competition. The WordPress market was in an early and extreme growth phase. People were realizing there was money to be made.</p>\n<p>Many different product categories were ripe for innovation, with no dominant players at all. For example, the eCommerce landscape was wide open before WooCommerce became popular in 2011. Now there is no one even remotely close to them, and <a href=\"https://ithemes.com/exchange/\">competing</a> with WooCommerce doesn&#8217;t seem like a good idea.</p>\n<p>Today what we see in most product categories is at least one dominant player, and many other new entrants at their heels. Backups, security, SEO, themes, page builders, forms, caching, lead generation, and other categories all have stiff competition.</p>\n<p>Previously the competition was a developer trying to figure out how to grow a company. Now it&#8217;s a 30+ person organization with millions of dollars in revenue. iThemes, Yoast, Gravity Forms, Awesome Motive, and WooCommerce are just a few. These companies have a loyal following that makes it harder for smaller shops to take a piece of the pie.</p>\n<p>Popular plugins now have millions of downloads, lots of articles written about them, and avid fans. They are becoming harder and harder to dethrone, or even to challenge for a slice of market share.</p>\n<h3>Your product is a commodity</h3>\n<p>As Alex Turnbull says <a href=\"https://www.groovehq.com/blog/commoditization\">in this recent article</a>, &#8220;if your product isn&#8217;t already a commodity, it will become one in the next few years.&#8221;</p>\n<p>It&#8217;s becoming easier and easier to create and sell a product online. Developers are ubiquitous, websites are cheap, and many people can build something on the side with a full time job.</p>\n<p>That means when you release a product you not only have the established leaders to contend with, but lots smaller players with great products just getting started. Even if your product is great, there are 10 other great products in the same category.</p>\n<p>That doesn&#8217;t mean a great product isn&#8217;t important — it certainly is. It does mean that it&#8217;s not enough.</p>\n<p>If your product isn&#8217;t enough to stand out in a crowded marketplace, what does it take?</p>\n<h3>How to bring a new product to market now</h3>\n<p>The old way of starting a new product might have been to go where there was less competition and create a better product. If there are still places of &#8220;less competition&#8221; they are much harder to see.</p>\n<p>You can go after a niche, but WordPress is already a niche. A niche within a niche is a very small market.</p>\n<p>It&#8217;s not impossible to slay the giant Goliath product companies. As <a href=\"https://blog.asmartbear.com/compete-on-profit.html\">Jason Cohen</a> points out, they have an Achilles heel: &#8220;The profitable revenue stream is a prison.&#8221; They are slower to adapt to changes in the marketplace because they can still make money doing what they have always done.</p>\n<p>If you are thinking about bringing a new product to market, here are a few observations that may help you.</p>\n<h4>1) It&#8217;s going to be a lot harder than it used to be, and it&#8217;s going to take longer.</h4>\n<p>Can you go for a year (or two) without making any money and still be cranking out code and marketing yourself? That may be what it takes.</p>\n<p>Putting up a website and starting a content strategy takes six months to see any solid organic traffic. Publishing your plugin to official WordPress directory does not result in automatic downloads. The newer search algorithms favor the entrenched plugins that have more downloads and reviews.</p>\n<p>It&#8217;s an uphill battle, and it takes time.</p>\n<h4>2) You must have a strategic advantage, or a unique difference to win.</h4>\n<p>Ninja Forms went into a crowded space against one of the most popular plugins of all time, Gravity Forms. They gained an advantage by offering a free version and distributing it on the directory, while Gravity Forms was entirely commercial. Why did they do so much better than other free form plugins? I don’t know, but they certainly executed well, and they have created a great brand.</p>\n<p>Can you find a competitive advantage and exploit it?</p>\n<p>One weakness I see in many WordPress companies is marketing. Many of the early successes in WordPress were coders who made a cool plugin. Most of them are not marketers, and they have enough business without needing to learn marketing. This leaves the door open for companies with great marketing.</p>\n<p>Can you dominate an under-marketed product category?</p>\n<p>You are going to have to do something different and better than what has come before. Copying a business model that worked in 2012 is not a good strategy.</p>\n<h4>3) Branding is more important than ever.</h4>\n<p>Your brand is what will help you gain market share against your competitors.</p>\n<p>A brand is not your logo, and it’s not what you say about your company. It’s what they say. They, as in, your customers.</p>\n<p>Providing great customer service, getting to know people at events, being helpful on social media, providing refunds without asking questions — these are all parts of your brand. Being known for doing good work is another, so that when you release a new product, people just buy it.</p>\n<p>I think of the brand Pippin Williamson has built for himself, since he is known for putting out high quality products. I will buy a plugin he makes over a more established competitor because of his reputation for quality. iThemes is another great example of a company that cares about their customers. They have built a brand on integrity.</p>\n<p>Building a brand takes time, but it is more important than ever.</p>\n<h3>Looking forward</h3>\n<p>The WordPress market is no longer high growth and low competition.</p>\n<p>The companies involved in products are maturing into well staffed, well funded operations. Their fans are loyal, and their products are entrenched. This makes it harder for new entrants into the market to compete.</p>\n<p>New products must have a well thought out strategy to gain traction in this competitive marketplace. Without unique positioning and hard fought execution, they will not survive.</p>\n<p>It’s not all bad news, because this is how most marketplaces look already. It’s a sign that those of us who make products need to get more creative about how we approach product development and marketing.</p>\n<p>As the more successful companies get larger, they will also become more resistant to change. When this happens, newer product offerings will be able to steal market share with fast paced innovation and development.</p>\n<hr />\n<p>This post was originally posted for <a href=\"https://poststatus.com/club\">Post Status Club Members</a>. Join to get exclusive content like this.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 30 Oct 2017 21:38:22 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Scott Bolinger\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:41;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:62:\"Akismet: Akismet Has Caught Four Hundred Billion Spam Comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"http://blog.akismet.com/?p=1973\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:60:\"https://blog.akismet.com/2017/10/30/400-billion-spam-caught/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:1338:\"<p>Over the weekend, Akismet stopped its 400 billionth spam comment.</p>\n<p><a href=\"https://akismet.com/400billion/\"><img /></a></p>\n<p>400,000,000,000 is a lot. How many is it?</p>\n<ul>\n<li>It&#8217;s so many that I lost count of the zeroes while I was typing it out.</li>\n<li>It&#8217;s so many that most <a href=\"https://akismet.files.wordpress.com/2017/10/51c6f8n-wml.jpg\">basic calculators</a> can&#8217;t even display a number that big.</li>\n<li>It&#8217;s so many that if it took you five seconds to mark each of those comments as spam, you&#8217;d have to skip your office Halloween party for the next 63,419 years because you&#8217;d still be busy clicking.</li>\n</ul>\n<p>Akismet will continue quietly catching spam. (In fact, it&#8217;s already caught another million spam while you were reading this.)  If you have a spam problem, <a href=\"https://akismet.com/plans/\">sign up for Akismet</a>, and you can help us reach our next hundred billion milestone even faster.</p><br />  <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/akismet.wordpress.com/1973/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/akismet.wordpress.com/1973/\" /></a> <img alt=\"\" border=\"0\" src=\"https://pixel.wp.com/b.gif?host=blog.akismet.com&blog=116920&post=1973&subd=akismet&ref=&feed=1\" width=\"1\" height=\"1\" />\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 30 Oct 2017 16:13:17 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:17:\"Christopher Finke\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:42;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:27:\"Matt: Drake Trick-or-Treats\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:22:\"https://ma.tt/?p=47614\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:44:\"https://ma.tt/2017/10/drake-trick-or-treats/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:133:\"<br />\n\n<p>As you prepare for Halloween you&#x27;ll enjoy this Drake parody, especially if you&#x27;re familiar with his catalog.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sun, 29 Oct 2017 19:23:23 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"Matt\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:43;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:89:\"WPTavern: New Dispensary Details Plugin for WooCommerce Adds Cannabis Details to Products\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=75760\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:100:\"https://wptavern.com/new-dispensary-details-plugin-for-woocommerce-adds-cannabis-details-to-products\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:5876:\"<a href=\"https://i2.wp.com/wptavern.com/wp-content/uploads/2016/04/blueberry-kush.jpg?ssl=1\"><img /></a>photo credit: <a href=\"http://www.flickr.com/photos/57298467@N03/5500914557\">Blueberry Kush, Indica-3</a> &#8211; <a href=\"https://creativecommons.org/licenses/by/2.0/\">(license)</a>\n<p>Two years ago, WordPress developer Robert DeVore launched <a href=\"https://www.wpdispensary.com/\" rel=\"noopener\" target=\"_blank\">WP Dispensary</a>, a free marijuana dispensary menu plugin for WordPress, and has since built an accompanying theme, additional free add-ons, and six commercial extensions. DeVore is aiming to make WP Dispensary a complete online menu software solution for dispensaries and delivery services. The business has grown enough over recent months for him to begin working full-time on it.</p>\n<p>&#8220;One of the larger objectives going full time with WP Dispensary was to put together content that was specific for both dispensary owners and freelance WordPress developers,&#8221; Devore said. &#8220;There is a 50/50 split with buyers, so I know that writing content to outline how WPD can help you specifically is an important next step.&#8221;</p>\n<p>Due to recent demand seen in pre-sales questions, DeVore has just released a Dispensary Details plugin to meet the needs of the much larger market of customers using WooCommerce. The plugin does not require WP Dispensary to work.</p>\n<p>&#8220;Instead of leaving a need out there, I looked at WP Dispensary and knew I could create a standalone plugin that added the proper details and displayed cleanly within the WooCommerce structure,&#8221; DeVore said.</p>\n<p>The <a href=\"https://www.wpdispensary.com/downloads/dispensary-details-for-woocommerce/\" rel=\"noopener\" target=\"_blank\">Dispensary Details for WooCommerce</a> plugin is the first of its kind for the e-commerce platform. It adds custom taxonomies and metaboxes that allow store owners to add cannabis details to products, including information like compound details, aromas, effects, conditions, vendors, symptoms, and more.</p>\n<p><a href=\"https://i0.wp.com/wptavern.com/wp-content/uploads/2017/10/dispensary-details-front-end-table.jpg?ssl=1\"><img /></a></p>\n<p>The plugin includes separate Edibles and Topicals details boxes where store owners can enter THC/CBD per serving, size, serving count, and net weight. It also has a Grower Details box for cannabis shops that sell clones or seeds with specific sections for origin, average grow time and yield, and the clones/seeds per unit.</p>\n<p>Dispensary Details for WooCommerce works with any WordPress theme and simply adds the new Details tab to product pages alongside the various other tabs that WooCommerce displays. The plugin is priced at $149.00, which includes one year of support and updates.</p>\n<p>The WordPress product market is just starting to build solutions for the growing marijuana industry, and DeVore predicts that WordPress site builders will soon be in high demand.</p>\n<p>&#8220;I feel like the industry is going to become more regulated and also increased banking will allow for companies to focus on the marketing/sales side of the business rather than the business side of the business. With companies like KIND Financial recently putting out a <a href=\"http://kind.financial/kind-seed-payment/\" rel=\"noopener\" target=\"_blank\">seed-to-sale solution</a> along with a bank in Canada, it&#8217;s just a sign that things are changing for the better.&#8221;</p>\n<p>DeVore said changes like these will allow businesses to focus on their websites and WordPress developers will have the opportunity to provide solutions for them, just like they already do for so many other industries. Outside of the U.S. there are already many mail order cannabis services in operation and DeVore said inside the U.S. he has noticed a lot of delivery services that are using WP Dispensary with WooCommerce to allow patients to place orders.</p>\n<p>More competition is starting to sprout up for this new niche in the WordPress ecosystem and many of them are working towards providing more comprehensive e-commerce solutions. <a href=\"https://liftedthemes.com/\" rel=\"noopener\" target=\"_blank\">Lifted Themes</a> is a shop that sells WordPress plugins and themes for the marijuana industry. The company is working on building products that will sync with major POS or Seed to Sale systems. Similarly, <a href=\"https://h32b.com/\" rel=\"noopener\" target=\"_blank\">H32B</a> provides a theme along with a suite of WooCommerce plugins for medical marijuana dispensaries.</p>\n<p><a href=\"https://i1.wp.com/wptavern.com/wp-content/uploads/2017/10/Screen-Shot-2017-10-27-at-3.12.08-PM-e1509135316697.png?ssl=1\"><img /></a></p>\n<p><a href=\"https://mmjecommerce.com/\" rel=\"noopener\" target=\"_blank\">MMJ E-Commerce</a> is another newer company that provides WooCommerce and WordPress plugins and services for dispensaries with a focus on resources for compliance. The site offers plugins for patient registration forms, credit card payments, THC CBD shipping restrictions, and Age Verification forms.</p>\n<p>A report from <a href=\"https://www.forbes.com/sites/debraborchardt/2017/01/03/marijuana-sales-totaled-6-7-billion-in-2016/#463a07d75e39\" rel=\"noopener\" target=\"_blank\">Arcview Market Research</a> published this year showed that North American marijuana sales grew 30% to $6.7 billion and sales are projected to exceed $20 billion by 2021 (assuming a compound annual growth rate of 25%). As of September 2017, <a href=\"http://www.governing.com/gov-data/state-marijuana-laws-map-medical-recreational.html\" rel=\"noopener\" target=\"_blank\">29 states and the District of Columbia</a> have laws that legalize marijuana in some form. As prohibition collapses in more states, the marijuana industry is set to expand and this budding niche in the WordPress ecosystem will likely see significant growth.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 27 Oct 2017 21:48:02 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:44;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:85:\"WPTavern: Results From the 2017 WordPress User Survey Are Not Guaranteed to Be Shared\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=76120\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:96:\"https://wptavern.com/results-from-the-2017-wordpress-user-survey-are-not-guaranteed-to-be-shared\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:1425:\"<p>As November edges closer, the countdown to <a href=\"https://2017.us.wordcamp.org/\">WordCamp US</a> begins. One of the annual traditions that&#8217;s part of the event is the <a href=\"https://wordpressdotorg.polldaddy.com/s/wordpress-2017-survey\">WordPress User Survey</a>. The survey is used to gauge who and how people use WordPress. Although the survey says results will be presented at WordCamp US, that hasn&#8217;t been the case the last two years.</p>\n<p>Astute readers <a href=\"https://wptavern.com/take-the-2016-wordpress-user-survey\">may remember</a> that results from the 2015 survey were not shared. When asked why, Matt Mullenweg replied, &#8220;Lots of data to go over, but basically more people are using WordPress, app development is growing, lots of people are making their living with WordPress, and other great trends are showing up,&#8221; he said. &#8220;We’ll try to do a blog post about it.&#8221;</p>\n<p>That blog post was never published. Additionally, results from last year&#8217;s survey were not shared during the State of the Word or in a blog post.</p>\n<p>Thousands of people take the survey providing insight into trends, how people use the software, and demographics. If users voluntarily provide this data to WordPress.org, sharing the results with the public whether it&#8217;s a blog post, separate session, or during the State of the Word, would be a nice way to return the favor.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 27 Oct 2017 20:04:04 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Jeff Chandler\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:45;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:87:\"WPTavern: Patreon Launches App Directory and Free WordPress Plugin for Membership Sites\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=76094\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:98:\"https://wptavern.com/patreon-launches-app-directory-and-free-wordpress-plugin-for-membership-sites\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3319:\"<p><a href=\"https://www.patreon.com/\" rel=\"noopener\" target=\"_blank\">Patreon</a> was founded in May 2013 as a service with business tools that allow content creators to crowdfund their work through donations and subscriptions. The service is now expanding to help users connect their accounts to more third-party tools that make patron management easier. Patreon <a href=\"https://blog.patreon.com/patreon-powers-membership-across-the-web/\" rel=\"noopener\" target=\"_blank\">launched</a> its new <a href=\"https://www.patreon.com/apps/featured\" rel=\"noopener\" target=\"_blank\">App Directory</a> and <a href=\"http://patreon.com/portal\" rel=\"noopener\" target=\"_blank\">Developer Portal</a> today, featuring <a href=\"https://www.patreon.com/apps/wordpress\" rel=\"noopener\" target=\"_blank\">a free WordPress plugin</a> that offers basic membership capabilities.</p>\n<p>The plugin uses the Patreon API to tell the WordPress site who is a patron and what pledge level they are at. Patrons can then click on the “Connect with Patreon” button included with the plugin and site owners will have the ability to publish posts that are viewable by patrons only. It also includes an option to provide an ad-free experience for patrons visiting the site.</p>\n<p><a href=\"https://i2.wp.com/wptavern.com/wp-content/uploads/2017/10/patron-posts.png?ssl=1\"><img /></a></p>\n<p>The plugin is free, maintained and supported by Patreon, and released under the Apache License Version 2.0. Users who want more features can purchase a commercial plugin called <a href=\"https://www.patreon.com/apps/patronpluginpro\" rel=\"noopener\" target=\"_blank\">Patron Plugin Pro</a>, which is available in the App Directory from a third party. It offers more granular control over content restriction:</p>\n<ul>\n<li>Make entire site patron only with a single click</li>\n<li>Mark an entire post, post type, or parts of content as patron-only with a click</li>\n<li>Customizable different types of notifications for Patron only content with Message and buttons</li>\n<li>Custom Banner/Notification for non-patrons viewing a patron-only Post</li>\n<li>Protect excerpts in listings for patron-only content</li>\n</ul>\n<p>Usage of the plugin is $30/year, which includes ongoing updates and access to community support. It does not include premium support. Patron Plugin Pro was created and maintained by <a href=\"https://codebard.com/\" rel=\"noopener\" target=\"_blank\">CodeBard</a>, a company that also has a plugin on WordPress.org for <a href=\"https://wordpress.org/plugins/patron-button-and-widgets-by-codebard/\" rel=\"noopener\" target=\"_blank\">adding Patreon buttons and widgets</a>. For those who want to build their own integrations, Patreon&#8217;s new <a href=\"https://www.patreon.com/portal\" rel=\"noopener\" target=\"_blank\">Developer Portal</a> has documentation on its REST API and Webhooks.</p>\n<p>Last month Patreon announced that the company had <a href=\"https://patreonhq.com/new-round-funding-816d5a592477\" rel=\"noopener\" target=\"_blank\">raised $60M in new funding</a> and hinted that integrations with other platforms were coming. Today&#8217;s announcement of apps for WordPress, Zapier, Discourse, Slack, and other services is the beginning of the company&#8217;s plan to make a whole ecosystem of tools available to help creators expand their memberships.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 26 Oct 2017 21:27:48 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:46;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:47:\"Dev Blog: 2017 WordPress Survey and WordCamp US\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"https://wordpress.org/news/?p=5004\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:73:\"https://wordpress.org/news/2017/10/2017-wordpress-survey-and-wordcamp-us/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:944:\"<p>It’s time for the annual WordPress user and developer survey! If you’re a WordPress user, developer, or business owner, then we want your feedback. Just like previous years, we’ll share the data at the upcoming WordCamp US (WCUS).</p>\n<p>It only takes a few minutes to <a href=\"https://wordpressdotorg.polldaddy.com/s/wordpress-2017-survey\">fill out the survey</a>, which will provide an overview of how people use WordPress.</p>\n<a href=\"https://2017.us.wordcamp.org/tickets/\"><img src=\"https://i0.wp.com/wordpress.org/news/files/2017/10/header.jpg?resize=357%2C148&ssl=1\" /></a>WordCamp US in Nashville\n<p>The <a href=\"https://wordpress.tv/tag/state-of-the-word/\">State of the Word</a> includes stats and an overview of what&#x27;s new in WordPress and is given every year at WCUS. Don&#x27;t forget that tickets are available <a href=\"https://2017.us.wordcamp.org\">now</a> so you can join the excitement in Nashville this year!</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 26 Oct 2017 20:59:32 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:7:\"Josepha\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:47;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:85:\"WPTavern: WordPress 4.9 Will Support Shortcodes and Embedded Media in the Text Widget\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=76066\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:96:\"https://wptavern.com/wordpress-4-9-will-support-shortcodes-and-embedded-media-in-the-text-widget\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3924:\"<p>WordPress 4.8 brought TinyMCE to the core Text widget, along with brand new Image, Video, and Audio media widgets. The upcoming 4.9 release builds on this progress and will introduce some long-awaited improvements to Text widget. Users will finally be able to <a href=\"https://make.wordpress.org/core/2017/10/24/widget-improvements-in-wordpress-4-9/\" rel=\"noopener\" target=\"_blank\">use shortcodes in the Text widget</a> without the help of additional code from plugins or themes.</p>\n<p>This new feature is the answer to an eight-year-old <a href=\"https://core.trac.wordpress.org/ticket/10457\" rel=\"noopener\" target=\"_blank\">ticket</a> requesting shortcode support inside the Text widget. Weston Ruter broke down the technical details in the <a href=\"https://make.wordpress.org/core/2017/10/24/widget-improvements-in-wordpress-4-9/\" rel=\"noopener\" target=\"_blank\">dev note</a> for the feature, explaining why it took so long to find a solution:</p>\n<blockquote><p>One reason for the long delay with adding shortcode support in Text widgets was due to many shortcodes looking for a global <code>$post</code> when they run. Since the global <code>$post</code> varies depending on whatever the query is, the shortcodes in a Text widget could render wildly different on different templates of a site. The solution worked out was to temporarily nullify the global <code>$post</code> before doing the shortcodes so that they will consistently have the same global state, with this global $post then restored after the shortcodes are done.</p></blockquote>\n<p>Hundreds of thousands of WordPress installations currently <a href=\"https://wordpress.org/plugins/search/shortcodes+text+widget/\" rel=\"noopener\" target=\"_blank\">use a plugin to add shortcode support to widgets</a>. Contributors to 4.9 have taken this into account so that updating will not cause unexpected issues.</p>\n<p>&#8220;If a plugin has added <code>do_shortcode()</code> to <code>widget_text</code> then this filter will be suspended while the widget runs to prevent shortcodes from being applied twice,&#8221; Ruter said.</p>\n<p>In addition to the <a href=\"https://wptavern.com/new-core-gallery-widget-targeted-for-wordpress-4-9\" rel=\"noopener\" target=\"_blank\">new core gallery widget</a> landing in 4.9, this release will also allow users to embed media in the Text widget. A new &#8220;Add Media&#8221; button is available, making it easy for users to insert images, audio, galleries, and videos, along with text and other content. WordPress 4.9 also adds support for oEmbeds in the Text widget and the Video widget has been updated with expanded support for any oEmbed provider for video.</p>\n<p><a href=\"https://i2.wp.com/wptavern.com/wp-content/uploads/2017/10/Screen-Shot-2017-10-26-at-12.00.59-AM.png?ssl=1\"><img /></a></p>\n<p>Little enhancements like these make it easier for users to update their own websites without having to hire a developer or add extra plugins for things that should be simple. The improvements to widgets have also been implemented in such a way that users will be more prepared for how Gutenberg will handle media.</p>\n<p>&#8220;The media-specific widgets are closely aligned with blocks in Gutenberg; the existence of media inside the Text widget will align with eventual nested blocks in Gutenberg, and would be treated as Classic Text blocks in any future migration from widgets to blocks,&#8221; Ruter said.</p>\n<p>WordPress 4.9 will improve the experience of switching between themes by including logic that is better at mapping widgets between two themes&#8217; widget areas. This release will also improve the <a href=\"https://core.trac.wordpress.org/ticket/23120\" rel=\"noopener\" target=\"_blank\">UI for updating and saving widgets</a> in the admin screen. It adds an indicator that shows whether or not widget changes have been saved, as well as a notice if the user attempts to leave the page with unsaved changes.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 26 Oct 2017 05:46:43 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:48;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:65:\"WPTavern: WPWeekly Episode 292 – Recap of WooConf and CaboPress\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:58:\"https://wptavern.com?p=76080&preview=true&preview_id=76080\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:72:\"https://wptavern.com/wpweekly-episode-292-recap-of-wooconf-and-cabopress\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:2434:\"<p>In this episode, <a href=\"https://jjj.blog/\">John James Jacoby</a> and I are joined by Cody Landefeld, co-founder of <a href=\"https://modeeffect.com/\">Mode Effect</a>. Landefeld described his experience attending WooConf as we reviewed highlights from the State of the Woo.</p>\n<p>We also discussed WooCommerce retiring its Canvas theme in favor of Storefront. Jacoby shared his experience attending CaboPress and near the end of the show, we talk about WordPress 4.9 Beta 4.</p>\n<h2>Stories Discussed:</h2>\n<p><a href=\"https://wptavern.com/woocommerce-stores-on-track-to-surpass-10b-in-sales-this-year\">WooCommerce Stores on Track to Surpass $10B in Sales This Year</a><br />\n<a href=\"https://wptavern.com/woocommerce-retires-canvas-theme-recommends-customers-migrate-to-storefront-theme\">WooCommerce Retires Canvas Theme, Recommends Customers Migrate to Storefront Theme</a><br />\n<a href=\"https://wptavern.com/wordpress-4-9-beta-4-removes-try-gutenberg-call-to-action\">WordPress 4.9 Beta 4 Removes ‘Try Gutenberg’ Call to Action</a></p>\n<h2>Picks of the Week:</h2>\n<p>HeroPress is <a href=\"https://heropress.com/accepting-donations/\">now accepting donations</a>. If you support the project, please consider donating.</p>\n<p>Ninja Forms achieved a milestone. The plugin is activated on more than 1M sites.</p>\n<blockquote class=\"twitter-tweet\">\n<p lang=\"en\" dir=\"ltr\">Ninja Forms reached 1 million active installs at the very beginning of the day today! This is a huge milestone! <a href=\"https://t.co/RECAHWJyOV\">https://t.co/RECAHWJyOV</a></p>\n<p>&mdash; James Laws (@jameslaws) <a href=\"https://twitter.com/jameslaws/status/923251034272817152?ref_src=twsrc%5Etfw\">October 25, 2017</a></p></blockquote>\n<p></p>\n<h2>WPWeekly Meta:</h2>\n<p><strong>Next Episode:</strong> Wednesday, November 1st 3:00 P.M. Eastern</p>\n<p><strong>Subscribe To WPWeekly Via Itunes: </strong><a href=\"https://itunes.apple.com/us/podcast/wordpress-weekly/id694849738\" target=\"_blank\" rel=\"noopener\">Click here to subscribe</a></p>\n<p><strong>Subscribe To WPWeekly Via RSS: </strong><a href=\"https://wptavern.com/feed/podcast\" target=\"_blank\" rel=\"noopener\">Click here to subscribe</a></p>\n<p><strong>Subscribe To WPWeekly Via Stitcher Radio: </strong><a href=\"http://www.stitcher.com/podcast/wordpress-weekly-podcast?refid=stpr\" target=\"_blank\" rel=\"noopener\">Click here to subscribe</a></p>\n<p><strong>Listen To Episode #292:</strong><br />\n</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 26 Oct 2017 01:13:31 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Jeff Chandler\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:49;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"Matt: Gauguin to Olive Garden\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:22:\"https://ma.tt/?p=47617\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:46:\"https://ma.tt/2017/10/gauguin-to-olive-garden/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:775:\"<blockquote class=\"wp-block-quote blocks-quote-style-1\">\n<p>[Gauguin] was penniless and adrift, trying to paint his way through the devastations of his dying marriage, his rejection by the cliques of the Parisian art establishment, and the precarity of his friendship with Vincent van Gogh, who shortly before Christmas had assaulted him with a razor and, after Gauguin’s departure that evening, used the same blade to cut off his own ear [&#8230;] Despite the promises of the name, it can be a challenge to find actual olives at Olive Garden.</p>\n</blockquote>\n<p>Probably my favorite food writing I&#x27;ve read this year is <a href=\"https://www.eater.com/2017/10/3/16395312/olive-garden-review\">Helen Rosner&#x27;s comprehensive review of Olive Garden for Eater</a>.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 25 Oct 2017 23:44:14 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"Matt\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}}}}}}}}}}}}s:4:\"type\";i:128;s:7:\"headers\";O:42:\"Requests_Utility_CaseInsensitiveDictionary\":1:{s:7:\"\0*\0data\";a:8:{s:6:\"server\";s:5:\"nginx\";s:4:\"date\";s:29:\"Mon, 20 Nov 2017 02:10:19 GMT\";s:12:\"content-type\";s:8:\"text/xml\";s:4:\"vary\";s:15:\"Accept-Encoding\";s:13:\"last-modified\";s:29:\"Mon, 20 Nov 2017 02:00:10 GMT\";s:15:\"x-frame-options\";s:10:\"SAMEORIGIN\";s:4:\"x-nc\";s:11:\"HIT lax 250\";s:16:\"content-encoding\";s:4:\"gzip\";}}s:5:\"build\";s:14:\"20170811130708\";}','no'),(20541,'_transient_timeout_feed_mod_d117b5738fbd35bd8c0391cda1f2b5d9','1511187020','no'),(20542,'_transient_feed_mod_d117b5738fbd35bd8c0391cda1f2b5d9','1511143820','no'),(20543,'_transient_timeout_dash_v2_5438fb5baf31c513fff2b9a1067656a6','1511187020','no'),(20544,'_transient_dash_v2_5438fb5baf31c513fff2b9a1067656a6','<div class=\"rss-widget\"><ul><li><a class=\'rsswidget\' href=\'https://cn.wordpress.org/2017/11/16/tipton/\'>WordPress 4.9“Tipton”</a></li></ul></div><div class=\"rss-widget\"><ul><li><a class=\'rsswidget\' href=\'https://wptavern.com/github-launches-security-alerts-for-javascript-and-ruby-projects-python-support-coming-in-2018\'>WPTavern: GitHub Launches Security Alerts for JavaScript and Ruby Projects, Python Support Coming in 2018</a></li><li><a class=\'rsswidget\' href=\'https://wptavern.com/wordcamp-europe-2018-speaker-applications-now-open\'>WPTavern: WordCamp Europe 2018 Speaker Applications Now Open</a></li><li><a class=\'rsswidget\' href=\'https://wptavern.com/woocommerce-explores-the-possibilities-and-challenges-for-e-commerce-in-the-gutenberg-era\'>WPTavern: WooCommerce Explores the Possibilities and Challenges for E-Commerce in the Gutenberg Era</a></li></ul></div>','no'),(20547,'_transient_timeout_jetpack_jitm_ac6d95eedcf62aedda6e07b25889d34','1511144151','no'),(20548,'_transient_jetpack_jitm_ac6d95eedcf62aedda6e07b25889d34','a:2:{i:0;O:8:\"stdClass\":8:{s:7:\"content\";O:8:\"stdClass\":5:{s:7:\"message\";s:46:\"Protect your site before making major changes.\";s:6:\"emblem\";N;s:11:\"description\";s:54:\"Back up your theme, plugins, and content with Jetpack.\";s:7:\"classes\";s:0:\"\";s:4:\"icon\";s:7:\"jetpack\";}s:3:\"CTA\";O:8:\"stdClass\":3:{s:7:\"message\";s:25:\"Enable VaultPress Backups\";s:4:\"hook\";s:0:\"\";s:7:\"primary\";b:1;}s:8:\"template\";s:7:\"default\";s:3:\"ttl\";i:300;s:2:\"id\";s:18:\"vaultpress-updates\";s:13:\"feature_class\";s:10:\"vaultpress\";s:7:\"expires\";i:3628800;s:13:\"max_dismissal\";i:2;}s:18:\"last_response_time\";i:1511143851;}','no'),(20554,'_transient_timeout_jetpack_jitm_3165ee86fc4b47a1a653f48c1c7d474','1511144205','no'),(20555,'_transient_jetpack_jitm_3165ee86fc4b47a1a653f48c1c7d474','a:1:{s:18:\"last_response_time\";i:1511143905;}','no'),(20556,'_transient_timeout_jetpack_jitm_d6e6dc5e85d132c5b1cb8d8f5ea5044','1511144205','no'),(20557,'_transient_jetpack_jitm_d6e6dc5e85d132c5b1cb8d8f5ea5044','a:1:{s:18:\"last_response_time\";i:1511143905;}','no'),(20757,'_transient_timeout_jetpack_sync_callables_await','1511146826','no'),(20758,'_transient_jetpack_sync_callables_await','1511146766.9799','no'),(20770,'_transient_timeout_jetpack_jitm_d1ed0aab7189afd48cf2f3eba1774be','1511147136','no'),(20771,'_transient_jetpack_jitm_d1ed0aab7189afd48cf2f3eba1774be','a:1:{s:18:\"last_response_time\";i:1511146836;}','no'),(20773,'_transient_timeout_jetpack_jitm_9aa378a2d60ee2731b5f6f10885701f','1511147138','no'),(20774,'_transient_jetpack_jitm_9aa378a2d60ee2731b5f6f10885701f','a:2:{i:0;O:8:\"stdClass\":8:{s:7:\"content\";O:8:\"stdClass\":5:{s:7:\"message\";s:25:\"Keep your hard work safe.\";s:6:\"emblem\";N;s:11:\"description\";s:48:\"Back up your content automatically with Jetpack.\";s:7:\"classes\";s:0:\"\";s:4:\"icon\";s:7:\"jetpack\";}s:3:\"CTA\";O:8:\"stdClass\":3:{s:7:\"message\";s:14:\"Enable Backups\";s:4:\"hook\";s:0:\"\";s:7:\"primary\";b:1;}s:8:\"template\";s:7:\"default\";s:3:\"ttl\";i:300;s:2:\"id\";s:14:\"backup-publish\";s:13:\"feature_class\";s:10:\"vaultpress\";s:7:\"expires\";i:3628800;s:13:\"max_dismissal\";i:2;}s:18:\"last_response_time\";i:1511146838;}','no'),(25874,'_transient_timeout_jetpack_https_test','1514189116','no'),(25875,'_transient_jetpack_https_test','1','no'),(25898,'_transient_is_multi_author','0','yes'),(25899,'_transient_twentyfifteen_categories','1','yes'),(25919,'_site_transient_timeout_theme_roots','1514118705','no'),(25920,'_site_transient_theme_roots','a:3:{s:13:\"twentyfifteen\";s:7:\"/themes\";s:15:\"twentyseventeen\";s:7:\"/themes\";s:13:\"twentysixteen\";s:7:\"/themes\";}','no'),(25923,'_site_transient_update_core','O:8:\"stdClass\":4:{s:7:\"updates\";a:4:{i:0;O:8:\"stdClass\":10:{s:8:\"response\";s:7:\"upgrade\";s:8:\"download\";s:65:\"https://downloads.wordpress.org/release/zh_CN/wordpress-4.9.1.zip\";s:6:\"locale\";s:5:\"zh_CN\";s:8:\"packages\";O:8:\"stdClass\":5:{s:4:\"full\";s:65:\"https://downloads.wordpress.org/release/zh_CN/wordpress-4.9.1.zip\";s:10:\"no_content\";b:0;s:11:\"new_bundled\";b:0;s:7:\"partial\";b:0;s:8:\"rollback\";b:0;}s:7:\"current\";s:5:\"4.9.1\";s:7:\"version\";s:5:\"4.9.1\";s:11:\"php_version\";s:5:\"5.2.4\";s:13:\"mysql_version\";s:3:\"5.0\";s:11:\"new_bundled\";s:3:\"4.7\";s:15:\"partial_version\";s:0:\"\";}i:1;O:8:\"stdClass\":10:{s:8:\"response\";s:7:\"upgrade\";s:8:\"download\";s:59:\"https://downloads.wordpress.org/release/wordpress-4.9.1.zip\";s:6:\"locale\";s:5:\"en_US\";s:8:\"packages\";O:8:\"stdClass\":5:{s:4:\"full\";s:59:\"https://downloads.wordpress.org/release/wordpress-4.9.1.zip\";s:10:\"no_content\";s:70:\"https://downloads.wordpress.org/release/wordpress-4.9.1-no-content.zip\";s:11:\"new_bundled\";s:71:\"https://downloads.wordpress.org/release/wordpress-4.9.1-new-bundled.zip\";s:7:\"partial\";b:0;s:8:\"rollback\";b:0;}s:7:\"current\";s:5:\"4.9.1\";s:7:\"version\";s:5:\"4.9.1\";s:11:\"php_version\";s:5:\"5.2.4\";s:13:\"mysql_version\";s:3:\"5.0\";s:11:\"new_bundled\";s:3:\"4.7\";s:15:\"partial_version\";s:0:\"\";}i:2;O:8:\"stdClass\":11:{s:8:\"response\";s:10:\"autoupdate\";s:8:\"download\";s:59:\"https://downloads.wordpress.org/release/wordpress-4.9.1.zip\";s:6:\"locale\";s:5:\"en_US\";s:8:\"packages\";O:8:\"stdClass\":5:{s:4:\"full\";s:59:\"https://downloads.wordpress.org/release/wordpress-4.9.1.zip\";s:10:\"no_content\";s:70:\"https://downloads.wordpress.org/release/wordpress-4.9.1-no-content.zip\";s:11:\"new_bundled\";s:71:\"https://downloads.wordpress.org/release/wordpress-4.9.1-new-bundled.zip\";s:7:\"partial\";b:0;s:8:\"rollback\";b:0;}s:7:\"current\";s:5:\"4.9.1\";s:7:\"version\";s:5:\"4.9.1\";s:11:\"php_version\";s:5:\"5.2.4\";s:13:\"mysql_version\";s:3:\"5.0\";s:11:\"new_bundled\";s:3:\"4.7\";s:15:\"partial_version\";s:0:\"\";s:9:\"new_files\";s:1:\"1\";}i:3;O:8:\"stdClass\":11:{s:8:\"response\";s:10:\"autoupdate\";s:8:\"download\";s:59:\"https://downloads.wordpress.org/release/wordpress-4.8.4.zip\";s:6:\"locale\";s:5:\"en_US\";s:8:\"packages\";O:8:\"stdClass\":5:{s:4:\"full\";s:59:\"https://downloads.wordpress.org/release/wordpress-4.8.4.zip\";s:10:\"no_content\";s:70:\"https://downloads.wordpress.org/release/wordpress-4.8.4-no-content.zip\";s:11:\"new_bundled\";s:71:\"https://downloads.wordpress.org/release/wordpress-4.8.4-new-bundled.zip\";s:7:\"partial\";s:69:\"https://downloads.wordpress.org/release/wordpress-4.8.4-partial-1.zip\";s:8:\"rollback\";s:70:\"https://downloads.wordpress.org/release/wordpress-4.8.4-rollback-1.zip\";}s:7:\"current\";s:5:\"4.8.4\";s:7:\"version\";s:5:\"4.8.4\";s:11:\"php_version\";s:5:\"5.2.4\";s:13:\"mysql_version\";s:3:\"5.0\";s:11:\"new_bundled\";s:3:\"4.7\";s:15:\"partial_version\";s:5:\"4.8.1\";s:9:\"new_files\";s:0:\"\";}}s:12:\"last_checked\";i:1514116909;s:15:\"version_checked\";s:5:\"4.8.1\";s:12:\"translations\";a:0:{}}','no'),(25924,'_transient_timeout_jetpack_sync_last_checked_queue_state_sync','1514117208','no'),(25925,'_transient_jetpack_sync_last_checked_queue_state_sync','a:2:{i:0;i:0;i:1;i:0;}','no'),(25928,'_site_transient_update_themes','O:8:\"stdClass\":4:{s:12:\"last_checked\";i:1514116914;s:7:\"checked\";a:3:{s:13:\"twentyfifteen\";s:3:\"1.8\";s:15:\"twentyseventeen\";s:3:\"1.3\";s:13:\"twentysixteen\";s:3:\"1.3\";}s:8:\"response\";a:3:{s:13:\"twentyfifteen\";a:4:{s:5:\"theme\";s:13:\"twentyfifteen\";s:11:\"new_version\";s:3:\"1.9\";s:3:\"url\";s:43:\"https://wordpress.org/themes/twentyfifteen/\";s:7:\"package\";s:59:\"https://downloads.wordpress.org/theme/twentyfifteen.1.9.zip\";}s:15:\"twentyseventeen\";a:4:{s:5:\"theme\";s:15:\"twentyseventeen\";s:11:\"new_version\";s:3:\"1.4\";s:3:\"url\";s:45:\"https://wordpress.org/themes/twentyseventeen/\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/theme/twentyseventeen.1.4.zip\";}s:13:\"twentysixteen\";a:4:{s:5:\"theme\";s:13:\"twentysixteen\";s:11:\"new_version\";s:3:\"1.4\";s:3:\"url\";s:43:\"https://wordpress.org/themes/twentysixteen/\";s:7:\"package\";s:59:\"https://downloads.wordpress.org/theme/twentysixteen.1.4.zip\";}}s:12:\"translations\";a:1:{i:0;a:7:{s:4:\"type\";s:5:\"theme\";s:4:\"slug\";s:15:\"twentyseventeen\";s:8:\"language\";s:5:\"zh_CN\";s:7:\"version\";s:3:\"1.3\";s:7:\"updated\";s:19:\"2017-10-18 07:35:35\";s:7:\"package\";s:79:\"https://downloads.wordpress.org/translation/theme/twentyseventeen/1.3/zh_CN.zip\";s:10:\"autoupdate\";b:1;}}}','no'),(25929,'_site_transient_update_plugins','O:8:\"stdClass\":4:{s:12:\"last_checked\";i:1514116911;s:8:\"response\";a:2:{s:19:\"akismet/akismet.php\";O:8:\"stdClass\":11:{s:2:\"id\";s:21:\"w.org/plugins/akismet\";s:4:\"slug\";s:7:\"akismet\";s:6:\"plugin\";s:19:\"akismet/akismet.php\";s:11:\"new_version\";s:5:\"4.0.2\";s:3:\"url\";s:38:\"https://wordpress.org/plugins/akismet/\";s:7:\"package\";s:56:\"https://downloads.wordpress.org/plugin/akismet.4.0.2.zip\";s:5:\"icons\";a:3:{s:2:\"1x\";s:59:\"https://ps.w.org/akismet/assets/icon-128x128.png?rev=969272\";s:2:\"2x\";s:59:\"https://ps.w.org/akismet/assets/icon-256x256.png?rev=969272\";s:7:\"default\";s:59:\"https://ps.w.org/akismet/assets/icon-256x256.png?rev=969272\";}s:7:\"banners\";a:2:{s:2:\"1x\";s:61:\"https://ps.w.org/akismet/assets/banner-772x250.jpg?rev=479904\";s:7:\"default\";s:61:\"https://ps.w.org/akismet/assets/banner-772x250.jpg?rev=479904\";}s:11:\"banners_rtl\";a:0:{}s:6:\"tested\";s:5:\"4.9.1\";s:13:\"compatibility\";O:8:\"stdClass\":0:{}}s:19:\"jetpack/jetpack.php\";O:8:\"stdClass\":11:{s:2:\"id\";s:21:\"w.org/plugins/jetpack\";s:4:\"slug\";s:7:\"jetpack\";s:6:\"plugin\";s:19:\"jetpack/jetpack.php\";s:11:\"new_version\";s:5:\"5.6.1\";s:3:\"url\";s:38:\"https://wordpress.org/plugins/jetpack/\";s:7:\"package\";s:56:\"https://downloads.wordpress.org/plugin/jetpack.5.6.1.zip\";s:5:\"icons\";a:4:{s:2:\"1x\";s:60:\"https://ps.w.org/jetpack/assets/icon-128x128.png?rev=1791404\";s:2:\"2x\";s:60:\"https://ps.w.org/jetpack/assets/icon-256x256.png?rev=1791404\";s:3:\"svg\";s:52:\"https://ps.w.org/jetpack/assets/icon.svg?rev=1791404\";s:7:\"default\";s:52:\"https://ps.w.org/jetpack/assets/icon.svg?rev=1791404\";}s:7:\"banners\";a:3:{s:2:\"2x\";s:63:\"https://ps.w.org/jetpack/assets/banner-1544x500.png?rev=1791404\";s:2:\"1x\";s:62:\"https://ps.w.org/jetpack/assets/banner-772x250.png?rev=1791404\";s:7:\"default\";s:63:\"https://ps.w.org/jetpack/assets/banner-1544x500.png?rev=1791404\";}s:11:\"banners_rtl\";a:0:{}s:6:\"tested\";s:5:\"4.9.1\";s:13:\"compatibility\";O:8:\"stdClass\":0:{}}}s:12:\"translations\";a:0:{}s:9:\"no_update\";a:3:{s:9:\"hello.php\";O:8:\"stdClass\":9:{s:2:\"id\";s:25:\"w.org/plugins/hello-dolly\";s:4:\"slug\";s:11:\"hello-dolly\";s:6:\"plugin\";s:9:\"hello.php\";s:11:\"new_version\";s:3:\"1.6\";s:3:\"url\";s:42:\"https://wordpress.org/plugins/hello-dolly/\";s:7:\"package\";s:58:\"https://downloads.wordpress.org/plugin/hello-dolly.1.6.zip\";s:5:\"icons\";a:3:{s:2:\"1x\";s:63:\"https://ps.w.org/hello-dolly/assets/icon-128x128.jpg?rev=969907\";s:2:\"2x\";s:63:\"https://ps.w.org/hello-dolly/assets/icon-256x256.jpg?rev=969907\";s:7:\"default\";s:63:\"https://ps.w.org/hello-dolly/assets/icon-256x256.jpg?rev=969907\";}s:7:\"banners\";a:2:{s:2:\"1x\";s:65:\"https://ps.w.org/hello-dolly/assets/banner-772x250.png?rev=478342\";s:7:\"default\";s:65:\"https://ps.w.org/hello-dolly/assets/banner-772x250.png?rev=478342\";}s:11:\"banners_rtl\";a:0:{}}s:45:\"limit-login-attempts/limit-login-attempts.php\";O:8:\"stdClass\":9:{s:2:\"id\";s:34:\"w.org/plugins/limit-login-attempts\";s:4:\"slug\";s:20:\"limit-login-attempts\";s:6:\"plugin\";s:45:\"limit-login-attempts/limit-login-attempts.php\";s:11:\"new_version\";s:5:\"1.7.1\";s:3:\"url\";s:51:\"https://wordpress.org/plugins/limit-login-attempts/\";s:7:\"package\";s:69:\"https://downloads.wordpress.org/plugin/limit-login-attempts.1.7.1.zip\";s:5:\"icons\";a:0:{}s:7:\"banners\";a:0:{}s:11:\"banners_rtl\";a:0:{}}s:25:\"tablepress/tablepress.php\";O:8:\"stdClass\":12:{s:2:\"id\";s:24:\"w.org/plugins/tablepress\";s:4:\"slug\";s:10:\"tablepress\";s:6:\"plugin\";s:25:\"tablepress/tablepress.php\";s:11:\"new_version\";s:3:\"1.9\";s:3:\"url\";s:41:\"https://wordpress.org/plugins/tablepress/\";s:7:\"package\";s:57:\"https://downloads.wordpress.org/plugin/tablepress.1.9.zip\";s:5:\"icons\";a:3:{s:2:\"1x\";s:63:\"https://ps.w.org/tablepress/assets/icon-128x128.png?rev=1064192\";s:2:\"2x\";s:63:\"https://ps.w.org/tablepress/assets/icon-256x256.png?rev=1064192\";s:7:\"default\";s:63:\"https://ps.w.org/tablepress/assets/icon-256x256.png?rev=1064192\";}s:7:\"banners\";a:3:{s:2:\"2x\";s:66:\"https://ps.w.org/tablepress/assets/banner-1544x500.png?rev=1275767\";s:2:\"1x\";s:65:\"https://ps.w.org/tablepress/assets/banner-772x250.png?rev=1275767\";s:7:\"default\";s:66:\"https://ps.w.org/tablepress/assets/banner-1544x500.png?rev=1275767\";}s:11:\"banners_rtl\";a:3:{s:2:\"2x\";s:70:\"https://ps.w.org/tablepress/assets/banner-1544x500-rtl.png?rev=1275767\";s:2:\"1x\";s:69:\"https://ps.w.org/tablepress/assets/banner-772x250-rtl.png?rev=1275767\";s:7:\"default\";s:70:\"https://ps.w.org/tablepress/assets/banner-1544x500-rtl.png?rev=1275767\";}s:14:\"upgrade_notice\";s:102:\"<p>This update includes several new features, enhancements, and bugfixes. Updating is recommended.</p>\";s:6:\"tested\";s:5:\"4.9.1\";s:13:\"compatibility\";a:0:{}}}}','no'),(25943,'_transient_timeout_jetpack_idc_allowed','1514147657','no'),(25944,'_transient_jetpack_idc_allowed','1','no'),(25946,'_transient_timeout_jetpack_sync_constants_await','1514147657','no'),(25947,'_transient_jetpack_sync_constants_await','1514144057.4979','no');
/*!40000 ALTER TABLE `wp_options` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_postmeta`
--

DROP TABLE IF EXISTS `wp_postmeta`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_postmeta` (
  `meta_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `post_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `meta_key` varchar(255) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `meta_value` longtext COLLATE utf8mb4_unicode_520_ci,
  PRIMARY KEY (`meta_id`),
  KEY `post_id` (`post_id`),
  KEY `meta_key` (`meta_key`(191))
) ENGINE=InnoDB AUTO_INCREMENT=246 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_postmeta`
--

LOCK TABLES `wp_postmeta` WRITE;
/*!40000 ALTER TABLE `wp_postmeta` DISABLE KEYS */;
INSERT INTO `wp_postmeta` VALUES (1,2,'_wp_page_template','default'),(2,4,'_wp_attached_file','2017/07/espresso.jpg'),(3,4,'_wp_attachment_metadata','a:4:{s:5:\"width\";i:2000;s:6:\"height\";i:1200;s:4:\"file\";s:20:\"2017/07/espresso.jpg\";s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(4,4,'_starter_content_theme','twentyseventeen'),(6,5,'_wp_attached_file','2017/07/sandwich.jpg'),(7,5,'_wp_attachment_metadata','a:4:{s:5:\"width\";i:2000;s:6:\"height\";i:1200;s:4:\"file\";s:20:\"2017/07/sandwich.jpg\";s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(8,5,'_starter_content_theme','twentyseventeen'),(10,6,'_wp_attached_file','2017/07/coffee.jpg'),(11,6,'_wp_attachment_metadata','a:4:{s:5:\"width\";i:2000;s:6:\"height\";i:1200;s:4:\"file\";s:18:\"2017/07/coffee.jpg\";s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(12,6,'_starter_content_theme','twentyseventeen'),(21,11,'_thumbnail_id','4'),(23,18,'_menu_item_type','custom'),(24,18,'_menu_item_menu_item_parent','0'),(25,18,'_menu_item_object_id','18'),(26,18,'_menu_item_object','custom'),(27,18,'_menu_item_target',''),(28,18,'_menu_item_classes','a:1:{i:0;s:0:\"\";}'),(29,18,'_menu_item_xfn',''),(30,18,'_menu_item_url','https://www.allisterke.com/'),(31,19,'_menu_item_type','post_type'),(32,19,'_menu_item_menu_item_parent','0'),(33,19,'_menu_item_object_id','8'),(34,19,'_menu_item_object','page'),(35,19,'_menu_item_target',''),(36,19,'_menu_item_classes','a:1:{i:0;s:0:\"\";}'),(37,19,'_menu_item_xfn',''),(38,19,'_menu_item_url',''),(39,20,'_menu_item_type','post_type'),(40,20,'_menu_item_menu_item_parent','0'),(41,20,'_menu_item_object_id','10'),(42,20,'_menu_item_object','page'),(43,20,'_menu_item_target',''),(44,20,'_menu_item_classes','a:1:{i:0;s:0:\"\";}'),(45,20,'_menu_item_xfn',''),(46,20,'_menu_item_url',''),(47,21,'_menu_item_type','post_type'),(48,21,'_menu_item_menu_item_parent','0'),(49,21,'_menu_item_object_id','9'),(50,21,'_menu_item_object','page'),(51,21,'_menu_item_target',''),(52,21,'_menu_item_classes','a:1:{i:0;s:0:\"\";}'),(53,21,'_menu_item_xfn',''),(54,21,'_menu_item_url',''),(55,22,'_menu_item_type','custom'),(56,22,'_menu_item_menu_item_parent','0'),(57,22,'_menu_item_object_id','22'),(58,22,'_menu_item_object','custom'),(59,22,'_menu_item_target',''),(60,22,'_menu_item_classes','a:1:{i:0;s:0:\"\";}'),(61,22,'_menu_item_xfn',''),(62,22,'_menu_item_url','https://www.yelp.com'),(63,23,'_menu_item_type','custom'),(64,23,'_menu_item_menu_item_parent','0'),(65,23,'_menu_item_object_id','23'),(66,23,'_menu_item_object','custom'),(67,23,'_menu_item_target',''),(68,23,'_menu_item_classes','a:1:{i:0;s:0:\"\";}'),(69,23,'_menu_item_xfn',''),(70,23,'_menu_item_url','https://www.facebook.com/wordpress'),(71,24,'_menu_item_type','custom'),(72,24,'_menu_item_menu_item_parent','0'),(73,24,'_menu_item_object_id','24'),(74,24,'_menu_item_object','custom'),(75,24,'_menu_item_target',''),(76,24,'_menu_item_classes','a:1:{i:0;s:0:\"\";}'),(77,24,'_menu_item_xfn',''),(78,24,'_menu_item_url','https://twitter.com/wordpress'),(79,25,'_menu_item_type','custom'),(80,25,'_menu_item_menu_item_parent','0'),(81,25,'_menu_item_object_id','25'),(82,25,'_menu_item_object','custom'),(83,25,'_menu_item_target',''),(84,25,'_menu_item_classes','a:1:{i:0;s:0:\"\";}'),(85,25,'_menu_item_xfn',''),(86,25,'_menu_item_url','https://www.instagram.com/explore/tags/wordcamp/'),(87,26,'_menu_item_type','custom'),(88,26,'_menu_item_menu_item_parent','0'),(89,26,'_menu_item_object_id','26'),(90,26,'_menu_item_object','custom'),(91,26,'_menu_item_target',''),(92,26,'_menu_item_classes','a:1:{i:0;s:0:\"\";}'),(93,26,'_menu_item_xfn',''),(94,26,'_menu_item_url','mailto:wordpress@example.com'),(115,8,'_edit_lock','1501504074:1'),(116,8,'_edit_last','1'),(117,10,'_edit_lock','1501674771:1'),(118,10,'_edit_last','1'),(119,9,'_edit_lock','1501504157:1'),(120,9,'_edit_last','1'),(122,43,'_wpcom_is_markdown','1'),(123,43,'_edit_last','1'),(124,44,'_wpcom_is_markdown','1'),(125,43,'_edit_lock','1501660641:1'),(128,49,'_wpcom_is_markdown','1'),(129,49,'_edit_last','1'),(130,49,'_edit_lock','1501676273:1'),(133,50,'_wpcom_is_markdown','1'),(134,49,'_jetpack_related_posts_cache','a:1:{s:32:\"8f6677c9d6b0f903e98ad32ec61f8deb\";a:2:{s:7:\"expires\";i:1511337065;s:7:\"payload\";a:2:{i:0;a:1:{s:2:\"id\";i:108;}i:1;a:1:{s:2:\"id\";i:93;}}}}'),(137,56,'_wpcom_is_markdown','1'),(138,56,'_edit_last','1'),(139,56,'_edit_lock','1502207493:1'),(140,57,'_wpcom_is_markdown','1'),(141,56,'_jetpack_related_posts_cache','a:1:{s:32:\"8f6677c9d6b0f903e98ad32ec61f8deb\";a:2:{s:7:\"expires\";i:1512584277;s:7:\"payload\";a:3:{i:0;a:1:{s:2:\"id\";i:97;}i:1;a:1:{s:2:\"id\";i:108;}i:2;a:1:{s:2:\"id\";i:114;}}}}'),(142,58,'_wpcom_is_markdown','1'),(143,59,'_wpcom_is_markdown','1'),(144,60,'_wpcom_is_markdown','1'),(145,61,'_wpcom_is_markdown','1'),(146,62,'_wpcom_is_markdown','1'),(147,64,'_wpcom_is_markdown','1'),(150,65,'_wpcom_is_markdown','1'),(151,67,'_wpcom_is_markdown','1'),(154,69,'_wpcom_is_markdown','1'),(157,70,'_wpcom_is_markdown','1'),(158,71,'_wpcom_is_markdown','1'),(159,73,'_wpcom_is_markdown','1'),(162,75,'_wpcom_is_markdown','1'),(165,77,'_wpcom_is_markdown','1'),(168,78,'_wpcom_is_markdown','1'),(169,79,'_wpcom_is_markdown','1'),(170,80,'_wpcom_is_markdown','1'),(173,82,'_wpcom_is_markdown','1'),(176,83,'_wpcom_is_markdown','1'),(179,86,'_wpcom_is_markdown','1'),(180,86,'_edit_last','1'),(181,86,'_edit_lock','1502212682:1'),(182,87,'_wpcom_is_markdown','1'),(183,86,'_jetpack_related_posts_cache','a:1:{s:32:\"8f6677c9d6b0f903e98ad32ec61f8deb\";a:2:{s:7:\"expires\";i:1513559985;s:7:\"payload\";a:3:{i:0;a:1:{s:2:\"id\";i:97;}i:1;a:1:{s:2:\"id\";i:56;}i:2;a:1:{s:2:\"id\";i:108;}}}}'),(184,88,'_wpcom_is_markdown','1'),(185,89,'_wpcom_is_markdown','1'),(188,90,'_wpcom_is_markdown','1'),(191,91,'_wpcom_is_markdown','1'),(193,93,'_wpcom_is_markdown','1'),(194,93,'_edit_last','1'),(195,93,'_edit_lock','1503480644:1'),(196,94,'_wpcom_is_markdown','1'),(197,93,'_jetpack_related_posts_cache','a:1:{s:32:\"8f6677c9d6b0f903e98ad32ec61f8deb\";a:2:{s:7:\"expires\";i:1513922824;s:7:\"payload\";a:3:{i:0;a:1:{s:2:\"id\";i:97;}i:1;a:1:{s:2:\"id\";i:56;}i:2;a:1:{s:2:\"id\";i:108;}}}}'),(198,95,'_wpcom_is_markdown','1'),(201,96,'_wpcom_is_markdown','1'),(202,1,'_jetpack_related_posts_cache','a:1:{s:32:\"8f6677c9d6b0f903e98ad32ec61f8deb\";a:2:{s:7:\"expires\";i:1511294537;s:7:\"payload\";a:0:{}}}'),(203,97,'_wpcom_is_markdown','1'),(204,97,'_edit_last','1'),(205,97,'_edit_lock','1504526700:1'),(206,98,'_wpcom_is_markdown','1'),(207,97,'_jetpack_related_posts_cache','a:1:{s:32:\"8f6677c9d6b0f903e98ad32ec61f8deb\";a:2:{s:7:\"expires\";i:1512770201;s:7:\"payload\";a:3:{i:0;a:1:{s:2:\"id\";i:56;}i:1;a:1:{s:2:\"id\";i:108;}i:2;a:1:{s:2:\"id\";i:114;}}}}'),(208,99,'_wpcom_is_markdown','1'),(209,100,'_wpcom_is_markdown','1'),(210,101,'_wpcom_is_markdown','1'),(213,102,'_wpcom_is_markdown','1'),(215,104,'_wpcom_is_markdown','1'),(216,104,'_edit_last','1'),(217,104,'_edit_lock','1508506904:1'),(218,105,'_wpcom_is_markdown','1'),(219,104,'_jetpack_related_posts_cache','a:1:{s:32:\"8f6677c9d6b0f903e98ad32ec61f8deb\";a:2:{s:7:\"expires\";i:1511615705;s:7:\"payload\";a:3:{i:0;a:1:{s:2:\"id\";i:114;}i:1;a:1:{s:2:\"id\";i:97;}i:2;a:1:{s:2:\"id\";i:56;}}}}'),(220,106,'_wpcom_is_markdown','1'),(223,107,'_wpcom_is_markdown','1'),(224,108,'_wpcom_is_markdown','1'),(225,108,'_edit_last','1'),(226,108,'_edit_lock','1508660573:1'),(227,109,'_wpcom_is_markdown','1'),(228,108,'_jetpack_related_posts_cache','a:1:{s:32:\"8f6677c9d6b0f903e98ad32ec61f8deb\";a:2:{s:7:\"expires\";i:1514007268;s:7:\"payload\";a:3:{i:0;a:1:{s:2:\"id\";i:97;}i:1;a:1:{s:2:\"id\";i:114;}i:2;a:1:{s:2:\"id\";i:93;}}}}'),(229,110,'_wpcom_is_markdown','1'),(230,111,'_wpcom_is_markdown','1'),(233,112,'_wpcom_is_markdown','1'),(235,114,'_wpcom_is_markdown','1'),(236,114,'_edit_last','1'),(237,114,'_edit_lock','1511146692:1'),(238,115,'_wpcom_is_markdown','1'),(239,114,'_jetpack_related_posts_cache','a:1:{s:32:\"8f6677c9d6b0f903e98ad32ec61f8deb\";a:2:{s:7:\"expires\";i:1513399451;s:7:\"payload\";a:2:{i:0;a:1:{s:2:\"id\";i:104;}i:1;a:1:{s:2:\"id\";i:108;}}}}'),(240,116,'_wpcom_is_markdown','1'),(241,117,'_wpcom_is_markdown','1'),(242,118,'_wpcom_is_markdown','1'),(245,119,'_wpcom_is_markdown','1');
/*!40000 ALTER TABLE `wp_postmeta` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_posts`
--

DROP TABLE IF EXISTS `wp_posts`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_posts` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `post_author` bigint(20) unsigned NOT NULL DEFAULT '0',
  `post_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_date_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_content` longtext COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `post_title` text COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `post_excerpt` text COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `post_status` varchar(20) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT 'publish',
  `comment_status` varchar(20) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT 'open',
  `ping_status` varchar(20) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT 'open',
  `post_password` varchar(255) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `post_name` varchar(200) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `to_ping` text COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `pinged` text COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `post_modified` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_modified_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_content_filtered` longtext COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `post_parent` bigint(20) unsigned NOT NULL DEFAULT '0',
  `guid` varchar(255) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `menu_order` int(11) NOT NULL DEFAULT '0',
  `post_type` varchar(20) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT 'post',
  `post_mime_type` varchar(100) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `comment_count` bigint(20) NOT NULL DEFAULT '0',
  PRIMARY KEY (`ID`),
  KEY `post_name` (`post_name`(191)),
  KEY `type_status_date` (`post_type`,`post_status`,`post_date`,`ID`),
  KEY `post_parent` (`post_parent`),
  KEY `post_author` (`post_author`)
) ENGINE=InnoDB AUTO_INCREMENT=120 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_posts`
--

LOCK TABLES `wp_posts` WRITE;
/*!40000 ALTER TABLE `wp_posts` DISABLE KEYS */;
INSERT INTO `wp_posts` VALUES (1,1,'2017-07-31 19:57:09','2017-07-31 11:57:09','欢迎使用WordPress。这是您的第一篇文章。编辑或删除它，然后开始写作吧！','世界，您好！','','publish','open','open','','hello-world','','','2017-07-31 19:57:09','2017-07-31 11:57:09','',0,'https://www.allisterke.com/?p=1',0,'post','',1),(2,1,'2017-07-31 19:57:09','2017-07-31 11:57:09','这是示范页面。页面和博客文章不同，它的位置是固定的，通常会在站点导航栏显示。很多用户都创建一个“关于”页面，向访客介绍自己。例如：\n\n<blockquote>欢迎！我白天是个邮递员，晚上就是个有抱负的演员。这是我的博客。我住在天朝的帝都，有条叫做 Jack 的狗。</blockquote>\n\n... 或这个：\n\n<blockquote>XYZ Doohickey 公司成立于 1971 年，自从建立以来，我们一直向社会贡献着优秀 doohickies。我们的公司总部位于天朝魔都，有着超过两千名员工，对魔都政府税收有着巨大贡献。</blockquote>\n\n而您，作为一个 WordPress 用户，我们建议您访问<a href=\"https://www.allisterke.com/wp-admin/\">控制板</a>，删除本页面，然后添加您自己的页面。祝您使用愉快！','示例页面','','publish','closed','open','','sample-page','','','2017-07-31 19:57:09','2017-07-31 11:57:09','',0,'https://www.allisterke.com/?page_id=2',0,'page','',0),(4,1,'2017-07-31 20:06:39','2017-07-31 12:06:39','','浓缩咖啡','','inherit','closed','closed','','%e6%b5%93%e7%bc%a9%e5%92%96%e5%95%a1','','','2017-07-31 20:06:39','2017-07-31 12:06:39','',0,'https://www.allisterke.com/wp-content/uploads/2017/07/espresso.jpg',0,'attachment','image/jpeg',0),(5,1,'2017-07-31 20:06:39','2017-07-31 12:06:39','','三明治','','inherit','closed','closed','','%e4%b8%89%e6%98%8e%e6%b2%bb','','','2017-07-31 20:06:39','2017-07-31 12:06:39','',0,'https://www.allisterke.com/wp-content/uploads/2017/07/sandwich.jpg',0,'attachment','image/jpeg',0),(6,1,'2017-07-31 20:06:39','2017-07-31 12:06:39','','咖啡','','inherit','closed','closed','','%e5%92%96%e5%95%a1','','','2017-07-31 20:06:39','2017-07-31 12:06:39','',0,'https://www.allisterke.com/wp-content/uploads/2017/07/coffee.jpg',0,'attachment','image/jpeg',0),(7,1,'2017-07-31 20:06:39','2017-07-31 12:06:39','欢迎来到您的站点！这是您的主页，也就是大多数访客第一次造访时看到的页面。','首页','','publish','closed','closed','','%e9%a6%96%e9%a1%b5','','','2017-07-31 20:06:39','2017-07-31 12:06:39','',0,'https://www.allisterke.com/?page_id=7',0,'page','',0),(8,1,'2017-07-31 20:06:39','2017-07-31 12:06:39','您也许是位创作者，想要在这里介绍自己和自己的作品；或者您是一位商务人士，想在这里谈谈您的业务。','关于','','publish','closed','closed','','%e5%85%b3%e4%ba%8e','','','2017-07-31 20:30:16','2017-07-31 12:30:16','',0,'https://www.allisterke.com/?page_id=8',0,'page','',0),(9,1,'2017-07-31 20:06:39','2017-07-31 12:06:39','这个页面包含了一些基本的联系资料，像是地址和联系电话。您也可以尝试使用插件增加联系表单。','联系','','publish','closed','closed','','%e8%81%94%e7%b3%bb','','','2017-07-31 20:30:45','2017-07-31 12:30:45','',0,'https://www.allisterke.com/?page_id=9',0,'page','',0),(10,1,'2017-07-31 20:06:39','2017-07-31 12:06:39','','博客','','publish','closed','closed','','%e5%8d%9a%e5%ae%a2','','','2017-07-31 20:30:31','2017-07-31 12:30:31','',0,'https://www.allisterke.com/?page_id=10',0,'page','',0),(11,1,'2017-07-31 20:06:39','2017-07-31 12:06:39','这是首页章节的范例。首页章节可以是除了首页本身以外的任何其他页面，包括显示最新博客文章的页面。','主页章节','','publish','closed','closed','','%e4%b8%bb%e9%a1%b5%e7%ab%a0%e8%8a%82','','','2017-07-31 20:06:39','2017-07-31 12:06:39','',0,'https://www.allisterke.com/?page_id=11',0,'page','',0),(13,1,'2017-07-31 20:06:39','2017-07-31 12:06:39','欢迎来到您的站点！这是您的主页，也就是大多数访客第一次造访时看到的页面。','首页','','inherit','closed','closed','','7-revision-v1','','','2017-07-31 20:06:39','2017-07-31 12:06:39','',7,'https://www.allisterke.com/?p=13',0,'revision','',0),(14,1,'2017-07-31 20:06:39','2017-07-31 12:06:39','您也许是位创作者，想要在这里介绍自己和自己的作品；或者您是一位商务人士，想在这里谈谈您的业务。','关于','','inherit','closed','closed','','8-revision-v1','','','2017-07-31 20:06:39','2017-07-31 12:06:39','',8,'https://www.allisterke.com/?p=14',0,'revision','',0),(15,1,'2017-07-31 20:06:39','2017-07-31 12:06:39','这个页面包含了一些基本的联系资料，像是地址和联系电话。您也可以尝试使用插件增加联系表单。','联系','','inherit','closed','closed','','9-revision-v1','','','2017-07-31 20:06:39','2017-07-31 12:06:39','',9,'https://www.allisterke.com/?p=15',0,'revision','',0),(16,1,'2017-07-31 20:06:39','2017-07-31 12:06:39','','博客','','inherit','closed','closed','','10-revision-v1','','','2017-07-31 20:06:39','2017-07-31 12:06:39','',10,'https://www.allisterke.com/?p=16',0,'revision','',0),(17,1,'2017-07-31 20:06:39','2017-07-31 12:06:39','这是首页章节的范例。首页章节可以是除了首页本身以外的任何其他页面，包括显示最新博客文章的页面。','主页章节','','inherit','closed','closed','','11-revision-v1','','','2017-07-31 20:06:39','2017-07-31 12:06:39','',11,'https://www.allisterke.com/?p=17',0,'revision','',0),(18,1,'2017-07-31 20:06:39','2017-07-31 12:06:39','','首页','','publish','closed','closed','','%e9%a6%96%e9%a1%b5','','','2017-07-31 20:06:39','2017-07-31 12:06:39','',0,'https://www.allisterke.com/?p=18',0,'nav_menu_item','',0),(19,1,'2017-07-31 20:06:39','2017-07-31 12:06:39',' ','','','publish','closed','closed','','19','','','2017-07-31 20:06:39','2017-07-31 12:06:39','',0,'https://www.allisterke.com/?p=19',1,'nav_menu_item','',0),(20,1,'2017-07-31 20:06:39','2017-07-31 12:06:39',' ','','','publish','closed','closed','','20','','','2017-07-31 20:06:39','2017-07-31 12:06:39','',0,'https://www.allisterke.com/?p=20',2,'nav_menu_item','',0),(21,1,'2017-07-31 20:06:39','2017-07-31 12:06:39',' ','','','publish','closed','closed','','21','','','2017-07-31 20:06:39','2017-07-31 12:06:39','',0,'https://www.allisterke.com/?p=21',3,'nav_menu_item','',0),(22,1,'2017-07-31 20:06:39','2017-07-31 12:06:39','','Yelp','','publish','closed','closed','','yelp','','','2017-07-31 20:06:39','2017-07-31 12:06:39','',0,'https://www.allisterke.com/?p=22',0,'nav_menu_item','',0),(23,1,'2017-07-31 20:06:39','2017-07-31 12:06:39','','Facebook','','publish','closed','closed','','facebook','','','2017-07-31 20:06:39','2017-07-31 12:06:39','',0,'https://www.allisterke.com/?p=23',1,'nav_menu_item','',0),(24,1,'2017-07-31 20:06:39','2017-07-31 12:06:39','','Twitter','','publish','closed','closed','','twitter','','','2017-07-31 20:06:39','2017-07-31 12:06:39','',0,'https://www.allisterke.com/?p=24',2,'nav_menu_item','',0),(25,1,'2017-07-31 20:06:39','2017-07-31 12:06:39','','Instagram','','publish','closed','closed','','instagram','','','2017-07-31 20:06:39','2017-07-31 12:06:39','',0,'https://www.allisterke.com/?p=25',3,'nav_menu_item','',0),(26,1,'2017-07-31 20:06:39','2017-07-31 12:06:39','','电邮','','publish','closed','closed','','%e7%94%b5%e9%82%ae','','','2017-07-31 20:06:39','2017-07-31 12:06:39','',0,'https://www.allisterke.com/?p=26',4,'nav_menu_item','',0),(38,1,'2017-07-31 20:28:14','2017-07-31 12:28:14','/*\n您可以在此处加入您的CSS。\n\n点击上方的帮助图标来了解更多。\n*/\n\nbody {\n	font-family: \'Microsoft JhengHei\', \'PingFang\';\n}\n\ncode {\n	font-family: \'Source Code Pro\', monospace;\n	font-size: 12px;\n}','twentyfifteen','','publish','closed','closed','','twentyfifteen','','','2017-08-07 19:41:53','2017-08-07 11:41:53','',0,'https://www.allisterke.com/?p=38',0,'custom_css','',0),(39,1,'2017-07-31 20:28:14','2017-07-31 12:28:14','/*\n您可以在此处加入您的CSS。\n\n点击上方的帮助图标来了解更多。\n*/\n\nbody {\n	font-family: \'Microsoft JhengHei\', \'PingFang\';\n}','twentyfifteen','','inherit','closed','closed','','38-revision-v1','','','2017-07-31 20:28:14','2017-07-31 12:28:14','',38,'https://www.allisterke.com/?p=39',0,'revision','',0),(40,1,'2017-11-20 03:00:39','0000-00-00 00:00:00','','widget_image','','draft','closed','closed','','','','','2017-11-20 11:00:39','2017-11-20 03:00:39','a:1:{s:12:\"_multiwidget\";i:1;}',0,'https://www.allisterke.com/?post_type=jetpack_migration&#038;p=40',0,'jetpack_migration','',0),(41,1,'2017-11-20 03:00:39','0000-00-00 00:00:00','','sidebars_widgets','','draft','closed','closed','','','','','2017-11-20 11:00:39','2017-11-20 03:00:39','a:3:{s:9:\"sidebar-3\";a:2:{i:0;s:6:\"text-5\";i:1;s:8:\"search-4\";}s:19:\"wp_inactive_widgets\";a:0:{}s:9:\"sidebar-1\";a:4:{i:0;s:8:\"search-3\";i:1;s:12:\"categories-3\";i:2;s:10:\"archives-3\";i:3;s:6:\"text-3\";}}',0,'https://www.allisterke.com/?post_type=jetpack_migration&#038;p=41',0,'jetpack_migration','',0),(43,1,'2017-08-02 15:57:21','0000-00-00 00:00:00','<pre><code class=\"bash\">ps -ef | grep markdown\n</code></pre>','','','draft','open','open','','','','','2017-08-02 15:57:21','2017-08-02 07:57:21','```bash\nps -ef | grep markdown\n```',0,'https://www.allisterke.com/?p=43',0,'post','',0),(44,1,'2017-08-02 15:56:45','2017-08-02 07:56:45','<pre><code class=\"bash\">ps -ef | grep markdown\n</code></pre>','','','inherit','closed','closed','','43-revision-v1','','','2017-08-02 15:56:45','2017-08-02 07:56:45','```bash\r\nps -ef | grep markdown\r\n```',43,'https://www.allisterke.com/?p=44',0,'revision','',0),(49,1,'2017-08-02 20:20:10','2017-08-02 12:20:10','<pre><code class=\"bash\">echo \'hello, wp\'\n</code></pre>','try markdown','','publish','open','open','','try-markdown','','','2017-08-02 20:20:10','2017-08-02 12:20:10','```bash\r\necho &#039;hello, wp&#039;\r\n```',0,'https://www.allisterke.com/?p=49',0,'post','',0),(50,1,'2017-08-02 20:20:10','2017-08-02 12:20:10','<pre><code class=\"bash\">echo \'hello, wp\'\n</code></pre>','try markdown','','inherit','closed','closed','','49-revision-v1','','','2017-08-02 20:20:10','2017-08-02 12:20:10','```bash\r\necho &#039;hello, wp&#039;\r\n```',49,'https://www.allisterke.com/?p=50',0,'revision','',0),(52,0,'2017-11-20 03:00:25','0000-00-00 00:00:00','&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n&lt;!-- generator=&#039;jetpack-5.2&#039; --&gt;\n&lt;?xml-stylesheet type=&#039;text/xsl&#039; href=&#039;https://www.allisterke.com/?jetpack-sitemap=sitemap.xsl&#039;?&gt;\n&lt;urlset xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns=&quot;http://www.sitemaps.org/schemas/sitemap/0.9&quot; xsi:schemaLocation=&quot;http://www.sitemaps.org/schemas/sitemap/0.9 http://www.sitemaps.org/schemas/sitemap/0.9/sitemap.xsd&quot;&gt;\n&lt;url&gt;\n  &lt;loc&gt;https://www.allisterke.com&lt;/loc&gt;\n&lt;/url&gt;\n&lt;url&gt;\n  &lt;loc&gt;https://www.allisterke.com/?p=1&lt;/loc&gt;\n  &lt;lastmod&gt;2017-07-31T11:57:09Z&lt;/lastmod&gt;\n&lt;/url&gt;\n&lt;url&gt;\n  &lt;loc&gt;https://www.allisterke.com/?page_id=2&lt;/loc&gt;\n  &lt;lastmod&gt;2017-07-31T11:57:09Z&lt;/lastmod&gt;\n&lt;/url&gt;\n&lt;url&gt;\n  &lt;loc&gt;https://www.allisterke.com/?page_id=7&lt;/loc&gt;\n  &lt;lastmod&gt;2017-07-31T12:06:39Z&lt;/lastmod&gt;\n&lt;/url&gt;\n&lt;url&gt;\n  &lt;loc&gt;https://www.allisterke.com/?page_id=8&lt;/loc&gt;\n  &lt;lastmod&gt;2017-07-31T12:30:16Z&lt;/lastmod&gt;\n&lt;/url&gt;\n&lt;url&gt;\n  &lt;loc&gt;https://www.allisterke.com/?page_id=9&lt;/loc&gt;\n  &lt;lastmod&gt;2017-07-31T12:30:45Z&lt;/lastmod&gt;\n&lt;/url&gt;\n&lt;url&gt;\n  &lt;loc&gt;https://www.allisterke.com/?page_id=10&lt;/loc&gt;\n  &lt;lastmod&gt;2017-07-31T12:30:31Z&lt;/lastmod&gt;\n&lt;/url&gt;\n&lt;url&gt;\n  &lt;loc&gt;https://www.allisterke.com/?page_id=11&lt;/loc&gt;\n  &lt;lastmod&gt;2017-07-31T12:06:39Z&lt;/lastmod&gt;\n&lt;/url&gt;\n&lt;url&gt;\n  &lt;loc&gt;https://www.allisterke.com/?p=49&lt;/loc&gt;\n  &lt;lastmod&gt;2017-08-02T12:20:10Z&lt;/lastmod&gt;\n&lt;/url&gt;\n&lt;url&gt;\n  &lt;loc&gt;https://www.allisterke.com/?p=56&lt;/loc&gt;\n  &lt;lastmod&gt;2017-08-07T12:27:10Z&lt;/lastmod&gt;\n&lt;/url&gt;\n&lt;url&gt;\n  &lt;loc&gt;https://www.allisterke.com/?p=86&lt;/loc&gt;\n  &lt;lastmod&gt;2017-08-08T17:19:28Z&lt;/lastmod&gt;\n&lt;/url&gt;\n&lt;url&gt;\n  &lt;loc&gt;https://www.allisterke.com/?p=93&lt;/loc&gt;\n  &lt;lastmod&gt;2017-08-23T09:32:56Z&lt;/lastmod&gt;\n&lt;/url&gt;\n&lt;url&gt;\n  &lt;loc&gt;https://www.allisterke.com/?p=97&lt;/loc&gt;\n  &lt;lastmod&gt;2017-09-04T12:06:37Z&lt;/lastmod&gt;\n&lt;/url&gt;\n&lt;url&gt;\n  &lt;loc&gt;https://www.allisterke.com/?p=104&lt;/loc&gt;\n  &lt;lastmod&gt;2017-10-20T13:44:04Z&lt;/lastmod&gt;\n&lt;/url&gt;\n&lt;url&gt;\n  &lt;loc&gt;https://www.allisterke.com/?p=108&lt;/loc&gt;\n  &lt;lastmod&gt;2017-10-22T08:25:05Z&lt;/lastmod&gt;\n&lt;/url&gt;\n&lt;url&gt;\n  &lt;loc&gt;https://www.allisterke.com/?p=114&lt;/loc&gt;\n  &lt;lastmod&gt;2017-11-20T03:00:25Z&lt;/lastmod&gt;\n&lt;/url&gt;\n&lt;/urlset&gt;\n','sitemap-1.xml','','draft','closed','closed','','','','','2017-12-24 16:05:59','2017-12-24 08:05:59','',0,'https://www.allisterke.com/?p=52',0,'jp_sitemap','',0),(53,0,'2017-07-31 12:06:39','0000-00-00 00:00:00','&lt;?xml version=&#039;1.0&#039; encoding=&#039;UTF-8&#039;?&gt;\n&lt;!-- generator=&#039;jetpack-5.2&#039; --&gt;\n&lt;?xml-stylesheet type=&#039;text/xsl&#039; href=&#039;https://www.allisterke.com/?jetpack-sitemap=image-sitemap.xsl&#039;?&gt;\n&lt;urlset xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.sitemaps.org/schemas/sitemap/0.9 http://www.sitemaps.org/schemas/sitemap/0.9/sitemap.xsd&quot; xmlns=&quot;http://www.sitemaps.org/schemas/sitemap/0.9&quot; xmlns:image=&quot;http://www.google.com/schemas/sitemap-image/1.1&quot;&gt;\n&lt;url&gt;\n  &lt;loc&gt;https://www.allisterke.com/?attachment_id=4&lt;/loc&gt;\n  &lt;lastmod&gt;2017-07-31T12:06:39Z&lt;/lastmod&gt;\n  &lt;image:image&gt;\n    &lt;image:loc&gt;https://www.allisterke.com/wp-content/uploads/2017/07/espresso.jpg&lt;/image:loc&gt;\n    &lt;image:title&gt;浓缩咖啡&lt;/image:title&gt;\n  &lt;/image:image&gt;\n&lt;/url&gt;\n&lt;url&gt;\n  &lt;loc&gt;https://www.allisterke.com/?attachment_id=5&lt;/loc&gt;\n  &lt;lastmod&gt;2017-07-31T12:06:39Z&lt;/lastmod&gt;\n  &lt;image:image&gt;\n    &lt;image:loc&gt;https://www.allisterke.com/wp-content/uploads/2017/07/sandwich.jpg&lt;/image:loc&gt;\n    &lt;image:title&gt;三明治&lt;/image:title&gt;\n  &lt;/image:image&gt;\n&lt;/url&gt;\n&lt;url&gt;\n  &lt;loc&gt;https://www.allisterke.com/?attachment_id=6&lt;/loc&gt;\n  &lt;lastmod&gt;2017-07-31T12:06:39Z&lt;/lastmod&gt;\n  &lt;image:image&gt;\n    &lt;image:loc&gt;https://www.allisterke.com/wp-content/uploads/2017/07/coffee.jpg&lt;/image:loc&gt;\n    &lt;image:title&gt;咖啡&lt;/image:title&gt;\n  &lt;/image:image&gt;\n&lt;/url&gt;\n&lt;/urlset&gt;\n','image-sitemap-1.xml','','draft','closed','closed','','','','','2017-12-24 16:05:59','2017-12-24 08:05:59','',0,'https://www.allisterke.com/?p=53',0,'jp_img_sitemap','',0),(54,0,'1970-01-01 00:00:00','0000-00-00 00:00:00','&lt;?xml version=&#039;1.0&#039; encoding=&#039;UTF-8&#039;?&gt;\n&lt;!-- generator=&#039;jetpack-5.2&#039; --&gt;\n&lt;?xml-stylesheet type=&#039;text/xsl&#039; href=&#039;https://www.allisterke.com/?jetpack-sitemap=sitemap-index.xsl&#039;?&gt;\n&lt;sitemapindex xmlns=&#039;http://www.sitemaps.org/schemas/sitemap/0.9&#039;&gt;&lt;sitemap&gt;\n  &lt;loc&gt;https://www.allisterke.com/?jetpack-sitemap=sitemap-1.xml&lt;/loc&gt;\n  &lt;lastmod&gt;2017-11-20T03:00:25Z&lt;/lastmod&gt;\n&lt;/sitemap&gt;\n&lt;sitemap&gt;\n  &lt;loc&gt;https://www.allisterke.com/?jetpack-sitemap=image-sitemap-1.xml&lt;/loc&gt;\n  &lt;lastmod&gt;2017-07-31T12:06:39Z&lt;/lastmod&gt;\n&lt;/sitemap&gt;\n&lt;/sitemapindex&gt;\n','sitemap.xml','','draft','closed','closed','','','','','2017-12-24 16:05:59','2017-12-24 08:05:59','',0,'https://www.allisterke.com/?p=54',0,'jp_sitemap_master','',0),(56,1,'2017-08-07 19:59:37','2017-08-07 11:59:37','今天被问free命令里显示的cache和buffer两项各自的含义。现在的free哪有两项，早就合并成一项了：\n\n<pre><code class=\"nohighlight\">$ free -h\n              total        used        free      shared  buff/cache   available\nMem:           1.0G        183M         75M         32M        740M        604M\nSwap:          5.0G        103M        4.9G\n</code></pre>\n\n通过man free可以看到cache和buffers的定义：\n\n<pre><code class=\"nohighlight\">$ man free\n       buffers\n              Memory used by kernel buffers (Buffers in /proc/meminfo)\n\n       cache  Memory used by the page cache and slabs (Cached and Slab in /proc/meminfo)\n\n       buff/cache\n              Sum of buffers and cache\n</code></pre>\n\n可见不仅有两项，还有三项。试着用linux-4.9来求是一下。\n\n<h2>首先来看，/proc/meminfo里面的信息是怎么生成的。</h2>\n\n<pre><code class=\"c\">fs/proc/meminfo.c\nstatic int meminfo_proc_show(struct seq_file *m, void *v)\n{\n    struct sysinfo i;\n    long cached;\n\n    si_meminfo(&amp;i);\n    si_swapinfo(&amp;i);\n\n    cached = global_node_page_state(NR_FILE_PAGES) -\n                        total_swapcache_pages() - i.bufferram;\n\n    show_val_kb(m, \"Buffers:        \", i.bufferram);\n    show_val_kb(m, \"Cached:         \", cached);\n    show_val_kb(m, \"Slab:           \",\n                    global_page_state(NR_SLAB_RECLAIMABLE) +\n                    global_page_state(NR_SLAB_UNRECLAIMABLE));\n}\n</code></pre>\n\n可见buffers就是i.bufferram, cached是从所有NR_FILE_PAGES类型的页里面减去swap cache和buffers, 而slabs则是NR_SLAB_RECLAIMABLE类型和NR_SLAB_UNRECLAIMABLE类型的和。\n\n<h2>再来看看buffers是怎么统计的。</h2>\n\n<pre><code class=\"c\">mm/page_alloc.c\nvoid si_meminfo(struct sysinfo *val)\n{\n        val-&gt;totalram = totalram_pages;\n        val-&gt;sharedram = global_node_page_state(NR_SHMEM);\n        val-&gt;freeram = global_page_state(NR_FREE_PAGES);\n        val-&gt;bufferram = nr_blockdev_pages();\n        val-&gt;totalhigh = totalhigh_pages;\n        val-&gt;freehigh = nr_free_highpages();\n        val-&gt;mem_unit = PAGE_SIZE;\n}\n\nfs/block_dev.c\nlong nr_blockdev_pages(void)\n{\n        struct block_device *bdev;\n        long ret = 0;\n        spin_lock(&amp;bdev_lock);\n        list_for_each_entry(bdev, &amp;all_bdevs, bd_list) {\n                ret += bdev-&gt;bd_inode-&gt;i_mapping-&gt;nrpages;\n        }\n        spin_unlock(&amp;bdev_lock);\n        return ret;\n}\n</code></pre>\n\n这里就很明显可以看出，buffer统计的是块设备的缓存。\n\n<h2>再来看cached是怎么统计的。</h2>\n\n<pre><code class=\"c\">include/linux/vmstat.h\nstatic inline unsigned long global_node_page_state(enum node_stat_item item)\n{\n        long x = atomic_long_read(&amp;vm_node_stat[item]);\n#ifdef CONFIG_SMP\n        if (x &lt; 0)\n                x = 0;\n#endif\n        return x;\n}\n</code></pre>\n\n可见这个函数就是取了内核中的一个数组中的一个值，此处是NR_FILE_PAGES。来看看NR_FILE_PAGES有关的代码有哪些。\n\n<pre><code class=\"nohighlight\">$ grep NR_FILE_PAGES $(find . -type f -name \'*.c\' | grep -v \'/drivers/\') -n\n./fs/proc/meminfo.c:58: cached = global_node_page_state(NR_FILE_PAGES) -\n./mm/shmem.c:580:               __mod_node_page_state(page_pgdat(page), NR_FILE_PAGES, nr);\n./mm/shmem.c:605:       __dec_node_page_state(page, NR_FILE_PAGES);\n./mm/shmem.c:1500:              __inc_node_page_state(newpage, NR_FILE_PAGES);\n./mm/shmem.c:1501:              __dec_node_page_state(oldpage, NR_FILE_PAGES);\n./mm/migrate.c:504:      * via NR_FILE_PAGES and NR_ANON_MAPPED if they\n./mm/migrate.c:508:             __dec_node_state(oldzone-&gt;zone_pgdat, NR_FILE_PAGES);\n./mm/migrate.c:509:             __inc_node_state(newzone-&gt;zone_pgdat, NR_FILE_PAGES);\n./mm/khugepaged.c:1491:                 __mod_node_page_state(zone-&gt;zone_pgdat, NR_FILE_PAGES, nr_none);\n./mm/filemap.c:291:             __mod_node_page_state(page_pgdat(page), NR_FILE_PAGES, -nr);\n./mm/filemap.c:641:                     __inc_node_page_state(new, NR_FILE_PAGES);\n./mm/filemap.c:694:             __inc_node_page_state(page, NR_FILE_PAGES);\n./mm/page_alloc.c:4426: printk(\"%ld total pagecache pages\\n\", global_node_page_state(NR_FILE_PAGES));\n./mm/util.c:534:                free += global_node_page_state(NR_FILE_PAGES);\n./mm/swap_state.c:100:          __inc_node_page_state(page, NR_FILE_PAGES);\n./mm/swap_state.c:152:  __dec_node_page_state(page, NR_FILE_PAGES);\n./mm/vmscan.c:3691:             nr_pagecache_reclaimable = node_page_state(pgdat, NR_FILE_PAGES);\n./arch/tile/mm/pgtable.c:61:           global_node_page_state(NR_FILE_PAGES),\n./arch/s390/appldata/appldata_mem.c:105:        mem_data-&gt;cached    = P2K(global_node_page_state(NR_FILE_PAGES)\n</code></pre>\n\n看起来共享内存，文件内存映射，swap等有关的功能都会修改NR_FILE_PAGES类型的缓存页面。而swap cache从前面看是被减掉了。所以cached大概主要是统计共享内存和文件内存映射所用到的缓存。\n\n<h2>再来看slabs是怎么统计的。</h2>\n\n隐约记得slab是一种内核内存分配方式。不太懂，以后懂一点再来分析。','/proc/meminfo: Cache vs Buffers','','publish','open','open','','procmeminfo-cache-vs-buffers','','','2017-08-07 20:27:10','2017-08-07 12:27:10','今天被问free命令里显示的cache和buffer两项各自的含义。现在的free哪有两项，早就合并成一项了：\r\n```nohighlight\r\n$ free -h\r\n              total        used        free      shared  buff/cache   available\r\nMem:           1.0G        183M         75M         32M        740M        604M\r\nSwap:          5.0G        103M        4.9G\r\n```\r\n通过man free可以看到cache和buffers的定义：\r\n```nohighlight\r\n$ man free\r\n       buffers\r\n              Memory used by kernel buffers (Buffers in /proc/meminfo)\r\n\r\n       cache  Memory used by the page cache and slabs (Cached and Slab in /proc/meminfo)\r\n\r\n       buff/cache\r\n              Sum of buffers and cache\r\n```\r\n可见不仅有两项，还有三项。试着用linux-4.9来求是一下。\r\n## 首先来看，/proc/meminfo里面的信息是怎么生成的。\r\n```c\r\nfs/proc/meminfo.c\r\nstatic int meminfo_proc_show(struct seq_file *m, void *v)\r\n{\r\n	struct sysinfo i;\r\n	long cached;\r\n\r\n	si_meminfo(&amp;i);\r\n	si_swapinfo(&amp;i);\r\n\r\n	cached = global_node_page_state(NR_FILE_PAGES) -\r\n                        total_swapcache_pages() - i.bufferram;\r\n\r\n	show_val_kb(m, &quot;Buffers:        &quot;, i.bufferram);\r\n	show_val_kb(m, &quot;Cached:         &quot;, cached);\r\n	show_val_kb(m, &quot;Slab:           &quot;,\r\n                    global_page_state(NR_SLAB_RECLAIMABLE) +\r\n                    global_page_state(NR_SLAB_UNRECLAIMABLE));\r\n}\r\n```\r\n可见buffers就是i.bufferram, cached是从所有NR_FILE_PAGES类型的页里面减去swap cache和buffers, 而slabs则是NR_SLAB_RECLAIMABLE类型和NR_SLAB_UNRECLAIMABLE类型的和。\r\n## 再来看看buffers是怎么统计的。\r\n```c\r\nmm/page_alloc.c\r\nvoid si_meminfo(struct sysinfo *val)\r\n{\r\n        val-&gt;totalram = totalram_pages;\r\n        val-&gt;sharedram = global_node_page_state(NR_SHMEM);\r\n        val-&gt;freeram = global_page_state(NR_FREE_PAGES);\r\n        val-&gt;bufferram = nr_blockdev_pages();\r\n        val-&gt;totalhigh = totalhigh_pages;\r\n        val-&gt;freehigh = nr_free_highpages();\r\n        val-&gt;mem_unit = PAGE_SIZE;\r\n}\r\n\r\nfs/block_dev.c\r\nlong nr_blockdev_pages(void)\r\n{\r\n        struct block_device *bdev;\r\n        long ret = 0;\r\n        spin_lock(&amp;bdev_lock);\r\n        list_for_each_entry(bdev, &amp;all_bdevs, bd_list) {\r\n                ret += bdev-&gt;bd_inode-&gt;i_mapping-&gt;nrpages;\r\n        }\r\n        spin_unlock(&amp;bdev_lock);\r\n        return ret;\r\n}\r\n```\r\n这里就很明显可以看出，buffer统计的是块设备的缓存。\r\n## 再来看cached是怎么统计的。\r\n```c\r\ninclude/linux/vmstat.h\r\nstatic inline unsigned long global_node_page_state(enum node_stat_item item)\r\n{\r\n        long x = atomic_long_read(&amp;vm_node_stat[item]);\r\n#ifdef CONFIG_SMP\r\n        if (x &lt; 0)\r\n                x = 0;\r\n#endif\r\n        return x;\r\n}\r\n```\r\n可见这个函数就是取了内核中的一个数组中的一个值，此处是NR_FILE_PAGES。来看看NR_FILE_PAGES有关的代码有哪些。\r\n```nohighlight\r\n$ grep NR_FILE_PAGES $(find . -type f -name &#039;*.c&#039; | grep -v &#039;/drivers/&#039;) -n\r\n./fs/proc/meminfo.c:58: cached = global_node_page_state(NR_FILE_PAGES) -\r\n./mm/shmem.c:580:               __mod_node_page_state(page_pgdat(page), NR_FILE_PAGES, nr);\r\n./mm/shmem.c:605:       __dec_node_page_state(page, NR_FILE_PAGES);\r\n./mm/shmem.c:1500:              __inc_node_page_state(newpage, NR_FILE_PAGES);\r\n./mm/shmem.c:1501:              __dec_node_page_state(oldpage, NR_FILE_PAGES);\r\n./mm/migrate.c:504:      * via NR_FILE_PAGES and NR_ANON_MAPPED if they\r\n./mm/migrate.c:508:             __dec_node_state(oldzone-&gt;zone_pgdat, NR_FILE_PAGES);\r\n./mm/migrate.c:509:             __inc_node_state(newzone-&gt;zone_pgdat, NR_FILE_PAGES);\r\n./mm/khugepaged.c:1491:                 __mod_node_page_state(zone-&gt;zone_pgdat, NR_FILE_PAGES, nr_none);\r\n./mm/filemap.c:291:             __mod_node_page_state(page_pgdat(page), NR_FILE_PAGES, -nr);\r\n./mm/filemap.c:641:                     __inc_node_page_state(new, NR_FILE_PAGES);\r\n./mm/filemap.c:694:             __inc_node_page_state(page, NR_FILE_PAGES);\r\n./mm/page_alloc.c:4426: printk(&quot;%ld total pagecache pages\\n&quot;, global_node_page_state(NR_FILE_PAGES));\r\n./mm/util.c:534:                free += global_node_page_state(NR_FILE_PAGES);\r\n./mm/swap_state.c:100:          __inc_node_page_state(page, NR_FILE_PAGES);\r\n./mm/swap_state.c:152:  __dec_node_page_state(page, NR_FILE_PAGES);\r\n./mm/vmscan.c:3691:             nr_pagecache_reclaimable = node_page_state(pgdat, NR_FILE_PAGES);\r\n./arch/tile/mm/pgtable.c:61:           global_node_page_state(NR_FILE_PAGES),\r\n./arch/s390/appldata/appldata_mem.c:105:        mem_data-&gt;cached    = P2K(global_node_page_state(NR_FILE_PAGES)\r\n```\r\n看起来共享内存，文件内存映射，swap等有关的功能都会修改NR_FILE_PAGES类型的缓存页面。而swap cache从前面看是被减掉了。所以cached大概主要是统计共享内存和文件内存映射所用到的缓存。\r\n## 再来看slabs是怎么统计的。\r\n隐约记得slab是一种内核内存分配方式。不太懂，以后懂一点再来分析。',0,'https://www.allisterke.com/?p=56',0,'post','',0),(57,1,'2017-08-07 17:56:57','2017-08-07 09:56:57','今天被问free命令里显示的cache和buffer两项各自的含义。现在的free哪有两项，早就合并成一项了。\n\n<pre><code>total used free shared buff/cache available\nMem: 1.0G 159M 87M 29M 753M 631M\nSwap: 5.0G 122M 4.9G\n</code></pre>','/proc/meminfo: Cache vs Buffers','','inherit','closed','closed','','56-revision-v1','','','2017-08-07 17:56:57','2017-08-07 09:56:57','今天被问free命令里显示的cache和buffer两项各自的含义。现在的free哪有两项，早就合并成一项了。\r\n```\r\ntotal used free shared buff/cache available\r\nMem: 1.0G 159M 87M 29M 753M 631M\r\nSwap: 5.0G 122M 4.9G\r\n```',56,'https://www.allisterke.com/?p=57',0,'revision','',0),(58,1,'2017-08-07 18:14:17','2017-08-07 10:14:17','今天被问free命令里显示的cache和buffer两项各自的含义。现在的free哪有两项，早就合并成一项了：\n\n<pre><code class=\"bash\">$ free -h\ntotal used free shared buff/cache available\nMem: 1.0G 159M 87M 29M 753M 631M\nSwap: 5.0G 122M 4.9G\n</code></pre>\n\n通过man free可以看到cache和buffers的定义：\n\n<pre><code class=\"bash\">$ man free\n       buffers\n              Memory used by kernel buffers (Buffers in /proc/meminfo)\n\n       cache  Memory used by the page cache and slabs (Cached and Slab in /proc/meminfo)\n\n       buff/cache\n              Sum of buffers and cache\n</code></pre>\n\n可见还是有两项。','/proc/meminfo: Cache vs Buffers','','inherit','closed','closed','','56-revision-v1','','','2017-08-07 18:14:17','2017-08-07 10:14:17','今天被问free命令里显示的cache和buffer两项各自的含义。现在的free哪有两项，早就合并成一项了：\r\n```bash\r\n$ free -h\r\ntotal used free shared buff/cache available\r\nMem: 1.0G 159M 87M 29M 753M 631M\r\nSwap: 5.0G 122M 4.9G\r\n```\r\n通过man free可以看到cache和buffers的定义：\r\n```bash\r\n$ man free\r\n       buffers\r\n              Memory used by kernel buffers (Buffers in /proc/meminfo)\r\n\r\n       cache  Memory used by the page cache and slabs (Cached and Slab in /proc/meminfo)\r\n\r\n       buff/cache\r\n              Sum of buffers and cache\r\n```\r\n可见还是有两项。\r\n\r\n\r\n',56,'https://www.allisterke.com/?p=58',0,'revision','',0),(59,1,'2017-08-07 18:15:53','2017-08-07 10:15:53','今天被问free命令里显示的cache和buffer两项各自的含义。现在的free哪有两项，早就合并成一项了：\n\n<pre><code class=\"bash\">$ free -h\ntotal used free shared buff/cache available\nMem: 1.0G 159M 87M 29M 753M 631M\nSwap: 5.0G 122M 4.9G\n</code></pre>\n\n通过man free可以看到cache和buffers的定义：\n\n<pre><code class=\"bash\">$ man free\nbuffers Memory used by kernel buffers (Buffers in /proc/meminfo)\ncache Memory used by the page cache and slabs (Cached and Slab in /proc/meminfo)\nbuff/cache Sum of buffers and cache\n</code></pre>\n\n可见还是有两项。','/proc/meminfo: Cache vs Buffers','','inherit','closed','closed','','56-revision-v1','','','2017-08-07 18:15:53','2017-08-07 10:15:53','今天被问free命令里显示的cache和buffer两项各自的含义。现在的free哪有两项，早就合并成一项了：\r\n```bash\r\n$ free -h\r\ntotal used free shared buff/cache available\r\nMem: 1.0G 159M 87M 29M 753M 631M\r\nSwap: 5.0G 122M 4.9G\r\n```\r\n通过man free可以看到cache和buffers的定义：\r\n```bash\r\n$ man free\r\nbuffers Memory used by kernel buffers (Buffers in /proc/meminfo)\r\ncache Memory used by the page cache and slabs (Cached and Slab in /proc/meminfo)\r\nbuff/cache Sum of buffers and cache\r\n```\r\n可见还是有两项。\r\n\r\n\r\n',56,'https://www.allisterke.com/?p=59',0,'revision','',0),(60,1,'2017-08-07 19:12:35','2017-08-07 11:12:35','今天被问free命令里显示的cache和buffer两项各自的含义。现在的free哪有两项，早就合并成一项了：\n\n<pre><code>$ free -h\ntotal used free shared buff/cache available\nMem: 1.0G 159M 87M 29M 753M 631M\nSwap: 5.0G 122M 4.9G\n</code></pre>\n\n通过man free可以看到cache和buffers的定义：\n\n<pre><code>$ man free\nbuffers Memory used by kernel buffers (Buffers in /proc/meminfo)\ncache Memory used by the page cache and slabs (Cached and Slab in /proc/meminfo)\nbuff/cache Sum of buffers and cache\n</code></pre>\n\n可见还是有两项。','/proc/meminfo: Cache vs Buffers','','inherit','closed','closed','','56-revision-v1','','','2017-08-07 19:12:35','2017-08-07 11:12:35','今天被问free命令里显示的cache和buffer两项各自的含义。现在的free哪有两项，早就合并成一项了：\r\n```\r\n$ free -h\r\ntotal used free shared buff/cache available\r\nMem: 1.0G 159M 87M 29M 753M 631M\r\nSwap: 5.0G 122M 4.9G\r\n```\r\n通过man free可以看到cache和buffers的定义：\r\n```\r\n$ man free\r\nbuffers Memory used by kernel buffers (Buffers in /proc/meminfo)\r\ncache Memory used by the page cache and slabs (Cached and Slab in /proc/meminfo)\r\nbuff/cache Sum of buffers and cache\r\n```\r\n可见还是有两项。\r\n\r\n\r\n',56,'https://www.allisterke.com/?p=60',0,'revision','',0),(61,1,'2017-08-07 19:13:01','2017-08-07 11:13:01','今天被问free命令里显示的cache和buffer两项各自的含义。现在的free哪有两项，早就合并成一项了：\n\n<pre><code class=\"txt\">$ free -h\ntotal used free shared buff/cache available\nMem: 1.0G 159M 87M 29M 753M 631M\nSwap: 5.0G 122M 4.9G\n</code></pre>\n\n通过man free可以看到cache和buffers的定义：\n\n<pre><code class=\"txt\">$ man free\nbuffers Memory used by kernel buffers (Buffers in /proc/meminfo)\ncache Memory used by the page cache and slabs (Cached and Slab in /proc/meminfo)\nbuff/cache Sum of buffers and cache\n</code></pre>\n\n可见还是有两项。','/proc/meminfo: Cache vs Buffers','','inherit','closed','closed','','56-revision-v1','','','2017-08-07 19:13:01','2017-08-07 11:13:01','今天被问free命令里显示的cache和buffer两项各自的含义。现在的free哪有两项，早就合并成一项了：\r\n```txt\r\n$ free -h\r\ntotal used free shared buff/cache available\r\nMem: 1.0G 159M 87M 29M 753M 631M\r\nSwap: 5.0G 122M 4.9G\r\n```\r\n通过man free可以看到cache和buffers的定义：\r\n```txt\r\n$ man free\r\nbuffers Memory used by kernel buffers (Buffers in /proc/meminfo)\r\ncache Memory used by the page cache and slabs (Cached and Slab in /proc/meminfo)\r\nbuff/cache Sum of buffers and cache\r\n```\r\n可见还是有两项。\r\n\r\n\r\n',56,'https://www.allisterke.com/?p=61',0,'revision','',0),(62,1,'2017-08-07 19:17:42','2017-08-07 11:17:42','今天被问free命令里显示的cache和buffer两项各自的含义。现在的free哪有两项，早就合并成一项了：\n\n<pre><code class=\"nohighlight\">$ free -h\ntotal used free shared buff/cache available\nMem: 1.0G 159M 87M 29M 753M 631M\nSwap: 5.0G 122M 4.9G\n</code></pre>\n\n通过man free可以看到cache和buffers的定义：\n\n<pre><code class=\"nohighlight\">$ man free\nbuffers Memory used by kernel buffers (Buffers in /proc/meminfo)\ncache Memory used by the page cache and slabs (Cached and Slab in /proc/meminfo)\nbuff/cache Sum of buffers and cache\n</code></pre>\n\n可见还是有两项。','/proc/meminfo: Cache vs Buffers','','inherit','closed','closed','','56-revision-v1','','','2017-08-07 19:17:42','2017-08-07 11:17:42','今天被问free命令里显示的cache和buffer两项各自的含义。现在的free哪有两项，早就合并成一项了：\r\n```nohighlight\r\n$ free -h\r\ntotal used free shared buff/cache available\r\nMem: 1.0G 159M 87M 29M 753M 631M\r\nSwap: 5.0G 122M 4.9G\r\n```\r\n通过man free可以看到cache和buffers的定义：\r\n```nohighlight\r\n$ man free\r\nbuffers Memory used by kernel buffers (Buffers in /proc/meminfo)\r\ncache Memory used by the page cache and slabs (Cached and Slab in /proc/meminfo)\r\nbuff/cache Sum of buffers and cache\r\n```\r\n可见还是有两项。\r\n\r\n\r\n',56,'https://www.allisterke.com/?p=62',0,'revision','',0),(64,1,'2017-08-07 19:21:40','2017-08-07 11:21:40','/*\n您可以在此处加入您的CSS。\n\n点击上方的帮助图标来了解更多。\n*/\n\nbody {\n	font-family: \'Microsoft JhengHei\', \'PingFang\';\n}\n\ncode {\n	font-family: \'Source Code Pro\', monospace;\n}','twentyfifteen','','inherit','closed','closed','','38-revision-v1','','','2017-08-07 19:21:40','2017-08-07 11:21:40','',38,'https://www.allisterke.com/?p=64',0,'revision','',0),(65,1,'2017-08-07 19:22:33','2017-08-07 11:22:33','今天被问free命令里显示的cache和buffer两项各自的含义。现在的free哪有两项，早就合并成一项了：\n\n<pre><code class=\"nohighlight\">free -h\n              total        used        free      shared  buff/cache   available\nMem:           1.0G        183M         75M         32M        740M        604M\nSwap:          5.0G        103M        4.9G\n</code></pre>\n\n通过man free可以看到cache和buffers的定义：\n\n<pre><code class=\"nohighlight\">$ man free\nbuffers Memory used by kernel buffers (Buffers in /proc/meminfo)\ncache Memory used by the page cache and slabs (Cached and Slab in /proc/meminfo)\nbuff/cache Sum of buffers and cache\n</code></pre>\n\n可见还是有两项。','/proc/meminfo: Cache vs Buffers','','inherit','closed','closed','','56-revision-v1','','','2017-08-07 19:22:33','2017-08-07 11:22:33','今天被问free命令里显示的cache和buffer两项各自的含义。现在的free哪有两项，早就合并成一项了：\r\n```nohighlight\r\nfree -h\r\n              total        used        free      shared  buff/cache   available\r\nMem:           1.0G        183M         75M         32M        740M        604M\r\nSwap:          5.0G        103M        4.9G\r\n```\r\n通过man free可以看到cache和buffers的定义：\r\n```nohighlight\r\n$ man free\r\nbuffers Memory used by kernel buffers (Buffers in /proc/meminfo)\r\ncache Memory used by the page cache and slabs (Cached and Slab in /proc/meminfo)\r\nbuff/cache Sum of buffers and cache\r\n```\r\n可见还是有两项。\r\n\r\n\r\n',56,'https://www.allisterke.com/?p=65',0,'revision','',0),(67,1,'2017-08-07 19:23:13','2017-08-07 11:23:13','/*\n您可以在此处加入您的CSS。\n\n点击上方的帮助图标来了解更多。\n*/\n\nbody {\n	font-family: \'Microsoft JhengHei\', \'PingFang\';\n}\n\ncode {\n	font-family: \'Source Code Pro\', monospace;\n	font-size: 16px;\n}','twentyfifteen','','inherit','closed','closed','','38-revision-v1','','','2017-08-07 19:23:13','2017-08-07 11:23:13','',38,'https://www.allisterke.com/?p=67',0,'revision','',0),(69,1,'2017-08-07 19:23:43','2017-08-07 11:23:43','/*\n您可以在此处加入您的CSS。\n\n点击上方的帮助图标来了解更多。\n*/\n\nbody {\n	font-family: \'Microsoft JhengHei\', \'PingFang\';\n}\n\ncode {\n	font-family: \'Source Code Pro\', monospace;\n	font-size: 12px;\n}','twentyfifteen','','inherit','closed','closed','','38-revision-v1','','','2017-08-07 19:23:43','2017-08-07 11:23:43','',38,'https://www.allisterke.com/?p=69',0,'revision','',0),(70,1,'2017-08-07 19:24:33','2017-08-07 11:24:33','今天被问free命令里显示的cache和buffer两项各自的含义。现在的free哪有两项，早就合并成一项了：\n\n<pre><code class=\"nohighlight\">$ free -h\n              total        used        free      shared  buff/cache   available\nMem:           1.0G        183M         75M         32M        740M        604M\nSwap:          5.0G        103M        4.9G\n</code></pre>\n\n通过man free可以看到cache和buffers的定义：\n\n<pre><code class=\"nohighlight\">$ man free\n       buffers\n              Memory used by kernel buffers (Buffers in /proc/meminfo)\n\n       cache  Memory used by the page cache and slabs (Cached and Slab in /proc/meminfo)\n\n       buff/cache\n              Sum of buffers and cache\n</code></pre>\n\n可见还是有两项。','/proc/meminfo: Cache vs Buffers','','inherit','closed','closed','','56-revision-v1','','','2017-08-07 19:24:33','2017-08-07 11:24:33','今天被问free命令里显示的cache和buffer两项各自的含义。现在的free哪有两项，早就合并成一项了：\r\n```nohighlight\r\n$ free -h\r\n              total        used        free      shared  buff/cache   available\r\nMem:           1.0G        183M         75M         32M        740M        604M\r\nSwap:          5.0G        103M        4.9G\r\n```\r\n通过man free可以看到cache和buffers的定义：\r\n```nohighlight\r\n$ man free\r\n       buffers\r\n              Memory used by kernel buffers (Buffers in /proc/meminfo)\r\n\r\n       cache  Memory used by the page cache and slabs (Cached and Slab in /proc/meminfo)\r\n\r\n       buff/cache\r\n              Sum of buffers and cache\r\n```\r\n可见还是有两项。\r\n\r\n\r\n',56,'https://www.allisterke.com/?p=70',0,'revision','',0),(71,1,'2017-08-07 19:31:58','2017-08-07 11:31:58','今天被问free命令里显示的cache和buffer两项各自的含义。现在的free哪有两项，早就合并成一项了：\n\n<pre><code class=\"nohighlight\">$ free -h\n              total        used        free      shared  buff/cache   available\nMem:           1.0G        183M         75M         32M        740M        604M\nSwap:          5.0G        103M        4.9G\n</code></pre>\n\n通过man free可以看到cache和buffers的定义：\n\n<pre><code class=\"nohighlight\">$ man free\n       buffers\n              Memory used by kernel buffers (Buffers in /proc/meminfo)\n\n       cache  Memory used by the page cache and slabs (Cached and Slab in /proc/meminfo)\n\n       buff/cache\n              Sum of buffers and cache\n</code></pre>\n\n可见不仅有两项，还有三项。\n首先来看，/proc/meminfo里面的信息是怎么生成的。\n\n<pre><code class=\"c\">fs/proc/meminfo.c\nstatic int meminfo_proc_show(struct seq_file *m, void *v)\n{\n    struct sysinfo i;\n    long cached;\n\n    si_meminfo(&amp;i);\n    si_swapinfo(&amp;i);\n\n    cached = global_node_page_state(NR_FILE_PAGES) -\n                        total_swapcache_pages() - i.bufferram;\n\n    show_val_kb(m, \"Buffers:        \", i.bufferram);\n    show_val_kb(m, \"Cached:         \", cached);\n    show_val_kb(m, \"Slab:           \",\n                    global_page_state(NR_SLAB_RECLAIMABLE) +\n                    global_page_state(NR_SLAB_UNRECLAIMABLE));\n}\n</code></pre>','/proc/meminfo: Cache vs Buffers','','inherit','closed','closed','','56-revision-v1','','','2017-08-07 19:31:58','2017-08-07 11:31:58','今天被问free命令里显示的cache和buffer两项各自的含义。现在的free哪有两项，早就合并成一项了：\r\n```nohighlight\r\n$ free -h\r\n              total        used        free      shared  buff/cache   available\r\nMem:           1.0G        183M         75M         32M        740M        604M\r\nSwap:          5.0G        103M        4.9G\r\n```\r\n通过man free可以看到cache和buffers的定义：\r\n```nohighlight\r\n$ man free\r\n       buffers\r\n              Memory used by kernel buffers (Buffers in /proc/meminfo)\r\n\r\n       cache  Memory used by the page cache and slabs (Cached and Slab in /proc/meminfo)\r\n\r\n       buff/cache\r\n              Sum of buffers and cache\r\n```\r\n可见不仅有两项，还有三项。\r\n首先来看，/proc/meminfo里面的信息是怎么生成的。\r\n```c\r\nfs/proc/meminfo.c\r\nstatic int meminfo_proc_show(struct seq_file *m, void *v)\r\n{\r\n	struct sysinfo i;\r\n	long cached;\r\n\r\n	si_meminfo(&amp;i);\r\n	si_swapinfo(&amp;i);\r\n\r\n	cached = global_node_page_state(NR_FILE_PAGES) -\r\n                        total_swapcache_pages() - i.bufferram;\r\n\r\n	show_val_kb(m, &quot;Buffers:        &quot;, i.bufferram);\r\n	show_val_kb(m, &quot;Cached:         &quot;, cached);\r\n	show_val_kb(m, &quot;Slab:           &quot;,\r\n                    global_page_state(NR_SLAB_RECLAIMABLE) +\r\n                    global_page_state(NR_SLAB_UNRECLAIMABLE));\r\n}\r\n```\r\n\r\n\r\n',56,'https://www.allisterke.com/?p=71',0,'revision','',0),(73,1,'2017-08-07 19:40:17','2017-08-07 11:40:17','/*\n您可以在此处加入您的CSS。\n\n点击上方的帮助图标来了解更多。\n*/\n\nbody {\n	font-family: \'Microsoft JhengHei\', \'PingFang\';\n}\n\ncode {\n	font-family: \'Source Code Pro\', monospace;\n	font-size: 12px;\n	padding: 0;\n}','twentyfifteen','','inherit','closed','closed','','38-revision-v1','','','2017-08-07 19:40:17','2017-08-07 11:40:17','',38,'https://www.allisterke.com/?p=73',0,'revision','',0),(75,1,'2017-08-07 19:41:30','2017-08-07 11:41:30','/*\n您可以在此处加入您的CSS。\n\n点击上方的帮助图标来了解更多。\n*/\n\nbody {\n	font-family: \'Microsoft JhengHei\', \'PingFang\';\n}\n\ncode {\n	font-family: \'Source Code Pro\', monospace;\n	font-size: 12px;\n	padding-bottom: 0;\n	padding-top: 0;\n	padding-left: 0;\n	padding-right: 0;\n}','twentyfifteen','','inherit','closed','closed','','38-revision-v1','','','2017-08-07 19:41:30','2017-08-07 11:41:30','',38,'https://www.allisterke.com/?p=75',0,'revision','',0),(77,1,'2017-08-07 19:41:53','2017-08-07 11:41:53','/*\n您可以在此处加入您的CSS。\n\n点击上方的帮助图标来了解更多。\n*/\n\nbody {\n	font-family: \'Microsoft JhengHei\', \'PingFang\';\n}\n\ncode {\n	font-family: \'Source Code Pro\', monospace;\n	font-size: 12px;\n}','twentyfifteen','','inherit','closed','closed','','38-revision-v1','','','2017-08-07 19:41:53','2017-08-07 11:41:53','',38,'https://www.allisterke.com/?p=77',0,'revision','',0),(78,1,'2017-08-07 19:55:32','2017-08-07 11:55:32','今天被问free命令里显示的cache和buffer两项各自的含义。现在的free哪有两项，早就合并成一项了：\n\n<pre><code class=\"nohighlight\">$ free -h\n              total        used        free      shared  buff/cache   available\nMem:           1.0G        183M         75M         32M        740M        604M\nSwap:          5.0G        103M        4.9G\n</code></pre>\n\n通过man free可以看到cache和buffers的定义：\n\n<pre><code class=\"nohighlight\">$ man free\n       buffers\n              Memory used by kernel buffers (Buffers in /proc/meminfo)\n\n       cache  Memory used by the page cache and slabs (Cached and Slab in /proc/meminfo)\n\n       buff/cache\n              Sum of buffers and cache\n</code></pre>\n\n可见不仅有两项，还有三项。\n\n<h2>首先来看，/proc/meminfo里面的信息是怎么生成的。</h2>\n\n<pre><code class=\"c\">fs/proc/meminfo.c\nstatic int meminfo_proc_show(struct seq_file *m, void *v)\n{\n    struct sysinfo i;\n    long cached;\n\n    si_meminfo(&amp;i);\n    si_swapinfo(&amp;i);\n\n    cached = global_node_page_state(NR_FILE_PAGES) -\n                        total_swapcache_pages() - i.bufferram;\n\n    show_val_kb(m, \"Buffers:        \", i.bufferram);\n    show_val_kb(m, \"Cached:         \", cached);\n    show_val_kb(m, \"Slab:           \",\n                    global_page_state(NR_SLAB_RECLAIMABLE) +\n                    global_page_state(NR_SLAB_UNRECLAIMABLE));\n}\n</code></pre>\n\n可见buffers就是i.bufferram, cached是从所有NR_FILE_PAGES类型的页里面减去swap cache和buffers, 而slabs则是NR_SLAB_RECLAIMABLE类型和NR_SLAB_UNRECLAIMABLE类型的和。\n\n<h2>再来看看buffers是怎么统计的。</h2>\n\n<pre><code class=\"c\">mm/page_alloc.c\nvoid si_meminfo(struct sysinfo *val)\n{\n        val-&gt;totalram = totalram_pages;\n        val-&gt;sharedram = global_node_page_state(NR_SHMEM);\n        val-&gt;freeram = global_page_state(NR_FREE_PAGES);\n        val-&gt;bufferram = nr_blockdev_pages();\n        val-&gt;totalhigh = totalhigh_pages;\n        val-&gt;freehigh = nr_free_highpages();\n        val-&gt;mem_unit = PAGE_SIZE;\n}\n\nfs/block_dev.c\nlong nr_blockdev_pages(void)\n{\n        struct block_device *bdev;\n        long ret = 0;\n        spin_lock(&amp;bdev_lock);\n        list_for_each_entry(bdev, &amp;all_bdevs, bd_list) {\n                ret += bdev-&gt;bd_inode-&gt;i_mapping-&gt;nrpages;\n        }\n        spin_unlock(&amp;bdev_lock);\n        return ret;\n}\n</code></pre>\n\n这里就很明显可以看出，buffer统计的是块设备的缓存。\n\n<h2>再来看cached是怎么统计的。</h2>\n\n<pre><code class=\"c\">include/linux/vmstat.h\nstatic inline unsigned long global_node_page_state(enum node_stat_item item)\n{\n        long x = atomic_long_read(&amp;vm_node_stat[item]);\n#ifdef CONFIG_SMP\n        if (x &lt; 0)\n                x = 0;\n#endif\n        return x;\n}\n</code></pre>\n\n可见这个函数就是取了内核中的一个数组中的一个值，此处是NR_FILE_PAGES。来看看NR_FILE_PAGES有关的代码有哪些。\n\n<pre><code class=\"grep\">$ grep NR_FILE_PAGES $(find . -type f -name \'*.c\' | grep -v \'/drivers/\') -n\n./fs/proc/meminfo.c:58: cached = global_node_page_state(NR_FILE_PAGES) -\n./mm/shmem.c:580:               __mod_node_page_state(page_pgdat(page), NR_FILE_PAGES, nr);\n./mm/shmem.c:605:       __dec_node_page_state(page, NR_FILE_PAGES);\n./mm/shmem.c:1500:              __inc_node_page_state(newpage, NR_FILE_PAGES);\n./mm/shmem.c:1501:              __dec_node_page_state(oldpage, NR_FILE_PAGES);\n./mm/migrate.c:504:      * via NR_FILE_PAGES and NR_ANON_MAPPED if they\n./mm/migrate.c:508:             __dec_node_state(oldzone-&gt;zone_pgdat, NR_FILE_PAGES);\n./mm/migrate.c:509:             __inc_node_state(newzone-&gt;zone_pgdat, NR_FILE_PAGES);\n./mm/khugepaged.c:1491:                 __mod_node_page_state(zone-&gt;zone_pgdat, NR_FILE_PAGES, nr_none);\n./mm/filemap.c:291:             __mod_node_page_state(page_pgdat(page), NR_FILE_PAGES, -nr);\n./mm/filemap.c:641:                     __inc_node_page_state(new, NR_FILE_PAGES);\n./mm/filemap.c:694:             __inc_node_page_state(page, NR_FILE_PAGES);\n./mm/page_alloc.c:4426: printk(\"%ld total pagecache pages\\n\", global_node_page_state(NR_FILE_PAGES));\n./mm/util.c:534:                free += global_node_page_state(NR_FILE_PAGES);\n./mm/swap_state.c:100:          __inc_node_page_state(page, NR_FILE_PAGES);\n./mm/swap_state.c:152:  __dec_node_page_state(page, NR_FILE_PAGES);\n./mm/vmscan.c:3691:             nr_pagecache_reclaimable = node_page_state(pgdat, NR_FILE_PAGES);\n./arch/tile/mm/pgtable.c:61:           global_node_page_state(NR_FILE_PAGES),\n./arch/s390/appldata/appldata_mem.c:105:        mem_data-&gt;cached    = P2K(global_node_page_state(NR_FILE_PAGES)\n</code></pre>\n\n看起来共享内存，文件内存映射，swap等有关的功能都会修改NR_FILE_PAGES类型的缓存页面。而swap cache从前面看是被减掉了。所以cached大概主要是统计共享内存和文件内存映射所用到的缓存。\n\n<h2>再来看slabs是怎么统计的。</h2>\n\n隐约记得slab是一种内核内存分配方式。不太懂，以后懂一点再来分析。','/proc/meminfo: Cache vs Buffers','','inherit','closed','closed','','56-revision-v1','','','2017-08-07 19:55:32','2017-08-07 11:55:32','今天被问free命令里显示的cache和buffer两项各自的含义。现在的free哪有两项，早就合并成一项了：\r\n```nohighlight\r\n$ free -h\r\n              total        used        free      shared  buff/cache   available\r\nMem:           1.0G        183M         75M         32M        740M        604M\r\nSwap:          5.0G        103M        4.9G\r\n```\r\n通过man free可以看到cache和buffers的定义：\r\n```nohighlight\r\n$ man free\r\n       buffers\r\n              Memory used by kernel buffers (Buffers in /proc/meminfo)\r\n\r\n       cache  Memory used by the page cache and slabs (Cached and Slab in /proc/meminfo)\r\n\r\n       buff/cache\r\n              Sum of buffers and cache\r\n```\r\n可见不仅有两项，还有三项。\r\n## 首先来看，/proc/meminfo里面的信息是怎么生成的。\r\n```c\r\nfs/proc/meminfo.c\r\nstatic int meminfo_proc_show(struct seq_file *m, void *v)\r\n{\r\n	struct sysinfo i;\r\n	long cached;\r\n\r\n	si_meminfo(&amp;i);\r\n	si_swapinfo(&amp;i);\r\n\r\n	cached = global_node_page_state(NR_FILE_PAGES) -\r\n                        total_swapcache_pages() - i.bufferram;\r\n\r\n	show_val_kb(m, &quot;Buffers:        &quot;, i.bufferram);\r\n	show_val_kb(m, &quot;Cached:         &quot;, cached);\r\n	show_val_kb(m, &quot;Slab:           &quot;,\r\n                    global_page_state(NR_SLAB_RECLAIMABLE) +\r\n                    global_page_state(NR_SLAB_UNRECLAIMABLE));\r\n}\r\n```\r\n可见buffers就是i.bufferram, cached是从所有NR_FILE_PAGES类型的页里面减去swap cache和buffers, 而slabs则是NR_SLAB_RECLAIMABLE类型和NR_SLAB_UNRECLAIMABLE类型的和。\r\n## 再来看看buffers是怎么统计的。\r\n```c\r\nmm/page_alloc.c\r\nvoid si_meminfo(struct sysinfo *val)\r\n{\r\n        val-&gt;totalram = totalram_pages;\r\n        val-&gt;sharedram = global_node_page_state(NR_SHMEM);\r\n        val-&gt;freeram = global_page_state(NR_FREE_PAGES);\r\n        val-&gt;bufferram = nr_blockdev_pages();\r\n        val-&gt;totalhigh = totalhigh_pages;\r\n        val-&gt;freehigh = nr_free_highpages();\r\n        val-&gt;mem_unit = PAGE_SIZE;\r\n}\r\n\r\nfs/block_dev.c\r\nlong nr_blockdev_pages(void)\r\n{\r\n        struct block_device *bdev;\r\n        long ret = 0;\r\n        spin_lock(&amp;bdev_lock);\r\n        list_for_each_entry(bdev, &amp;all_bdevs, bd_list) {\r\n                ret += bdev-&gt;bd_inode-&gt;i_mapping-&gt;nrpages;\r\n        }\r\n        spin_unlock(&amp;bdev_lock);\r\n        return ret;\r\n}\r\n```\r\n这里就很明显可以看出，buffer统计的是块设备的缓存。\r\n## 再来看cached是怎么统计的。\r\n```c\r\ninclude/linux/vmstat.h\r\nstatic inline unsigned long global_node_page_state(enum node_stat_item item)\r\n{\r\n        long x = atomic_long_read(&amp;vm_node_stat[item]);\r\n#ifdef CONFIG_SMP\r\n        if (x &lt; 0)\r\n                x = 0;\r\n#endif\r\n        return x;\r\n}\r\n```\r\n可见这个函数就是取了内核中的一个数组中的一个值，此处是NR_FILE_PAGES。来看看NR_FILE_PAGES有关的代码有哪些。\r\n```grep\r\n$ grep NR_FILE_PAGES $(find . -type f -name &#039;*.c&#039; | grep -v &#039;/drivers/&#039;) -n\r\n./fs/proc/meminfo.c:58: cached = global_node_page_state(NR_FILE_PAGES) -\r\n./mm/shmem.c:580:               __mod_node_page_state(page_pgdat(page), NR_FILE_PAGES, nr);\r\n./mm/shmem.c:605:       __dec_node_page_state(page, NR_FILE_PAGES);\r\n./mm/shmem.c:1500:              __inc_node_page_state(newpage, NR_FILE_PAGES);\r\n./mm/shmem.c:1501:              __dec_node_page_state(oldpage, NR_FILE_PAGES);\r\n./mm/migrate.c:504:      * via NR_FILE_PAGES and NR_ANON_MAPPED if they\r\n./mm/migrate.c:508:             __dec_node_state(oldzone-&gt;zone_pgdat, NR_FILE_PAGES);\r\n./mm/migrate.c:509:             __inc_node_state(newzone-&gt;zone_pgdat, NR_FILE_PAGES);\r\n./mm/khugepaged.c:1491:                 __mod_node_page_state(zone-&gt;zone_pgdat, NR_FILE_PAGES, nr_none);\r\n./mm/filemap.c:291:             __mod_node_page_state(page_pgdat(page), NR_FILE_PAGES, -nr);\r\n./mm/filemap.c:641:                     __inc_node_page_state(new, NR_FILE_PAGES);\r\n./mm/filemap.c:694:             __inc_node_page_state(page, NR_FILE_PAGES);\r\n./mm/page_alloc.c:4426: printk(&quot;%ld total pagecache pages\\n&quot;, global_node_page_state(NR_FILE_PAGES));\r\n./mm/util.c:534:                free += global_node_page_state(NR_FILE_PAGES);\r\n./mm/swap_state.c:100:          __inc_node_page_state(page, NR_FILE_PAGES);\r\n./mm/swap_state.c:152:  __dec_node_page_state(page, NR_FILE_PAGES);\r\n./mm/vmscan.c:3691:             nr_pagecache_reclaimable = node_page_state(pgdat, NR_FILE_PAGES);\r\n./arch/tile/mm/pgtable.c:61:           global_node_page_state(NR_FILE_PAGES),\r\n./arch/s390/appldata/appldata_mem.c:105:        mem_data-&gt;cached    = P2K(global_node_page_state(NR_FILE_PAGES)\r\n```\r\n看起来共享内存，文件内存映射，swap等有关的功能都会修改NR_FILE_PAGES类型的缓存页面。而swap cache从前面看是被减掉了。所以cached大概主要是统计共享内存和文件内存映射所用到的缓存。\r\n## 再来看slabs是怎么统计的。\r\n隐约记得slab是一种内核内存分配方式。不太懂，以后懂一点再来分析。',56,'https://www.allisterke.com/?p=78',0,'revision','',0),(79,1,'2017-08-07 19:58:11','2017-08-07 11:58:11','今天被问free命令里显示的cache和buffer两项各自的含义。现在的free哪有两项，早就合并成一项了：\n\n<pre><code class=\"nohighlight\">$ free -h\n              total        used        free      shared  buff/cache   available\nMem:           1.0G        183M         75M         32M        740M        604M\nSwap:          5.0G        103M        4.9G\n</code></pre>\n\n通过man free可以看到cache和buffers的定义：\n\n<pre><code class=\"nohighlight\">$ man free\n       buffers\n              Memory used by kernel buffers (Buffers in /proc/meminfo)\n\n       cache  Memory used by the page cache and slabs (Cached and Slab in /proc/meminfo)\n\n       buff/cache\n              Sum of buffers and cache\n</code></pre>\n\n可见不仅有两项，还有三项。\n\n<h2>首先来看，/proc/meminfo里面的信息是怎么生成的。</h2>\n\n<pre><code class=\"c\">fs/proc/meminfo.c\nstatic int meminfo_proc_show(struct seq_file *m, void *v)\n{\n    struct sysinfo i;\n    long cached;\n\n    si_meminfo(&amp;i);\n    si_swapinfo(&amp;i);\n\n    cached = global_node_page_state(NR_FILE_PAGES) -\n                        total_swapcache_pages() - i.bufferram;\n\n    show_val_kb(m, \"Buffers:        \", i.bufferram);\n    show_val_kb(m, \"Cached:         \", cached);\n    show_val_kb(m, \"Slab:           \",\n                    global_page_state(NR_SLAB_RECLAIMABLE) +\n                    global_page_state(NR_SLAB_UNRECLAIMABLE));\n}\n</code></pre>\n\n可见buffers就是i.bufferram, cached是从所有NR_FILE_PAGES类型的页里面减去swap cache和buffers, 而slabs则是NR_SLAB_RECLAIMABLE类型和NR_SLAB_UNRECLAIMABLE类型的和。\n\n<h2>再来看看buffers是怎么统计的。</h2>\n\n<pre><code class=\"c\">mm/page_alloc.c\nvoid si_meminfo(struct sysinfo *val)\n{\n        val-&gt;totalram = totalram_pages;\n        val-&gt;sharedram = global_node_page_state(NR_SHMEM);\n        val-&gt;freeram = global_page_state(NR_FREE_PAGES);\n        val-&gt;bufferram = nr_blockdev_pages();\n        val-&gt;totalhigh = totalhigh_pages;\n        val-&gt;freehigh = nr_free_highpages();\n        val-&gt;mem_unit = PAGE_SIZE;\n}\n\nfs/block_dev.c\nlong nr_blockdev_pages(void)\n{\n        struct block_device *bdev;\n        long ret = 0;\n        spin_lock(&amp;bdev_lock);\n        list_for_each_entry(bdev, &amp;all_bdevs, bd_list) {\n                ret += bdev-&gt;bd_inode-&gt;i_mapping-&gt;nrpages;\n        }\n        spin_unlock(&amp;bdev_lock);\n        return ret;\n}\n</code></pre>\n\n这里就很明显可以看出，buffer统计的是块设备的缓存。\n\n<h2>再来看cached是怎么统计的。</h2>\n\n<pre><code class=\"c\">include/linux/vmstat.h\nstatic inline unsigned long global_node_page_state(enum node_stat_item item)\n{\n        long x = atomic_long_read(&amp;vm_node_stat[item]);\n#ifdef CONFIG_SMP\n        if (x &lt; 0)\n                x = 0;\n#endif\n        return x;\n}\n</code></pre>\n\n可见这个函数就是取了内核中的一个数组中的一个值，此处是NR_FILE_PAGES。来看看NR_FILE_PAGES有关的代码有哪些。\n\n<pre><code class=\"bash\">$ grep NR_FILE_PAGES $(find . -type f -name \'*.c\' | grep -v \'/drivers/\') -n\n./fs/proc/meminfo.c:58: cached = global_node_page_state(NR_FILE_PAGES) -\n./mm/shmem.c:580:               __mod_node_page_state(page_pgdat(page), NR_FILE_PAGES, nr);\n./mm/shmem.c:605:       __dec_node_page_state(page, NR_FILE_PAGES);\n./mm/shmem.c:1500:              __inc_node_page_state(newpage, NR_FILE_PAGES);\n./mm/shmem.c:1501:              __dec_node_page_state(oldpage, NR_FILE_PAGES);\n./mm/migrate.c:504:      * via NR_FILE_PAGES and NR_ANON_MAPPED if they\n./mm/migrate.c:508:             __dec_node_state(oldzone-&gt;zone_pgdat, NR_FILE_PAGES);\n./mm/migrate.c:509:             __inc_node_state(newzone-&gt;zone_pgdat, NR_FILE_PAGES);\n./mm/khugepaged.c:1491:                 __mod_node_page_state(zone-&gt;zone_pgdat, NR_FILE_PAGES, nr_none);\n./mm/filemap.c:291:             __mod_node_page_state(page_pgdat(page), NR_FILE_PAGES, -nr);\n./mm/filemap.c:641:                     __inc_node_page_state(new, NR_FILE_PAGES);\n./mm/filemap.c:694:             __inc_node_page_state(page, NR_FILE_PAGES);\n./mm/page_alloc.c:4426: printk(\"%ld total pagecache pages\\n\", global_node_page_state(NR_FILE_PAGES));\n./mm/util.c:534:                free += global_node_page_state(NR_FILE_PAGES);\n./mm/swap_state.c:100:          __inc_node_page_state(page, NR_FILE_PAGES);\n./mm/swap_state.c:152:  __dec_node_page_state(page, NR_FILE_PAGES);\n./mm/vmscan.c:3691:             nr_pagecache_reclaimable = node_page_state(pgdat, NR_FILE_PAGES);\n./arch/tile/mm/pgtable.c:61:           global_node_page_state(NR_FILE_PAGES),\n./arch/s390/appldata/appldata_mem.c:105:        mem_data-&gt;cached    = P2K(global_node_page_state(NR_FILE_PAGES)\n</code></pre>\n\n看起来共享内存，文件内存映射，swap等有关的功能都会修改NR_FILE_PAGES类型的缓存页面。而swap cache从前面看是被减掉了。所以cached大概主要是统计共享内存和文件内存映射所用到的缓存。\n\n<h2>再来看slabs是怎么统计的。</h2>\n\n隐约记得slab是一种内核内存分配方式。不太懂，以后懂一点再来分析。','/proc/meminfo: Cache vs Buffers','','inherit','closed','closed','','56-revision-v1','','','2017-08-07 19:58:11','2017-08-07 11:58:11','今天被问free命令里显示的cache和buffer两项各自的含义。现在的free哪有两项，早就合并成一项了：\r\n```nohighlight\r\n$ free -h\r\n              total        used        free      shared  buff/cache   available\r\nMem:           1.0G        183M         75M         32M        740M        604M\r\nSwap:          5.0G        103M        4.9G\r\n```\r\n通过man free可以看到cache和buffers的定义：\r\n```nohighlight\r\n$ man free\r\n       buffers\r\n              Memory used by kernel buffers (Buffers in /proc/meminfo)\r\n\r\n       cache  Memory used by the page cache and slabs (Cached and Slab in /proc/meminfo)\r\n\r\n       buff/cache\r\n              Sum of buffers and cache\r\n```\r\n可见不仅有两项，还有三项。\r\n## 首先来看，/proc/meminfo里面的信息是怎么生成的。\r\n```c\r\nfs/proc/meminfo.c\r\nstatic int meminfo_proc_show(struct seq_file *m, void *v)\r\n{\r\n	struct sysinfo i;\r\n	long cached;\r\n\r\n	si_meminfo(&amp;i);\r\n	si_swapinfo(&amp;i);\r\n\r\n	cached = global_node_page_state(NR_FILE_PAGES) -\r\n                        total_swapcache_pages() - i.bufferram;\r\n\r\n	show_val_kb(m, &quot;Buffers:        &quot;, i.bufferram);\r\n	show_val_kb(m, &quot;Cached:         &quot;, cached);\r\n	show_val_kb(m, &quot;Slab:           &quot;,\r\n                    global_page_state(NR_SLAB_RECLAIMABLE) +\r\n                    global_page_state(NR_SLAB_UNRECLAIMABLE));\r\n}\r\n```\r\n可见buffers就是i.bufferram, cached是从所有NR_FILE_PAGES类型的页里面减去swap cache和buffers, 而slabs则是NR_SLAB_RECLAIMABLE类型和NR_SLAB_UNRECLAIMABLE类型的和。\r\n## 再来看看buffers是怎么统计的。\r\n```c\r\nmm/page_alloc.c\r\nvoid si_meminfo(struct sysinfo *val)\r\n{\r\n        val-&gt;totalram = totalram_pages;\r\n        val-&gt;sharedram = global_node_page_state(NR_SHMEM);\r\n        val-&gt;freeram = global_page_state(NR_FREE_PAGES);\r\n        val-&gt;bufferram = nr_blockdev_pages();\r\n        val-&gt;totalhigh = totalhigh_pages;\r\n        val-&gt;freehigh = nr_free_highpages();\r\n        val-&gt;mem_unit = PAGE_SIZE;\r\n}\r\n\r\nfs/block_dev.c\r\nlong nr_blockdev_pages(void)\r\n{\r\n        struct block_device *bdev;\r\n        long ret = 0;\r\n        spin_lock(&amp;bdev_lock);\r\n        list_for_each_entry(bdev, &amp;all_bdevs, bd_list) {\r\n                ret += bdev-&gt;bd_inode-&gt;i_mapping-&gt;nrpages;\r\n        }\r\n        spin_unlock(&amp;bdev_lock);\r\n        return ret;\r\n}\r\n```\r\n这里就很明显可以看出，buffer统计的是块设备的缓存。\r\n## 再来看cached是怎么统计的。\r\n```c\r\ninclude/linux/vmstat.h\r\nstatic inline unsigned long global_node_page_state(enum node_stat_item item)\r\n{\r\n        long x = atomic_long_read(&amp;vm_node_stat[item]);\r\n#ifdef CONFIG_SMP\r\n        if (x &lt; 0)\r\n                x = 0;\r\n#endif\r\n        return x;\r\n}\r\n```\r\n可见这个函数就是取了内核中的一个数组中的一个值，此处是NR_FILE_PAGES。来看看NR_FILE_PAGES有关的代码有哪些。\r\n```bash\r\n$ grep NR_FILE_PAGES $(find . -type f -name &#039;*.c&#039; | grep -v &#039;/drivers/&#039;) -n\r\n./fs/proc/meminfo.c:58: cached = global_node_page_state(NR_FILE_PAGES) -\r\n./mm/shmem.c:580:               __mod_node_page_state(page_pgdat(page), NR_FILE_PAGES, nr);\r\n./mm/shmem.c:605:       __dec_node_page_state(page, NR_FILE_PAGES);\r\n./mm/shmem.c:1500:              __inc_node_page_state(newpage, NR_FILE_PAGES);\r\n./mm/shmem.c:1501:              __dec_node_page_state(oldpage, NR_FILE_PAGES);\r\n./mm/migrate.c:504:      * via NR_FILE_PAGES and NR_ANON_MAPPED if they\r\n./mm/migrate.c:508:             __dec_node_state(oldzone-&gt;zone_pgdat, NR_FILE_PAGES);\r\n./mm/migrate.c:509:             __inc_node_state(newzone-&gt;zone_pgdat, NR_FILE_PAGES);\r\n./mm/khugepaged.c:1491:                 __mod_node_page_state(zone-&gt;zone_pgdat, NR_FILE_PAGES, nr_none);\r\n./mm/filemap.c:291:             __mod_node_page_state(page_pgdat(page), NR_FILE_PAGES, -nr);\r\n./mm/filemap.c:641:                     __inc_node_page_state(new, NR_FILE_PAGES);\r\n./mm/filemap.c:694:             __inc_node_page_state(page, NR_FILE_PAGES);\r\n./mm/page_alloc.c:4426: printk(&quot;%ld total pagecache pages\\n&quot;, global_node_page_state(NR_FILE_PAGES));\r\n./mm/util.c:534:                free += global_node_page_state(NR_FILE_PAGES);\r\n./mm/swap_state.c:100:          __inc_node_page_state(page, NR_FILE_PAGES);\r\n./mm/swap_state.c:152:  __dec_node_page_state(page, NR_FILE_PAGES);\r\n./mm/vmscan.c:3691:             nr_pagecache_reclaimable = node_page_state(pgdat, NR_FILE_PAGES);\r\n./arch/tile/mm/pgtable.c:61:           global_node_page_state(NR_FILE_PAGES),\r\n./arch/s390/appldata/appldata_mem.c:105:        mem_data-&gt;cached    = P2K(global_node_page_state(NR_FILE_PAGES)\r\n```\r\n看起来共享内存，文件内存映射，swap等有关的功能都会修改NR_FILE_PAGES类型的缓存页面。而swap cache从前面看是被减掉了。所以cached大概主要是统计共享内存和文件内存映射所用到的缓存。\r\n## 再来看slabs是怎么统计的。\r\n隐约记得slab是一种内核内存分配方式。不太懂，以后懂一点再来分析。',56,'https://www.allisterke.com/?p=79',0,'revision','',0),(80,1,'2017-08-07 19:58:47','2017-08-07 11:58:47','今天被问free命令里显示的cache和buffer两项各自的含义。现在的free哪有两项，早就合并成一项了：\n\n<pre><code class=\"nohighlight\">$ free -h\n              total        used        free      shared  buff/cache   available\nMem:           1.0G        183M         75M         32M        740M        604M\nSwap:          5.0G        103M        4.9G\n</code></pre>\n\n通过man free可以看到cache和buffers的定义：\n\n<pre><code class=\"nohighlight\">$ man free\n       buffers\n              Memory used by kernel buffers (Buffers in /proc/meminfo)\n\n       cache  Memory used by the page cache and slabs (Cached and Slab in /proc/meminfo)\n\n       buff/cache\n              Sum of buffers and cache\n</code></pre>\n\n可见不仅有两项，还有三项。\n\n<h2>首先来看，/proc/meminfo里面的信息是怎么生成的。</h2>\n\n<pre><code class=\"c\">fs/proc/meminfo.c\nstatic int meminfo_proc_show(struct seq_file *m, void *v)\n{\n    struct sysinfo i;\n    long cached;\n\n    si_meminfo(&amp;i);\n    si_swapinfo(&amp;i);\n\n    cached = global_node_page_state(NR_FILE_PAGES) -\n                        total_swapcache_pages() - i.bufferram;\n\n    show_val_kb(m, \"Buffers:        \", i.bufferram);\n    show_val_kb(m, \"Cached:         \", cached);\n    show_val_kb(m, \"Slab:           \",\n                    global_page_state(NR_SLAB_RECLAIMABLE) +\n                    global_page_state(NR_SLAB_UNRECLAIMABLE));\n}\n</code></pre>\n\n可见buffers就是i.bufferram, cached是从所有NR_FILE_PAGES类型的页里面减去swap cache和buffers, 而slabs则是NR_SLAB_RECLAIMABLE类型和NR_SLAB_UNRECLAIMABLE类型的和。\n\n<h2>再来看看buffers是怎么统计的。</h2>\n\n<pre><code class=\"c\">mm/page_alloc.c\nvoid si_meminfo(struct sysinfo *val)\n{\n        val-&gt;totalram = totalram_pages;\n        val-&gt;sharedram = global_node_page_state(NR_SHMEM);\n        val-&gt;freeram = global_page_state(NR_FREE_PAGES);\n        val-&gt;bufferram = nr_blockdev_pages();\n        val-&gt;totalhigh = totalhigh_pages;\n        val-&gt;freehigh = nr_free_highpages();\n        val-&gt;mem_unit = PAGE_SIZE;\n}\n\nfs/block_dev.c\nlong nr_blockdev_pages(void)\n{\n        struct block_device *bdev;\n        long ret = 0;\n        spin_lock(&amp;bdev_lock);\n        list_for_each_entry(bdev, &amp;all_bdevs, bd_list) {\n                ret += bdev-&gt;bd_inode-&gt;i_mapping-&gt;nrpages;\n        }\n        spin_unlock(&amp;bdev_lock);\n        return ret;\n}\n</code></pre>\n\n这里就很明显可以看出，buffer统计的是块设备的缓存。\n\n<h2>再来看cached是怎么统计的。</h2>\n\n<pre><code class=\"c\">include/linux/vmstat.h\nstatic inline unsigned long global_node_page_state(enum node_stat_item item)\n{\n        long x = atomic_long_read(&amp;vm_node_stat[item]);\n#ifdef CONFIG_SMP\n        if (x &lt; 0)\n                x = 0;\n#endif\n        return x;\n}\n</code></pre>\n\n可见这个函数就是取了内核中的一个数组中的一个值，此处是NR_FILE_PAGES。来看看NR_FILE_PAGES有关的代码有哪些。\n\n<pre><code class=\"nohighlight\">$ grep NR_FILE_PAGES $(find . -type f -name \'*.c\' | grep -v \'/drivers/\') -n\n./fs/proc/meminfo.c:58: cached = global_node_page_state(NR_FILE_PAGES) -\n./mm/shmem.c:580:               __mod_node_page_state(page_pgdat(page), NR_FILE_PAGES, nr);\n./mm/shmem.c:605:       __dec_node_page_state(page, NR_FILE_PAGES);\n./mm/shmem.c:1500:              __inc_node_page_state(newpage, NR_FILE_PAGES);\n./mm/shmem.c:1501:              __dec_node_page_state(oldpage, NR_FILE_PAGES);\n./mm/migrate.c:504:      * via NR_FILE_PAGES and NR_ANON_MAPPED if they\n./mm/migrate.c:508:             __dec_node_state(oldzone-&gt;zone_pgdat, NR_FILE_PAGES);\n./mm/migrate.c:509:             __inc_node_state(newzone-&gt;zone_pgdat, NR_FILE_PAGES);\n./mm/khugepaged.c:1491:                 __mod_node_page_state(zone-&gt;zone_pgdat, NR_FILE_PAGES, nr_none);\n./mm/filemap.c:291:             __mod_node_page_state(page_pgdat(page), NR_FILE_PAGES, -nr);\n./mm/filemap.c:641:                     __inc_node_page_state(new, NR_FILE_PAGES);\n./mm/filemap.c:694:             __inc_node_page_state(page, NR_FILE_PAGES);\n./mm/page_alloc.c:4426: printk(\"%ld total pagecache pages\\n\", global_node_page_state(NR_FILE_PAGES));\n./mm/util.c:534:                free += global_node_page_state(NR_FILE_PAGES);\n./mm/swap_state.c:100:          __inc_node_page_state(page, NR_FILE_PAGES);\n./mm/swap_state.c:152:  __dec_node_page_state(page, NR_FILE_PAGES);\n./mm/vmscan.c:3691:             nr_pagecache_reclaimable = node_page_state(pgdat, NR_FILE_PAGES);\n./arch/tile/mm/pgtable.c:61:           global_node_page_state(NR_FILE_PAGES),\n./arch/s390/appldata/appldata_mem.c:105:        mem_data-&gt;cached    = P2K(global_node_page_state(NR_FILE_PAGES)\n</code></pre>\n\n看起来共享内存，文件内存映射，swap等有关的功能都会修改NR_FILE_PAGES类型的缓存页面。而swap cache从前面看是被减掉了。所以cached大概主要是统计共享内存和文件内存映射所用到的缓存。\n\n<h2>再来看slabs是怎么统计的。</h2>\n\n隐约记得slab是一种内核内存分配方式。不太懂，以后懂一点再来分析。','/proc/meminfo: Cache vs Buffers','','inherit','closed','closed','','56-revision-v1','','','2017-08-07 19:58:47','2017-08-07 11:58:47','今天被问free命令里显示的cache和buffer两项各自的含义。现在的free哪有两项，早就合并成一项了：\r\n```nohighlight\r\n$ free -h\r\n              total        used        free      shared  buff/cache   available\r\nMem:           1.0G        183M         75M         32M        740M        604M\r\nSwap:          5.0G        103M        4.9G\r\n```\r\n通过man free可以看到cache和buffers的定义：\r\n```nohighlight\r\n$ man free\r\n       buffers\r\n              Memory used by kernel buffers (Buffers in /proc/meminfo)\r\n\r\n       cache  Memory used by the page cache and slabs (Cached and Slab in /proc/meminfo)\r\n\r\n       buff/cache\r\n              Sum of buffers and cache\r\n```\r\n可见不仅有两项，还有三项。\r\n## 首先来看，/proc/meminfo里面的信息是怎么生成的。\r\n```c\r\nfs/proc/meminfo.c\r\nstatic int meminfo_proc_show(struct seq_file *m, void *v)\r\n{\r\n	struct sysinfo i;\r\n	long cached;\r\n\r\n	si_meminfo(&amp;i);\r\n	si_swapinfo(&amp;i);\r\n\r\n	cached = global_node_page_state(NR_FILE_PAGES) -\r\n                        total_swapcache_pages() - i.bufferram;\r\n\r\n	show_val_kb(m, &quot;Buffers:        &quot;, i.bufferram);\r\n	show_val_kb(m, &quot;Cached:         &quot;, cached);\r\n	show_val_kb(m, &quot;Slab:           &quot;,\r\n                    global_page_state(NR_SLAB_RECLAIMABLE) +\r\n                    global_page_state(NR_SLAB_UNRECLAIMABLE));\r\n}\r\n```\r\n可见buffers就是i.bufferram, cached是从所有NR_FILE_PAGES类型的页里面减去swap cache和buffers, 而slabs则是NR_SLAB_RECLAIMABLE类型和NR_SLAB_UNRECLAIMABLE类型的和。\r\n## 再来看看buffers是怎么统计的。\r\n```c\r\nmm/page_alloc.c\r\nvoid si_meminfo(struct sysinfo *val)\r\n{\r\n        val-&gt;totalram = totalram_pages;\r\n        val-&gt;sharedram = global_node_page_state(NR_SHMEM);\r\n        val-&gt;freeram = global_page_state(NR_FREE_PAGES);\r\n        val-&gt;bufferram = nr_blockdev_pages();\r\n        val-&gt;totalhigh = totalhigh_pages;\r\n        val-&gt;freehigh = nr_free_highpages();\r\n        val-&gt;mem_unit = PAGE_SIZE;\r\n}\r\n\r\nfs/block_dev.c\r\nlong nr_blockdev_pages(void)\r\n{\r\n        struct block_device *bdev;\r\n        long ret = 0;\r\n        spin_lock(&amp;bdev_lock);\r\n        list_for_each_entry(bdev, &amp;all_bdevs, bd_list) {\r\n                ret += bdev-&gt;bd_inode-&gt;i_mapping-&gt;nrpages;\r\n        }\r\n        spin_unlock(&amp;bdev_lock);\r\n        return ret;\r\n}\r\n```\r\n这里就很明显可以看出，buffer统计的是块设备的缓存。\r\n## 再来看cached是怎么统计的。\r\n```c\r\ninclude/linux/vmstat.h\r\nstatic inline unsigned long global_node_page_state(enum node_stat_item item)\r\n{\r\n        long x = atomic_long_read(&amp;vm_node_stat[item]);\r\n#ifdef CONFIG_SMP\r\n        if (x &lt; 0)\r\n                x = 0;\r\n#endif\r\n        return x;\r\n}\r\n```\r\n可见这个函数就是取了内核中的一个数组中的一个值，此处是NR_FILE_PAGES。来看看NR_FILE_PAGES有关的代码有哪些。\r\n```nohighlight\r\n$ grep NR_FILE_PAGES $(find . -type f -name &#039;*.c&#039; | grep -v &#039;/drivers/&#039;) -n\r\n./fs/proc/meminfo.c:58: cached = global_node_page_state(NR_FILE_PAGES) -\r\n./mm/shmem.c:580:               __mod_node_page_state(page_pgdat(page), NR_FILE_PAGES, nr);\r\n./mm/shmem.c:605:       __dec_node_page_state(page, NR_FILE_PAGES);\r\n./mm/shmem.c:1500:              __inc_node_page_state(newpage, NR_FILE_PAGES);\r\n./mm/shmem.c:1501:              __dec_node_page_state(oldpage, NR_FILE_PAGES);\r\n./mm/migrate.c:504:      * via NR_FILE_PAGES and NR_ANON_MAPPED if they\r\n./mm/migrate.c:508:             __dec_node_state(oldzone-&gt;zone_pgdat, NR_FILE_PAGES);\r\n./mm/migrate.c:509:             __inc_node_state(newzone-&gt;zone_pgdat, NR_FILE_PAGES);\r\n./mm/khugepaged.c:1491:                 __mod_node_page_state(zone-&gt;zone_pgdat, NR_FILE_PAGES, nr_none);\r\n./mm/filemap.c:291:             __mod_node_page_state(page_pgdat(page), NR_FILE_PAGES, -nr);\r\n./mm/filemap.c:641:                     __inc_node_page_state(new, NR_FILE_PAGES);\r\n./mm/filemap.c:694:             __inc_node_page_state(page, NR_FILE_PAGES);\r\n./mm/page_alloc.c:4426: printk(&quot;%ld total pagecache pages\\n&quot;, global_node_page_state(NR_FILE_PAGES));\r\n./mm/util.c:534:                free += global_node_page_state(NR_FILE_PAGES);\r\n./mm/swap_state.c:100:          __inc_node_page_state(page, NR_FILE_PAGES);\r\n./mm/swap_state.c:152:  __dec_node_page_state(page, NR_FILE_PAGES);\r\n./mm/vmscan.c:3691:             nr_pagecache_reclaimable = node_page_state(pgdat, NR_FILE_PAGES);\r\n./arch/tile/mm/pgtable.c:61:           global_node_page_state(NR_FILE_PAGES),\r\n./arch/s390/appldata/appldata_mem.c:105:        mem_data-&gt;cached    = P2K(global_node_page_state(NR_FILE_PAGES)\r\n```\r\n看起来共享内存，文件内存映射，swap等有关的功能都会修改NR_FILE_PAGES类型的缓存页面。而swap cache从前面看是被减掉了。所以cached大概主要是统计共享内存和文件内存映射所用到的缓存。\r\n## 再来看slabs是怎么统计的。\r\n隐约记得slab是一种内核内存分配方式。不太懂，以后懂一点再来分析。',56,'https://www.allisterke.com/?p=80',0,'revision','',0),(82,1,'2017-08-07 20:26:44','2017-08-07 12:26:44','今天被问free命令里显示的cache和buffer两项各自的含义。现在的free哪有两项，早就合并成一项了：\n\n<pre><code class=\"nohighlight\">$ free -h\n              total        used        free      shared  buff/cache   available\nMem:           1.0G        183M         75M         32M        740M        604M\nSwap:          5.0G        103M        4.9G\n</code></pre>\n\n通过man free可以看到cache和buffers的定义：\n\n<pre><code class=\"nohighlight\">$ man free\n       buffers\n              Memory used by kernel buffers (Buffers in /proc/meminfo)\n\n       cache  Memory used by the page cache and slabs (Cached and Slab in /proc/meminfo)\n\n       buff/cache\n              Sum of buffers and cache\n</code></pre>\n\n可见不仅有两项，还有三项。试着用linux-4.9来 分析一下\n\n<h2>首先来看，/proc/meminfo里面的信息是怎么生成的。</h2>\n\n<pre><code class=\"c\">fs/proc/meminfo.c\nstatic int meminfo_proc_show(struct seq_file *m, void *v)\n{\n    struct sysinfo i;\n    long cached;\n\n    si_meminfo(&amp;i);\n    si_swapinfo(&amp;i);\n\n    cached = global_node_page_state(NR_FILE_PAGES) -\n                        total_swapcache_pages() - i.bufferram;\n\n    show_val_kb(m, \"Buffers:        \", i.bufferram);\n    show_val_kb(m, \"Cached:         \", cached);\n    show_val_kb(m, \"Slab:           \",\n                    global_page_state(NR_SLAB_RECLAIMABLE) +\n                    global_page_state(NR_SLAB_UNRECLAIMABLE));\n}\n</code></pre>\n\n可见buffers就是i.bufferram, cached是从所有NR_FILE_PAGES类型的页里面减去swap cache和buffers, 而slabs则是NR_SLAB_RECLAIMABLE类型和NR_SLAB_UNRECLAIMABLE类型的和。\n\n<h2>再来看看buffers是怎么统计的。</h2>\n\n<pre><code class=\"c\">mm/page_alloc.c\nvoid si_meminfo(struct sysinfo *val)\n{\n        val-&gt;totalram = totalram_pages;\n        val-&gt;sharedram = global_node_page_state(NR_SHMEM);\n        val-&gt;freeram = global_page_state(NR_FREE_PAGES);\n        val-&gt;bufferram = nr_blockdev_pages();\n        val-&gt;totalhigh = totalhigh_pages;\n        val-&gt;freehigh = nr_free_highpages();\n        val-&gt;mem_unit = PAGE_SIZE;\n}\n\nfs/block_dev.c\nlong nr_blockdev_pages(void)\n{\n        struct block_device *bdev;\n        long ret = 0;\n        spin_lock(&amp;bdev_lock);\n        list_for_each_entry(bdev, &amp;all_bdevs, bd_list) {\n                ret += bdev-&gt;bd_inode-&gt;i_mapping-&gt;nrpages;\n        }\n        spin_unlock(&amp;bdev_lock);\n        return ret;\n}\n</code></pre>\n\n这里就很明显可以看出，buffer统计的是块设备的缓存。\n\n<h2>再来看cached是怎么统计的。</h2>\n\n<pre><code class=\"c\">include/linux/vmstat.h\nstatic inline unsigned long global_node_page_state(enum node_stat_item item)\n{\n        long x = atomic_long_read(&amp;vm_node_stat[item]);\n#ifdef CONFIG_SMP\n        if (x &lt; 0)\n                x = 0;\n#endif\n        return x;\n}\n</code></pre>\n\n可见这个函数就是取了内核中的一个数组中的一个值，此处是NR_FILE_PAGES。来看看NR_FILE_PAGES有关的代码有哪些。\n\n<pre><code class=\"nohighlight\">$ grep NR_FILE_PAGES $(find . -type f -name \'*.c\' | grep -v \'/drivers/\') -n\n./fs/proc/meminfo.c:58: cached = global_node_page_state(NR_FILE_PAGES) -\n./mm/shmem.c:580:               __mod_node_page_state(page_pgdat(page), NR_FILE_PAGES, nr);\n./mm/shmem.c:605:       __dec_node_page_state(page, NR_FILE_PAGES);\n./mm/shmem.c:1500:              __inc_node_page_state(newpage, NR_FILE_PAGES);\n./mm/shmem.c:1501:              __dec_node_page_state(oldpage, NR_FILE_PAGES);\n./mm/migrate.c:504:      * via NR_FILE_PAGES and NR_ANON_MAPPED if they\n./mm/migrate.c:508:             __dec_node_state(oldzone-&gt;zone_pgdat, NR_FILE_PAGES);\n./mm/migrate.c:509:             __inc_node_state(newzone-&gt;zone_pgdat, NR_FILE_PAGES);\n./mm/khugepaged.c:1491:                 __mod_node_page_state(zone-&gt;zone_pgdat, NR_FILE_PAGES, nr_none);\n./mm/filemap.c:291:             __mod_node_page_state(page_pgdat(page), NR_FILE_PAGES, -nr);\n./mm/filemap.c:641:                     __inc_node_page_state(new, NR_FILE_PAGES);\n./mm/filemap.c:694:             __inc_node_page_state(page, NR_FILE_PAGES);\n./mm/page_alloc.c:4426: printk(\"%ld total pagecache pages\\n\", global_node_page_state(NR_FILE_PAGES));\n./mm/util.c:534:                free += global_node_page_state(NR_FILE_PAGES);\n./mm/swap_state.c:100:          __inc_node_page_state(page, NR_FILE_PAGES);\n./mm/swap_state.c:152:  __dec_node_page_state(page, NR_FILE_PAGES);\n./mm/vmscan.c:3691:             nr_pagecache_reclaimable = node_page_state(pgdat, NR_FILE_PAGES);\n./arch/tile/mm/pgtable.c:61:           global_node_page_state(NR_FILE_PAGES),\n./arch/s390/appldata/appldata_mem.c:105:        mem_data-&gt;cached    = P2K(global_node_page_state(NR_FILE_PAGES)\n</code></pre>\n\n看起来共享内存，文件内存映射，swap等有关的功能都会修改NR_FILE_PAGES类型的缓存页面。而swap cache从前面看是被减掉了。所以cached大概主要是统计共享内存和文件内存映射所用到的缓存。\n\n<h2>再来看slabs是怎么统计的。</h2>\n\n隐约记得slab是一种内核内存分配方式。不太懂，以后懂一点再来分析。','/proc/meminfo: Cache vs Buffers','','inherit','closed','closed','','56-autosave-v1','','','2017-08-07 20:26:44','2017-08-07 12:26:44','今天被问free命令里显示的cache和buffer两项各自的含义。现在的free哪有两项，早就合并成一项了：\n```nohighlight\n$ free -h\n              total        used        free      shared  buff/cache   available\nMem:           1.0G        183M         75M         32M        740M        604M\nSwap:          5.0G        103M        4.9G\n```\n通过man free可以看到cache和buffers的定义：\n```nohighlight\n$ man free\n       buffers\n              Memory used by kernel buffers (Buffers in /proc/meminfo)\n\n       cache  Memory used by the page cache and slabs (Cached and Slab in /proc/meminfo)\n\n       buff/cache\n              Sum of buffers and cache\n```\n可见不仅有两项，还有三项。试着用linux-4.9来 分析一下\n## 首先来看，/proc/meminfo里面的信息是怎么生成的。\n```c\nfs/proc/meminfo.c\nstatic int meminfo_proc_show(struct seq_file *m, void *v)\n{\n	struct sysinfo i;\n	long cached;\n\n	si_meminfo(&amp;i);\n	si_swapinfo(&amp;i);\n\n	cached = global_node_page_state(NR_FILE_PAGES) -\n                        total_swapcache_pages() - i.bufferram;\n\n	show_val_kb(m, &quot;Buffers:        &quot;, i.bufferram);\n	show_val_kb(m, &quot;Cached:         &quot;, cached);\n	show_val_kb(m, &quot;Slab:           &quot;,\n                    global_page_state(NR_SLAB_RECLAIMABLE) +\n                    global_page_state(NR_SLAB_UNRECLAIMABLE));\n}\n```\n可见buffers就是i.bufferram, cached是从所有NR_FILE_PAGES类型的页里面减去swap cache和buffers, 而slabs则是NR_SLAB_RECLAIMABLE类型和NR_SLAB_UNRECLAIMABLE类型的和。\n## 再来看看buffers是怎么统计的。\n```c\nmm/page_alloc.c\nvoid si_meminfo(struct sysinfo *val)\n{\n        val-&gt;totalram = totalram_pages;\n        val-&gt;sharedram = global_node_page_state(NR_SHMEM);\n        val-&gt;freeram = global_page_state(NR_FREE_PAGES);\n        val-&gt;bufferram = nr_blockdev_pages();\n        val-&gt;totalhigh = totalhigh_pages;\n        val-&gt;freehigh = nr_free_highpages();\n        val-&gt;mem_unit = PAGE_SIZE;\n}\n\nfs/block_dev.c\nlong nr_blockdev_pages(void)\n{\n        struct block_device *bdev;\n        long ret = 0;\n        spin_lock(&amp;bdev_lock);\n        list_for_each_entry(bdev, &amp;all_bdevs, bd_list) {\n                ret += bdev-&gt;bd_inode-&gt;i_mapping-&gt;nrpages;\n        }\n        spin_unlock(&amp;bdev_lock);\n        return ret;\n}\n```\n这里就很明显可以看出，buffer统计的是块设备的缓存。\n## 再来看cached是怎么统计的。\n```c\ninclude/linux/vmstat.h\nstatic inline unsigned long global_node_page_state(enum node_stat_item item)\n{\n        long x = atomic_long_read(&amp;vm_node_stat[item]);\n#ifdef CONFIG_SMP\n        if (x &lt; 0)\n                x = 0;\n#endif\n        return x;\n}\n```\n可见这个函数就是取了内核中的一个数组中的一个值，此处是NR_FILE_PAGES。来看看NR_FILE_PAGES有关的代码有哪些。\n```nohighlight\n$ grep NR_FILE_PAGES $(find . -type f -name &#039;*.c&#039; | grep -v &#039;/drivers/&#039;) -n\n./fs/proc/meminfo.c:58: cached = global_node_page_state(NR_FILE_PAGES) -\n./mm/shmem.c:580:               __mod_node_page_state(page_pgdat(page), NR_FILE_PAGES, nr);\n./mm/shmem.c:605:       __dec_node_page_state(page, NR_FILE_PAGES);\n./mm/shmem.c:1500:              __inc_node_page_state(newpage, NR_FILE_PAGES);\n./mm/shmem.c:1501:              __dec_node_page_state(oldpage, NR_FILE_PAGES);\n./mm/migrate.c:504:      * via NR_FILE_PAGES and NR_ANON_MAPPED if they\n./mm/migrate.c:508:             __dec_node_state(oldzone-&gt;zone_pgdat, NR_FILE_PAGES);\n./mm/migrate.c:509:             __inc_node_state(newzone-&gt;zone_pgdat, NR_FILE_PAGES);\n./mm/khugepaged.c:1491:                 __mod_node_page_state(zone-&gt;zone_pgdat, NR_FILE_PAGES, nr_none);\n./mm/filemap.c:291:             __mod_node_page_state(page_pgdat(page), NR_FILE_PAGES, -nr);\n./mm/filemap.c:641:                     __inc_node_page_state(new, NR_FILE_PAGES);\n./mm/filemap.c:694:             __inc_node_page_state(page, NR_FILE_PAGES);\n./mm/page_alloc.c:4426: printk(&quot;%ld total pagecache pages\\n&quot;, global_node_page_state(NR_FILE_PAGES));\n./mm/util.c:534:                free += global_node_page_state(NR_FILE_PAGES);\n./mm/swap_state.c:100:          __inc_node_page_state(page, NR_FILE_PAGES);\n./mm/swap_state.c:152:  __dec_node_page_state(page, NR_FILE_PAGES);\n./mm/vmscan.c:3691:             nr_pagecache_reclaimable = node_page_state(pgdat, NR_FILE_PAGES);\n./arch/tile/mm/pgtable.c:61:           global_node_page_state(NR_FILE_PAGES),\n./arch/s390/appldata/appldata_mem.c:105:        mem_data-&gt;cached    = P2K(global_node_page_state(NR_FILE_PAGES)\n```\n看起来共享内存，文件内存映射，swap等有关的功能都会修改NR_FILE_PAGES类型的缓存页面。而swap cache从前面看是被减掉了。所以cached大概主要是统计共享内存和文件内存映射所用到的缓存。\n## 再来看slabs是怎么统计的。\n隐约记得slab是一种内核内存分配方式。不太懂，以后懂一点再来分析。',56,'https://www.allisterke.com/?p=82',0,'revision','',0),(83,1,'2017-08-07 20:27:10','2017-08-07 12:27:10','今天被问free命令里显示的cache和buffer两项各自的含义。现在的free哪有两项，早就合并成一项了：\n\n<pre><code class=\"nohighlight\">$ free -h\n              total        used        free      shared  buff/cache   available\nMem:           1.0G        183M         75M         32M        740M        604M\nSwap:          5.0G        103M        4.9G\n</code></pre>\n\n通过man free可以看到cache和buffers的定义：\n\n<pre><code class=\"nohighlight\">$ man free\n       buffers\n              Memory used by kernel buffers (Buffers in /proc/meminfo)\n\n       cache  Memory used by the page cache and slabs (Cached and Slab in /proc/meminfo)\n\n       buff/cache\n              Sum of buffers and cache\n</code></pre>\n\n可见不仅有两项，还有三项。试着用linux-4.9来求是一下。\n\n<h2>首先来看，/proc/meminfo里面的信息是怎么生成的。</h2>\n\n<pre><code class=\"c\">fs/proc/meminfo.c\nstatic int meminfo_proc_show(struct seq_file *m, void *v)\n{\n    struct sysinfo i;\n    long cached;\n\n    si_meminfo(&amp;i);\n    si_swapinfo(&amp;i);\n\n    cached = global_node_page_state(NR_FILE_PAGES) -\n                        total_swapcache_pages() - i.bufferram;\n\n    show_val_kb(m, \"Buffers:        \", i.bufferram);\n    show_val_kb(m, \"Cached:         \", cached);\n    show_val_kb(m, \"Slab:           \",\n                    global_page_state(NR_SLAB_RECLAIMABLE) +\n                    global_page_state(NR_SLAB_UNRECLAIMABLE));\n}\n</code></pre>\n\n可见buffers就是i.bufferram, cached是从所有NR_FILE_PAGES类型的页里面减去swap cache和buffers, 而slabs则是NR_SLAB_RECLAIMABLE类型和NR_SLAB_UNRECLAIMABLE类型的和。\n\n<h2>再来看看buffers是怎么统计的。</h2>\n\n<pre><code class=\"c\">mm/page_alloc.c\nvoid si_meminfo(struct sysinfo *val)\n{\n        val-&gt;totalram = totalram_pages;\n        val-&gt;sharedram = global_node_page_state(NR_SHMEM);\n        val-&gt;freeram = global_page_state(NR_FREE_PAGES);\n        val-&gt;bufferram = nr_blockdev_pages();\n        val-&gt;totalhigh = totalhigh_pages;\n        val-&gt;freehigh = nr_free_highpages();\n        val-&gt;mem_unit = PAGE_SIZE;\n}\n\nfs/block_dev.c\nlong nr_blockdev_pages(void)\n{\n        struct block_device *bdev;\n        long ret = 0;\n        spin_lock(&amp;bdev_lock);\n        list_for_each_entry(bdev, &amp;all_bdevs, bd_list) {\n                ret += bdev-&gt;bd_inode-&gt;i_mapping-&gt;nrpages;\n        }\n        spin_unlock(&amp;bdev_lock);\n        return ret;\n}\n</code></pre>\n\n这里就很明显可以看出，buffer统计的是块设备的缓存。\n\n<h2>再来看cached是怎么统计的。</h2>\n\n<pre><code class=\"c\">include/linux/vmstat.h\nstatic inline unsigned long global_node_page_state(enum node_stat_item item)\n{\n        long x = atomic_long_read(&amp;vm_node_stat[item]);\n#ifdef CONFIG_SMP\n        if (x &lt; 0)\n                x = 0;\n#endif\n        return x;\n}\n</code></pre>\n\n可见这个函数就是取了内核中的一个数组中的一个值，此处是NR_FILE_PAGES。来看看NR_FILE_PAGES有关的代码有哪些。\n\n<pre><code class=\"nohighlight\">$ grep NR_FILE_PAGES $(find . -type f -name \'*.c\' | grep -v \'/drivers/\') -n\n./fs/proc/meminfo.c:58: cached = global_node_page_state(NR_FILE_PAGES) -\n./mm/shmem.c:580:               __mod_node_page_state(page_pgdat(page), NR_FILE_PAGES, nr);\n./mm/shmem.c:605:       __dec_node_page_state(page, NR_FILE_PAGES);\n./mm/shmem.c:1500:              __inc_node_page_state(newpage, NR_FILE_PAGES);\n./mm/shmem.c:1501:              __dec_node_page_state(oldpage, NR_FILE_PAGES);\n./mm/migrate.c:504:      * via NR_FILE_PAGES and NR_ANON_MAPPED if they\n./mm/migrate.c:508:             __dec_node_state(oldzone-&gt;zone_pgdat, NR_FILE_PAGES);\n./mm/migrate.c:509:             __inc_node_state(newzone-&gt;zone_pgdat, NR_FILE_PAGES);\n./mm/khugepaged.c:1491:                 __mod_node_page_state(zone-&gt;zone_pgdat, NR_FILE_PAGES, nr_none);\n./mm/filemap.c:291:             __mod_node_page_state(page_pgdat(page), NR_FILE_PAGES, -nr);\n./mm/filemap.c:641:                     __inc_node_page_state(new, NR_FILE_PAGES);\n./mm/filemap.c:694:             __inc_node_page_state(page, NR_FILE_PAGES);\n./mm/page_alloc.c:4426: printk(\"%ld total pagecache pages\\n\", global_node_page_state(NR_FILE_PAGES));\n./mm/util.c:534:                free += global_node_page_state(NR_FILE_PAGES);\n./mm/swap_state.c:100:          __inc_node_page_state(page, NR_FILE_PAGES);\n./mm/swap_state.c:152:  __dec_node_page_state(page, NR_FILE_PAGES);\n./mm/vmscan.c:3691:             nr_pagecache_reclaimable = node_page_state(pgdat, NR_FILE_PAGES);\n./arch/tile/mm/pgtable.c:61:           global_node_page_state(NR_FILE_PAGES),\n./arch/s390/appldata/appldata_mem.c:105:        mem_data-&gt;cached    = P2K(global_node_page_state(NR_FILE_PAGES)\n</code></pre>\n\n看起来共享内存，文件内存映射，swap等有关的功能都会修改NR_FILE_PAGES类型的缓存页面。而swap cache从前面看是被减掉了。所以cached大概主要是统计共享内存和文件内存映射所用到的缓存。\n\n<h2>再来看slabs是怎么统计的。</h2>\n\n隐约记得slab是一种内核内存分配方式。不太懂，以后懂一点再来分析。','/proc/meminfo: Cache vs Buffers','','inherit','closed','closed','','56-revision-v1','','','2017-08-07 20:27:10','2017-08-07 12:27:10','今天被问free命令里显示的cache和buffer两项各自的含义。现在的free哪有两项，早就合并成一项了：\r\n```nohighlight\r\n$ free -h\r\n              total        used        free      shared  buff/cache   available\r\nMem:           1.0G        183M         75M         32M        740M        604M\r\nSwap:          5.0G        103M        4.9G\r\n```\r\n通过man free可以看到cache和buffers的定义：\r\n```nohighlight\r\n$ man free\r\n       buffers\r\n              Memory used by kernel buffers (Buffers in /proc/meminfo)\r\n\r\n       cache  Memory used by the page cache and slabs (Cached and Slab in /proc/meminfo)\r\n\r\n       buff/cache\r\n              Sum of buffers and cache\r\n```\r\n可见不仅有两项，还有三项。试着用linux-4.9来求是一下。\r\n## 首先来看，/proc/meminfo里面的信息是怎么生成的。\r\n```c\r\nfs/proc/meminfo.c\r\nstatic int meminfo_proc_show(struct seq_file *m, void *v)\r\n{\r\n	struct sysinfo i;\r\n	long cached;\r\n\r\n	si_meminfo(&amp;i);\r\n	si_swapinfo(&amp;i);\r\n\r\n	cached = global_node_page_state(NR_FILE_PAGES) -\r\n                        total_swapcache_pages() - i.bufferram;\r\n\r\n	show_val_kb(m, &quot;Buffers:        &quot;, i.bufferram);\r\n	show_val_kb(m, &quot;Cached:         &quot;, cached);\r\n	show_val_kb(m, &quot;Slab:           &quot;,\r\n                    global_page_state(NR_SLAB_RECLAIMABLE) +\r\n                    global_page_state(NR_SLAB_UNRECLAIMABLE));\r\n}\r\n```\r\n可见buffers就是i.bufferram, cached是从所有NR_FILE_PAGES类型的页里面减去swap cache和buffers, 而slabs则是NR_SLAB_RECLAIMABLE类型和NR_SLAB_UNRECLAIMABLE类型的和。\r\n## 再来看看buffers是怎么统计的。\r\n```c\r\nmm/page_alloc.c\r\nvoid si_meminfo(struct sysinfo *val)\r\n{\r\n        val-&gt;totalram = totalram_pages;\r\n        val-&gt;sharedram = global_node_page_state(NR_SHMEM);\r\n        val-&gt;freeram = global_page_state(NR_FREE_PAGES);\r\n        val-&gt;bufferram = nr_blockdev_pages();\r\n        val-&gt;totalhigh = totalhigh_pages;\r\n        val-&gt;freehigh = nr_free_highpages();\r\n        val-&gt;mem_unit = PAGE_SIZE;\r\n}\r\n\r\nfs/block_dev.c\r\nlong nr_blockdev_pages(void)\r\n{\r\n        struct block_device *bdev;\r\n        long ret = 0;\r\n        spin_lock(&amp;bdev_lock);\r\n        list_for_each_entry(bdev, &amp;all_bdevs, bd_list) {\r\n                ret += bdev-&gt;bd_inode-&gt;i_mapping-&gt;nrpages;\r\n        }\r\n        spin_unlock(&amp;bdev_lock);\r\n        return ret;\r\n}\r\n```\r\n这里就很明显可以看出，buffer统计的是块设备的缓存。\r\n## 再来看cached是怎么统计的。\r\n```c\r\ninclude/linux/vmstat.h\r\nstatic inline unsigned long global_node_page_state(enum node_stat_item item)\r\n{\r\n        long x = atomic_long_read(&amp;vm_node_stat[item]);\r\n#ifdef CONFIG_SMP\r\n        if (x &lt; 0)\r\n                x = 0;\r\n#endif\r\n        return x;\r\n}\r\n```\r\n可见这个函数就是取了内核中的一个数组中的一个值，此处是NR_FILE_PAGES。来看看NR_FILE_PAGES有关的代码有哪些。\r\n```nohighlight\r\n$ grep NR_FILE_PAGES $(find . -type f -name &#039;*.c&#039; | grep -v &#039;/drivers/&#039;) -n\r\n./fs/proc/meminfo.c:58: cached = global_node_page_state(NR_FILE_PAGES) -\r\n./mm/shmem.c:580:               __mod_node_page_state(page_pgdat(page), NR_FILE_PAGES, nr);\r\n./mm/shmem.c:605:       __dec_node_page_state(page, NR_FILE_PAGES);\r\n./mm/shmem.c:1500:              __inc_node_page_state(newpage, NR_FILE_PAGES);\r\n./mm/shmem.c:1501:              __dec_node_page_state(oldpage, NR_FILE_PAGES);\r\n./mm/migrate.c:504:      * via NR_FILE_PAGES and NR_ANON_MAPPED if they\r\n./mm/migrate.c:508:             __dec_node_state(oldzone-&gt;zone_pgdat, NR_FILE_PAGES);\r\n./mm/migrate.c:509:             __inc_node_state(newzone-&gt;zone_pgdat, NR_FILE_PAGES);\r\n./mm/khugepaged.c:1491:                 __mod_node_page_state(zone-&gt;zone_pgdat, NR_FILE_PAGES, nr_none);\r\n./mm/filemap.c:291:             __mod_node_page_state(page_pgdat(page), NR_FILE_PAGES, -nr);\r\n./mm/filemap.c:641:                     __inc_node_page_state(new, NR_FILE_PAGES);\r\n./mm/filemap.c:694:             __inc_node_page_state(page, NR_FILE_PAGES);\r\n./mm/page_alloc.c:4426: printk(&quot;%ld total pagecache pages\\n&quot;, global_node_page_state(NR_FILE_PAGES));\r\n./mm/util.c:534:                free += global_node_page_state(NR_FILE_PAGES);\r\n./mm/swap_state.c:100:          __inc_node_page_state(page, NR_FILE_PAGES);\r\n./mm/swap_state.c:152:  __dec_node_page_state(page, NR_FILE_PAGES);\r\n./mm/vmscan.c:3691:             nr_pagecache_reclaimable = node_page_state(pgdat, NR_FILE_PAGES);\r\n./arch/tile/mm/pgtable.c:61:           global_node_page_state(NR_FILE_PAGES),\r\n./arch/s390/appldata/appldata_mem.c:105:        mem_data-&gt;cached    = P2K(global_node_page_state(NR_FILE_PAGES)\r\n```\r\n看起来共享内存，文件内存映射，swap等有关的功能都会修改NR_FILE_PAGES类型的缓存页面。而swap cache从前面看是被减掉了。所以cached大概主要是统计共享内存和文件内存映射所用到的缓存。\r\n## 再来看slabs是怎么统计的。\r\n隐约记得slab是一种内核内存分配方式。不太懂，以后懂一点再来分析。',56,'https://www.allisterke.com/?p=83',0,'revision','',0),(86,1,'2017-08-09 01:16:40','2017-08-08 17:16:40','java -X可以列出-X选项，但-XX选项好像并没有直接的方法可以列出。从源码里则可以得到。用hg下载源码后grep一下便可得到所有的-X和-XX选项了。\n\n<h2>一部分是单独列出来的</h2>\n\n<pre><code class=\"bash\">cat hotspot/src/share/vm/runtime/arguments.cpp |\n    grep -o \'option, \"-X[^\"]*\"\' |\n    sed -r \'s/.*\"(.*)\".*/\\1/\'\n</code></pre>\n\n<pre><code class=\"nohighlight\">-Xbootclasspath:\n-Xbootclasspath/a:\n-Xbootclasspath/p:\n-Xrun\n-Xnoclassgc\n-Xincgc\n-Xnoincgc\n-Xconcgc\n-Xnoconcgc\n-Xbatch\n-Xmn\n-Xms\n-Xmx\n-XX:MaxHeapSize=\n-Xmaxf\n-Xminf\n-Xss\n-Xoss\n-XX:CodeCacheExpansionSize=\n-Xmaxjitcodesize\n-XX:ReservedCodeCacheSize=\n-XX:IncreaseFirstTierCompileThresholdAt=\n-Xsqnopause\n-Xrs\n-Xusealtsigs\n-Xoptimize\n-Xprof\n-Xconcurrentio\n-Xinternalversion\n-Xprintflags\n-Xint\n-Xmixed\n-Xcomp\n-Xshare:dump\n-Xshare:on\n-Xshare:auto\n-Xshare:off\n-Xverify\n-Xdebug\n-Xnoagent\n-Xboundthreads\n-Xloggc:\n-Xcheck\n-XX:+AggressiveHeap\n-XX:+NeverTenure\n-XX:+AlwaysTenure\n-XX:+CMSPermGenSweepingEnabled\n-XX:-CMSPermGenSweepingEnabled\n-XX:+UseGCTimeLimit\n-XX:-UseGCTimeLimit\n-XX:MaxTLERatio=\n-XX:+ResizeTLE\n-XX:-ResizeTLE\n-XX:+PrintTLE\n-XX:-PrintTLE\n-XX:TLEFragmentationRatio=\n-XX:TLESize=\n-XX:TLEThreadRatio=\n-XX:+UseTLE\n-XX:-UseTLE\n-XX:+DisplayVMOutputToStderr\n-XX:+DisplayVMOutputToStdout\n-XX:+ExtendedDTraceProbes\n-XX:+FullGCALot\n-XX:CMSParPromoteBlocksToClaim=\n-XX:ParCMSPromoteBlocksToClaim=\n-XX:ParallelGCOldGenAllocBufferSize=\n-XX:ParallelGCToSpaceAllocBufferSize=\n-XX:CMSMarkStackSize=\n-XX:G1MarkStackSize=\n-XX:CMSMarkStackSizeMax=\n-XX:ParallelMarkingThreads=\n-XX:ParallelCMSThreads=\n-XX:MaxDirectMemorySize=\n-XX:+UseVMInterruptibleIO\n-XX:+ManagementServer\n-XX:\n-XX:\n-XX:Flags=\n-XX:+PrintVMOptions\n-XX:-PrintVMOptions\n-XX:+IgnoreUnrecognizedVMOptions\n-XX:-IgnoreUnrecognizedVMOptions\n-XX:+PrintFlagsInitial\n-XX:NativeMemoryTracking\n-XX:+PrintFlagsWithComments\n-XX:\n</code></pre>\n\n<h2>另一部分是宏定义的-XX:选项列表</h2>\n\n太多了，有将近一千个\n\n<pre><code class=\"bash\">cat hotspot/src/share/vm/runtime/globals.hpp |\n    grep \'\\\\\'  |\n    grep -v \'\"\' |\n    grep -v \'\\*\' |\n    grep -v \'#\' |\n    sed \'/^\\s*\\\\$/ d\' |\n    sed \'s/^ *//\' |\n    sed \'s/, *\\\\$//\' |\n    sort -r\n</code></pre>\n\n<pre><code class=\"nohighlight\">product(uintx, YoungPLABSize, 4096\nproduct(uintx, YoungGenerationSizeSupplementDecay, 8\nproduct(uintx, YoungGenerationSizeSupplement, 80\nproduct(uintx, YoungGenerationSizeIncrement, 20\nproduct(uintx, TLABWasteTargetPercent, 1\nproduct(uintx, TLABWasteIncrement,    4\nproduct(uintx, TLABSize, 0\nproduct(uintx, TLABRefillWasteFraction,    64\nproduct(uintx, TLABAllocationWeight, 35\nproduct(uintx, ThresholdTolerance, 10\nproduct(uintx, TenuredGenerationSizeSupplementDecay, 2\nproduct(uintx, TenuredGenerationSizeSupplement, 80\nproduct(uintx, TenuredGenerationSizeIncrement, 20\nproduct(uintx, TargetSurvivorRatio,    50\nproduct(uintx, TargetPLABWastePct, 10\nproduct(uintx, SurvivorRatio, 8\nproduct(uintx, SurvivorPadding, 3\nproduct(uintx, StringTableSize, defaultStringTableSize\nproduct(uintx, StringDeduplicationAgeThreshold, 3\nproduct(uintx, QueuedAllocationWarningCount, 0\nproduct(uintx, PromotedPadding, 3\nproduct(uintx, ProcessDistributionStride, 4\nproduct(uintx, PretenureSizeThreshold, 0\nproduct(uintx, PLABWeight, 75\nproduct(uintx, PausePadding, 1\nproduct(uintx, ParGCDesiredObjsFromOverflowList, 20\nproduct(uintx, ParallelOldDeadWoodLimiterStdDev, 80\nproduct(uintx, ParallelOldDeadWoodLimiterMean, 50\nproduct(uintx, ParallelGCThreads, 0\nproduct(uintx, ParallelGCBufferWastePct, 10\nproduct(uintx, OldPLABWeight, 50\nproduct(uintx, OldPLABSize, 1024\nproduct(uintx, NumberOfGCLogFiles, 0\nproduct(uintx, NUMAPageScanRate, 256\nproduct(uintx, NUMAChunkResizeWeight, 20\nproduct(uintx, NewRatio, 2\nproduct(uintx, MinSurvivorRatio, 3\nproduct(uintx, MinRAMFraction, 2\nproduct(uintx, MinMetaspaceFreeRatio,    40\nproduct(uintx, MaxTenuringThreshold,    15\nproduct(uintx, MaxRAMFraction, 4\nproduct(uintx, MaxNewSize, max_uintx\nproduct(uintx, MaxMetaspaceSize, max_uintx\nproduct(uintx, MaxMetaspaceFreeRatio,    70\nproduct(uintx, MaxGCPauseMillis, max_uintx\nproduct(uintx, MaxGCMinorPauseMillis, max_uintx\nproduct(uintx, MaxDirectMemorySize, 0\nproduct(uintx, MarkSweepDeadRatio,     5\nproduct(uintx, MarkSweepAlwaysCompactCount,     4\nproduct(uintx, LargePageSizeInBytes, 0\nproduct(uintx, InitiatingHeapOccupancyPercent, 45\nproduct(uintx, InitialTenuringThreshold,    7\nproduct(uintx, InitialSurvivorRatio, 8\nproduct(uintx, InitialRAMFraction, 64\nproduct(uintx, InitialHeapSize, 0\nproduct(uintx, InitialBootClassLoaderMetaspaceSize\nproduct(uintx, IncreaseFirstTierCompileThresholdAt, 50\nproduct(uintx, HeapMaximumCompactionInterval, 20\nproduct(uintx, HeapFirstMaximumCompactionCount, 3\nproduct(uintx, GCTimeRatio, 99\nproduct(uintx, GCTimeLimit, 98\nproduct(uintx, GCTaskTimeStampEntries, 200\nproduct(uintx, GCPauseIntervalMillis, 0\nproduct(uintx, GCLockerEdenExpansionPercent, 5\nproduct(uintx, GCHeapFreeLimit, 2\nproduct(uintx, GCDrainStackTargetSize, 64\nproduct(uintx, FLSCoalescePolicy, 2\nproduct(uintx, ErgoHeapSizeLimit, 0\nproduct(uintx, DefaultMaxRAMFraction, 4\nproduct(uintx, ConcGCThreads, 0\nproduct(uintx, CMSYieldSleepCount, 0\nproduct(uintx, CMSWorkQueueDrainThreshold, 10\nproduct(uintx, CMSTriggerRatio, 80\nproduct(uintx, CMS_SweepWeight, 75\nproduct(uintx, CMS_SweepTimerThresholdMillis, 10\nproduct(uintx, CMS_SweepPadding, 1\nproduct(uintx, CMSScheduleRemarkSamplingRatio, 5\nproduct(uintx, CMSScheduleRemarkEdenPenetration, 50\nproduct(uintx, CMSRescanMultiple, 32\nproduct(uintx, CMSRemarkVerifyVariant, 1\nproduct(uintx, CMSPrecleanThreshold, 1000\nproduct(uintx, CMSPrecleanNumerator, 2\nproduct(uintx, CMSPrecleanIter, 3\nproduct(uintx, CMSPrecleanDenominator, 3\nproduct(uintx, CMSParPromoteBlocksToClaim, 16\nproduct(uintx, CMSOldPLABToleranceFactor, 4\nproduct(uintx, CMSOldPLABReactivityFactor, 2\nproduct(uintx, CMSOldPLABNumRefills, 4\nproduct(uintx, CMSOldPLABMin, 16\nproduct(uintx, CMSOldPLABMax, 1024\nproduct(uintx, CMSMaxAbortablePrecleanLoops, 0\nproduct(uintx, CMSIsTooFullPercentage, 98\nproduct(uintx, CMSIndexedFreeListReplenish, 4\nproduct(uintx, CMSIncrementalSafetyFactor, 10\nproduct(uintx, CMSIncrementalOffset, 0\nproduct(uintx, CMSIncrementalDutyCycleMin, 0\nproduct(uintx, CMSIncrementalDutyCycle, 10\nproduct(uintx, CMSFullGCsBeforeCompaction, 0\nproduct(uintx, CMS_FLSWeight, 75\nproduct(uintx, CMS_FLSPadding, 1\nproduct(uintx, CMSExpAvgFactor, 50\nproduct(uintx, CMSCoordinatorYieldSleepCount, 10\nproduct(uintx, CMSConcMarkMultiple, 32\nproduct(uintx, CMSClassUnloadingMaxInterval, 0\nproduct(uintx, CMSBootstrapOccupancy, 50\nproduct(uintx, CMSAbortablePrecleanMinWorkPerIteration, 100\nproduct(uintx, AutoGCSelectPauseMillis, 5000\nproduct(uintx, AdaptiveTimeWeight,       25\nproduct(uintx, AdaptiveSizeThroughPutPolicy, 0\nproduct(uintx, AdaptiveSizePolicyWeight, 10\nproduct(uintx, AdaptiveSizePolicyOutputInterval, 0\nproduct(uintx, AdaptiveSizePolicyInitializingSteps, 20\nproduct(uintx, AdaptiveSizePolicyCollectionCostMargin, 50\nproduct(uintx, AdaptiveSizePausePolicy, 0\nproduct(uintx, AdaptiveSizeMajorGCDecayTimeScale, 10\nproduct(uintx, AdaptiveSizeDecrementScaleFactor, 4\nproduct_rw(bool, TraceLoaderConstraints, false\nproduct_rw(bool, TraceClassUnloading, false\nproduct_rw(bool, TraceClassLoading, false\nproduct_rw(bool, PrintHeapAtGC, false\nproduct_rw(bool, PrintHeapAtGCExtended, false\nproduct_pd(uintx, TypeProfileLevel\nproduct_pd(uintx, ReservedCodeCacheSize\nproduct_pd(uintx, NewSizeThreadIncrease\nproduct_pd(uintx, MetaspaceSize\nproduct_pd(uintx, InitialCodeCacheSize\nproduct_pd(uintx, HeapBaseMinAddress\nproduct_pd(uintx, CodeCacheExpansionSize\nproduct_pd(uintx, CMSYoungGenPerWorker\nproduct_pd(uint64_t, MaxRAM\nproduct_pd(intx, VMThreadStackSize\nproduct_pd(intx, ThreadStackSize\nproduct_pd(intx, StackYellowPages\nproduct_pd(intx, StackShadowPages\nproduct_pd(intx, StackRedPages\nproduct_pd(intx, PreInflateSpin\nproduct_pd(intx, OptoLoopAlignment\nproduct_pd(intx, OnStackReplacePercentage\nproduct_pd(intx, InlineSmallCode\nproduct_pd(intx, FreqInlineSize\nproduct_pd(intx, CompileThreshold\nproduct_pd(intx, CompilerThreadStackSize\nproduct_pd(intx, BackEdgeThreshold\nproduct_pd(bool, UseOSErrorReporting\nproduct_pd(bool, UseOnStackReplacement\nproduct_pd(bool, UseMembar\nproduct_pd(bool, UseLargePagesIndividualAllocation\nproduct_pd(bool, UseLargePages\nproduct_pd(bool, TrapBasedNullChecks\nproduct_pd(bool, TieredCompilation\nproduct_pd(bool, RewriteFrequentPairs\nproduct_pd(bool, RewriteBytecodes\nproduct_pd(bool, ResizeTLAB\nproduct_pd(bool, ProfileInterpreter\nproduct_pd(bool, PreserveFramePointer\nproduct_pd(bool, PreferInterpreterNativeStubs\nproduct_pd(bool, NeverActAsServerClassMachine\nproduct_pd(bool, NeedsDeoptSuspend\nproduct_pd(bool, DontYieldALot\nproduct_pd(bool, ConvertSleepToYield\nproduct_pd(bool, BackgroundCompilation\nproduct(intx, WorkAroundNPTLTimedWaitHang, 1\nproduct(intx, VMThreadPriority, -1\nproduct(intx, UseSSE, 99\nproduct(intx, UnguardOnExecutionViolation, 0\nproduct(intx, TypeProfileWidth,     2\nproduct(intx, TypeProfileParmsLimit,    2\nproduct(intx, TypeProfileArgsLimit,     2\nproduct(intx, TraceRedefineClasses, 0\nproduct(intx, TieredStopAtLevel, 4\nproduct(intx, TieredRateUpdateMinTime, 1\nproduct(intx, TieredRateUpdateMaxTime, 25\nproduct(intx, TieredCompileTaskTimeout, 50\nproduct(intx, Tier4MinInvocationThreshold, 600\nproduct(intx, Tier4LoadFeedback, 3\nproduct(intx, Tier4InvocationThreshold, 5000\nproduct(intx, Tier4CompileThreshold, 15000\nproduct(intx, Tier4BackEdgeThreshold, 40000\nproduct(intx, Tier3MinInvocationThreshold, 100\nproduct(intx, Tier3LoadFeedback, 5\nproduct(intx, Tier3InvokeNotifyFreqLog, 10\nproduct(intx, Tier3InvocationThreshold, 200\nproduct(intx, Tier3DelayOn, 5\nproduct(intx, Tier3DelayOff, 2\nproduct(intx, Tier3CompileThreshold, 2000\nproduct(intx, Tier3BackEdgeThreshold,  60000\nproduct(intx, Tier3BackedgeNotifyFreqLog, 13\nproduct(intx, Tier2InvokeNotifyFreqLog, 11\nproduct(intx, Tier2CompileThreshold, 0\nproduct(intx, Tier2BackEdgeThreshold, 0\nproduct(intx, Tier2BackedgeNotifyFreqLog, 14\nproduct(intx, Tier23InlineeNotifyFreqLog, 20\nproduct(intx, Tier0ProfilingStartPercentage, 200\nproduct(intx, Tier0InvokeNotifyFreqLog, 7\nproduct(intx, Tier0BackedgeNotifyFreqLog, 10\nproduct(intx, ThreadPriorityPolicy, 0\nproduct(intx, SuspendRetryDelay, 5\nproduct(intx, SuspendRetryCount, 50\nproduct(intx, StarvationMonitorInterval,    200\nproduct(intx, SoftRefLRUPolicyMSPerMB, 1000\nproduct(intx, SelfDestructTimer, 0\nproduct(intx, SafepointTimeoutDelay, 10000\nproduct(intx, RefDiscoveryPolicy, 0\nproduct(intx, ProfileMaturityPercentage, 20\nproduct(intx, ProfileIntervalsTicks, 100\nproduct(intx, PrintSafepointStatisticsTimeout,  -1\nproduct(intx, PrintSafepointStatisticsCount, 300\nproduct(intx, PrintFLSStatistics, 0\nproduct(intx, PrintFLSCensus, 0\nproduct(intx, PrintCMSStatistics, 0\nproduct(intx, PrefetchScanIntervalInBytes, -1\nproduct(intx, PrefetchFieldsAhead, -1\nproduct(intx, PrefetchCopyIntervalInBytes, -1\nproduct(intx, PerMethodTrapLimit,  100\nproduct(intx, PerMethodRecompilationCutoff, 400\nproduct(intx, PerfMaxStringConstLength, 1024\nproduct(intx, PerfDataSamplingInterval, 50\nproduct(intx, PerBytecodeTrapLimit,  4\nproduct(intx, PerBytecodeRecompilationCutoff, 200\nproduct(intx, ParGCArrayScanChunk, 50\nproduct(intx, NmethodSweepFraction, 16\nproduct(intx, NmethodSweepCheckInterval, 5\nproduct(intx, NmethodSweepActivity, 10\nproduct(intx, MinInliningThreshold, 250\nproduct(intx, MaxTrivialSize, 6\nproduct(intx, MaxRecursiveInlineLevel, 1\nproduct(intx, MaxJNILocalCapacity, 65536\nproduct(intx, MaxJavaStackTraceDepth, 1024\nproduct(intx, MaxInlineSize, 35\nproduct(intx, MaxInlineLevel, 9\nproduct(intx, MaxBCEAEstimateSize, 150\nproduct(intx, MaxBCEAEstimateLevel, 5\nproduct(intx, JavaPriority9_To_OSPriority, -1\nproduct(intx, JavaPriority8_To_OSPriority, -1\nproduct(intx, JavaPriority7_To_OSPriority, -1\nproduct(intx, JavaPriority6_To_OSPriority, -1\nproduct(intx, JavaPriority5_To_OSPriority, -1\nproduct(intx, JavaPriority4_To_OSPriority, -1\nproduct(intx, JavaPriority3_To_OSPriority, -1\nproduct(intx, JavaPriority2_To_OSPriority, -1\nproduct(intx, JavaPriority1_To_OSPriority, -1\nproduct(intx, JavaPriority10_To_OSPriority,-1\nproduct(intx, InterpreterProfilePercentage, 33\nproduct(intx, hashCode, 5\nproduct(intx, FieldsAllocationStyle, 1\nproduct(intx, EmitSync, 0\nproduct(intx, DeferThrSuspendLoopCount,     4000\nproduct(intx, DeferPollingPageLoopCount,     -1\nproduct(intx, DefaultThreadPriority, -1\nproduct(intx, ContendedPaddingWidth, 128\nproduct(intx, CompilerThreadPriority, -1\nproduct(intx, CompilationPolicyChoice, 0\nproduct(intx, CMSMaxAbortablePrecleanTime, 5000\nproduct(intx, CMSInitiatingOccupancyFraction, -1\nproduct(intx, CICompilerCount, CI_COMPILER_COUNT\nproduct(intx, BiasedLockingStartupDelay, 4000\nproduct(intx, BiasedLockingDecayTime, 25000\nproduct(intx, BiasedLockingBulkRevokeThreshold, 40\nproduct(intx, BiasedLockingBulkRebiasThreshold, 20\nproduct(intx, BCEATraceLevel, 0\nproduct(intx,  AllocatePrefetchStyle, 1\nproduct(intx,  AllocatePrefetchStepSize, 16\nproduct(intx,  AllocatePrefetchLines, 3\nproduct(intx,  AllocatePrefetchInstr, 0\nproduct(intx,  AllocatePrefetchDistance, -1\nproduct(intx,  AllocateInstancePrefetchLines, 1\nproduct(double, FLSLargestBlockCoalesceProximity, 0.99\nproduct(double, CMSSmallSplitSurplusPercent, 1.10\nproduct(double, CMSSmallCoalSurplusPercent, 1.05\nproduct(double, CMSLargeSplitSurplusPercent, 1.00\nproduct(double, CMSLargeCoalSurplusPercent, 0.95\nproduct(ccstr, TraceJVMTI, NULL\nproduct(ccstr, SyncKnobs, NULL\nproduct(ccstr, SharedClassListFile, NULL\nproduct(ccstr, ReplayDataFile, NULL\nproduct(ccstr, PerfDataSaveFile, NULL\nproduct(ccstr, InlineDataFile, NULL\nproduct(ccstr, ExtraSharedClassListFile, NULL\nproduct(ccstr, ErrorReportServer, NULL\nproduct(ccstr, ErrorFile, NULL\nproduct(ccstr, DumpLoadedClassList, NULL\nproduct(ccstr, CompileCommandFile, NULL\nproduct(bool, ZeroTLAB, false\nproduct(bool, VMThreadHintNoPreempt, false\nproduct(bool, VerifySharedSpaces, false\nproduct(bool, VerifyMergedCPBytecodes, true\nproduct(bool, UseXMMForArrayCopy, false\nproduct(bool, UseVMInterruptibleIO, false\nproduct(bool, UseTypeProfile, true\nproduct(bool, UseStringDeduplication, false\nproduct(bool, UseSSE42Intrinsics, false\nproduct(bool, UseSignalChaining, true\nproduct(bool, UseSharedSpaces, true\nproduct(bool, UseSHA, false\nproduct(bool, UseSHA512Intrinsics, false\nproduct(bool, UseSHA256Intrinsics, false\nproduct(bool, UseSHA1Intrinsics, false\nproduct(bool, UseSerialGC, false\nproduct(bool, UsePSAdaptiveSurvivorSizePolicy, true\nproduct(bool, UsePopCountInstruction, false\nproduct(bool, UsePerfData, falseInEmbedded\nproduct(bool, UseParNewGC, false\nproduct(bool, UseParallelOldGC, false\nproduct(bool, UseParallelGC, false\nproduct(bool, UseNUMAInterleaving, false\nproduct(bool, UseNUMA, false\nproduct(bool, UseMaximumCompactionOnSystemGC, true\nproduct(bool, UseLWPSynchronization, true\nproduct(bool, UseLoopCounter, true\nproduct(bool, UseLockedTracing, false\nproduct(bool, UseLargePagesInMetaspace, false\nproduct(bool, UseInterpreter, true\nproduct(bool, UseInlineCaches, true\nproduct(bool, UseHeavyMonitors, false\nproduct(bool, UseGCTaskAffinity, false\nproduct(bool, UseGCOverheadLimit, true\nproduct(bool, UseGCLogFileRotation, false\nproduct(bool, UseG1GC, false\nproduct(bool, UseFastJNIAccessors, true\nproduct(bool, UseFastEmptyMethods, true\nproduct(bool, UseFastAccessorMethods, true\nproduct(bool, UseDynamicNumberOfGCThreads, false\nproduct(bool, UseCRC32Intrinsics, false\nproduct(bool, UseCounterDecay, true\nproduct(bool, UseConcMarkSweepGC, false\nproduct(bool, UseCompiler, true\nproduct(bool, UseCompilerSafepoints, true\nproduct(bool, UseCodeCacheFlushing, true\nproduct(bool, UseCMSInitiatingOccupancyOnly, false\nproduct(bool, UseCMSCompactAtFullCollection, true\nproduct(bool, UseCMSCollectionPassing, true\nproduct(bool, UseCMSBestFit, true\nproduct(bool, UseBoundThreads, true\nproduct(bool, UseBiasedLocking, true\nproduct(bool, UseAutoGCSelectPolicy, false\nproduct(bool, UseAltSigs, false\nproduct(bool, UseAESIntrinsics, false\nproduct(bool, UseAES, false\nproduct(bool, UseAdaptiveSizePolicyWithSystemGC, false\nproduct(bool, UseAdaptiveSizePolicy, true\nproduct(bool, UseAdaptiveSizePolicyFootprintGoal, true\nproduct(bool, UseAdaptiveSizeDecayMajorGCCost, true\nproduct(bool, UseAdaptiveNUMAChunkSizing, true\nproduct(bool, UseAdaptiveGenerationSizePolicyAtMinorCollection, true\nproduct(bool, UseAdaptiveGenerationSizePolicyAtMajorCollection, true\nproduct(bool, UseAdaptiveGCBoundary, false\nproduct(bool, UnlinkSymbolsALot, false\nproduct(bool, TransmitErrorReport, false\nproduct(bool, TraceSuspendWaitFailures, false\nproduct(bool, TraceSafepointCleanupTime, false\nproduct(bool, TraceParallelOldGCTasks, false\nproduct(bool, TraceMonitorInflation, false\nproduct(bool, TraceMetadataHumongousAllocation, false\nproduct(bool, TraceGen1Time, false\nproduct(bool, TraceGen0Time, false\nproduct(bool, TraceDynamicGCThreads, false\nproduct(bool, TraceClassResolution, false\nproduct(bool, TraceClassPaths, false\nproduct(bool, TraceClassLoadingPreorder, false\nproduct(bool, TraceBiasedLocking, false\nproduct(bool, TLABStats, true\nproduct(bool, ThreadPriorityVerbose, false\nproduct(bool, SuppressFatalErrorMessage, false\nproduct(bool, StressLdcRewrite, false\nproduct(bool, StartAttachListener, false\nproduct(bool, StackTraceInThrowable, true\nproduct(bool, ShowMessageBoxOnError, false\nproduct(bool, ScavengeBeforeFullGC, true\nproduct(bool, SafepointTimeout, false\nproduct(bool, RestrictContended, true\nproduct(bool, RestoreMXCSROnJNICalls, false\nproduct(bool, ResizePLAB, true\nproduct(bool, ResizeOldPLAB, true\nproduct(bool, RequireSharedSpaces, false\nproduct(bool, RelaxAccessControlCheck, false\nproduct(bool, RegisterFinalizersAtInit, true\nproduct(bool, ReflectionWrapResolutionErrors, true\nproduct(bool, ReduceSignalUsage, false\nproduct(bool, RangeCheckElimination, true\nproduct(bool, PSChunkLargeArrays, true\nproduct(bool, ProfileVM, false\nproduct(bool, ProfilerRecordPC, false\nproduct(bool, ProfilerPrintByteCodeStatistics, false\nproduct(bool, ProfileIntervals, false\nproduct(bool, PrintWarnings, true\nproduct(bool, PrintVMQWaitTime, false\nproduct(bool, PrintVMOptions, false\nproduct(bool, PrintTLAB, false\nproduct(bool, PrintTieredEvents, false\nproduct(bool, PrintTenuringDistribution, false\nproduct(bool, PrintStringTableStatistics, false\nproduct(bool, PrintStringDeduplicationStatistics, false\nproduct(bool, PrintSharedSpaces, false\nproduct(bool, PrintSharedDictionary, false\nproduct(bool, PrintSharedArchiveAndExit, false\nproduct(bool, PrintSafepointStatistics, false\nproduct(bool, PrintReferenceGC, false\nproduct(bool, PrintPromotionFailure, false\nproduct(bool, PrintPLAB, false\nproduct(bool, PrintParallelOldGCPhaseTimes, false\nproduct(bool, PrintOopAddress, false\nproduct(bool, PrintOldPLAB, false\nproduct(bool, PrintJNIResolving, false\nproduct(bool, PrintJNIGCStalls, false\nproduct(bool, PrintHeapAtSIGBREAK, true\nproduct(bool, PrintGCTaskTimeStamps, false\nproduct(bool, PrintGCCause, true\nproduct(bool, PrintGCApplicationStoppedTime, false\nproduct(bool, PrintGCApplicationConcurrentTime, false\nproduct(bool, PrintFlagsInitial, false\nproduct(bool, PrintFlagsFinal, false\nproduct(bool, PrintCompilation, false\nproduct(bool, PrintCommandLineFlags, false\nproduct(bool, PrintCodeCacheOnCompilation, false\nproduct(bool, PrintCodeCache, false\nproduct(bool, PrintCMSInitiationStatistics, false\nproduct(bool, PrintAdaptiveSizePolicy, false\nproduct(bool, PreserveAllAnnotations, false\nproduct(bool, PerfDisableSharedMem, false\nproduct(bool, PerfDataSaveToFile, false\nproduct(bool, PerfBypassFileSystemCheck, false\nproduct(bool, PerfAllowAtExitRegistration, false\nproduct(bool, ParGCUseLocalOverflow, false\nproduct(bool, ParGCTrimOverflow, true\nproduct(bool, ParallelRefProcEnabled, false\nproduct(bool, ParallelRefProcBalancingEnabled, true\nproduct(bool, ParallelGCVerbose, false\nproduct(bool, OmitStackTraceInFastThrow, true\nproduct(bool, NUMAStats, false\nproduct(bool, NeverTenure, false\nproduct(bool, MustCallLoadClassInternal, false\nproduct(bool, MethodFlushing, true\nproduct(bool, MaxFDLimit, true\nproduct(bool, ManagementServer, false\nproduct(bool, LazyBootClassLoader, true\nproduct(bool, JNIDetachReleasesMonitors, true\nproduct(bool, JavaMonitorsInStackTrace, true\nproduct(bool, Inline, true\nproduct(bool, IgnoreUnrecognizedVMOptions, false\nproduct(bool, IgnoreEmptyClassPaths, false\nproduct(bool, GCLockerInvokesConcurrent, false\nproduct(bool, ForceTimeHighResolution, false\nproduct(bool, ForceNUMA, false\nproduct(bool, FLSAlwaysCoalesceLarge, false\nproduct(bool, FilterSpuriousWakeups, true\nproduct(bool, FastTLABRefill, true\nproduct(bool, FailOverToOldVerifier, true\nproduct(bool, ExtendedDTraceProbes,    false\nproduct(bool, ExplicitGCInvokesConcurrent, false\nproduct(bool, ExplicitGCInvokesConcurrentAndUnloadsClasses, false\nproduct(bool, ExitOnOutOfMemoryError, false\nproduct(bool, EstimateArgEscape, true\nproduct(bool, EnableTracing, false\nproduct(bool, EnableContended, true\nproduct(bool, EagerXrunInit, false\nproduct(bool, DumpSharedSpaces, false\nproduct(bool, DumpReplayDataOnError, true\nproduct(bool, DTraceMonitorProbes, false\nproduct(bool, DTraceMethodProbes, false\nproduct(bool, DTraceAllocProbes, false\nproduct(bool, DontCompileHugeMethods, true\nproduct(bool, DisplayVMOutputToStdout, false\nproduct(bool, DisplayVMOutputToStderr, false\nproduct(bool, DisableExplicitGC, false\nproduct(bool, DisableAttachMechanism, false\nproduct(bool, DeoptimizeRandom, false\nproduct(bool, Debugging, false\nproduct(bool, CriticalJNINatives, true\nproduct(bool, CreateMinidumpOnCrash, false\nproduct(bool, CrashOnOutOfMemoryError, false\nproduct(bool, ConvertYieldToSleep, false\nproduct(bool, CompilerThreadHintNoPreempt, true\nproduct(bool, CompactFields, true\nproduct(bool, CollectGen0First, false\nproduct(bool, CMSYield, true\nproduct(bool, CMSSplitIndexedFreeListBlocks, true\nproduct(bool, CMSScavengeBeforeRemark, false\nproduct(bool, CMSReplenishIntermediate, true\nproduct(bool, CMSPrintObjectsInDump, false\nproduct(bool, CMSPrintEdenSurvivorChunks, false\nproduct(bool, CMSPrintChunksInDump, false\nproduct(bool, CMSPrecleanSurvivors2, true\nproduct(bool, CMSPrecleanSurvivors1, false\nproduct(bool, CMSPrecleanRefLists2, false\nproduct(bool, CMSPrecleanRefLists1, true\nproduct(bool, CMSPrecleaningEnabled, true\nproduct(bool, CMSPLABRecordAlways, true\nproduct(bool, CMSParallelSurvivorRemarkEnabled, true\nproduct(bool, CMSParallelRemarkEnabled, true\nproduct(bool, CMSParallelInitialMarkEnabled, true\nproduct(bool, CMSOldPLABResizeQuicker, false\nproduct(bool, CMSLoopWarn, false\nproduct(bool, CMSIncrementalPacing, true\nproduct(bool, CMSIncrementalMode, false\nproduct(bool, CMSExtrapolateSweep, false\nproduct(bool, CMSEdenChunksRecordAlways, true\nproduct(bool, CMSDumpAtPromotionFailure, false\nproduct(bool, CMSConcurrentMTEnabled, true\nproduct(bool, CMSCompactWhenClearAllSoftRefs, true\nproduct(bool, CMSCleanOnEnter, true\nproduct(bool, CMSClassUnloadingEnabled, true\nproduct(bool, CMSAbortSemantics, false\nproduct(bool, ClipInlining, true\nproduct(bool, ClassUnloadingWithConcurrentMark, true\nproduct(bool, ClassUnloading, true\nproduct(bool, CITime, false\nproduct(bool, CICompilerCountPerCPU, false\nproduct(bool, CheckJNICalls, false\nproduct(bool, CheckEndorsedAndExtDirs, false\nproduct(bool, BytecodeVerificationRemote, true\nproduct(bool, BytecodeVerificationLocal, false\nproduct(bool, BindGCTaskThreadsToCPUs, false\nproduct(bool, AssumeMP, false\nproduct(bool, AssertOnSuspendWaitFailure, false\nproduct(bool, AlwaysTenure, false\nproduct(bool, AlwaysRestoreFPU, false\nproduct(bool, AlwaysPreTouch, false\nproduct(bool, AlwaysLockClassLoader, false\nproduct(bool, AlwaysCompileLoopMethods, false\nproduct(bool, AlwaysActAsServerClassMachine, false\nproduct(bool, AllowUserSignalHandlers, false\nproduct(bool, AllowParallelDefineClass, false\nproduct(bool , AllowNonVirtualCalls, false\nproduct(bool, AllowJNIEnvProxy, false\nproduct(bool, AggressiveOpts, false\nproduct(bool, AdjustConcurrency, false\nnotproduct(uintx, WarnOnStalledSpinLock, 0\nnotproduct(uintx, ParGCWorkQueueOverflowInterval, 1000\nnotproduct(uintx, HandleAllocationLimit, 1024\nnotproduct(uintx, ErrorHandlerTest, 0\nnotproduct(uintx, CMSMarkStackOverflowInterval, 1000\nnotproduct(intx, ZombieALotInterval,     5\nnotproduct(intx, SweeperLogEntries, 1024\nnotproduct(intx, ScavengeALotInterval,     1\nnotproduct(intx, MemProfilingInterval, 500\nnotproduct(intx, MaxSubklassPrintSize, 4\nnotproduct(intx, MaxElementPrintSize, 256\nnotproduct(intx, FullGCALotStart,     0\nnotproduct(intx, FullGCALotInterval,     1\nnotproduct(intx, DeoptimizeALotInterval,     5\nnotproduct(intx, CompileTheWorldStopAt, max_jint\nnotproduct(intx, CompileTheWorldStartAt,     1\nnotproduct(intx, CompileTheWorldSafepointInterval, 100\nnotproduct(intx, CICrashAt, -1\nnotproduct(intx, AssertRepeat, 1\nnotproduct(ccstr, AbortVMOnException, NULL\nnotproduct(ccstr, AbortVMOnExceptionMessage, NULL\nnotproduct(bool, ZombieALot, false\nnotproduct(bool, ZapVMHandleArea, trueInDebug\nnotproduct(bool, ZapStackSegments, trueInDebug\nnotproduct(bool, ZapDeadLocalsOld, false\nnotproduct(bool, WalkStackALot, false\nnotproduct(bool, VerifyLastFrame, false\nnotproduct(bool, VerifyJNIEnvThread, false\nnotproduct(bool, VerifyCodeCacheOften, false\nnotproduct(bool, VerboseInternalVMTests, false\nnotproduct(bool, TraceZapDeadLocals, false\nnotproduct(bool, TraceScavenge, false\nnotproduct(bool, TraceRuntimeCalls, false\nnotproduct(bool, TraceOnStackReplacement, false\nnotproduct(bool, TraceMarkSweep, false\nnotproduct(bool, TraceLivenessQuery, false\nnotproduct(bool, TraceJVMCalls, false\nnotproduct(bool, TraceInvocationCounterOverflow, false\nnotproduct(bool, TraceCodeBlobStacks, false\nnotproduct(bool, TimeCompiler, false\nnotproduct(bool, StrictSafepointChecks, trueInDebug\nnotproduct(bool, StressDerivedPointers, false\nnotproduct(bool, StressCriticalJNINatives, false\nnotproduct(bool, ScavengeALot, false\nnotproduct(bool, PromotionFailureALot, false\nnotproduct(bool, ProfilerCheckIntervals, false\nnotproduct(bool, PrintVtableStats, false\nnotproduct(bool, PrintSystemDictionaryAtExit, false\nnotproduct(bool, PrintSymbolTableSizeHistogram, false\nnotproduct(bool, PrintRewrites, false\nnotproduct(bool, PrintMethodStatistics, false\nnotproduct(bool, PrintMallocFree, false\nnotproduct(bool, PrintFlagsWithComments, false\nnotproduct(bool, PrintFieldLayout, false\nnotproduct(bool, PrintClassStatistics, false\nnotproduct(bool, ParGCWorkQueueOverflowALot, false\nnotproduct(bool, LogSweeper, false\nnotproduct(bool, IgnoreLockingAssertions, false\nnotproduct(bool, ICMissHistogram, false\nnotproduct(bool, GCALotAtAllSafepoints, false\nnotproduct(bool, ExitVMOnVerifyError, false\nnotproduct(bool, ExitOnFullCodeCache, false\nnotproduct(bool, ExecuteInternalVMTests, false\nnotproduct(bool, CrashGCForDumpingJavaThread, false\nnotproduct(bool, CountRuntimeCalls, false\nnotproduct(bool, CountRemovableExceptions, false\nnotproduct(bool, CountJVMCalls, false\nnotproduct(bool, CollectIndexSetStatistics, false\nnotproduct(bool, CMSVerifyReturnedBytes, false\nnotproduct(bool, CMSMarkStackOverflowALot, false\nnotproduct(bool, CIObjectFactoryVerify, false\nnotproduct(bool, CheckOopishValues, false\nnotproduct(bool, CheckMemoryInitialization, false\nnotproduct(bool, CheckCompressedOops, true\nnotproduct(bool, CheckAssertionStatusDirectives, false\nNOT_EMBEDDED(diagnostic(intx, GuaranteedSafepointInterval, 1000\nmanageable(uintx, MinHeapFreeRatio, 40\nmanageable(uintx, MaxHeapFreeRatio, 70\nmanageable(intx, CMSWaitDuration, 2000\nmanageable(intx, CMSTriggerInterval, -1\nmanageable(intx, CMSAbortablePrecleanWaitMillis, 100\nmanageable(ccstr, HeapDumpPath, NULL\nmanageable(bool, PrintGCTimeStamps, false\nmanageable(bool, PrintGCID, false\nmanageable(bool, PrintGC, false\nmanageable(bool, PrintGCDetails, false\nmanageable(bool, PrintGCDateStamps, false\nmanageable(bool, PrintConcurrentLocks, false\nmanageable(bool, PrintClassHistogram, false\nmanageable(bool, PrintClassHistogramBeforeFullGC, false\nmanageable(bool, PrintClassHistogramAfterFullGC, false\nmanageable(bool, HeapDumpOnOutOfMemoryError, false\nmanageable(bool, HeapDumpBeforeFullGC, false\nmanageable(bool, HeapDumpAfterFullGC, false\nlp64_product(intx, ObjectAlignmentInBytes, 8\nlp64_product(bool, UseCompressedOops, false\nlp64_product(bool, UseCompressedClassPointers, false\nexperimental(uintx, WorkStealingYieldsBeforeSleep, 5000\nexperimental(uintx, WorkStealingSpinToYieldRatio, 10\nexperimental(uintx, WorkStealingSleepMillis, 1\nexperimental(uintx, WorkStealingHardSpins, 4096\nexperimental(uintx, SymbolTableSize, defaultSymbolTableSize\nexperimental(uintx, ArrayAllocatorMallocLimit\nexperimental(intx, SurvivorAlignmentInBytes, 0\nexperimental(intx, SpecTrapLimitExtraEntries,  3\nexperimental(intx, PredictedLoadedClassCount, 0\nexperimental(intx, PerMethodSpecTrapLimit,  5000\nexperimental(double, ObjectCountCutOffPercent, 0.5\nexperimental(bool, UseMemSetInBOT, true\nexperimental(bool, UseCriticalJavaThreadPriority, false\nexperimental(bool, UseCriticalCompilerThreadPriority, false\nexperimental(bool, UseCriticalCMSThreadPriority, false\nexperimental(bool, UseCGroupMemoryLimitForHeap, false\nexperimental(bool, UnlockExperimentalVMOptions, false\nexperimental(bool, TrustFinalNonStaticFields, false\nEMBEDDED_ONLY(product(intx, GuaranteedSafepointInterval, 0\ndiagnostic(uintx, VerifyGCStartAt,   0\ndiagnostic(uintx, ParGCStridesPerThread, 2\ndiagnostic(uintx, MallocMaxTestWords,     0\ndiagnostic(uintx, LogEventsBufferEntries, 10\ndiagnostic(uintx, GCLockerRetryAllocationCount, 2\ndiagnostic(uintx, CPUForCMSThread, 0\ndiagnostic(intx, VerifyGCLevel,     0\ndiagnostic(intx, ScavengeRootsInCode, 2\ndiagnostic(intx, ParGCCardsPerStrideChunk, 256\ndiagnostic(intx, MallocVerifyStart,     0\ndiagnostic(intx, MallocVerifyInterval,     0\ndiagnostic(ccstr, SharedArchiveFile, NULL\ndiagnostic(ccstr, PrintAssemblyOptions, NULL\ndiagnostic(ccstr, PauseAtStartupFile, NULL\ndiagnostic(ccstr, LogFile, NULL\ndiagnostic(bool, WhiteBoxAPI, false\ndiagnostic(bool, VerifyStringTableAtExit, false\ndiagnostic(bool, VerifySilently, false\ndiagnostic(bool, VerifyRememberedSets, false\ndiagnostic(bool, VerifyObjectStartArray, true\ndiagnostic(bool, VerifyMethodHandles, trueInDebug\ndiagnostic(bool, VerifyDuringStartup, false\ndiagnostic(bool, VerifyDuringGC, false\ndiagnostic(bool, VerifyBeforeIteration, false\ndiagnostic(bool, VerifyBeforeGC, false\ndiagnostic(bool, VerifyBeforeExit, trueInDebug\ndiagnostic(bool, VerifyAfterGC, false\ndiagnostic(bool, VerifyAdapterCalls, trueInDebug\ndiagnostic(bool, VerboseVerification, false\ndiagnostic(bool, UseNewCode, false\ndiagnostic(bool, UseNewCode3, false\ndiagnostic(bool, UseNewCode2, false\ndiagnostic(bool, UnsyncloadClass, false\ndiagnostic(bool, UnlockDiagnosticVMOptions, trueInDebug\ndiagnostic(bool, TraceNMethodInstalls, false\ndiagnostic(bool, TraceJVMTIObjectTagging, false\ndiagnostic(bool, TraceGCTaskThread, false\ndiagnostic(bool, StringDeduplicationResizeALot, false\ndiagnostic(bool, StringDeduplicationRehashALot, false\ndiagnostic(bool, ShowHiddenFrames, false\ndiagnostic(bool, SerializeVMOutput, true\ndiagnostic(bool, PrintStubCode, false\ndiagnostic(bool, PrintSignatureHandlers, false\ndiagnostic(bool, PrintNMTStatistics, false\ndiagnostic(bool, PrintNMethods, false\ndiagnostic(bool, PrintNativeNMethods, false\ndiagnostic(bool, PrintMethodHandleStubs, false\ndiagnostic(bool, PrintMethodFlushingStatistics, false\ndiagnostic(bool, PrintInterpreter, false\ndiagnostic(bool, PrintInlining, false\ndiagnostic(bool, PrintDTraceDOF, false\ndiagnostic(bool, PrintCompressedOopsMode, false\ndiagnostic(bool, PrintCompilation2, false\ndiagnostic(bool, PrintBiasedLockingStatistics, false\ndiagnostic(bool, PrintAssembly, false\ndiagnostic(bool, PrintAdapterHandlers, false\ndiagnostic(bool, PauseAtStartup,      false\ndiagnostic(bool, PauseAtExit, false\ndiagnostic(bool, ParallelGCRetainPLAB, false\ndiagnostic(bool, LogVMOutput, false\ndiagnostic(bool, LogEvents, true\ndiagnostic(bool, LogCompilation, false\ndiagnostic(bool, IgnoreUnverifiableClassesDuringDump, false\ndiagnostic(bool, GCParallelVerificationEnabled, true\ndiagnostic(bool, ForceUnreachable, false\ndiagnostic(bool, ForceDynamicNumberOfGCThreads, false\ndiagnostic(bool, FoldStableValues, true\ndiagnostic(bool, FLSVerifyLists, false\ndiagnostic(bool, FLSVerifyIndexTable, false\ndiagnostic(bool, FLSVerifyAllHeapReferences, false\ndiagnostic(bool, EnableInvokeDynamic, true\ndiagnostic(bool, DisplayVMOutput, true\ndiagnostic(bool, DeferInitialCardMark, false\ndiagnostic(bool, DebugNonSafepoints, trueInDebug\ndiagnostic(bool, BlockOffsetArrayUseUnallocatedBlock, false\ndiagnostic(bool, BindCMSThreadToCPU, false\ndevelop(uintx, TotalHandleAllocationLimit, 1024\ndevelop(uintx, PromotionFailureALotInterval, 5\ndevelop(uintx, PromotionFailureALotCount, 1000\ndevelop(uintx, PreallocatedOutOfMemoryErrorCount, 4\ndevelop(uintx, ParallelOldGCSplitInterval, 3\ndevelop(uintx, ObjArrayMarkingStride, 512\ndevelop(uintx, MetadataAllocationFailALotInterval, 1000\ndevelop(uintx, MaxVirtMemFraction, 2\ndevelop(uintx, GCWorkerDelayMillis, 0\ndevelop(uintx, GCExpandToAllocateDelayMillis, 0\ndevelop(uintx, CodeCacheSegmentSize, 64 PPC64_ONLY(+64)\ndevelop(uintx, CMSCheckInterval, 1000\ndevelop(uintx, AdaptiveSizePolicyReadyThreshold, 5\ndevelop(uintx, AdaptiveSizePolicyGCTimeLimitThreshold, 5\ndevelop_pd(uintx, JVMInvokeMethodSlack\ndevelop_pd(uintx, CodeCacheMinimumUseSpace\ndevelop_pd(uintx, CodeCacheMinBlockLength\ndevelop_pd(intx, InlineFrequencyCount\ndevelop_pd(intx, CodeEntryAlignment\ndevelop_pd(bool, UncommonNullCast\ndevelop_pd(bool, ShareVtableStubs\ndevelop_pd(bool, ProfileTraps\ndevelop_pd(bool, InlineIntrinsics\ndevelop_pd(bool, ImplicitNullChecks\ndevelop_pd(bool, CICompileOSR\ndevelop(intx, TraceBytecodesAt, 0\ndevelop(intx, StopInterpreterAt, 0\ndevelop(intx, StackPrintLimit, 100\ndevelop(intx, ReplaySuppressInitializers, 2\ndevelop(intx, PSAdaptiveSizePolicyResizeVirtualSpaceAlot, -1\ndevelop(intx, ProfilerPCTickThreshold,    15\ndevelop(intx, ProfilerNumberOfStubMethods, 25\ndevelop(intx, ProfilerNumberOfRuntimeStubNodes, 25\ndevelop(intx, ProfilerNumberOfInterpretedMethods, 25\ndevelop(intx, ProfilerNumberOfCompiledMethods, 25\ndevelop(intx, ProfilerNodeSize,  1024\ndevelop(intx, OSROnlyBCI, -1\ndevelop(intx, NewCodeParameter,      0\ndevelop(intx, MinSleepInterval,     1\ndevelop(intx, MinOopMapAllocation,     8\ndevelop(intx, MethodHistogramCutoff, 100\ndevelop(intx, MaxRecompilationSearchLength,    10\ndevelop(intx, MaxInterpretedSearchLength,     3\ndevelop(intx, MaxForceInlineLevel, 100\ndevelop(intx, MallocCatchPtr, -1\ndevelop(intx, LongCompileThreshold,     50\ndevelop(intx, InlineThrowMaxSize,   200\ndevelop(intx, InlineThrowCount,    50\ndevelop(intx, InlineFrequencyRatio,    20\ndevelop(intx, HugeMethodLimit,  8000\ndevelop(intx, FastSuperclassLimit, 8\ndevelop(intx, DontYieldALotInterval,    10\ndevelop(intx, DesiredMethodLimit,  8000\ndevelop(intx, CounterHalfLifeTime,    30\ndevelop(intx, CounterDecayMinIntervalLength,   500\ndevelop(intx, ConcGCYieldTimeout, 0\ndevelop(intx, CMSDictionaryChoice, 0\ndevelop(intx, CIStopOSR, max_jint\ndevelop(intx, CIStop, max_jint\ndevelop(intx, CIStartOSR, 0\ndevelop(intx, CIStart, 0\ndevelop(intx, CIFireOOMAt,    -1\ndevelop(intx, CIBreakAtOSR, -1\ndevelop(intx, CIBreakAt, -1\ndevelop(intx, BinarySwitchThreshold, 5\ndevelop(intx, BciProfileWidth,      2\ndevelop(bool, ZapUnusedHeapArea, trueInDebug\ndevelop(bool, ZapResourceArea, trueInDebug\ndevelop(bool, ZapJNIHandleArea, trueInDebug\ndevelop(bool, ZapFillerObjects, trueInDebug\ndevelop(bool, ZapDeadCompiledLocals, false\ndevelop(bool, WizardMode, false\ndevelop(bool, VerifyThread, false\ndevelop(bool, VerifyStack, false\ndevelop(bool, VerifyStackAtCalls, false\ndevelop(bool, VerifyReflectionBytecodes, false\ndevelop(bool, VerifyOops, false\ndevelop(bool, VerifyJNIFields, trueInDebug\ndevelop(bool, VerifyGenericSignatures, false\ndevelop(bool, VerifyFPU, false\ndevelop(bool, VerifyDependencies, trueInDebug\ndevelop(bool, VerifyDataPointer, trueInDebug\ndevelop(bool, VerifyCompiledCode, false\ndevelop(bool, VerifyBlockOffsetArray, false\ndevelop(bool, VerifyAdapterSharing, false\ndevelop(bool, VerifyActivationFrameSize, false\ndevelop(bool, Verbose, false\ndevelop(bool, UseStrictFP, true\ndevelop(bool, UseStackBanging, true\ndevelop(bool, UseRelocIndex, false\ndevelop(bool, UsePthreads, false\ndevelop(bool, UsePrivilegedStack, true\ndevelop(bool, UseNewReflection, true\ndevelop(bool, UseMallocOnly, false\ndevelop(bool, UseLoopSafepoints, true\ndevelop(bool, UseFastSignatureHandlers, true\ndevelop(bool, UseFakeTimers, false\ndevelop(bool, UseDetachedThreads, true\ndevelop(bool, UseCMSAdaptiveFreeLists, true\ndevelop(bool, UseCHA, true\ndevelop(bool, UseAsyncConcMarkSweepGC, true\ndevelop(bool, TypeProfileCasts,  true\ndevelop(bool, TraceZapUnusedHeapArea, false\ndevelop(bool, TraceWorkGang, false\ndevelop(bool, TraceVMOperation, false\ndevelop(bool, TraceThreadEvents, false\ndevelop(bool, TraceStartupTime, false\ndevelop(bool, TraceSafepoint, false\ndevelop(bool, TraceRelocator, false\ndevelop(bool, TraceReferenceGC, false\ndevelop(bool, TraceProtectionDomainVerification, false\ndevelop(bool, TraceProfileInterpreter, false\ndevelop(bool, TracePcPatching, false\ndevelop(bool, TraceParallelOldGCSummaryPhase, false\ndevelop(bool, TraceParallelOldGCMarkingPhase, false\ndevelop(bool, TraceParallelOldGCDensePrefix, false\ndevelop(bool, TraceParallelOldGCCompactionPhase, false\ndevelop(bool, TracePageSizes, false\ndevelop(bool, TraceOopMapRewrites, false\ndevelop(bool, TraceOopMapGeneration, false\ndevelop(bool, TraceNewOopMapGeneration, false\ndevelop(bool, TraceNewOopMapGenerationDetailed, false\ndevelop(bool, TraceMonitorMismatch, false\ndevelop(bool, TraceMethodReplacement, false\ndevelop(bool, TraceMethodHandles, false\ndevelop(bool, TraceMetavirtualspaceAllocation, false\ndevelop(bool, TraceMetadataChunkAllocation, false\ndevelop(bool, TraceLongCompiles, false\ndevelop(bool, TraceLivenessGen, false\ndevelop(bool, TraceJumps, false\ndevelop(bool, TraceJNIHandleAllocation, false\ndevelop(bool, TraceJNICalls, false\ndevelop(bool, TraceJavaAssertions, false\ndevelop(bool, TraceItables, false\ndevelop(bool, TraceInvokeDynamic, false\ndevelop(bool, TraceInlineCacheClearing, false\ndevelop(bool, TraceICs, false\ndevelop(bool, TraceICBuffer, false\ndevelop(bool, TraceHandleAllocation, false\ndevelop(bool, TraceGCTaskQueue, false\ndevelop(bool, TraceGCTaskManager, false\ndevelop(bool, TraceFrequencyInlining, false\ndevelop(bool, TraceFinalizerRegistration, false\ndevelop(bool, TraceExceptions, false\ndevelop(bool, TraceDerivedPointers, false\ndevelop(bool, TraceDependencies, false\ndevelop(bool, TraceDeoptimization, false\ndevelop(bool, TraceDefaultMethods, false\ndevelop(bool, TraceCreateZombies, false\ndevelop(bool, TraceCompiledIC, false\ndevelop(bool, TraceCompilationPolicy, false\ndevelop(bool, TraceCMSState, false\ndevelop(bool, TraceClearedExceptions, false\ndevelop(bool, TraceClassLoaderData, false\ndevelop(bool, TraceClassInitialization, false\ndevelop(bool, TraceCardTableModRefBS, false\ndevelop(bool, TraceCallFixup, false\ndevelop(bool, TraceBytecodes, false\ndevelop(bool, TraceBlockOffsetTable, false\ndevelop(bool, TraceAdaptiveGCBoundary, false\ndevelop(bool, TimeOopMap, false\ndevelop(bool, TimeOopMap2, false\ndevelop(bool, TimeLivenessAnalysis, false\ndevelop(bool, TimeCompilationPolicy, false\ndevelop(bool, StressRewriter, false\ndevelop(bool, StressMethodComparator, false\ndevelop(bool, StressCompiledExceptionHandlers, false\ndevelop(bool, StressCodeBuffers, false\ndevelop(bool, ShowSafepointMsgs, false\ndevelop(bool, ScavengeWithObjectsInToSpace, false\ndevelop(bool, SafepointALot, false\ndevelop(bool, RotateCMSCollectionTypes, false\ndevelop(bool, ReplayIgnoreInitErrors, false\ndevelop(bool, ReplayCompiles, false\ndevelop(bool, RegisterReferences, true\ndevelop(bool, PSAdjustYoungGenForMajorPause, false\ndevelop(bool, PSAdjustTenuredGenForMinorPause, false\ndevelop(bool, ProtectionDomainVerification, true\ndevelop(bool, PrintVtables, false\ndevelop(bool, PrintVMMessages, true\ndevelop(bool, PrintRelocations, false\ndevelop(bool, PrintMiscellaneous, false\ndevelop(bool, PrintMethodFlushing, false\ndevelop(bool, PrintMethodData, false\ndevelop(bool, PrintMallocStatistics, false\ndevelop(bool, PrintMalloc, false\ndevelop(bool, PrintJVMWarnings, false\ndevelop(bool, PrintExceptionHandlers, false\ndevelop(bool, PrintDependencies, false\ndevelop(bool, PrintDebugInfo, false\ndevelop(bool, PrintCodeCacheExtension, false\ndevelop(bool, PrintCodeCache2, false\ndevelop(bool, PrintBytecodePairHistogram, false\ndevelop(bool, PrintBytecodeHistogram, false\ndevelop(bool, PerfTraceMemOps, false\ndevelop(bool, PerfTraceDataCreation, false\ndevelop(bool, ParallelOldGCSplitALot, false\ndevelop(bool, NoYieldsInMicrolock, false\ndevelop(bool, MetadataAllocationFailALot, false\ndevelop(bool, MemProfiling, false\ndevelop(bool, LoadLocalVariableTypeTables, true\ndevelop(bool, LoadLocalVariableTables, true\ndevelop(bool, LoadLineNumberTables, true\ndevelop(bool, LargePagesIndividualAllocationInjectError, false\ndevelop(bool, InterceptOSException, false\ndevelop(bool, InlineUnsafeOps, true\ndevelop(bool, InlineThreadNatives, true\ndevelop(bool, InlineObjectHash, true\ndevelop(bool, InlineNatives, true\ndevelop(bool, InlineMathNatives, true\ndevelop(bool, InlineClassNatives, true\ndevelop(bool, InlineArrayCopy, true\ndevelop(bool, IgnoreRewrites, false\ndevelop(bool, IgnoreLibthreadGPFault, false\ndevelop(bool, GenerateSynchronizationCode, true\ndevelop(bool, GenerateRangeChecks, true\ndevelop(bool, GenerateCompilerNullChecks, true\ndevelop(bool, FullGCALot, false\ndevelop(bool, ForceFloatExceptions, trueInDebug\ndevelop(bool, FLSVerifyDictionary, false\ndevelop(bool, FillDelaySlots, true\ndevelop(bool, EagerInitialization, false\ndevelop(bool, DisableStartThread, false\ndevelop(bool, DieOnSafepointTimeout, false\ndevelop(bool, DeoptimizeALot, false\ndevelop(bool, DelayCompilationDuringStartup, true\ndevelop(bool, DebugVtables, false\ndevelop(bool, DebugDeoptimization, false\ndevelop(bool, CountJNICalls, false\ndevelop(bool, CountCompiledCalls, false\ndevelop(bool, CountBytecodes, false\ndevelop(bool, CompileTheWorldPreloadClasses, true\ndevelop(bool, CompileTheWorld, false\ndevelop(bool, CMSTraceThreadState, false\ndevelop(bool, CMSTraceSweeper, false\ndevelop(bool, CMSTraceIncrementalPacing, false\ndevelop(bool, CMSTraceIncrementalMode, false\ndevelop(bool, CMSTestInFreeList, false\ndevelop(bool, CMSOverflowEarlyRestoration, false\ndevelop(bool, ClearInterpreterLocals, false\ndevelop(bool, CleanChunkPoolAsync, falseInEmbedded\ndevelop(bool, CITraceTypeFlow, false\ndevelop(bool, CITimeEach, false\ndevelop(bool, CIPrintTypeFlow, false\ndevelop(bool, CIPrintRequests, false\ndevelop(bool, CIPrintMethodCodes, false\ndevelop(bool, CIPrintCompilerName, false\ndevelop(bool, CIPrintCompileQueue, false\ndevelop(bool, CICountOSR, false\ndevelop(bool, CICompileNatives, true\ndevelop(bool, CheckZapUnusedHeapArea, false\ndevelop(bool, CheckUnhandledOops, false\ndevelop(bool, BreakAtWarning, false\n</code></pre>','列出java命令所有-X和-XX选项','','publish','open','open','','%e5%88%97%e5%87%bajava%e5%91%bd%e4%bb%a4%e6%89%80%e6%9c%89-x%e5%92%8c-xx%e9%80%89%e9%a1%b9','','','2017-08-09 01:19:28','2017-08-08 17:19:28','java -X可以列出-X选项，但-XX选项好像并没有直接的方法可以列出。从源码里则可以得到。用hg下载源码后grep一下便可得到所有的-X和-XX选项了。\r\n## 一部分是单独列出来的\r\n```bash\r\ncat hotspot/src/share/vm/runtime/arguments.cpp |\r\n    grep -o &#039;option, &quot;-X[^&quot;]*&quot;&#039; |\r\n    sed -r &#039;s/.*&quot;(.*)&quot;.*/\\1/&#039;\r\n```\r\n```nohighlight\r\n-Xbootclasspath:\r\n-Xbootclasspath/a:\r\n-Xbootclasspath/p:\r\n-Xrun\r\n-Xnoclassgc\r\n-Xincgc\r\n-Xnoincgc\r\n-Xconcgc\r\n-Xnoconcgc\r\n-Xbatch\r\n-Xmn\r\n-Xms\r\n-Xmx\r\n-XX:MaxHeapSize=\r\n-Xmaxf\r\n-Xminf\r\n-Xss\r\n-Xoss\r\n-XX:CodeCacheExpansionSize=\r\n-Xmaxjitcodesize\r\n-XX:ReservedCodeCacheSize=\r\n-XX:IncreaseFirstTierCompileThresholdAt=\r\n-Xsqnopause\r\n-Xrs\r\n-Xusealtsigs\r\n-Xoptimize\r\n-Xprof\r\n-Xconcurrentio\r\n-Xinternalversion\r\n-Xprintflags\r\n-Xint\r\n-Xmixed\r\n-Xcomp\r\n-Xshare:dump\r\n-Xshare:on\r\n-Xshare:auto\r\n-Xshare:off\r\n-Xverify\r\n-Xdebug\r\n-Xnoagent\r\n-Xboundthreads\r\n-Xloggc:\r\n-Xcheck\r\n-XX:+AggressiveHeap\r\n-XX:+NeverTenure\r\n-XX:+AlwaysTenure\r\n-XX:+CMSPermGenSweepingEnabled\r\n-XX:-CMSPermGenSweepingEnabled\r\n-XX:+UseGCTimeLimit\r\n-XX:-UseGCTimeLimit\r\n-XX:MaxTLERatio=\r\n-XX:+ResizeTLE\r\n-XX:-ResizeTLE\r\n-XX:+PrintTLE\r\n-XX:-PrintTLE\r\n-XX:TLEFragmentationRatio=\r\n-XX:TLESize=\r\n-XX:TLEThreadRatio=\r\n-XX:+UseTLE\r\n-XX:-UseTLE\r\n-XX:+DisplayVMOutputToStderr\r\n-XX:+DisplayVMOutputToStdout\r\n-XX:+ExtendedDTraceProbes\r\n-XX:+FullGCALot\r\n-XX:CMSParPromoteBlocksToClaim=\r\n-XX:ParCMSPromoteBlocksToClaim=\r\n-XX:ParallelGCOldGenAllocBufferSize=\r\n-XX:ParallelGCToSpaceAllocBufferSize=\r\n-XX:CMSMarkStackSize=\r\n-XX:G1MarkStackSize=\r\n-XX:CMSMarkStackSizeMax=\r\n-XX:ParallelMarkingThreads=\r\n-XX:ParallelCMSThreads=\r\n-XX:MaxDirectMemorySize=\r\n-XX:+UseVMInterruptibleIO\r\n-XX:+ManagementServer\r\n-XX:\r\n-XX:\r\n-XX:Flags=\r\n-XX:+PrintVMOptions\r\n-XX:-PrintVMOptions\r\n-XX:+IgnoreUnrecognizedVMOptions\r\n-XX:-IgnoreUnrecognizedVMOptions\r\n-XX:+PrintFlagsInitial\r\n-XX:NativeMemoryTracking\r\n-XX:+PrintFlagsWithComments\r\n-XX:\r\n```\r\n## 另一部分是宏定义的-XX:选项列表\r\n太多了，有将近一千个\r\n```bash\r\ncat hotspot/src/share/vm/runtime/globals.hpp |\r\n    grep &#039;\\\\&#039;  |\r\n    grep -v &#039;&quot;&#039; |\r\n    grep -v &#039;\\*&#039; |\r\n    grep -v &#039;#&#039; |\r\n    sed &#039;/^\\s*\\\\$/ d&#039; |\r\n    sed &#039;s/^ *//&#039; |\r\n    sed &#039;s/, *\\\\$//&#039; |\r\n    sort -r\r\n```\r\n```nohighlight\r\nproduct(uintx, YoungPLABSize, 4096\r\nproduct(uintx, YoungGenerationSizeSupplementDecay, 8\r\nproduct(uintx, YoungGenerationSizeSupplement, 80\r\nproduct(uintx, YoungGenerationSizeIncrement, 20\r\nproduct(uintx, TLABWasteTargetPercent, 1\r\nproduct(uintx, TLABWasteIncrement,    4\r\nproduct(uintx, TLABSize, 0\r\nproduct(uintx, TLABRefillWasteFraction,    64\r\nproduct(uintx, TLABAllocationWeight, 35\r\nproduct(uintx, ThresholdTolerance, 10\r\nproduct(uintx, TenuredGenerationSizeSupplementDecay, 2\r\nproduct(uintx, TenuredGenerationSizeSupplement, 80\r\nproduct(uintx, TenuredGenerationSizeIncrement, 20\r\nproduct(uintx, TargetSurvivorRatio,    50\r\nproduct(uintx, TargetPLABWastePct, 10\r\nproduct(uintx, SurvivorRatio, 8\r\nproduct(uintx, SurvivorPadding, 3\r\nproduct(uintx, StringTableSize, defaultStringTableSize\r\nproduct(uintx, StringDeduplicationAgeThreshold, 3\r\nproduct(uintx, QueuedAllocationWarningCount, 0\r\nproduct(uintx, PromotedPadding, 3\r\nproduct(uintx, ProcessDistributionStride, 4\r\nproduct(uintx, PretenureSizeThreshold, 0\r\nproduct(uintx, PLABWeight, 75\r\nproduct(uintx, PausePadding, 1\r\nproduct(uintx, ParGCDesiredObjsFromOverflowList, 20\r\nproduct(uintx, ParallelOldDeadWoodLimiterStdDev, 80\r\nproduct(uintx, ParallelOldDeadWoodLimiterMean, 50\r\nproduct(uintx, ParallelGCThreads, 0\r\nproduct(uintx, ParallelGCBufferWastePct, 10\r\nproduct(uintx, OldPLABWeight, 50\r\nproduct(uintx, OldPLABSize, 1024\r\nproduct(uintx, NumberOfGCLogFiles, 0\r\nproduct(uintx, NUMAPageScanRate, 256\r\nproduct(uintx, NUMAChunkResizeWeight, 20\r\nproduct(uintx, NewRatio, 2\r\nproduct(uintx, MinSurvivorRatio, 3\r\nproduct(uintx, MinRAMFraction, 2\r\nproduct(uintx, MinMetaspaceFreeRatio,    40\r\nproduct(uintx, MaxTenuringThreshold,    15\r\nproduct(uintx, MaxRAMFraction, 4\r\nproduct(uintx, MaxNewSize, max_uintx\r\nproduct(uintx, MaxMetaspaceSize, max_uintx\r\nproduct(uintx, MaxMetaspaceFreeRatio,    70\r\nproduct(uintx, MaxGCPauseMillis, max_uintx\r\nproduct(uintx, MaxGCMinorPauseMillis, max_uintx\r\nproduct(uintx, MaxDirectMemorySize, 0\r\nproduct(uintx, MarkSweepDeadRatio,     5\r\nproduct(uintx, MarkSweepAlwaysCompactCount,     4\r\nproduct(uintx, LargePageSizeInBytes, 0\r\nproduct(uintx, InitiatingHeapOccupancyPercent, 45\r\nproduct(uintx, InitialTenuringThreshold,    7\r\nproduct(uintx, InitialSurvivorRatio, 8\r\nproduct(uintx, InitialRAMFraction, 64\r\nproduct(uintx, InitialHeapSize, 0\r\nproduct(uintx, InitialBootClassLoaderMetaspaceSize\r\nproduct(uintx, IncreaseFirstTierCompileThresholdAt, 50\r\nproduct(uintx, HeapMaximumCompactionInterval, 20\r\nproduct(uintx, HeapFirstMaximumCompactionCount, 3\r\nproduct(uintx, GCTimeRatio, 99\r\nproduct(uintx, GCTimeLimit, 98\r\nproduct(uintx, GCTaskTimeStampEntries, 200\r\nproduct(uintx, GCPauseIntervalMillis, 0\r\nproduct(uintx, GCLockerEdenExpansionPercent, 5\r\nproduct(uintx, GCHeapFreeLimit, 2\r\nproduct(uintx, GCDrainStackTargetSize, 64\r\nproduct(uintx, FLSCoalescePolicy, 2\r\nproduct(uintx, ErgoHeapSizeLimit, 0\r\nproduct(uintx, DefaultMaxRAMFraction, 4\r\nproduct(uintx, ConcGCThreads, 0\r\nproduct(uintx, CMSYieldSleepCount, 0\r\nproduct(uintx, CMSWorkQueueDrainThreshold, 10\r\nproduct(uintx, CMSTriggerRatio, 80\r\nproduct(uintx, CMS_SweepWeight, 75\r\nproduct(uintx, CMS_SweepTimerThresholdMillis, 10\r\nproduct(uintx, CMS_SweepPadding, 1\r\nproduct(uintx, CMSScheduleRemarkSamplingRatio, 5\r\nproduct(uintx, CMSScheduleRemarkEdenPenetration, 50\r\nproduct(uintx, CMSRescanMultiple, 32\r\nproduct(uintx, CMSRemarkVerifyVariant, 1\r\nproduct(uintx, CMSPrecleanThreshold, 1000\r\nproduct(uintx, CMSPrecleanNumerator, 2\r\nproduct(uintx, CMSPrecleanIter, 3\r\nproduct(uintx, CMSPrecleanDenominator, 3\r\nproduct(uintx, CMSParPromoteBlocksToClaim, 16\r\nproduct(uintx, CMSOldPLABToleranceFactor, 4\r\nproduct(uintx, CMSOldPLABReactivityFactor, 2\r\nproduct(uintx, CMSOldPLABNumRefills, 4\r\nproduct(uintx, CMSOldPLABMin, 16\r\nproduct(uintx, CMSOldPLABMax, 1024\r\nproduct(uintx, CMSMaxAbortablePrecleanLoops, 0\r\nproduct(uintx, CMSIsTooFullPercentage, 98\r\nproduct(uintx, CMSIndexedFreeListReplenish, 4\r\nproduct(uintx, CMSIncrementalSafetyFactor, 10\r\nproduct(uintx, CMSIncrementalOffset, 0\r\nproduct(uintx, CMSIncrementalDutyCycleMin, 0\r\nproduct(uintx, CMSIncrementalDutyCycle, 10\r\nproduct(uintx, CMSFullGCsBeforeCompaction, 0\r\nproduct(uintx, CMS_FLSWeight, 75\r\nproduct(uintx, CMS_FLSPadding, 1\r\nproduct(uintx, CMSExpAvgFactor, 50\r\nproduct(uintx, CMSCoordinatorYieldSleepCount, 10\r\nproduct(uintx, CMSConcMarkMultiple, 32\r\nproduct(uintx, CMSClassUnloadingMaxInterval, 0\r\nproduct(uintx, CMSBootstrapOccupancy, 50\r\nproduct(uintx, CMSAbortablePrecleanMinWorkPerIteration, 100\r\nproduct(uintx, AutoGCSelectPauseMillis, 5000\r\nproduct(uintx, AdaptiveTimeWeight,       25\r\nproduct(uintx, AdaptiveSizeThroughPutPolicy, 0\r\nproduct(uintx, AdaptiveSizePolicyWeight, 10\r\nproduct(uintx, AdaptiveSizePolicyOutputInterval, 0\r\nproduct(uintx, AdaptiveSizePolicyInitializingSteps, 20\r\nproduct(uintx, AdaptiveSizePolicyCollectionCostMargin, 50\r\nproduct(uintx, AdaptiveSizePausePolicy, 0\r\nproduct(uintx, AdaptiveSizeMajorGCDecayTimeScale, 10\r\nproduct(uintx, AdaptiveSizeDecrementScaleFactor, 4\r\nproduct_rw(bool, TraceLoaderConstraints, false\r\nproduct_rw(bool, TraceClassUnloading, false\r\nproduct_rw(bool, TraceClassLoading, false\r\nproduct_rw(bool, PrintHeapAtGC, false\r\nproduct_rw(bool, PrintHeapAtGCExtended, false\r\nproduct_pd(uintx, TypeProfileLevel\r\nproduct_pd(uintx, ReservedCodeCacheSize\r\nproduct_pd(uintx, NewSizeThreadIncrease\r\nproduct_pd(uintx, MetaspaceSize\r\nproduct_pd(uintx, InitialCodeCacheSize\r\nproduct_pd(uintx, HeapBaseMinAddress\r\nproduct_pd(uintx, CodeCacheExpansionSize\r\nproduct_pd(uintx, CMSYoungGenPerWorker\r\nproduct_pd(uint64_t, MaxRAM\r\nproduct_pd(intx, VMThreadStackSize\r\nproduct_pd(intx, ThreadStackSize\r\nproduct_pd(intx, StackYellowPages\r\nproduct_pd(intx, StackShadowPages\r\nproduct_pd(intx, StackRedPages\r\nproduct_pd(intx, PreInflateSpin\r\nproduct_pd(intx, OptoLoopAlignment\r\nproduct_pd(intx, OnStackReplacePercentage\r\nproduct_pd(intx, InlineSmallCode\r\nproduct_pd(intx, FreqInlineSize\r\nproduct_pd(intx, CompileThreshold\r\nproduct_pd(intx, CompilerThreadStackSize\r\nproduct_pd(intx, BackEdgeThreshold\r\nproduct_pd(bool, UseOSErrorReporting\r\nproduct_pd(bool, UseOnStackReplacement\r\nproduct_pd(bool, UseMembar\r\nproduct_pd(bool, UseLargePagesIndividualAllocation\r\nproduct_pd(bool, UseLargePages\r\nproduct_pd(bool, TrapBasedNullChecks\r\nproduct_pd(bool, TieredCompilation\r\nproduct_pd(bool, RewriteFrequentPairs\r\nproduct_pd(bool, RewriteBytecodes\r\nproduct_pd(bool, ResizeTLAB\r\nproduct_pd(bool, ProfileInterpreter\r\nproduct_pd(bool, PreserveFramePointer\r\nproduct_pd(bool, PreferInterpreterNativeStubs\r\nproduct_pd(bool, NeverActAsServerClassMachine\r\nproduct_pd(bool, NeedsDeoptSuspend\r\nproduct_pd(bool, DontYieldALot\r\nproduct_pd(bool, ConvertSleepToYield\r\nproduct_pd(bool, BackgroundCompilation\r\nproduct(intx, WorkAroundNPTLTimedWaitHang, 1\r\nproduct(intx, VMThreadPriority, -1\r\nproduct(intx, UseSSE, 99\r\nproduct(intx, UnguardOnExecutionViolation, 0\r\nproduct(intx, TypeProfileWidth,     2\r\nproduct(intx, TypeProfileParmsLimit,    2\r\nproduct(intx, TypeProfileArgsLimit,     2\r\nproduct(intx, TraceRedefineClasses, 0\r\nproduct(intx, TieredStopAtLevel, 4\r\nproduct(intx, TieredRateUpdateMinTime, 1\r\nproduct(intx, TieredRateUpdateMaxTime, 25\r\nproduct(intx, TieredCompileTaskTimeout, 50\r\nproduct(intx, Tier4MinInvocationThreshold, 600\r\nproduct(intx, Tier4LoadFeedback, 3\r\nproduct(intx, Tier4InvocationThreshold, 5000\r\nproduct(intx, Tier4CompileThreshold, 15000\r\nproduct(intx, Tier4BackEdgeThreshold, 40000\r\nproduct(intx, Tier3MinInvocationThreshold, 100\r\nproduct(intx, Tier3LoadFeedback, 5\r\nproduct(intx, Tier3InvokeNotifyFreqLog, 10\r\nproduct(intx, Tier3InvocationThreshold, 200\r\nproduct(intx, Tier3DelayOn, 5\r\nproduct(intx, Tier3DelayOff, 2\r\nproduct(intx, Tier3CompileThreshold, 2000\r\nproduct(intx, Tier3BackEdgeThreshold,  60000\r\nproduct(intx, Tier3BackedgeNotifyFreqLog, 13\r\nproduct(intx, Tier2InvokeNotifyFreqLog, 11\r\nproduct(intx, Tier2CompileThreshold, 0\r\nproduct(intx, Tier2BackEdgeThreshold, 0\r\nproduct(intx, Tier2BackedgeNotifyFreqLog, 14\r\nproduct(intx, Tier23InlineeNotifyFreqLog, 20\r\nproduct(intx, Tier0ProfilingStartPercentage, 200\r\nproduct(intx, Tier0InvokeNotifyFreqLog, 7\r\nproduct(intx, Tier0BackedgeNotifyFreqLog, 10\r\nproduct(intx, ThreadPriorityPolicy, 0\r\nproduct(intx, SuspendRetryDelay, 5\r\nproduct(intx, SuspendRetryCount, 50\r\nproduct(intx, StarvationMonitorInterval,    200\r\nproduct(intx, SoftRefLRUPolicyMSPerMB, 1000\r\nproduct(intx, SelfDestructTimer, 0\r\nproduct(intx, SafepointTimeoutDelay, 10000\r\nproduct(intx, RefDiscoveryPolicy, 0\r\nproduct(intx, ProfileMaturityPercentage, 20\r\nproduct(intx, ProfileIntervalsTicks, 100\r\nproduct(intx, PrintSafepointStatisticsTimeout,  -1\r\nproduct(intx, PrintSafepointStatisticsCount, 300\r\nproduct(intx, PrintFLSStatistics, 0\r\nproduct(intx, PrintFLSCensus, 0\r\nproduct(intx, PrintCMSStatistics, 0\r\nproduct(intx, PrefetchScanIntervalInBytes, -1\r\nproduct(intx, PrefetchFieldsAhead, -1\r\nproduct(intx, PrefetchCopyIntervalInBytes, -1\r\nproduct(intx, PerMethodTrapLimit,  100\r\nproduct(intx, PerMethodRecompilationCutoff, 400\r\nproduct(intx, PerfMaxStringConstLength, 1024\r\nproduct(intx, PerfDataSamplingInterval, 50\r\nproduct(intx, PerBytecodeTrapLimit,  4\r\nproduct(intx, PerBytecodeRecompilationCutoff, 200\r\nproduct(intx, ParGCArrayScanChunk, 50\r\nproduct(intx, NmethodSweepFraction, 16\r\nproduct(intx, NmethodSweepCheckInterval, 5\r\nproduct(intx, NmethodSweepActivity, 10\r\nproduct(intx, MinInliningThreshold, 250\r\nproduct(intx, MaxTrivialSize, 6\r\nproduct(intx, MaxRecursiveInlineLevel, 1\r\nproduct(intx, MaxJNILocalCapacity, 65536\r\nproduct(intx, MaxJavaStackTraceDepth, 1024\r\nproduct(intx, MaxInlineSize, 35\r\nproduct(intx, MaxInlineLevel, 9\r\nproduct(intx, MaxBCEAEstimateSize, 150\r\nproduct(intx, MaxBCEAEstimateLevel, 5\r\nproduct(intx, JavaPriority9_To_OSPriority, -1\r\nproduct(intx, JavaPriority8_To_OSPriority, -1\r\nproduct(intx, JavaPriority7_To_OSPriority, -1\r\nproduct(intx, JavaPriority6_To_OSPriority, -1\r\nproduct(intx, JavaPriority5_To_OSPriority, -1\r\nproduct(intx, JavaPriority4_To_OSPriority, -1\r\nproduct(intx, JavaPriority3_To_OSPriority, -1\r\nproduct(intx, JavaPriority2_To_OSPriority, -1\r\nproduct(intx, JavaPriority1_To_OSPriority, -1\r\nproduct(intx, JavaPriority10_To_OSPriority,-1\r\nproduct(intx, InterpreterProfilePercentage, 33\r\nproduct(intx, hashCode, 5\r\nproduct(intx, FieldsAllocationStyle, 1\r\nproduct(intx, EmitSync, 0\r\nproduct(intx, DeferThrSuspendLoopCount,     4000\r\nproduct(intx, DeferPollingPageLoopCount,     -1\r\nproduct(intx, DefaultThreadPriority, -1\r\nproduct(intx, ContendedPaddingWidth, 128\r\nproduct(intx, CompilerThreadPriority, -1\r\nproduct(intx, CompilationPolicyChoice, 0\r\nproduct(intx, CMSMaxAbortablePrecleanTime, 5000\r\nproduct(intx, CMSInitiatingOccupancyFraction, -1\r\nproduct(intx, CICompilerCount, CI_COMPILER_COUNT\r\nproduct(intx, BiasedLockingStartupDelay, 4000\r\nproduct(intx, BiasedLockingDecayTime, 25000\r\nproduct(intx, BiasedLockingBulkRevokeThreshold, 40\r\nproduct(intx, BiasedLockingBulkRebiasThreshold, 20\r\nproduct(intx, BCEATraceLevel, 0\r\nproduct(intx,  AllocatePrefetchStyle, 1\r\nproduct(intx,  AllocatePrefetchStepSize, 16\r\nproduct(intx,  AllocatePrefetchLines, 3\r\nproduct(intx,  AllocatePrefetchInstr, 0\r\nproduct(intx,  AllocatePrefetchDistance, -1\r\nproduct(intx,  AllocateInstancePrefetchLines, 1\r\nproduct(double, FLSLargestBlockCoalesceProximity, 0.99\r\nproduct(double, CMSSmallSplitSurplusPercent, 1.10\r\nproduct(double, CMSSmallCoalSurplusPercent, 1.05\r\nproduct(double, CMSLargeSplitSurplusPercent, 1.00\r\nproduct(double, CMSLargeCoalSurplusPercent, 0.95\r\nproduct(ccstr, TraceJVMTI, NULL\r\nproduct(ccstr, SyncKnobs, NULL\r\nproduct(ccstr, SharedClassListFile, NULL\r\nproduct(ccstr, ReplayDataFile, NULL\r\nproduct(ccstr, PerfDataSaveFile, NULL\r\nproduct(ccstr, InlineDataFile, NULL\r\nproduct(ccstr, ExtraSharedClassListFile, NULL\r\nproduct(ccstr, ErrorReportServer, NULL\r\nproduct(ccstr, ErrorFile, NULL\r\nproduct(ccstr, DumpLoadedClassList, NULL\r\nproduct(ccstr, CompileCommandFile, NULL\r\nproduct(bool, ZeroTLAB, false\r\nproduct(bool, VMThreadHintNoPreempt, false\r\nproduct(bool, VerifySharedSpaces, false\r\nproduct(bool, VerifyMergedCPBytecodes, true\r\nproduct(bool, UseXMMForArrayCopy, false\r\nproduct(bool, UseVMInterruptibleIO, false\r\nproduct(bool, UseTypeProfile, true\r\nproduct(bool, UseStringDeduplication, false\r\nproduct(bool, UseSSE42Intrinsics, false\r\nproduct(bool, UseSignalChaining, true\r\nproduct(bool, UseSharedSpaces, true\r\nproduct(bool, UseSHA, false\r\nproduct(bool, UseSHA512Intrinsics, false\r\nproduct(bool, UseSHA256Intrinsics, false\r\nproduct(bool, UseSHA1Intrinsics, false\r\nproduct(bool, UseSerialGC, false\r\nproduct(bool, UsePSAdaptiveSurvivorSizePolicy, true\r\nproduct(bool, UsePopCountInstruction, false\r\nproduct(bool, UsePerfData, falseInEmbedded\r\nproduct(bool, UseParNewGC, false\r\nproduct(bool, UseParallelOldGC, false\r\nproduct(bool, UseParallelGC, false\r\nproduct(bool, UseNUMAInterleaving, false\r\nproduct(bool, UseNUMA, false\r\nproduct(bool, UseMaximumCompactionOnSystemGC, true\r\nproduct(bool, UseLWPSynchronization, true\r\nproduct(bool, UseLoopCounter, true\r\nproduct(bool, UseLockedTracing, false\r\nproduct(bool, UseLargePagesInMetaspace, false\r\nproduct(bool, UseInterpreter, true\r\nproduct(bool, UseInlineCaches, true\r\nproduct(bool, UseHeavyMonitors, false\r\nproduct(bool, UseGCTaskAffinity, false\r\nproduct(bool, UseGCOverheadLimit, true\r\nproduct(bool, UseGCLogFileRotation, false\r\nproduct(bool, UseG1GC, false\r\nproduct(bool, UseFastJNIAccessors, true\r\nproduct(bool, UseFastEmptyMethods, true\r\nproduct(bool, UseFastAccessorMethods, true\r\nproduct(bool, UseDynamicNumberOfGCThreads, false\r\nproduct(bool, UseCRC32Intrinsics, false\r\nproduct(bool, UseCounterDecay, true\r\nproduct(bool, UseConcMarkSweepGC, false\r\nproduct(bool, UseCompiler, true\r\nproduct(bool, UseCompilerSafepoints, true\r\nproduct(bool, UseCodeCacheFlushing, true\r\nproduct(bool, UseCMSInitiatingOccupancyOnly, false\r\nproduct(bool, UseCMSCompactAtFullCollection, true\r\nproduct(bool, UseCMSCollectionPassing, true\r\nproduct(bool, UseCMSBestFit, true\r\nproduct(bool, UseBoundThreads, true\r\nproduct(bool, UseBiasedLocking, true\r\nproduct(bool, UseAutoGCSelectPolicy, false\r\nproduct(bool, UseAltSigs, false\r\nproduct(bool, UseAESIntrinsics, false\r\nproduct(bool, UseAES, false\r\nproduct(bool, UseAdaptiveSizePolicyWithSystemGC, false\r\nproduct(bool, UseAdaptiveSizePolicy, true\r\nproduct(bool, UseAdaptiveSizePolicyFootprintGoal, true\r\nproduct(bool, UseAdaptiveSizeDecayMajorGCCost, true\r\nproduct(bool, UseAdaptiveNUMAChunkSizing, true\r\nproduct(bool, UseAdaptiveGenerationSizePolicyAtMinorCollection, true\r\nproduct(bool, UseAdaptiveGenerationSizePolicyAtMajorCollection, true\r\nproduct(bool, UseAdaptiveGCBoundary, false\r\nproduct(bool, UnlinkSymbolsALot, false\r\nproduct(bool, TransmitErrorReport, false\r\nproduct(bool, TraceSuspendWaitFailures, false\r\nproduct(bool, TraceSafepointCleanupTime, false\r\nproduct(bool, TraceParallelOldGCTasks, false\r\nproduct(bool, TraceMonitorInflation, false\r\nproduct(bool, TraceMetadataHumongousAllocation, false\r\nproduct(bool, TraceGen1Time, false\r\nproduct(bool, TraceGen0Time, false\r\nproduct(bool, TraceDynamicGCThreads, false\r\nproduct(bool, TraceClassResolution, false\r\nproduct(bool, TraceClassPaths, false\r\nproduct(bool, TraceClassLoadingPreorder, false\r\nproduct(bool, TraceBiasedLocking, false\r\nproduct(bool, TLABStats, true\r\nproduct(bool, ThreadPriorityVerbose, false\r\nproduct(bool, SuppressFatalErrorMessage, false\r\nproduct(bool, StressLdcRewrite, false\r\nproduct(bool, StartAttachListener, false\r\nproduct(bool, StackTraceInThrowable, true\r\nproduct(bool, ShowMessageBoxOnError, false\r\nproduct(bool, ScavengeBeforeFullGC, true\r\nproduct(bool, SafepointTimeout, false\r\nproduct(bool, RestrictContended, true\r\nproduct(bool, RestoreMXCSROnJNICalls, false\r\nproduct(bool, ResizePLAB, true\r\nproduct(bool, ResizeOldPLAB, true\r\nproduct(bool, RequireSharedSpaces, false\r\nproduct(bool, RelaxAccessControlCheck, false\r\nproduct(bool, RegisterFinalizersAtInit, true\r\nproduct(bool, ReflectionWrapResolutionErrors, true\r\nproduct(bool, ReduceSignalUsage, false\r\nproduct(bool, RangeCheckElimination, true\r\nproduct(bool, PSChunkLargeArrays, true\r\nproduct(bool, ProfileVM, false\r\nproduct(bool, ProfilerRecordPC, false\r\nproduct(bool, ProfilerPrintByteCodeStatistics, false\r\nproduct(bool, ProfileIntervals, false\r\nproduct(bool, PrintWarnings, true\r\nproduct(bool, PrintVMQWaitTime, false\r\nproduct(bool, PrintVMOptions, false\r\nproduct(bool, PrintTLAB, false\r\nproduct(bool, PrintTieredEvents, false\r\nproduct(bool, PrintTenuringDistribution, false\r\nproduct(bool, PrintStringTableStatistics, false\r\nproduct(bool, PrintStringDeduplicationStatistics, false\r\nproduct(bool, PrintSharedSpaces, false\r\nproduct(bool, PrintSharedDictionary, false\r\nproduct(bool, PrintSharedArchiveAndExit, false\r\nproduct(bool, PrintSafepointStatistics, false\r\nproduct(bool, PrintReferenceGC, false\r\nproduct(bool, PrintPromotionFailure, false\r\nproduct(bool, PrintPLAB, false\r\nproduct(bool, PrintParallelOldGCPhaseTimes, false\r\nproduct(bool, PrintOopAddress, false\r\nproduct(bool, PrintOldPLAB, false\r\nproduct(bool, PrintJNIResolving, false\r\nproduct(bool, PrintJNIGCStalls, false\r\nproduct(bool, PrintHeapAtSIGBREAK, true\r\nproduct(bool, PrintGCTaskTimeStamps, false\r\nproduct(bool, PrintGCCause, true\r\nproduct(bool, PrintGCApplicationStoppedTime, false\r\nproduct(bool, PrintGCApplicationConcurrentTime, false\r\nproduct(bool, PrintFlagsInitial, false\r\nproduct(bool, PrintFlagsFinal, false\r\nproduct(bool, PrintCompilation, false\r\nproduct(bool, PrintCommandLineFlags, false\r\nproduct(bool, PrintCodeCacheOnCompilation, false\r\nproduct(bool, PrintCodeCache, false\r\nproduct(bool, PrintCMSInitiationStatistics, false\r\nproduct(bool, PrintAdaptiveSizePolicy, false\r\nproduct(bool, PreserveAllAnnotations, false\r\nproduct(bool, PerfDisableSharedMem, false\r\nproduct(bool, PerfDataSaveToFile, false\r\nproduct(bool, PerfBypassFileSystemCheck, false\r\nproduct(bool, PerfAllowAtExitRegistration, false\r\nproduct(bool, ParGCUseLocalOverflow, false\r\nproduct(bool, ParGCTrimOverflow, true\r\nproduct(bool, ParallelRefProcEnabled, false\r\nproduct(bool, ParallelRefProcBalancingEnabled, true\r\nproduct(bool, ParallelGCVerbose, false\r\nproduct(bool, OmitStackTraceInFastThrow, true\r\nproduct(bool, NUMAStats, false\r\nproduct(bool, NeverTenure, false\r\nproduct(bool, MustCallLoadClassInternal, false\r\nproduct(bool, MethodFlushing, true\r\nproduct(bool, MaxFDLimit, true\r\nproduct(bool, ManagementServer, false\r\nproduct(bool, LazyBootClassLoader, true\r\nproduct(bool, JNIDetachReleasesMonitors, true\r\nproduct(bool, JavaMonitorsInStackTrace, true\r\nproduct(bool, Inline, true\r\nproduct(bool, IgnoreUnrecognizedVMOptions, false\r\nproduct(bool, IgnoreEmptyClassPaths, false\r\nproduct(bool, GCLockerInvokesConcurrent, false\r\nproduct(bool, ForceTimeHighResolution, false\r\nproduct(bool, ForceNUMA, false\r\nproduct(bool, FLSAlwaysCoalesceLarge, false\r\nproduct(bool, FilterSpuriousWakeups, true\r\nproduct(bool, FastTLABRefill, true\r\nproduct(bool, FailOverToOldVerifier, true\r\nproduct(bool, ExtendedDTraceProbes,    false\r\nproduct(bool, ExplicitGCInvokesConcurrent, false\r\nproduct(bool, ExplicitGCInvokesConcurrentAndUnloadsClasses, false\r\nproduct(bool, ExitOnOutOfMemoryError, false\r\nproduct(bool, EstimateArgEscape, true\r\nproduct(bool, EnableTracing, false\r\nproduct(bool, EnableContended, true\r\nproduct(bool, EagerXrunInit, false\r\nproduct(bool, DumpSharedSpaces, false\r\nproduct(bool, DumpReplayDataOnError, true\r\nproduct(bool, DTraceMonitorProbes, false\r\nproduct(bool, DTraceMethodProbes, false\r\nproduct(bool, DTraceAllocProbes, false\r\nproduct(bool, DontCompileHugeMethods, true\r\nproduct(bool, DisplayVMOutputToStdout, false\r\nproduct(bool, DisplayVMOutputToStderr, false\r\nproduct(bool, DisableExplicitGC, false\r\nproduct(bool, DisableAttachMechanism, false\r\nproduct(bool, DeoptimizeRandom, false\r\nproduct(bool, Debugging, false\r\nproduct(bool, CriticalJNINatives, true\r\nproduct(bool, CreateMinidumpOnCrash, false\r\nproduct(bool, CrashOnOutOfMemoryError, false\r\nproduct(bool, ConvertYieldToSleep, false\r\nproduct(bool, CompilerThreadHintNoPreempt, true\r\nproduct(bool, CompactFields, true\r\nproduct(bool, CollectGen0First, false\r\nproduct(bool, CMSYield, true\r\nproduct(bool, CMSSplitIndexedFreeListBlocks, true\r\nproduct(bool, CMSScavengeBeforeRemark, false\r\nproduct(bool, CMSReplenishIntermediate, true\r\nproduct(bool, CMSPrintObjectsInDump, false\r\nproduct(bool, CMSPrintEdenSurvivorChunks, false\r\nproduct(bool, CMSPrintChunksInDump, false\r\nproduct(bool, CMSPrecleanSurvivors2, true\r\nproduct(bool, CMSPrecleanSurvivors1, false\r\nproduct(bool, CMSPrecleanRefLists2, false\r\nproduct(bool, CMSPrecleanRefLists1, true\r\nproduct(bool, CMSPrecleaningEnabled, true\r\nproduct(bool, CMSPLABRecordAlways, true\r\nproduct(bool, CMSParallelSurvivorRemarkEnabled, true\r\nproduct(bool, CMSParallelRemarkEnabled, true\r\nproduct(bool, CMSParallelInitialMarkEnabled, true\r\nproduct(bool, CMSOldPLABResizeQuicker, false\r\nproduct(bool, CMSLoopWarn, false\r\nproduct(bool, CMSIncrementalPacing, true\r\nproduct(bool, CMSIncrementalMode, false\r\nproduct(bool, CMSExtrapolateSweep, false\r\nproduct(bool, CMSEdenChunksRecordAlways, true\r\nproduct(bool, CMSDumpAtPromotionFailure, false\r\nproduct(bool, CMSConcurrentMTEnabled, true\r\nproduct(bool, CMSCompactWhenClearAllSoftRefs, true\r\nproduct(bool, CMSCleanOnEnter, true\r\nproduct(bool, CMSClassUnloadingEnabled, true\r\nproduct(bool, CMSAbortSemantics, false\r\nproduct(bool, ClipInlining, true\r\nproduct(bool, ClassUnloadingWithConcurrentMark, true\r\nproduct(bool, ClassUnloading, true\r\nproduct(bool, CITime, false\r\nproduct(bool, CICompilerCountPerCPU, false\r\nproduct(bool, CheckJNICalls, false\r\nproduct(bool, CheckEndorsedAndExtDirs, false\r\nproduct(bool, BytecodeVerificationRemote, true\r\nproduct(bool, BytecodeVerificationLocal, false\r\nproduct(bool, BindGCTaskThreadsToCPUs, false\r\nproduct(bool, AssumeMP, false\r\nproduct(bool, AssertOnSuspendWaitFailure, false\r\nproduct(bool, AlwaysTenure, false\r\nproduct(bool, AlwaysRestoreFPU, false\r\nproduct(bool, AlwaysPreTouch, false\r\nproduct(bool, AlwaysLockClassLoader, false\r\nproduct(bool, AlwaysCompileLoopMethods, false\r\nproduct(bool, AlwaysActAsServerClassMachine, false\r\nproduct(bool, AllowUserSignalHandlers, false\r\nproduct(bool, AllowParallelDefineClass, false\r\nproduct(bool , AllowNonVirtualCalls, false\r\nproduct(bool, AllowJNIEnvProxy, false\r\nproduct(bool, AggressiveOpts, false\r\nproduct(bool, AdjustConcurrency, false\r\nnotproduct(uintx, WarnOnStalledSpinLock, 0\r\nnotproduct(uintx, ParGCWorkQueueOverflowInterval, 1000\r\nnotproduct(uintx, HandleAllocationLimit, 1024\r\nnotproduct(uintx, ErrorHandlerTest, 0\r\nnotproduct(uintx, CMSMarkStackOverflowInterval, 1000\r\nnotproduct(intx, ZombieALotInterval,     5\r\nnotproduct(intx, SweeperLogEntries, 1024\r\nnotproduct(intx, ScavengeALotInterval,     1\r\nnotproduct(intx, MemProfilingInterval, 500\r\nnotproduct(intx, MaxSubklassPrintSize, 4\r\nnotproduct(intx, MaxElementPrintSize, 256\r\nnotproduct(intx, FullGCALotStart,     0\r\nnotproduct(intx, FullGCALotInterval,     1\r\nnotproduct(intx, DeoptimizeALotInterval,     5\r\nnotproduct(intx, CompileTheWorldStopAt, max_jint\r\nnotproduct(intx, CompileTheWorldStartAt,     1\r\nnotproduct(intx, CompileTheWorldSafepointInterval, 100\r\nnotproduct(intx, CICrashAt, -1\r\nnotproduct(intx, AssertRepeat, 1\r\nnotproduct(ccstr, AbortVMOnException, NULL\r\nnotproduct(ccstr, AbortVMOnExceptionMessage, NULL\r\nnotproduct(bool, ZombieALot, false\r\nnotproduct(bool, ZapVMHandleArea, trueInDebug\r\nnotproduct(bool, ZapStackSegments, trueInDebug\r\nnotproduct(bool, ZapDeadLocalsOld, false\r\nnotproduct(bool, WalkStackALot, false\r\nnotproduct(bool, VerifyLastFrame, false\r\nnotproduct(bool, VerifyJNIEnvThread, false\r\nnotproduct(bool, VerifyCodeCacheOften, false\r\nnotproduct(bool, VerboseInternalVMTests, false\r\nnotproduct(bool, TraceZapDeadLocals, false\r\nnotproduct(bool, TraceScavenge, false\r\nnotproduct(bool, TraceRuntimeCalls, false\r\nnotproduct(bool, TraceOnStackReplacement, false\r\nnotproduct(bool, TraceMarkSweep, false\r\nnotproduct(bool, TraceLivenessQuery, false\r\nnotproduct(bool, TraceJVMCalls, false\r\nnotproduct(bool, TraceInvocationCounterOverflow, false\r\nnotproduct(bool, TraceCodeBlobStacks, false\r\nnotproduct(bool, TimeCompiler, false\r\nnotproduct(bool, StrictSafepointChecks, trueInDebug\r\nnotproduct(bool, StressDerivedPointers, false\r\nnotproduct(bool, StressCriticalJNINatives, false\r\nnotproduct(bool, ScavengeALot, false\r\nnotproduct(bool, PromotionFailureALot, false\r\nnotproduct(bool, ProfilerCheckIntervals, false\r\nnotproduct(bool, PrintVtableStats, false\r\nnotproduct(bool, PrintSystemDictionaryAtExit, false\r\nnotproduct(bool, PrintSymbolTableSizeHistogram, false\r\nnotproduct(bool, PrintRewrites, false\r\nnotproduct(bool, PrintMethodStatistics, false\r\nnotproduct(bool, PrintMallocFree, false\r\nnotproduct(bool, PrintFlagsWithComments, false\r\nnotproduct(bool, PrintFieldLayout, false\r\nnotproduct(bool, PrintClassStatistics, false\r\nnotproduct(bool, ParGCWorkQueueOverflowALot, false\r\nnotproduct(bool, LogSweeper, false\r\nnotproduct(bool, IgnoreLockingAssertions, false\r\nnotproduct(bool, ICMissHistogram, false\r\nnotproduct(bool, GCALotAtAllSafepoints, false\r\nnotproduct(bool, ExitVMOnVerifyError, false\r\nnotproduct(bool, ExitOnFullCodeCache, false\r\nnotproduct(bool, ExecuteInternalVMTests, false\r\nnotproduct(bool, CrashGCForDumpingJavaThread, false\r\nnotproduct(bool, CountRuntimeCalls, false\r\nnotproduct(bool, CountRemovableExceptions, false\r\nnotproduct(bool, CountJVMCalls, false\r\nnotproduct(bool, CollectIndexSetStatistics, false\r\nnotproduct(bool, CMSVerifyReturnedBytes, false\r\nnotproduct(bool, CMSMarkStackOverflowALot, false\r\nnotproduct(bool, CIObjectFactoryVerify, false\r\nnotproduct(bool, CheckOopishValues, false\r\nnotproduct(bool, CheckMemoryInitialization, false\r\nnotproduct(bool, CheckCompressedOops, true\r\nnotproduct(bool, CheckAssertionStatusDirectives, false\r\nNOT_EMBEDDED(diagnostic(intx, GuaranteedSafepointInterval, 1000\r\nmanageable(uintx, MinHeapFreeRatio, 40\r\nmanageable(uintx, MaxHeapFreeRatio, 70\r\nmanageable(intx, CMSWaitDuration, 2000\r\nmanageable(intx, CMSTriggerInterval, -1\r\nmanageable(intx, CMSAbortablePrecleanWaitMillis, 100\r\nmanageable(ccstr, HeapDumpPath, NULL\r\nmanageable(bool, PrintGCTimeStamps, false\r\nmanageable(bool, PrintGCID, false\r\nmanageable(bool, PrintGC, false\r\nmanageable(bool, PrintGCDetails, false\r\nmanageable(bool, PrintGCDateStamps, false\r\nmanageable(bool, PrintConcurrentLocks, false\r\nmanageable(bool, PrintClassHistogram, false\r\nmanageable(bool, PrintClassHistogramBeforeFullGC, false\r\nmanageable(bool, PrintClassHistogramAfterFullGC, false\r\nmanageable(bool, HeapDumpOnOutOfMemoryError, false\r\nmanageable(bool, HeapDumpBeforeFullGC, false\r\nmanageable(bool, HeapDumpAfterFullGC, false\r\nlp64_product(intx, ObjectAlignmentInBytes, 8\r\nlp64_product(bool, UseCompressedOops, false\r\nlp64_product(bool, UseCompressedClassPointers, false\r\nexperimental(uintx, WorkStealingYieldsBeforeSleep, 5000\r\nexperimental(uintx, WorkStealingSpinToYieldRatio, 10\r\nexperimental(uintx, WorkStealingSleepMillis, 1\r\nexperimental(uintx, WorkStealingHardSpins, 4096\r\nexperimental(uintx, SymbolTableSize, defaultSymbolTableSize\r\nexperimental(uintx, ArrayAllocatorMallocLimit\r\nexperimental(intx, SurvivorAlignmentInBytes, 0\r\nexperimental(intx, SpecTrapLimitExtraEntries,  3\r\nexperimental(intx, PredictedLoadedClassCount, 0\r\nexperimental(intx, PerMethodSpecTrapLimit,  5000\r\nexperimental(double, ObjectCountCutOffPercent, 0.5\r\nexperimental(bool, UseMemSetInBOT, true\r\nexperimental(bool, UseCriticalJavaThreadPriority, false\r\nexperimental(bool, UseCriticalCompilerThreadPriority, false\r\nexperimental(bool, UseCriticalCMSThreadPriority, false\r\nexperimental(bool, UseCGroupMemoryLimitForHeap, false\r\nexperimental(bool, UnlockExperimentalVMOptions, false\r\nexperimental(bool, TrustFinalNonStaticFields, false\r\nEMBEDDED_ONLY(product(intx, GuaranteedSafepointInterval, 0\r\ndiagnostic(uintx, VerifyGCStartAt,   0\r\ndiagnostic(uintx, ParGCStridesPerThread, 2\r\ndiagnostic(uintx, MallocMaxTestWords,     0\r\ndiagnostic(uintx, LogEventsBufferEntries, 10\r\ndiagnostic(uintx, GCLockerRetryAllocationCount, 2\r\ndiagnostic(uintx, CPUForCMSThread, 0\r\ndiagnostic(intx, VerifyGCLevel,     0\r\ndiagnostic(intx, ScavengeRootsInCode, 2\r\ndiagnostic(intx, ParGCCardsPerStrideChunk, 256\r\ndiagnostic(intx, MallocVerifyStart,     0\r\ndiagnostic(intx, MallocVerifyInterval,     0\r\ndiagnostic(ccstr, SharedArchiveFile, NULL\r\ndiagnostic(ccstr, PrintAssemblyOptions, NULL\r\ndiagnostic(ccstr, PauseAtStartupFile, NULL\r\ndiagnostic(ccstr, LogFile, NULL\r\ndiagnostic(bool, WhiteBoxAPI, false\r\ndiagnostic(bool, VerifyStringTableAtExit, false\r\ndiagnostic(bool, VerifySilently, false\r\ndiagnostic(bool, VerifyRememberedSets, false\r\ndiagnostic(bool, VerifyObjectStartArray, true\r\ndiagnostic(bool, VerifyMethodHandles, trueInDebug\r\ndiagnostic(bool, VerifyDuringStartup, false\r\ndiagnostic(bool, VerifyDuringGC, false\r\ndiagnostic(bool, VerifyBeforeIteration, false\r\ndiagnostic(bool, VerifyBeforeGC, false\r\ndiagnostic(bool, VerifyBeforeExit, trueInDebug\r\ndiagnostic(bool, VerifyAfterGC, false\r\ndiagnostic(bool, VerifyAdapterCalls, trueInDebug\r\ndiagnostic(bool, VerboseVerification, false\r\ndiagnostic(bool, UseNewCode, false\r\ndiagnostic(bool, UseNewCode3, false\r\ndiagnostic(bool, UseNewCode2, false\r\ndiagnostic(bool, UnsyncloadClass, false\r\ndiagnostic(bool, UnlockDiagnosticVMOptions, trueInDebug\r\ndiagnostic(bool, TraceNMethodInstalls, false\r\ndiagnostic(bool, TraceJVMTIObjectTagging, false\r\ndiagnostic(bool, TraceGCTaskThread, false\r\ndiagnostic(bool, StringDeduplicationResizeALot, false\r\ndiagnostic(bool, StringDeduplicationRehashALot, false\r\ndiagnostic(bool, ShowHiddenFrames, false\r\ndiagnostic(bool, SerializeVMOutput, true\r\ndiagnostic(bool, PrintStubCode, false\r\ndiagnostic(bool, PrintSignatureHandlers, false\r\ndiagnostic(bool, PrintNMTStatistics, false\r\ndiagnostic(bool, PrintNMethods, false\r\ndiagnostic(bool, PrintNativeNMethods, false\r\ndiagnostic(bool, PrintMethodHandleStubs, false\r\ndiagnostic(bool, PrintMethodFlushingStatistics, false\r\ndiagnostic(bool, PrintInterpreter, false\r\ndiagnostic(bool, PrintInlining, false\r\ndiagnostic(bool, PrintDTraceDOF, false\r\ndiagnostic(bool, PrintCompressedOopsMode, false\r\ndiagnostic(bool, PrintCompilation2, false\r\ndiagnostic(bool, PrintBiasedLockingStatistics, false\r\ndiagnostic(bool, PrintAssembly, false\r\ndiagnostic(bool, PrintAdapterHandlers, false\r\ndiagnostic(bool, PauseAtStartup,      false\r\ndiagnostic(bool, PauseAtExit, false\r\ndiagnostic(bool, ParallelGCRetainPLAB, false\r\ndiagnostic(bool, LogVMOutput, false\r\ndiagnostic(bool, LogEvents, true\r\ndiagnostic(bool, LogCompilation, false\r\ndiagnostic(bool, IgnoreUnverifiableClassesDuringDump, false\r\ndiagnostic(bool, GCParallelVerificationEnabled, true\r\ndiagnostic(bool, ForceUnreachable, false\r\ndiagnostic(bool, ForceDynamicNumberOfGCThreads, false\r\ndiagnostic(bool, FoldStableValues, true\r\ndiagnostic(bool, FLSVerifyLists, false\r\ndiagnostic(bool, FLSVerifyIndexTable, false\r\ndiagnostic(bool, FLSVerifyAllHeapReferences, false\r\ndiagnostic(bool, EnableInvokeDynamic, true\r\ndiagnostic(bool, DisplayVMOutput, true\r\ndiagnostic(bool, DeferInitialCardMark, false\r\ndiagnostic(bool, DebugNonSafepoints, trueInDebug\r\ndiagnostic(bool, BlockOffsetArrayUseUnallocatedBlock, false\r\ndiagnostic(bool, BindCMSThreadToCPU, false\r\ndevelop(uintx, TotalHandleAllocationLimit, 1024\r\ndevelop(uintx, PromotionFailureALotInterval, 5\r\ndevelop(uintx, PromotionFailureALotCount, 1000\r\ndevelop(uintx, PreallocatedOutOfMemoryErrorCount, 4\r\ndevelop(uintx, ParallelOldGCSplitInterval, 3\r\ndevelop(uintx, ObjArrayMarkingStride, 512\r\ndevelop(uintx, MetadataAllocationFailALotInterval, 1000\r\ndevelop(uintx, MaxVirtMemFraction, 2\r\ndevelop(uintx, GCWorkerDelayMillis, 0\r\ndevelop(uintx, GCExpandToAllocateDelayMillis, 0\r\ndevelop(uintx, CodeCacheSegmentSize, 64 PPC64_ONLY(+64)\r\ndevelop(uintx, CMSCheckInterval, 1000\r\ndevelop(uintx, AdaptiveSizePolicyReadyThreshold, 5\r\ndevelop(uintx, AdaptiveSizePolicyGCTimeLimitThreshold, 5\r\ndevelop_pd(uintx, JVMInvokeMethodSlack\r\ndevelop_pd(uintx, CodeCacheMinimumUseSpace\r\ndevelop_pd(uintx, CodeCacheMinBlockLength\r\ndevelop_pd(intx, InlineFrequencyCount\r\ndevelop_pd(intx, CodeEntryAlignment\r\ndevelop_pd(bool, UncommonNullCast\r\ndevelop_pd(bool, ShareVtableStubs\r\ndevelop_pd(bool, ProfileTraps\r\ndevelop_pd(bool, InlineIntrinsics\r\ndevelop_pd(bool, ImplicitNullChecks\r\ndevelop_pd(bool, CICompileOSR\r\ndevelop(intx, TraceBytecodesAt, 0\r\ndevelop(intx, StopInterpreterAt, 0\r\ndevelop(intx, StackPrintLimit, 100\r\ndevelop(intx, ReplaySuppressInitializers, 2\r\ndevelop(intx, PSAdaptiveSizePolicyResizeVirtualSpaceAlot, -1\r\ndevelop(intx, ProfilerPCTickThreshold,    15\r\ndevelop(intx, ProfilerNumberOfStubMethods, 25\r\ndevelop(intx, ProfilerNumberOfRuntimeStubNodes, 25\r\ndevelop(intx, ProfilerNumberOfInterpretedMethods, 25\r\ndevelop(intx, ProfilerNumberOfCompiledMethods, 25\r\ndevelop(intx, ProfilerNodeSize,  1024\r\ndevelop(intx, OSROnlyBCI, -1\r\ndevelop(intx, NewCodeParameter,      0\r\ndevelop(intx, MinSleepInterval,     1\r\ndevelop(intx, MinOopMapAllocation,     8\r\ndevelop(intx, MethodHistogramCutoff, 100\r\ndevelop(intx, MaxRecompilationSearchLength,    10\r\ndevelop(intx, MaxInterpretedSearchLength,     3\r\ndevelop(intx, MaxForceInlineLevel, 100\r\ndevelop(intx, MallocCatchPtr, -1\r\ndevelop(intx, LongCompileThreshold,     50\r\ndevelop(intx, InlineThrowMaxSize,   200\r\ndevelop(intx, InlineThrowCount,    50\r\ndevelop(intx, InlineFrequencyRatio,    20\r\ndevelop(intx, HugeMethodLimit,  8000\r\ndevelop(intx, FastSuperclassLimit, 8\r\ndevelop(intx, DontYieldALotInterval,    10\r\ndevelop(intx, DesiredMethodLimit,  8000\r\ndevelop(intx, CounterHalfLifeTime,    30\r\ndevelop(intx, CounterDecayMinIntervalLength,   500\r\ndevelop(intx, ConcGCYieldTimeout, 0\r\ndevelop(intx, CMSDictionaryChoice, 0\r\ndevelop(intx, CIStopOSR, max_jint\r\ndevelop(intx, CIStop, max_jint\r\ndevelop(intx, CIStartOSR, 0\r\ndevelop(intx, CIStart, 0\r\ndevelop(intx, CIFireOOMAt,    -1\r\ndevelop(intx, CIBreakAtOSR, -1\r\ndevelop(intx, CIBreakAt, -1\r\ndevelop(intx, BinarySwitchThreshold, 5\r\ndevelop(intx, BciProfileWidth,      2\r\ndevelop(bool, ZapUnusedHeapArea, trueInDebug\r\ndevelop(bool, ZapResourceArea, trueInDebug\r\ndevelop(bool, ZapJNIHandleArea, trueInDebug\r\ndevelop(bool, ZapFillerObjects, trueInDebug\r\ndevelop(bool, ZapDeadCompiledLocals, false\r\ndevelop(bool, WizardMode, false\r\ndevelop(bool, VerifyThread, false\r\ndevelop(bool, VerifyStack, false\r\ndevelop(bool, VerifyStackAtCalls, false\r\ndevelop(bool, VerifyReflectionBytecodes, false\r\ndevelop(bool, VerifyOops, false\r\ndevelop(bool, VerifyJNIFields, trueInDebug\r\ndevelop(bool, VerifyGenericSignatures, false\r\ndevelop(bool, VerifyFPU, false\r\ndevelop(bool, VerifyDependencies, trueInDebug\r\ndevelop(bool, VerifyDataPointer, trueInDebug\r\ndevelop(bool, VerifyCompiledCode, false\r\ndevelop(bool, VerifyBlockOffsetArray, false\r\ndevelop(bool, VerifyAdapterSharing, false\r\ndevelop(bool, VerifyActivationFrameSize, false\r\ndevelop(bool, Verbose, false\r\ndevelop(bool, UseStrictFP, true\r\ndevelop(bool, UseStackBanging, true\r\ndevelop(bool, UseRelocIndex, false\r\ndevelop(bool, UsePthreads, false\r\ndevelop(bool, UsePrivilegedStack, true\r\ndevelop(bool, UseNewReflection, true\r\ndevelop(bool, UseMallocOnly, false\r\ndevelop(bool, UseLoopSafepoints, true\r\ndevelop(bool, UseFastSignatureHandlers, true\r\ndevelop(bool, UseFakeTimers, false\r\ndevelop(bool, UseDetachedThreads, true\r\ndevelop(bool, UseCMSAdaptiveFreeLists, true\r\ndevelop(bool, UseCHA, true\r\ndevelop(bool, UseAsyncConcMarkSweepGC, true\r\ndevelop(bool, TypeProfileCasts,  true\r\ndevelop(bool, TraceZapUnusedHeapArea, false\r\ndevelop(bool, TraceWorkGang, false\r\ndevelop(bool, TraceVMOperation, false\r\ndevelop(bool, TraceThreadEvents, false\r\ndevelop(bool, TraceStartupTime, false\r\ndevelop(bool, TraceSafepoint, false\r\ndevelop(bool, TraceRelocator, false\r\ndevelop(bool, TraceReferenceGC, false\r\ndevelop(bool, TraceProtectionDomainVerification, false\r\ndevelop(bool, TraceProfileInterpreter, false\r\ndevelop(bool, TracePcPatching, false\r\ndevelop(bool, TraceParallelOldGCSummaryPhase, false\r\ndevelop(bool, TraceParallelOldGCMarkingPhase, false\r\ndevelop(bool, TraceParallelOldGCDensePrefix, false\r\ndevelop(bool, TraceParallelOldGCCompactionPhase, false\r\ndevelop(bool, TracePageSizes, false\r\ndevelop(bool, TraceOopMapRewrites, false\r\ndevelop(bool, TraceOopMapGeneration, false\r\ndevelop(bool, TraceNewOopMapGeneration, false\r\ndevelop(bool, TraceNewOopMapGenerationDetailed, false\r\ndevelop(bool, TraceMonitorMismatch, false\r\ndevelop(bool, TraceMethodReplacement, false\r\ndevelop(bool, TraceMethodHandles, false\r\ndevelop(bool, TraceMetavirtualspaceAllocation, false\r\ndevelop(bool, TraceMetadataChunkAllocation, false\r\ndevelop(bool, TraceLongCompiles, false\r\ndevelop(bool, TraceLivenessGen, false\r\ndevelop(bool, TraceJumps, false\r\ndevelop(bool, TraceJNIHandleAllocation, false\r\ndevelop(bool, TraceJNICalls, false\r\ndevelop(bool, TraceJavaAssertions, false\r\ndevelop(bool, TraceItables, false\r\ndevelop(bool, TraceInvokeDynamic, false\r\ndevelop(bool, TraceInlineCacheClearing, false\r\ndevelop(bool, TraceICs, false\r\ndevelop(bool, TraceICBuffer, false\r\ndevelop(bool, TraceHandleAllocation, false\r\ndevelop(bool, TraceGCTaskQueue, false\r\ndevelop(bool, TraceGCTaskManager, false\r\ndevelop(bool, TraceFrequencyInlining, false\r\ndevelop(bool, TraceFinalizerRegistration, false\r\ndevelop(bool, TraceExceptions, false\r\ndevelop(bool, TraceDerivedPointers, false\r\ndevelop(bool, TraceDependencies, false\r\ndevelop(bool, TraceDeoptimization, false\r\ndevelop(bool, TraceDefaultMethods, false\r\ndevelop(bool, TraceCreateZombies, false\r\ndevelop(bool, TraceCompiledIC, false\r\ndevelop(bool, TraceCompilationPolicy, false\r\ndevelop(bool, TraceCMSState, false\r\ndevelop(bool, TraceClearedExceptions, false\r\ndevelop(bool, TraceClassLoaderData, false\r\ndevelop(bool, TraceClassInitialization, false\r\ndevelop(bool, TraceCardTableModRefBS, false\r\ndevelop(bool, TraceCallFixup, false\r\ndevelop(bool, TraceBytecodes, false\r\ndevelop(bool, TraceBlockOffsetTable, false\r\ndevelop(bool, TraceAdaptiveGCBoundary, false\r\ndevelop(bool, TimeOopMap, false\r\ndevelop(bool, TimeOopMap2, false\r\ndevelop(bool, TimeLivenessAnalysis, false\r\ndevelop(bool, TimeCompilationPolicy, false\r\ndevelop(bool, StressRewriter, false\r\ndevelop(bool, StressMethodComparator, false\r\ndevelop(bool, StressCompiledExceptionHandlers, false\r\ndevelop(bool, StressCodeBuffers, false\r\ndevelop(bool, ShowSafepointMsgs, false\r\ndevelop(bool, ScavengeWithObjectsInToSpace, false\r\ndevelop(bool, SafepointALot, false\r\ndevelop(bool, RotateCMSCollectionTypes, false\r\ndevelop(bool, ReplayIgnoreInitErrors, false\r\ndevelop(bool, ReplayCompiles, false\r\ndevelop(bool, RegisterReferences, true\r\ndevelop(bool, PSAdjustYoungGenForMajorPause, false\r\ndevelop(bool, PSAdjustTenuredGenForMinorPause, false\r\ndevelop(bool, ProtectionDomainVerification, true\r\ndevelop(bool, PrintVtables, false\r\ndevelop(bool, PrintVMMessages, true\r\ndevelop(bool, PrintRelocations, false\r\ndevelop(bool, PrintMiscellaneous, false\r\ndevelop(bool, PrintMethodFlushing, false\r\ndevelop(bool, PrintMethodData, false\r\ndevelop(bool, PrintMallocStatistics, false\r\ndevelop(bool, PrintMalloc, false\r\ndevelop(bool, PrintJVMWarnings, false\r\ndevelop(bool, PrintExceptionHandlers, false\r\ndevelop(bool, PrintDependencies, false\r\ndevelop(bool, PrintDebugInfo, false\r\ndevelop(bool, PrintCodeCacheExtension, false\r\ndevelop(bool, PrintCodeCache2, false\r\ndevelop(bool, PrintBytecodePairHistogram, false\r\ndevelop(bool, PrintBytecodeHistogram, false\r\ndevelop(bool, PerfTraceMemOps, false\r\ndevelop(bool, PerfTraceDataCreation, false\r\ndevelop(bool, ParallelOldGCSplitALot, false\r\ndevelop(bool, NoYieldsInMicrolock, false\r\ndevelop(bool, MetadataAllocationFailALot, false\r\ndevelop(bool, MemProfiling, false\r\ndevelop(bool, LoadLocalVariableTypeTables, true\r\ndevelop(bool, LoadLocalVariableTables, true\r\ndevelop(bool, LoadLineNumberTables, true\r\ndevelop(bool, LargePagesIndividualAllocationInjectError, false\r\ndevelop(bool, InterceptOSException, false\r\ndevelop(bool, InlineUnsafeOps, true\r\ndevelop(bool, InlineThreadNatives, true\r\ndevelop(bool, InlineObjectHash, true\r\ndevelop(bool, InlineNatives, true\r\ndevelop(bool, InlineMathNatives, true\r\ndevelop(bool, InlineClassNatives, true\r\ndevelop(bool, InlineArrayCopy, true\r\ndevelop(bool, IgnoreRewrites, false\r\ndevelop(bool, IgnoreLibthreadGPFault, false\r\ndevelop(bool, GenerateSynchronizationCode, true\r\ndevelop(bool, GenerateRangeChecks, true\r\ndevelop(bool, GenerateCompilerNullChecks, true\r\ndevelop(bool, FullGCALot, false\r\ndevelop(bool, ForceFloatExceptions, trueInDebug\r\ndevelop(bool, FLSVerifyDictionary, false\r\ndevelop(bool, FillDelaySlots, true\r\ndevelop(bool, EagerInitialization, false\r\ndevelop(bool, DisableStartThread, false\r\ndevelop(bool, DieOnSafepointTimeout, false\r\ndevelop(bool, DeoptimizeALot, false\r\ndevelop(bool, DelayCompilationDuringStartup, true\r\ndevelop(bool, DebugVtables, false\r\ndevelop(bool, DebugDeoptimization, false\r\ndevelop(bool, CountJNICalls, false\r\ndevelop(bool, CountCompiledCalls, false\r\ndevelop(bool, CountBytecodes, false\r\ndevelop(bool, CompileTheWorldPreloadClasses, true\r\ndevelop(bool, CompileTheWorld, false\r\ndevelop(bool, CMSTraceThreadState, false\r\ndevelop(bool, CMSTraceSweeper, false\r\ndevelop(bool, CMSTraceIncrementalPacing, false\r\ndevelop(bool, CMSTraceIncrementalMode, false\r\ndevelop(bool, CMSTestInFreeList, false\r\ndevelop(bool, CMSOverflowEarlyRestoration, false\r\ndevelop(bool, ClearInterpreterLocals, false\r\ndevelop(bool, CleanChunkPoolAsync, falseInEmbedded\r\ndevelop(bool, CITraceTypeFlow, false\r\ndevelop(bool, CITimeEach, false\r\ndevelop(bool, CIPrintTypeFlow, false\r\ndevelop(bool, CIPrintRequests, false\r\ndevelop(bool, CIPrintMethodCodes, false\r\ndevelop(bool, CIPrintCompilerName, false\r\ndevelop(bool, CIPrintCompileQueue, false\r\ndevelop(bool, CICountOSR, false\r\ndevelop(bool, CICompileNatives, true\r\ndevelop(bool, CheckZapUnusedHeapArea, false\r\ndevelop(bool, CheckUnhandledOops, false\r\ndevelop(bool, BreakAtWarning, false\r\n```',0,'https://www.allisterke.com/?p=86',0,'post','',0),(87,1,'2017-08-08 23:59:40','2017-08-08 15:59:40','java -X可以列出-X选项，但-XX选项好像并没有直接的方法可以列出。从源码里则可以得到。用hg下载源码后grep一下便可得到所有的-X和-XX选项了。\n\n<pre><code class=\"bash\">cat hotspot/src/share/vm/runtime/arguments.cpp |\ngrep -o \'option, \"-X[^\"]*\"\' |\nsed -r \'s/.*\"(.*)\".*/\\1/\'\n</code></pre>\n\n<pre><code class=\"nohighlight\">-Xbootclasspath:\n-Xbootclasspath/a:\n-Xbootclasspath/p:\n-Xrun\n-Xnoclassgc\n-Xincgc\n-Xnoincgc\n-Xconcgc\n-Xnoconcgc\n-Xbatch\n-Xmn\n-Xms\n-Xmx\n-XX:MaxHeapSize=\n-Xmaxf\n-Xminf\n-Xss\n-Xoss\n-XX:CodeCacheExpansionSize=\n-Xmaxjitcodesize\n-XX:ReservedCodeCacheSize=\n-XX:IncreaseFirstTierCompileThresholdAt=\n-Xsqnopause\n-Xrs\n-Xusealtsigs\n-Xoptimize\n-Xprof\n-Xconcurrentio\n-Xinternalversion\n-Xprintflags\n-Xint\n-Xmixed\n-Xcomp\n-Xshare:dump\n-Xshare:on\n-Xshare:auto\n-Xshare:off\n-Xverify\n-Xdebug\n-Xnoagent\n-Xboundthreads\n-Xloggc:\n-Xcheck\n-XX:+AggressiveHeap\n-XX:+NeverTenure\n-XX:+AlwaysTenure\n-XX:+CMSPermGenSweepingEnabled\n-XX:-CMSPermGenSweepingEnabled\n-XX:+UseGCTimeLimit\n-XX:-UseGCTimeLimit\n-XX:MaxTLERatio=\n-XX:+ResizeTLE\n-XX:-ResizeTLE\n-XX:+PrintTLE\n-XX:-PrintTLE\n-XX:TLEFragmentationRatio=\n-XX:TLESize=\n-XX:TLEThreadRatio=\n-XX:+UseTLE\n-XX:-UseTLE\n-XX:+DisplayVMOutputToStderr\n-XX:+DisplayVMOutputToStdout\n-XX:+ExtendedDTraceProbes\n-XX:+FullGCALot\n-XX:CMSParPromoteBlocksToClaim=\n-XX:ParCMSPromoteBlocksToClaim=\n-XX:ParallelGCOldGenAllocBufferSize=\n-XX:ParallelGCToSpaceAllocBufferSize=\n-XX:CMSMarkStackSize=\n-XX:G1MarkStackSize=\n-XX:CMSMarkStackSizeMax=\n-XX:ParallelMarkingThreads=\n-XX:ParallelCMSThreads=\n-XX:MaxDirectMemorySize=\n-XX:+UseVMInterruptibleIO\n-XX:+ManagementServer\n-XX:\n-XX:\n-XX:Flags=\n-XX:+PrintVMOptions\n-XX:-PrintVMOptions\n-XX:+IgnoreUnrecognizedVMOptions\n-XX:-IgnoreUnrecognizedVMOptions\n-XX:+PrintFlagsInitial\n-XX:NativeMemoryTracking\n-XX:+PrintFlagsWithComments\n-XX:\n</code></pre>','列出java命令所有-X和-XX选项','','inherit','closed','closed','','86-revision-v1','','','2017-08-08 23:59:40','2017-08-08 15:59:40','java -X可以列出-X选项，但-XX选项好像并没有直接的方法可以列出。从源码里则可以得到。用hg下载源码后grep一下便可得到所有的-X和-XX选项了。\r\n```bash\r\ncat hotspot/src/share/vm/runtime/arguments.cpp |\r\ngrep -o &#039;option, &quot;-X[^&quot;]*&quot;&#039; |\r\nsed -r &#039;s/.*&quot;(.*)&quot;.*/\\1/&#039;\r\n```\r\n```nohighlight\r\n-Xbootclasspath:\r\n-Xbootclasspath/a:\r\n-Xbootclasspath/p:\r\n-Xrun\r\n-Xnoclassgc\r\n-Xincgc\r\n-Xnoincgc\r\n-Xconcgc\r\n-Xnoconcgc\r\n-Xbatch\r\n-Xmn\r\n-Xms\r\n-Xmx\r\n-XX:MaxHeapSize=\r\n-Xmaxf\r\n-Xminf\r\n-Xss\r\n-Xoss\r\n-XX:CodeCacheExpansionSize=\r\n-Xmaxjitcodesize\r\n-XX:ReservedCodeCacheSize=\r\n-XX:IncreaseFirstTierCompileThresholdAt=\r\n-Xsqnopause\r\n-Xrs\r\n-Xusealtsigs\r\n-Xoptimize\r\n-Xprof\r\n-Xconcurrentio\r\n-Xinternalversion\r\n-Xprintflags\r\n-Xint\r\n-Xmixed\r\n-Xcomp\r\n-Xshare:dump\r\n-Xshare:on\r\n-Xshare:auto\r\n-Xshare:off\r\n-Xverify\r\n-Xdebug\r\n-Xnoagent\r\n-Xboundthreads\r\n-Xloggc:\r\n-Xcheck\r\n-XX:+AggressiveHeap\r\n-XX:+NeverTenure\r\n-XX:+AlwaysTenure\r\n-XX:+CMSPermGenSweepingEnabled\r\n-XX:-CMSPermGenSweepingEnabled\r\n-XX:+UseGCTimeLimit\r\n-XX:-UseGCTimeLimit\r\n-XX:MaxTLERatio=\r\n-XX:+ResizeTLE\r\n-XX:-ResizeTLE\r\n-XX:+PrintTLE\r\n-XX:-PrintTLE\r\n-XX:TLEFragmentationRatio=\r\n-XX:TLESize=\r\n-XX:TLEThreadRatio=\r\n-XX:+UseTLE\r\n-XX:-UseTLE\r\n-XX:+DisplayVMOutputToStderr\r\n-XX:+DisplayVMOutputToStdout\r\n-XX:+ExtendedDTraceProbes\r\n-XX:+FullGCALot\r\n-XX:CMSParPromoteBlocksToClaim=\r\n-XX:ParCMSPromoteBlocksToClaim=\r\n-XX:ParallelGCOldGenAllocBufferSize=\r\n-XX:ParallelGCToSpaceAllocBufferSize=\r\n-XX:CMSMarkStackSize=\r\n-XX:G1MarkStackSize=\r\n-XX:CMSMarkStackSizeMax=\r\n-XX:ParallelMarkingThreads=\r\n-XX:ParallelCMSThreads=\r\n-XX:MaxDirectMemorySize=\r\n-XX:+UseVMInterruptibleIO\r\n-XX:+ManagementServer\r\n-XX:\r\n-XX:\r\n-XX:Flags=\r\n-XX:+PrintVMOptions\r\n-XX:-PrintVMOptions\r\n-XX:+IgnoreUnrecognizedVMOptions\r\n-XX:-IgnoreUnrecognizedVMOptions\r\n-XX:+PrintFlagsInitial\r\n-XX:NativeMemoryTracking\r\n-XX:+PrintFlagsWithComments\r\n-XX:\r\n```',86,'https://www.allisterke.com/?p=87',0,'revision','',0),(88,1,'2017-08-09 01:15:09','2017-08-08 17:15:09','java -X可以列出-X选项，但-XX选项好像并没有直接的方法可以列出。从源码里则可以得到。用hg下载源码后grep一下便可得到所有的-X和-XX选项了。\n\n<h2>一部分是单独列出来的</h2>\n\n<pre><code class=\"bash\">cat hotspot/src/share/vm/runtime/arguments.cpp |\n    grep -o \'option, \"-X[^\"]*\"\' |\n    sed -r \'s/.*\"(.*)\".*/\\1/\'\n</code></pre>\n\n<pre><code class=\"nohighlight\">-Xbootclasspath:\n-Xbootclasspath/a:\n-Xbootclasspath/p:\n-Xrun\n-Xnoclassgc\n-Xincgc\n-Xnoincgc\n-Xconcgc\n-Xnoconcgc\n-Xbatch\n-Xmn\n-Xms\n-Xmx\n-XX:MaxHeapSize=\n-Xmaxf\n-Xminf\n-Xss\n-Xoss\n-XX:CodeCacheExpansionSize=\n-Xmaxjitcodesize\n-XX:ReservedCodeCacheSize=\n-XX:IncreaseFirstTierCompileThresholdAt=\n-Xsqnopause\n-Xrs\n-Xusealtsigs\n-Xoptimize\n-Xprof\n-Xconcurrentio\n-Xinternalversion\n-Xprintflags\n-Xint\n-Xmixed\n-Xcomp\n-Xshare:dump\n-Xshare:on\n-Xshare:auto\n-Xshare:off\n-Xverify\n-Xdebug\n-Xnoagent\n-Xboundthreads\n-Xloggc:\n-Xcheck\n-XX:+AggressiveHeap\n-XX:+NeverTenure\n-XX:+AlwaysTenure\n-XX:+CMSPermGenSweepingEnabled\n-XX:-CMSPermGenSweepingEnabled\n-XX:+UseGCTimeLimit\n-XX:-UseGCTimeLimit\n-XX:MaxTLERatio=\n-XX:+ResizeTLE\n-XX:-ResizeTLE\n-XX:+PrintTLE\n-XX:-PrintTLE\n-XX:TLEFragmentationRatio=\n-XX:TLESize=\n-XX:TLEThreadRatio=\n-XX:+UseTLE\n-XX:-UseTLE\n-XX:+DisplayVMOutputToStderr\n-XX:+DisplayVMOutputToStdout\n-XX:+ExtendedDTraceProbes\n-XX:+FullGCALot\n-XX:CMSParPromoteBlocksToClaim=\n-XX:ParCMSPromoteBlocksToClaim=\n-XX:ParallelGCOldGenAllocBufferSize=\n-XX:ParallelGCToSpaceAllocBufferSize=\n-XX:CMSMarkStackSize=\n-XX:G1MarkStackSize=\n-XX:CMSMarkStackSizeMax=\n-XX:ParallelMarkingThreads=\n-XX:ParallelCMSThreads=\n-XX:MaxDirectMemorySize=\n-XX:+UseVMInterruptibleIO\n-XX:+ManagementServer\n-XX:\n-XX:\n-XX:Flags=\n-XX:+PrintVMOptions\n-XX:-PrintVMOptions\n-XX:+IgnoreUnrecognizedVMOptions\n-XX:-IgnoreUnrecognizedVMOptions\n-XX:+PrintFlagsInitial\n-XX:NativeMemoryTracking\n-XX:+PrintFlagsWithComments\n-XX:\n</code></pre>\n\n<h2>另一部分是宏定义的列表，太多了，有将近一千个</h2>\n\n<pre><code class=\"bash\">cat hotspot/src/share/vm/runtime/globals.hpp |\n    grep \'\\\\\'  |\n    grep -v \'\"\' |\n    grep -v \'\\*\' |\n    grep -v \'#\' |\n    sed \'/^\\s*\\\\$/ d\' |\n    sed \'s/^ *//\' |\n    sed \'s/, *\\\\$//\'\n</code></pre>\n\n<pre><code class=\"nohighlight\">lp64_product(bool, UseCompressedOops, false)\nlp64_product(bool, UseCompressedClassPointers, false)\nnotproduct(bool, CheckCompressedOops, true)\nproduct_pd(uintx, HeapBaseMinAddress)\ndiagnostic(bool, PrintCompressedOopsMode, false)\nlp64_product(intx, ObjectAlignmentInBytes, 8)\nproduct(bool, AssumeMP, false)\nproduct_pd(bool, UseMembar)\ndevelop(bool, CleanChunkPoolAsync, falseInEmbedded)\nexperimental(bool, UseMemSetInBOT, true)\ndiagnostic(bool, UnlockDiagnosticVMOptions, trueInDebug)\nexperimental(bool, UnlockExperimentalVMOptions, false)\nproduct(bool, JavaMonitorsInStackTrace, true)\nproduct_pd(bool, UseLargePages)\nproduct_pd(bool, UseLargePagesIndividualAllocation)\ndevelop(bool, LargePagesIndividualAllocationInjectError, false)\nproduct(bool, UseLargePagesInMetaspace, false)\ndevelop(bool, TracePageSizes, false)\nproduct(bool, UseNUMA, false)\nproduct(bool, UseNUMAInterleaving, false)\nproduct(bool, ForceNUMA, false)\nproduct(uintx, NUMAChunkResizeWeight, 20)\nproduct(bool, UseAdaptiveNUMAChunkSizing, true)\nproduct(bool, NUMAStats, false)\nproduct(uintx, NUMAPageScanRate, 256)\nproduct_pd(bool, NeedsDeoptSuspend)\nproduct(intx, UseSSE, 99)\nproduct(bool, UseAES, false)\nproduct(bool, UseSHA, false)\nproduct(uintx, LargePageSizeInBytes, 0)\nproduct(bool, ForceTimeHighResolution, false)\ndevelop(bool, TraceItables, false)\ndevelop(bool, TracePcPatching, false)\ndevelop(bool, TraceJumps, false)\ndevelop(bool, TraceRelocator, false)\ndevelop(bool, TraceLongCompiles, false)\ndevelop(bool, SafepointALot, false)\nproduct_pd(bool, BackgroundCompilation)\nproduct(bool, PrintVMQWaitTime, false)\ndevelop(bool, NoYieldsInMicrolock, false)\ndevelop(bool, TraceOopMapGeneration, false)\nproduct(bool, MethodFlushing, true)\ndevelop(bool, VerifyStack, false)\ndiagnostic(bool, ForceUnreachable, false)\nnotproduct(bool, StressDerivedPointers, false)\ndevelop(bool, TraceDerivedPointers, false)\nnotproduct(bool, TraceCodeBlobStacks, false)\nproduct(bool, PrintJNIResolving, false)\nnotproduct(bool, PrintRewrites, false)\nproduct(bool, UseInlineCaches, true)\ndevelop(bool, InlineArrayCopy, true)\ndevelop(bool, InlineObjectHash, true)\ndevelop(bool, InlineNatives, true)\ndevelop(bool, InlineMathNatives, true)\ndevelop(bool, InlineClassNatives, true)\ndevelop(bool, InlineThreadNatives, true)\ndevelop(bool, InlineUnsafeOps, true)\nproduct(bool, CriticalJNINatives, true)\nnotproduct(bool, StressCriticalJNINatives, false)\nproduct(bool, UseSSE42Intrinsics, false)\nproduct(bool, UseAESIntrinsics, false)\nproduct(bool, UseSHA1Intrinsics, false)\nproduct(bool, UseSHA256Intrinsics, false)\nproduct(bool, UseSHA512Intrinsics, false)\nproduct(bool, UseCRC32Intrinsics, false)\ndevelop(bool, TraceCallFixup, false)\ndevelop(bool, DeoptimizeALot, false)\nproduct(bool, DeoptimizeRandom, false)\nnotproduct(bool, ZombieALot, false)\nproduct(bool, UnlinkSymbolsALot, false)\nnotproduct(bool, WalkStackALot, false)\nproduct(bool, Debugging, false)\nnotproduct(bool, StrictSafepointChecks, trueInDebug)\nnotproduct(bool, VerifyLastFrame, false)\ndevelop(bool, TraceHandleAllocation, false)\nproduct(bool, UseCompilerSafepoints, true)\nproduct(bool, FailOverToOldVerifier, true)\ndevelop(bool, ShowSafepointMsgs, false)\nproduct(bool, SafepointTimeout, false)\ndevelop(bool, DieOnSafepointTimeout, false)\nproduct(intx, SuspendRetryCount, 50)\nproduct(intx, SuspendRetryDelay, 5)\nproduct(bool, AssertOnSuspendWaitFailure, false)\nproduct(bool, TraceSuspendWaitFailures, false)\nproduct(bool, MaxFDLimit, true)\ndiagnostic(bool, LogEvents, true)\ndiagnostic(uintx, LogEventsBufferEntries, 10)\nproduct(bool, BytecodeVerificationRemote, true)\nproduct(bool, BytecodeVerificationLocal, false)\ndevelop(bool, ForceFloatExceptions, trueInDebug)\ndevelop(bool, VerifyStackAtCalls, false)\ndevelop(bool, TraceJavaAssertions, false)\nnotproduct(bool, CheckAssertionStatusDirectives, false)\nnotproduct(bool, PrintMallocFree, false)\nproduct(bool, PrintOopAddress, false)\nnotproduct(bool, VerifyCodeCacheOften, false)\ndevelop(bool, ZapDeadCompiledLocals, false)\nnotproduct(bool, ZapDeadLocalsOld, false)\nnotproduct(bool, CheckOopishValues, false)\ndevelop(bool, UseMallocOnly, false)\ndevelop(bool, PrintMalloc, false)\ndevelop(bool, PrintMallocStatistics, false)\ndevelop(bool, ZapResourceArea, trueInDebug)\nnotproduct(bool, ZapVMHandleArea, trueInDebug)\ndevelop(bool, ZapJNIHandleArea, trueInDebug)\nnotproduct(bool, ZapStackSegments, trueInDebug)\ndevelop(bool, ZapUnusedHeapArea, trueInDebug)\ndevelop(bool, TraceZapUnusedHeapArea, false)\ndevelop(bool, CheckZapUnusedHeapArea, false)\ndevelop(bool, ZapFillerObjects, trueInDebug)\ndevelop(bool, PrintVMMessages, true)\nproduct(bool, PrintGCApplicationConcurrentTime, false)\nproduct(bool, PrintGCApplicationStoppedTime, false)\ndiagnostic(bool, VerboseVerification, false)\nnotproduct(uintx, ErrorHandlerTest, 0)\ndevelop(bool, Verbose, false)\ndevelop(bool, PrintMiscellaneous, false)\ndevelop(bool, WizardMode, false)\nproduct(bool, ShowMessageBoxOnError, false)\nproduct(bool, CreateMinidumpOnCrash, false)\nproduct_pd(bool, UseOSErrorReporting)\nproduct(bool, SuppressFatalErrorMessage, false)\nmanageable(bool, HeapDumpBeforeFullGC, false)\nmanageable(bool, HeapDumpAfterFullGC, false)\nmanageable(bool, HeapDumpOnOutOfMemoryError, false)\nmanageable(ccstr, HeapDumpPath, NULL)\ndevelop(bool, BreakAtWarning, false)\ndevelop(bool, TraceVMOperation, false)\ndevelop(bool, UseFakeTimers, false)\ndiagnostic(bool, PrintNMTStatistics, false)\ndiagnostic(bool, LogCompilation, false)\nproduct(bool, PrintCompilation, false)\ndiagnostic(bool, TraceNMethodInstalls, false)\ndiagnostic(intx, ScavengeRootsInCode, 2)\nproduct(bool, AlwaysRestoreFPU, false)\ndiagnostic(bool, PrintCompilation2, false)\ndiagnostic(bool, PrintAdapterHandlers, false)\ndiagnostic(bool, VerifyAdapterCalls, trueInDebug)\ndevelop(bool, VerifyAdapterSharing, false)\ndiagnostic(bool, PrintAssembly, false)\ndiagnostic(ccstr, PrintAssemblyOptions, NULL)\ndiagnostic(bool, PrintNMethods, false)\ndiagnostic(bool, PrintNativeNMethods, false)\ndevelop(bool, PrintDebugInfo, false)\ndevelop(bool, PrintRelocations, false)\ndevelop(bool, PrintDependencies, false)\ndevelop(bool, PrintExceptionHandlers, false)\ndevelop(bool, StressCompiledExceptionHandlers, false)\ndevelop(bool, InterceptOSException, false)\nproduct(bool, PrintCodeCache, false)\ndevelop(bool, PrintCodeCache2, false)\nproduct(bool, PrintCodeCacheOnCompilation, false)\ndiagnostic(bool, PrintStubCode, false)\nproduct(bool, StackTraceInThrowable, true)\nproduct(bool, OmitStackTraceInFastThrow, true)\nproduct(bool, ProfilerPrintByteCodeStatistics, false)\nproduct(bool, ProfilerRecordPC, false)\nproduct(bool, ProfileVM, false)\nproduct(bool, ProfileIntervals, false)\nnotproduct(bool, ProfilerCheckIntervals, false)\ndevelop(bool, PrintJVMWarnings, false)\nproduct(bool, PrintWarnings, true)\nnotproduct(uintx, WarnOnStalledSpinLock, 0)\nproduct(bool, RegisterFinalizersAtInit, true)\ndevelop(bool, RegisterReferences, true)\ndevelop(bool, IgnoreRewrites, false)\ndevelop(bool, PrintCodeCacheExtension, false)\ndevelop(bool, UsePrivilegedStack, true)\ndevelop(bool, ProtectionDomainVerification, true)\nproduct(bool, ClassUnloading, true)\nproduct(bool, ClassUnloadingWithConcurrentMark, true)\ndevelop(bool, DisableStartThread, false)\ndevelop(bool, MemProfiling, false)\nnotproduct(bool, PrintSystemDictionaryAtExit, false)\nexperimental(intx, PredictedLoadedClassCount, 0)\ndiagnostic(bool, UnsyncloadClass, false)\nproduct(bool, AlwaysLockClassLoader, false)\nproduct(bool, AllowParallelDefineClass, false)\nproduct(bool, MustCallLoadClassInternal, false)\nproduct_pd(bool, DontYieldALot)\nproduct_pd(bool, ConvertSleepToYield)\nproduct(bool, ConvertYieldToSleep, false)\nproduct(bool, UseBoundThreads, true)\ndevelop(bool, UseDetachedThreads, true)\nproduct(bool, UseLWPSynchronization, true)\nproduct(ccstr, SyncKnobs, NULL)\nproduct(intx, EmitSync, 0)\nproduct(intx, hashCode, 5)\nproduct(intx, WorkAroundNPTLTimedWaitHang, 1)\nproduct(bool, FilterSpuriousWakeups, true)\ndevelop(bool, UsePthreads, false)\nproduct(bool, AdjustConcurrency, false)\nproduct(bool, ReduceSignalUsage, false)\ndevelop_pd(bool, ShareVtableStubs)\ndevelop(bool, LoadLineNumberTables, true)\ndevelop(bool, LoadLocalVariableTables, true)\ndevelop(bool, LoadLocalVariableTypeTables, true)\nproduct(bool, AllowUserSignalHandlers, false)\nproduct(bool, UseSignalChaining, true)\nproduct(bool, UseAltSigs, false)\nproduct(bool, AllowJNIEnvProxy, false)\nproduct(bool, JNIDetachReleasesMonitors, true)\nproduct(bool, RestoreMXCSROnJNICalls, false)\nproduct(bool, CheckJNICalls, false)\nproduct(bool, CheckEndorsedAndExtDirs, false)\nproduct(bool, UseFastJNIAccessors, true)\nproduct(intx, MaxJNILocalCapacity, 65536)\nproduct(bool, EagerXrunInit, false)\nproduct(bool, PreserveAllAnnotations, false)\ndevelop(uintx, PreallocatedOutOfMemoryErrorCount, 4)\nproduct(bool, LazyBootClassLoader, true)\nproduct(bool, UseXMMForArrayCopy, false)\nproduct(intx, FieldsAllocationStyle, 1)\nproduct(bool, CompactFields, true)\nnotproduct(bool, PrintFieldLayout, false)\nproduct(intx, ContendedPaddingWidth, 128)\nproduct(bool, EnableContended, true)\nproduct(bool, RestrictContended, true)\nproduct(bool, UseBiasedLocking, true)\nproduct(intx, BiasedLockingStartupDelay, 4000)\ndiagnostic(bool, PrintBiasedLockingStatistics, false)\nproduct(intx, BiasedLockingBulkRebiasThreshold, 20)\nproduct(intx, BiasedLockingBulkRevokeThreshold, 40)\nproduct(intx, BiasedLockingDecayTime, 25000)\nproduct(bool, ExitOnOutOfMemoryError, false)\nproduct(bool, CrashOnOutOfMemoryError, false)\nnotproduct(bool, TraceRuntimeCalls, false)\ndevelop(bool, TraceJNICalls, false)\ndevelop(bool, StressRewriter, false)\nnotproduct(bool, TraceJVMCalls, false)\nproduct(ccstr, TraceJVMTI, NULL)\nproduct(bool, StressLdcRewrite, false)\nproduct(intx, TraceRedefineClasses, 0)\ndevelop(bool, StressMethodComparator, false)\nproduct(bool, VerifyMergedCPBytecodes, true)\ndevelop(bool, TraceJNIHandleAllocation, false)\ndevelop(bool, TraceThreadEvents, false)\ndevelop(bool, TraceBytecodes, false)\ndevelop(bool, TraceClassInitialization, false)\ndevelop(bool, TraceExceptions, false)\ndevelop(bool, TraceICs, false)\nnotproduct(bool, TraceInvocationCounterOverflow, false)\ndevelop(bool, TraceInlineCacheClearing, false)\ndevelop(bool, TraceDependencies, false)\ndevelop(bool, VerifyDependencies, trueInDebug)\ndevelop(bool, TraceNewOopMapGeneration, false)\ndevelop(bool, TraceNewOopMapGenerationDetailed, false)\ndevelop(bool, TimeOopMap, false)\ndevelop(bool, TimeOopMap2, false)\ndevelop(bool, TraceMonitorMismatch, false)\ndevelop(bool, TraceOopMapRewrites, false)\ndevelop(bool, TraceSafepoint, false)\ndevelop(bool, TraceICBuffer, false)\ndevelop(bool, TraceCompiledIC, false)\nnotproduct(bool, TraceZapDeadLocals, false)\ndevelop(bool, TraceStartupTime, false)\ndevelop(bool, TraceProtectionDomainVerification, false)\ndevelop(bool, TraceClearedExceptions, false)\nproduct(bool, TraceClassResolution, false)\nproduct(bool, TraceBiasedLocking, false)\nproduct(bool, TraceMonitorInflation, false)\nproduct(bool, UseSerialGC, false)\nproduct(bool, UseG1GC, false)\nproduct(bool, UseParallelGC, false)\nproduct(bool, UseParallelOldGC, false)\nproduct(uintx, HeapMaximumCompactionInterval, 20)\nproduct(uintx, HeapFirstMaximumCompactionCount, 3)\nproduct(bool, UseMaximumCompactionOnSystemGC, true)\nproduct(uintx, ParallelOldDeadWoodLimiterMean, 50)\nproduct(uintx, ParallelOldDeadWoodLimiterStdDev, 80)\nproduct(uintx, ParallelGCThreads, 0)\nproduct(bool, UseDynamicNumberOfGCThreads, false)\ndiagnostic(bool, ForceDynamicNumberOfGCThreads, false)\nproduct(bool, TraceDynamicGCThreads, false)\ndevelop(bool, ParallelOldGCSplitALot, false)\ndevelop(uintx, ParallelOldGCSplitInterval, 3)\nproduct(uintx, ConcGCThreads, 0)\nproduct(uintx, YoungPLABSize, 4096)\nproduct(uintx, OldPLABSize, 1024)\nproduct(uintx, GCTaskTimeStampEntries, 200)\nproduct(bool, AlwaysTenure, false)\nproduct(bool, NeverTenure, false)\nproduct(bool, ScavengeBeforeFullGC, true)\ndevelop(bool, ScavengeWithObjectsInToSpace, false)\nproduct(bool, UseConcMarkSweepGC, false)\nproduct(bool, ExplicitGCInvokesConcurrent, false)\nproduct(bool, ExplicitGCInvokesConcurrentAndUnloadsClasses, false)\nproduct(bool, GCLockerInvokesConcurrent, false)\nproduct(uintx, GCLockerEdenExpansionPercent, 5)\ndiagnostic(uintx, GCLockerRetryAllocationCount, 2)\ndevelop(bool, UseCMSAdaptiveFreeLists, true)\ndevelop(bool, UseAsyncConcMarkSweepGC, true)\ndevelop(bool, RotateCMSCollectionTypes, false)\nproduct(bool, UseCMSBestFit, true)\nproduct(bool, UseCMSCollectionPassing, true)\nproduct(bool, UseParNewGC, false)\nproduct(bool, ParallelGCVerbose, false)\nproduct(uintx, ParallelGCBufferWastePct, 10)\ndiagnostic(bool, ParallelGCRetainPLAB, false)\nproduct(uintx, TargetPLABWastePct, 10)\nproduct(uintx, PLABWeight, 75)\nproduct(bool, ResizePLAB, true)\nproduct(bool, PrintPLAB, false)\nproduct(intx, ParGCArrayScanChunk, 50)\nproduct(bool, ParGCUseLocalOverflow, false)\nproduct(bool, ParGCTrimOverflow, true)\nnotproduct(bool, ParGCWorkQueueOverflowALot, false)\nnotproduct(uintx, ParGCWorkQueueOverflowInterval, 1000)\nproduct(uintx, ParGCDesiredObjsFromOverflowList, 20)\ndiagnostic(uintx, ParGCStridesPerThread, 2)\ndiagnostic(intx, ParGCCardsPerStrideChunk, 256)\nproduct(uintx, CMSParPromoteBlocksToClaim, 16)\nproduct(uintx, OldPLABWeight, 50)\nproduct(bool, ResizeOldPLAB, true)\nproduct(bool, PrintOldPLAB, false)\nproduct(uintx, CMSOldPLABMin, 16)\nproduct(uintx, CMSOldPLABMax, 1024)\nproduct(uintx, CMSOldPLABNumRefills, 4)\nproduct(bool, CMSOldPLABResizeQuicker, false)\nproduct(uintx, CMSOldPLABToleranceFactor, 4)\nproduct(uintx, CMSOldPLABReactivityFactor, 2)\nproduct(bool, AlwaysPreTouch, false)\nproduct_pd(uintx, CMSYoungGenPerWorker)\nproduct(bool, CMSIncrementalMode, false)\nproduct(uintx, CMSIncrementalDutyCycle, 10)\nproduct(bool, CMSIncrementalPacing, true)\nproduct(uintx, CMSIncrementalDutyCycleMin, 0)\nproduct(uintx, CMSIncrementalSafetyFactor, 10)\nproduct(uintx, CMSIncrementalOffset, 0)\nproduct(uintx, CMSExpAvgFactor, 50)\nproduct(uintx, CMS_FLSWeight, 75)\nproduct(uintx, CMS_FLSPadding, 1)\nproduct(uintx, FLSCoalescePolicy, 2)\nproduct(bool, FLSAlwaysCoalesceLarge, false)\nproduct(double, FLSLargestBlockCoalesceProximity, 0.99)\nproduct(double, CMSSmallCoalSurplusPercent, 1.05)\nproduct(double, CMSLargeCoalSurplusPercent, 0.95)\nproduct(double, CMSSmallSplitSurplusPercent, 1.10)\nproduct(double, CMSLargeSplitSurplusPercent, 1.00)\nproduct(bool, CMSExtrapolateSweep, false)\nproduct(uintx, CMS_SweepWeight, 75)\nproduct(uintx, CMS_SweepPadding, 1)\nproduct(uintx, CMS_SweepTimerThresholdMillis, 10)\ndevelop(bool, CMSTraceIncrementalMode, false)\ndevelop(bool, CMSTraceIncrementalPacing, false)\ndevelop(bool, CMSTraceThreadState, false)\nproduct(bool, CMSClassUnloadingEnabled, true)\nproduct(uintx, CMSClassUnloadingMaxInterval, 0)\nproduct(bool, CMSCompactWhenClearAllSoftRefs, true)\nproduct(bool, UseCMSCompactAtFullCollection, true)\nproduct(uintx, CMSFullGCsBeforeCompaction, 0)\ndevelop(intx, CMSDictionaryChoice, 0)\nproduct(uintx, CMSIndexedFreeListReplenish, 4)\nproduct(bool, CMSReplenishIntermediate, true)\nproduct(bool, CMSSplitIndexedFreeListBlocks, true)\nproduct(bool, CMSLoopWarn, false)\ndevelop(bool, CMSOverflowEarlyRestoration, false)\nnotproduct(bool, CMSMarkStackOverflowALot, false)\nnotproduct(uintx, CMSMarkStackOverflowInterval, 1000)\nproduct(uintx, CMSMaxAbortablePrecleanLoops, 0)\nproduct(intx, CMSMaxAbortablePrecleanTime, 5000)\nproduct(uintx, CMSAbortablePrecleanMinWorkPerIteration, 100)\nmanageable(intx, CMSAbortablePrecleanWaitMillis, 100)\nproduct(uintx, CMSRescanMultiple, 32)\nproduct(uintx, CMSConcMarkMultiple, 32)\nproduct(bool, CMSAbortSemantics, false)\nproduct(bool, CMSParallelInitialMarkEnabled, true)\nproduct(bool, CMSParallelRemarkEnabled, true)\nproduct(bool, CMSParallelSurvivorRemarkEnabled, true)\nproduct(bool, CMSPLABRecordAlways, true)\nproduct(bool, CMSEdenChunksRecordAlways, true)\nproduct(bool, CMSPrintEdenSurvivorChunks, false)\nproduct(bool, CMSConcurrentMTEnabled, true)\nproduct(bool, CMSPrecleaningEnabled, true)\nproduct(uintx, CMSPrecleanIter, 3)\nproduct(uintx, CMSPrecleanNumerator, 2)\nproduct(uintx, CMSPrecleanDenominator, 3)\nproduct(bool, CMSPrecleanRefLists1, true)\nproduct(bool, CMSPrecleanRefLists2, false)\nproduct(bool, CMSPrecleanSurvivors1, false)\nproduct(bool, CMSPrecleanSurvivors2, true)\nproduct(uintx, CMSPrecleanThreshold, 1000)\nproduct(bool, CMSCleanOnEnter, true)\nproduct(uintx, CMSRemarkVerifyVariant, 1)\nproduct(uintx, CMSScheduleRemarkEdenPenetration, 50)\nproduct(uintx, CMSScheduleRemarkSamplingRatio, 5)\nproduct(bool, CMSScavengeBeforeRemark, false)\ndevelop(bool, CMSTraceSweeper, false)\nproduct(uintx, CMSWorkQueueDrainThreshold, 10)\nmanageable(intx, CMSWaitDuration, 2000)\ndevelop(uintx, CMSCheckInterval, 1000)\nproduct(bool, CMSYield, true)\nproduct(bool, CMSDumpAtPromotionFailure, false)\nproduct(bool, CMSPrintChunksInDump, false)\nproduct(bool, CMSPrintObjectsInDump, false)\ndiagnostic(bool, FLSVerifyAllHeapReferences, false)\ndiagnostic(bool, FLSVerifyLists, false)\ndiagnostic(bool, FLSVerifyIndexTable, false)\ndevelop(bool, FLSVerifyDictionary, false)\ndevelop(bool, VerifyBlockOffsetArray, false)\ndiagnostic(bool, BlockOffsetArrayUseUnallocatedBlock, false)\ndevelop(bool, TraceCMSState, false)\nproduct(intx, RefDiscoveryPolicy, 0)\nproduct(bool, ParallelRefProcEnabled, false)\nproduct(bool, ParallelRefProcBalancingEnabled, true)\nproduct(uintx, CMSTriggerRatio, 80)\nproduct(uintx, CMSBootstrapOccupancy, 50)\nproduct(intx, CMSInitiatingOccupancyFraction, -1)\nproduct(uintx, InitiatingHeapOccupancyPercent, 45)\nmanageable(intx, CMSTriggerInterval, -1)\nproduct(bool, UseCMSInitiatingOccupancyOnly, false)\nproduct(uintx, CMSIsTooFullPercentage, 98)\ndevelop(bool, CMSTestInFreeList, false)\nnotproduct(bool, CMSVerifyReturnedBytes, false)\nnotproduct(bool, ScavengeALot, false)\ndevelop(bool, FullGCALot, false)\nnotproduct(bool, GCALotAtAllSafepoints, false)\nproduct(bool, PrintPromotionFailure, false)\nnotproduct(bool, PromotionFailureALot, false)\ndevelop(uintx, PromotionFailureALotCount, 1000)\ndevelop(uintx, PromotionFailureALotInterval, 5)\nexperimental(uintx, WorkStealingSleepMillis, 1)\nexperimental(uintx, WorkStealingYieldsBeforeSleep, 5000)\nexperimental(uintx, WorkStealingHardSpins, 4096)\nexperimental(uintx, WorkStealingSpinToYieldRatio, 10)\ndevelop(uintx, ObjArrayMarkingStride, 512)\ndevelop(bool, MetadataAllocationFailALot, false)\ndevelop(uintx, MetadataAllocationFailALotInterval, 1000)\ndevelop(bool, TraceMetadataChunkAllocation, false)\nproduct(bool, TraceMetadataHumongousAllocation, false)\ndevelop(bool, TraceMetavirtualspaceAllocation, false)\nnotproduct(bool, ExecuteInternalVMTests, false)\nnotproduct(bool, VerboseInternalVMTests, false)\nproduct_pd(bool, ResizeTLAB)\nproduct(bool, ZeroTLAB, false)\nproduct(bool, FastTLABRefill, true)\nproduct(bool, PrintTLAB, false)\nproduct(bool, TLABStats, true)\nproduct_pd(bool, NeverActAsServerClassMachine)\nproduct(bool, AlwaysActAsServerClassMachine, false)\nproduct_pd(uint64_t, MaxRAM)\nproduct(uintx, ErgoHeapSizeLimit, 0)\nexperimental(bool, UseCGroupMemoryLimitForHeap, false)\nproduct(uintx, MaxRAMFraction, 4)\nproduct(uintx, DefaultMaxRAMFraction, 4)\nproduct(uintx, MinRAMFraction, 2)\nproduct(uintx, InitialRAMFraction, 64)\ndevelop(uintx, MaxVirtMemFraction, 2)\nproduct(bool, UseAutoGCSelectPolicy, false)\nproduct(uintx, AutoGCSelectPauseMillis, 5000)\nproduct(bool, UseAdaptiveSizePolicy, true)\nproduct(bool, UsePSAdaptiveSurvivorSizePolicy, true)\nproduct(bool, UseAdaptiveGenerationSizePolicyAtMinorCollection, true)\nproduct(bool, UseAdaptiveGenerationSizePolicyAtMajorCollection, true)\nproduct(bool, UseAdaptiveSizePolicyWithSystemGC, false)\nproduct(bool, UseAdaptiveGCBoundary, false)\ndevelop(bool, TraceAdaptiveGCBoundary, false)\ndevelop(intx, PSAdaptiveSizePolicyResizeVirtualSpaceAlot, -1)\nproduct(uintx, AdaptiveSizeThroughPutPolicy, 0)\nproduct(uintx, AdaptiveSizePausePolicy, 0)\ndevelop(bool, PSAdjustTenuredGenForMinorPause, false)\ndevelop(bool, PSAdjustYoungGenForMajorPause, false)\nproduct(uintx, AdaptiveSizePolicyInitializingSteps, 20)\ndevelop(uintx, AdaptiveSizePolicyReadyThreshold, 5)\nproduct(uintx, AdaptiveSizePolicyOutputInterval, 0)\nproduct(bool, UseAdaptiveSizePolicyFootprintGoal, true)\nproduct(uintx, AdaptiveSizePolicyWeight, 10)\nproduct(uintx, AdaptiveTimeWeight,       25)\nproduct(uintx, PausePadding, 1)\nproduct(uintx, PromotedPadding, 3)\nproduct(uintx, SurvivorPadding, 3)\nproduct(uintx, ThresholdTolerance, 10)\nproduct(uintx, AdaptiveSizePolicyCollectionCostMargin, 50)\nproduct(uintx, YoungGenerationSizeIncrement, 20)\nproduct(uintx, YoungGenerationSizeSupplement, 80)\nproduct(uintx, YoungGenerationSizeSupplementDecay, 8)\nproduct(uintx, TenuredGenerationSizeIncrement, 20)\nproduct(uintx, TenuredGenerationSizeSupplement, 80)\nproduct(uintx, TenuredGenerationSizeSupplementDecay, 2)\nproduct(uintx, MaxGCPauseMillis, max_uintx)\nproduct(uintx, GCPauseIntervalMillis, 0)\nproduct(uintx, MaxGCMinorPauseMillis, max_uintx)\nproduct(uintx, GCTimeRatio, 99)\nproduct(uintx, AdaptiveSizeDecrementScaleFactor, 4)\nproduct(bool, UseAdaptiveSizeDecayMajorGCCost, true)\nproduct(uintx, AdaptiveSizeMajorGCDecayTimeScale, 10)\nproduct(uintx, MinSurvivorRatio, 3)\nproduct(uintx, InitialSurvivorRatio, 8)\nproduct(bool, UseGCOverheadLimit, true)\nproduct(uintx, GCTimeLimit, 98)\nproduct(uintx, GCHeapFreeLimit, 2)\ndevelop(uintx, AdaptiveSizePolicyGCTimeLimitThreshold, 5)\nproduct(bool, PrintAdaptiveSizePolicy, false)\nproduct(intx, PrefetchCopyIntervalInBytes, -1)\nproduct(intx, PrefetchScanIntervalInBytes, -1)\nproduct(intx, PrefetchFieldsAhead, -1)\ndiagnostic(bool, VerifySilently, false)\ndiagnostic(bool, VerifyDuringStartup, false)\ndiagnostic(bool, VerifyBeforeExit, trueInDebug)\ndiagnostic(bool, VerifyBeforeGC, false)\ndiagnostic(bool, VerifyAfterGC, false)\ndiagnostic(bool, VerifyDuringGC, false)\ndiagnostic(bool, GCParallelVerificationEnabled, true)\ndiagnostic(bool, DeferInitialCardMark, false)\ndiagnostic(bool, VerifyRememberedSets, false)\ndiagnostic(bool, VerifyObjectStartArray, true)\nproduct(bool, DisableExplicitGC, false)\nnotproduct(bool, CheckMemoryInitialization, false)\nproduct(bool, CollectGen0First, false)\ndiagnostic(bool, BindCMSThreadToCPU, false)\ndiagnostic(uintx, CPUForCMSThread, 0)\nproduct(bool, BindGCTaskThreadsToCPUs, false)\nproduct(bool, UseGCTaskAffinity, false)\nproduct(uintx, ProcessDistributionStride, 4)\nproduct(uintx, CMSCoordinatorYieldSleepCount, 10)\nproduct(uintx, CMSYieldSleepCount, 0)\nmanageable(bool, PrintGC, false)\nmanageable(bool, PrintGCDetails, false)\nmanageable(bool, PrintGCDateStamps, false)\nmanageable(bool, PrintGCTimeStamps, false)\nmanageable(bool, PrintGCID, false)\nproduct(bool, PrintGCTaskTimeStamps, false)\ndevelop(intx, ConcGCYieldTimeout, 0)\nnotproduct(bool, TraceMarkSweep, false)\nproduct(bool, PrintReferenceGC, false)\ndevelop(bool, TraceReferenceGC, false)\ndevelop(bool, TraceFinalizerRegistration, false)\nnotproduct(bool, TraceScavenge, false)\nproduct(bool, IgnoreEmptyClassPaths, false)\nproduct(bool, TraceClassPaths, false)\nproduct_rw(bool, TraceClassLoading, false)\nproduct(bool, TraceClassLoadingPreorder, false)\nproduct_rw(bool, TraceClassUnloading, false)\nproduct_rw(bool, TraceLoaderConstraints, false)\ndevelop(bool, TraceClassLoaderData, false)\nproduct(uintx, InitialBootClassLoaderMetaspaceSize)\nproduct(bool, TraceGen0Time, false)\nproduct(bool, TraceGen1Time, false)\nproduct(bool, PrintTenuringDistribution, false)\nproduct_rw(bool, PrintHeapAtGC, false)\nproduct_rw(bool, PrintHeapAtGCExtended, false)\nproduct(bool, PrintHeapAtSIGBREAK, true)\nmanageable(bool, PrintClassHistogramBeforeFullGC, false)\nmanageable(bool, PrintClassHistogramAfterFullGC, false)\nmanageable(bool, PrintClassHistogram, false)\ndevelop(bool, TraceWorkGang, false)\nproduct(bool, TraceParallelOldGCTasks, false)\ndevelop(bool, TraceBlockOffsetTable, false)\ndevelop(bool, TraceCardTableModRefBS, false)\ndevelop(bool, TraceGCTaskManager, false)\ndevelop(bool, TraceGCTaskQueue, false)\ndiagnostic(bool, TraceGCTaskThread, false)\nproduct(bool, PrintParallelOldGCPhaseTimes, false)\ndevelop(bool, TraceParallelOldGCMarkingPhase, false)\ndevelop(bool, TraceParallelOldGCSummaryPhase, false)\ndevelop(bool, TraceParallelOldGCCompactionPhase, false)\ndevelop(bool, TraceParallelOldGCDensePrefix, false)\ndevelop(bool, IgnoreLibthreadGPFault, false)\nproduct(bool, PrintJNIGCStalls, false)\nexperimental(double, ObjectCountCutOffPercent, 0.5)\nproduct(bool, UseGCLogFileRotation, false)\nproduct(uintx, NumberOfGCLogFiles, 0)\ndiagnostic(bool, TraceJVMTIObjectTagging, false)\ndiagnostic(bool, VerifyBeforeIteration, false)\ndevelop(bool, CIPrintCompilerName, false)\ndevelop(bool, CIPrintCompileQueue, false)\ndevelop(bool, CIPrintRequests, false)\nproduct(bool, CITime, false)\ndevelop(bool, CITimeEach, false)\ndevelop(bool, CICountOSR, false)\ndevelop(bool, CICompileNatives, true)\ndevelop_pd(bool, CICompileOSR)\ndevelop(bool, CIPrintMethodCodes, false)\ndevelop(bool, CIPrintTypeFlow, false)\ndevelop(bool, CITraceTypeFlow, false)\ndevelop(intx, OSROnlyBCI, -1)\nproduct(intx, CICompilerCount, CI_COMPILER_COUNT)\nproduct(intx, CompilationPolicyChoice, 0)\ndevelop(bool, UseStackBanging, true)\ndevelop(bool, UseStrictFP, true)\ndevelop(bool, GenerateSynchronizationCode, true)\ndevelop(bool, GenerateCompilerNullChecks, true)\ndevelop(bool, GenerateRangeChecks, true)\ndevelop_pd(bool, ImplicitNullChecks)\nproduct_pd(bool, TrapBasedNullChecks)\nproduct(bool, PrintSafepointStatistics, false)\nproduct(intx, PrintSafepointStatisticsCount, 300)\nproduct(intx, PrintSafepointStatisticsTimeout,  -1)\nproduct(bool, TraceSafepointCleanupTime, false)\nproduct(bool, Inline, true)\nproduct(bool, ClipInlining, true)\ndevelop(bool, UseCHA, true)\nproduct(bool, UseTypeProfile, true)\nnotproduct(bool, TimeCompiler, false)\ndiagnostic(bool, PrintInlining, false)\nproduct(bool, UsePopCountInstruction, false)\ndevelop(bool, EagerInitialization, false)\ndevelop(bool, TraceMethodReplacement, false)\ndevelop(bool, PrintMethodFlushing, false)\ndiagnostic(bool, PrintMethodFlushingStatistics, false)\ndevelop(bool, UseRelocIndex, false)\ndevelop(bool, StressCodeBuffers, false)\ndiagnostic(bool, DebugNonSafepoints, trueInDebug)\nproduct(bool, PrintVMOptions, false)\nproduct(bool, IgnoreUnrecognizedVMOptions, false)\nproduct(bool, PrintCommandLineFlags, false)\nproduct(bool, PrintFlagsInitial, false)\nproduct(bool, PrintFlagsFinal, false)\nnotproduct(bool, PrintFlagsWithComments, false)\ndiagnostic(bool, SerializeVMOutput, true)\ndiagnostic(bool, DisplayVMOutput, true)\ndiagnostic(bool, LogVMOutput, false)\ndiagnostic(ccstr, LogFile, NULL)\nproduct(ccstr, ErrorFile, NULL)\nproduct(bool, DisplayVMOutputToStderr, false)\nproduct(bool, DisplayVMOutputToStdout, false)\nproduct(bool, UseHeavyMonitors, false)\nproduct(bool, PrintStringTableStatistics, false)\ndiagnostic(bool, VerifyStringTableAtExit, false)\nnotproduct(bool, PrintSymbolTableSizeHistogram, false)\nnotproduct(bool, ExitVMOnVerifyError, false)\nnotproduct(ccstr, AbortVMOnException, NULL)\nnotproduct(ccstr, AbortVMOnExceptionMessage, NULL)\ndevelop(bool, DebugVtables, false)\ndevelop(bool, PrintVtables, false)\nnotproduct(bool, PrintVtableStats, false)\ndevelop(bool, TraceCreateZombies, false)\nnotproduct(bool, IgnoreLockingAssertions, false)\nproduct(bool, RangeCheckElimination, true)\ndevelop_pd(bool, UncommonNullCast)\ndevelop(bool, TypeProfileCasts,  true)\ndevelop(bool, DelayCompilationDuringStartup, true)\ndevelop(bool, CompileTheWorld, false)\ndevelop(bool, CompileTheWorldPreloadClasses, true)\nnotproduct(intx, CompileTheWorldSafepointInterval, 100)\ndevelop(bool, FillDelaySlots, true)\ndevelop(bool, TimeLivenessAnalysis, false)\ndevelop(bool, TraceLivenessGen, false)\nnotproduct(bool, TraceLivenessQuery, false)\nnotproduct(bool, CollectIndexSetStatistics, false)\ndevelop(bool, UseLoopSafepoints, true)\nproduct(bool, AggressiveOpts, false)\nproduct_pd(uintx, TypeProfileLevel)\nproduct(intx, TypeProfileArgsLimit,     2)\nproduct(intx, TypeProfileParmsLimit,    2)\ndevelop(bool, CountCompiledCalls, false)\nnotproduct(bool, CountRuntimeCalls, false)\ndevelop(bool, CountJNICalls, false)\nnotproduct(bool, CountJVMCalls, false)\nnotproduct(bool, CountRemovableExceptions, false)\nnotproduct(bool, ICMissHistogram, false)\nnotproduct(bool, PrintClassStatistics, false)\nnotproduct(bool, PrintMethodStatistics, false)\ndevelop(bool, ClearInterpreterLocals, false)\nproduct_pd(bool, RewriteBytecodes)\nproduct_pd(bool, RewriteFrequentPairs)\ndiagnostic(bool, PrintInterpreter, false)\nproduct(bool, UseInterpreter, true)\ndevelop(bool, UseFastSignatureHandlers, true)\nproduct(bool, UseLoopCounter, true)\nproduct(bool, UseFastEmptyMethods, true)\nproduct(bool, UseFastAccessorMethods, true)\nproduct_pd(bool, UseOnStackReplacement)\nnotproduct(bool, TraceOnStackReplacement, false)\nproduct_pd(bool, PreferInterpreterNativeStubs)\ndevelop(bool, CountBytecodes, false)\ndevelop(bool, PrintBytecodeHistogram, false)\ndevelop(bool, PrintBytecodePairHistogram, false)\ndiagnostic(bool, PrintSignatureHandlers, false)\ndevelop(bool, VerifyOops, false)\ndevelop(bool, CheckUnhandledOops, false)\ndevelop(bool, VerifyJNIFields, trueInDebug)\nnotproduct(bool, VerifyJNIEnvThread, false)\ndevelop(bool, VerifyFPU, false)\ndevelop(bool, VerifyThread, false)\ndevelop(bool, VerifyActivationFrameSize, false)\ndevelop(bool, TraceFrequencyInlining, false)\ndevelop_pd(bool, InlineIntrinsics)\nproduct_pd(bool, ProfileInterpreter)\ndevelop(bool, TraceProfileInterpreter, false)\ndevelop_pd(bool, ProfileTraps)\nproduct(intx, ProfileMaturityPercentage, 20)\ndevelop(bool, PrintMethodData, false)\ndevelop(bool, VerifyDataPointer, trueInDebug)\ndevelop(bool, VerifyCompiledCode, false)\nnotproduct(bool, CrashGCForDumpingJavaThread, false)\nproduct(bool, UseCompiler, true)\ndevelop(bool, TraceCompilationPolicy, false)\ndevelop(bool, TimeCompilationPolicy, false)\nproduct(bool, UseCounterDecay, true)\ndevelop(intx, CounterHalfLifeTime,    30)\ndevelop(intx, CounterDecayMinIntervalLength,   500)\nproduct(bool, AlwaysCompileLoopMethods, false)\nproduct(bool, DontCompileHugeMethods, true)\nproduct(bool, EstimateArgEscape, true)\nproduct(intx, BCEATraceLevel, 0)\nproduct(intx, MaxBCEAEstimateLevel, 5)\nproduct(intx, MaxBCEAEstimateSize, 150)\nproduct(intx,  AllocatePrefetchStyle, 1)\nproduct(intx,  AllocatePrefetchDistance, -1)\nproduct(intx,  AllocatePrefetchLines, 3)\nproduct(intx,  AllocateInstancePrefetchLines, 1)\nproduct(intx,  AllocatePrefetchStepSize, 16)\nproduct(intx,  AllocatePrefetchInstr, 0)\ndevelop(bool, TraceDeoptimization, false)\ndevelop(bool, DebugDeoptimization, false)\nproduct(intx, SelfDestructTimer, 0)\nproduct(intx, MaxJavaStackTraceDepth, 1024)\nNOT_EMBEDDED(diagnostic(intx, GuaranteedSafepointInterval, 1000)\nEMBEDDED_ONLY(product(intx, GuaranteedSafepointInterval, 0)\nproduct(intx, SafepointTimeoutDelay, 10000)\nproduct(intx, NmethodSweepFraction, 16)\nproduct(intx, NmethodSweepCheckInterval, 5)\nproduct(intx, NmethodSweepActivity, 10)\nnotproduct(bool, LogSweeper, false)\nnotproduct(intx, SweeperLogEntries, 1024)\nnotproduct(intx, MemProfilingInterval, 500)\ndevelop(intx, MallocCatchPtr, -1)\nnotproduct(intx, AssertRepeat, 1)\nnotproduct(uintx, HandleAllocationLimit, 1024)\ndevelop(uintx, TotalHandleAllocationLimit, 1024)\ndevelop(intx, StackPrintLimit, 100)\nnotproduct(intx, MaxElementPrintSize, 256)\nnotproduct(intx, MaxSubklassPrintSize, 4)\nproduct(intx, MaxInlineLevel, 9)\nproduct(intx, MaxRecursiveInlineLevel, 1)\ndevelop(intx, MaxForceInlineLevel, 100)\nproduct_pd(intx, InlineSmallCode)\nproduct(intx, MaxInlineSize, 35)\nproduct_pd(intx, FreqInlineSize)\nproduct(intx, MaxTrivialSize, 6)\nproduct(intx, MinInliningThreshold, 250)\ndevelop(intx, MethodHistogramCutoff, 100)\ndevelop(intx, ProfilerNumberOfInterpretedMethods, 25)\ndevelop(intx, ProfilerNumberOfCompiledMethods, 25)\ndevelop(intx, ProfilerNumberOfStubMethods, 25)\ndevelop(intx, ProfilerNumberOfRuntimeStubNodes, 25)\nproduct(intx, ProfileIntervalsTicks, 100)\nnotproduct(intx, ScavengeALotInterval,     1)\nnotproduct(intx, FullGCALotInterval,     1)\nnotproduct(intx, FullGCALotStart,     0)\ndevelop(intx, DontYieldALotInterval,    10)\ndevelop(intx, MinSleepInterval,     1)\ndevelop(intx, ProfilerPCTickThreshold,    15)\nnotproduct(intx, DeoptimizeALotInterval,     5)\nnotproduct(intx, ZombieALotInterval,     5)\ndiagnostic(intx, MallocVerifyInterval,     0)\ndiagnostic(intx, MallocVerifyStart,     0)\ndiagnostic(uintx, MallocMaxTestWords,     0)\nproduct(intx, TypeProfileWidth,     2)\ndevelop(intx, BciProfileWidth,      2)\nproduct(intx, PerMethodRecompilationCutoff, 400)\nproduct(intx, PerBytecodeRecompilationCutoff, 200)\nproduct(intx, PerMethodTrapLimit,  100)\nexperimental(intx, PerMethodSpecTrapLimit,  5000)\nproduct(intx, PerBytecodeTrapLimit,  4)\nexperimental(intx, SpecTrapLimitExtraEntries,  3)\ndevelop(intx, InlineFrequencyRatio,    20)\ndevelop_pd(intx, InlineFrequencyCount)\ndevelop(intx, InlineThrowCount,    50)\ndevelop(intx, InlineThrowMaxSize,   200)\ndevelop(intx, ProfilerNodeSize,  1024)\nproduct_pd(intx, PreInflateSpin)\nproduct(uintx, InitialHeapSize, 0)\nproduct(uintx, MaxNewSize, max_uintx)\nproduct(uintx, PretenureSizeThreshold, 0)\nproduct(uintx, TLABSize, 0)\nproduct(uintx, TLABAllocationWeight, 35)\nproduct(uintx, TLABWasteTargetPercent, 1)\nproduct(uintx, TLABRefillWasteFraction,    64)\nproduct(uintx, TLABWasteIncrement,    4)\nproduct(uintx, SurvivorRatio, 8)\nproduct(uintx, NewRatio, 2)\nproduct_pd(uintx, NewSizeThreadIncrease)\nproduct_pd(uintx, MetaspaceSize)\nproduct(uintx, MaxMetaspaceSize, max_uintx)\nmanageable(uintx, MinHeapFreeRatio, 40)\nmanageable(uintx, MaxHeapFreeRatio, 70)\nproduct(intx, SoftRefLRUPolicyMSPerMB, 1000)\nproduct(uintx, MinMetaspaceFreeRatio,    40)\nproduct(uintx, MaxMetaspaceFreeRatio,    70)\nproduct(uintx, QueuedAllocationWarningCount, 0)\ndiagnostic(uintx, VerifyGCStartAt,   0)\ndiagnostic(intx, VerifyGCLevel,     0)\nproduct(uintx, MaxTenuringThreshold,    15)\nproduct(uintx, InitialTenuringThreshold,    7)\nproduct(uintx, TargetSurvivorRatio,    50)\nproduct(uintx, MarkSweepDeadRatio,     5)\nproduct(uintx, MarkSweepAlwaysCompactCount,     4)\nproduct(intx, PrintCMSStatistics, 0)\nproduct(bool, PrintCMSInitiationStatistics, false)\nproduct(intx, PrintFLSStatistics, 0)\nproduct(intx, PrintFLSCensus, 0)\ndevelop(uintx, GCExpandToAllocateDelayMillis, 0)\ndevelop(uintx, GCWorkerDelayMillis, 0)\nproduct(intx, DeferThrSuspendLoopCount,     4000)\nproduct(intx, DeferPollingPageLoopCount,     -1)\nproduct(bool, PSChunkLargeArrays, true)\nproduct(uintx, GCDrainStackTargetSize, 64)\nproduct_pd(intx, StackYellowPages)\nproduct_pd(intx, StackRedPages)\nproduct_pd(intx, StackShadowPages)\nproduct_pd(intx, ThreadStackSize)\nproduct_pd(intx, VMThreadStackSize)\nproduct_pd(intx, CompilerThreadStackSize)\ndevelop_pd(uintx, JVMInvokeMethodSlack)\ndevelop(uintx, CodeCacheSegmentSize, 64 PPC64_ONLY(+64))\ndevelop_pd(intx, CodeEntryAlignment)\nproduct_pd(intx, OptoLoopAlignment)\nproduct_pd(uintx, InitialCodeCacheSize)\ndevelop_pd(uintx, CodeCacheMinimumUseSpace)\nproduct_pd(uintx, ReservedCodeCacheSize)\nproduct_pd(uintx, CodeCacheExpansionSize)\ndevelop_pd(uintx, CodeCacheMinBlockLength)\nnotproduct(bool, ExitOnFullCodeCache, false)\nproduct(bool, UseCodeCacheFlushing, true)\ndevelop(intx, BinarySwitchThreshold, 5)\ndevelop(intx, StopInterpreterAt, 0)\ndevelop(intx, TraceBytecodesAt, 0)\ndevelop(intx, CIStart, 0)\ndevelop(intx, CIStop, max_jint)\ndevelop(intx, CIStartOSR, 0)\ndevelop(intx, CIStopOSR, max_jint)\ndevelop(intx, CIBreakAtOSR, -1)\ndevelop(intx, CIBreakAt, -1)\nproduct(ccstr, CompileCommandFile, NULL)\ndevelop(bool, ReplayCompiles, false)\nproduct(ccstr, ReplayDataFile, NULL)\nproduct(ccstr, InlineDataFile, NULL)\ndevelop(intx, ReplaySuppressInitializers, 2)\ndevelop(bool, ReplayIgnoreInitErrors, false)\nproduct(bool, DumpReplayDataOnError, true)\nproduct(bool, CICompilerCountPerCPU, false)\ndevelop(intx, CIFireOOMAt,    -1)\nnotproduct(intx, CICrashAt, -1)\nnotproduct(bool, CIObjectFactoryVerify, false)\nproduct(intx, ThreadPriorityPolicy, 0)\nproduct(bool, ThreadPriorityVerbose, false)\nproduct(intx, DefaultThreadPriority, -1)\nproduct(intx, CompilerThreadPriority, -1)\nproduct(intx, VMThreadPriority, -1)\nproduct(bool, CompilerThreadHintNoPreempt, true)\nproduct(bool, VMThreadHintNoPreempt, false)\nproduct(intx, JavaPriority1_To_OSPriority, -1)\nproduct(intx, JavaPriority2_To_OSPriority, -1)\nproduct(intx, JavaPriority3_To_OSPriority, -1)\nproduct(intx, JavaPriority4_To_OSPriority, -1)\nproduct(intx, JavaPriority5_To_OSPriority, -1)\nproduct(intx, JavaPriority6_To_OSPriority, -1)\nproduct(intx, JavaPriority7_To_OSPriority, -1)\nproduct(intx, JavaPriority8_To_OSPriority, -1)\nproduct(intx, JavaPriority9_To_OSPriority, -1)\nproduct(intx, JavaPriority10_To_OSPriority,-1)\nexperimental(bool, UseCriticalJavaThreadPriority, false)\nexperimental(bool, UseCriticalCompilerThreadPriority, false)\nexperimental(bool, UseCriticalCMSThreadPriority, false)\nnotproduct(intx, CompileTheWorldStartAt,     1)\nnotproduct(intx, CompileTheWorldStopAt, max_jint)\ndevelop(intx, NewCodeParameter,      0)\ndevelop(intx, MinOopMapAllocation,     8)\ndevelop(intx, LongCompileThreshold,     50)\nproduct(intx, StarvationMonitorInterval,    200)\nproduct_pd(intx, CompileThreshold)\nproduct_pd(intx, BackEdgeThreshold)\nproduct(intx, Tier0InvokeNotifyFreqLog, 7)\nproduct(intx, Tier2InvokeNotifyFreqLog, 11)\nproduct(intx, Tier3InvokeNotifyFreqLog, 10)\nproduct(intx, Tier23InlineeNotifyFreqLog, 20)\nproduct(intx, Tier0BackedgeNotifyFreqLog, 10)\nproduct(intx, Tier2BackedgeNotifyFreqLog, 14)\nproduct(intx, Tier3BackedgeNotifyFreqLog, 13)\nproduct(intx, Tier2CompileThreshold, 0)\nproduct(intx, Tier2BackEdgeThreshold, 0)\nproduct(intx, Tier3InvocationThreshold, 200)\nproduct(intx, Tier3MinInvocationThreshold, 100)\nproduct(intx, Tier3CompileThreshold, 2000)\nproduct(intx, Tier3BackEdgeThreshold,  60000)\nproduct(intx, Tier4InvocationThreshold, 5000)\nproduct(intx, Tier4MinInvocationThreshold, 600)\nproduct(intx, Tier4CompileThreshold, 15000)\nproduct(intx, Tier4BackEdgeThreshold, 40000)\nproduct(intx, Tier3DelayOn, 5)\nproduct(intx, Tier3DelayOff, 2)\nproduct(intx, Tier3LoadFeedback, 5)\nproduct(intx, Tier4LoadFeedback, 3)\nproduct(intx, TieredCompileTaskTimeout, 50)\nproduct(intx, TieredStopAtLevel, 4)\nproduct(intx, Tier0ProfilingStartPercentage, 200)\nproduct(uintx, IncreaseFirstTierCompileThresholdAt, 50)\nproduct(intx, TieredRateUpdateMinTime, 1)\nproduct(intx, TieredRateUpdateMaxTime, 25)\nproduct_pd(bool, TieredCompilation)\nproduct(bool, PrintTieredEvents, false)\nproduct_pd(intx, OnStackReplacePercentage)\nproduct(intx, InterpreterProfilePercentage, 33)\ndevelop(intx, MaxRecompilationSearchLength,    10)\ndevelop(intx, MaxInterpretedSearchLength,     3)\ndevelop(intx, DesiredMethodLimit,  8000)\ndevelop(intx, HugeMethodLimit,  8000)\ndevelop(bool, UseNewReflection, true)\ndevelop(bool, VerifyReflectionBytecodes, false)\nproduct(bool, ReflectionWrapResolutionErrors, true)\ndevelop(intx, FastSuperclassLimit, 8)\nproduct(uintx, MaxDirectMemorySize, 0)\ndiagnostic(bool, UseNewCode, false)\ndiagnostic(bool, UseNewCode2, false)\ndiagnostic(bool, UseNewCode3, false)\nproduct(bool, UsePerfData, falseInEmbedded)\nproduct(bool, PerfDataSaveToFile, false)\nproduct(ccstr, PerfDataSaveFile, NULL)\nproduct(intx, PerfDataSamplingInterval, 50)\ndevelop(bool, PerfTraceDataCreation, false)\ndevelop(bool, PerfTraceMemOps, false)\nproduct(bool, PerfDisableSharedMem, false)\nproduct(intx, PerfMaxStringConstLength, 1024)\nproduct(bool, PerfAllowAtExitRegistration, false)\nproduct(bool, PerfBypassFileSystemCheck, false)\nproduct(intx, UnguardOnExecutionViolation, 0)\nproduct(bool, ManagementServer, false)\nproduct(bool, DisableAttachMechanism, false)\nproduct(bool, StartAttachListener, false)\nmanageable(bool, PrintConcurrentLocks, false)\nproduct(bool, TransmitErrorReport, false)\nproduct(ccstr, ErrorReportServer, NULL)\nproduct(bool, UseSharedSpaces, true)\nproduct(bool, VerifySharedSpaces, false)\nproduct(bool, RequireSharedSpaces, false)\nproduct(bool, DumpSharedSpaces, false)\nproduct(bool, PrintSharedSpaces, false)\nproduct(bool, PrintSharedArchiveAndExit, false)\nproduct(bool, PrintSharedDictionary, false)\ndiagnostic(bool, EnableInvokeDynamic, true)\ndiagnostic(bool, IgnoreUnverifiableClassesDuringDump, false)\ndiagnostic(bool, PrintMethodHandleStubs, false)\ndevelop(bool, TraceMethodHandles, false)\ndiagnostic(bool, VerifyMethodHandles, trueInDebug)\ndiagnostic(bool, ShowHiddenFrames, false)\nexperimental(bool, TrustFinalNonStaticFields, false)\ndiagnostic(bool, FoldStableValues, true)\ndevelop(bool, TraceInvokeDynamic, false)\ndiagnostic(bool, PauseAtStartup,      false)\ndiagnostic(ccstr, PauseAtStartupFile, NULL)\ndiagnostic(bool, PauseAtExit, false)\nproduct(bool, ExtendedDTraceProbes,    false)\nproduct(bool, DTraceMethodProbes, false)\nproduct(bool, DTraceAllocProbes, false)\nproduct(bool, DTraceMonitorProbes, false)\nproduct(bool, RelaxAccessControlCheck, false)\ndiagnostic(bool, PrintDTraceDOF, false)\nproduct(uintx, StringTableSize, defaultStringTableSize)\nexperimental(uintx, SymbolTableSize, defaultSymbolTableSize)\nproduct(bool, UseStringDeduplication, false)\nproduct(bool, PrintStringDeduplicationStatistics, false)\nproduct(uintx, StringDeduplicationAgeThreshold, 3)\ndiagnostic(bool, StringDeduplicationResizeALot, false)\ndiagnostic(bool, StringDeduplicationRehashALot, false)\ndevelop(bool, TraceDefaultMethods, false)\ndevelop(bool, VerifyGenericSignatures, false)\nproduct(bool, UseVMInterruptibleIO, false)\ndiagnostic(bool, WhiteBoxAPI, false)\nproduct(bool, PrintGCCause, true)\nexperimental(intx, SurvivorAlignmentInBytes, 0)\nproduct(bool , AllowNonVirtualCalls, false)\nproduct(ccstr, DumpLoadedClassList, NULL)\nproduct(ccstr, SharedClassListFile, NULL)\ndiagnostic(ccstr, SharedArchiveFile, NULL)\nproduct(ccstr, ExtraSharedClassListFile, NULL)\nexperimental(uintx, ArrayAllocatorMallocLimit)\nproduct(bool, EnableTracing, false)\nproduct(bool, UseLockedTracing, false)\nproduct_pd(bool, PreserveFramePointer)\n</code></pre>','列出java命令所有-X和-XX选项','','inherit','closed','closed','','86-revision-v1','','','2017-08-09 01:15:09','2017-08-08 17:15:09','java -X可以列出-X选项，但-XX选项好像并没有直接的方法可以列出。从源码里则可以得到。用hg下载源码后grep一下便可得到所有的-X和-XX选项了。\r\n## 一部分是单独列出来的\r\n```bash\r\ncat hotspot/src/share/vm/runtime/arguments.cpp |\r\n    grep -o &#039;option, &quot;-X[^&quot;]*&quot;&#039; |\r\n    sed -r &#039;s/.*&quot;(.*)&quot;.*/\\1/&#039;\r\n```\r\n```nohighlight\r\n-Xbootclasspath:\r\n-Xbootclasspath/a:\r\n-Xbootclasspath/p:\r\n-Xrun\r\n-Xnoclassgc\r\n-Xincgc\r\n-Xnoincgc\r\n-Xconcgc\r\n-Xnoconcgc\r\n-Xbatch\r\n-Xmn\r\n-Xms\r\n-Xmx\r\n-XX:MaxHeapSize=\r\n-Xmaxf\r\n-Xminf\r\n-Xss\r\n-Xoss\r\n-XX:CodeCacheExpansionSize=\r\n-Xmaxjitcodesize\r\n-XX:ReservedCodeCacheSize=\r\n-XX:IncreaseFirstTierCompileThresholdAt=\r\n-Xsqnopause\r\n-Xrs\r\n-Xusealtsigs\r\n-Xoptimize\r\n-Xprof\r\n-Xconcurrentio\r\n-Xinternalversion\r\n-Xprintflags\r\n-Xint\r\n-Xmixed\r\n-Xcomp\r\n-Xshare:dump\r\n-Xshare:on\r\n-Xshare:auto\r\n-Xshare:off\r\n-Xverify\r\n-Xdebug\r\n-Xnoagent\r\n-Xboundthreads\r\n-Xloggc:\r\n-Xcheck\r\n-XX:+AggressiveHeap\r\n-XX:+NeverTenure\r\n-XX:+AlwaysTenure\r\n-XX:+CMSPermGenSweepingEnabled\r\n-XX:-CMSPermGenSweepingEnabled\r\n-XX:+UseGCTimeLimit\r\n-XX:-UseGCTimeLimit\r\n-XX:MaxTLERatio=\r\n-XX:+ResizeTLE\r\n-XX:-ResizeTLE\r\n-XX:+PrintTLE\r\n-XX:-PrintTLE\r\n-XX:TLEFragmentationRatio=\r\n-XX:TLESize=\r\n-XX:TLEThreadRatio=\r\n-XX:+UseTLE\r\n-XX:-UseTLE\r\n-XX:+DisplayVMOutputToStderr\r\n-XX:+DisplayVMOutputToStdout\r\n-XX:+ExtendedDTraceProbes\r\n-XX:+FullGCALot\r\n-XX:CMSParPromoteBlocksToClaim=\r\n-XX:ParCMSPromoteBlocksToClaim=\r\n-XX:ParallelGCOldGenAllocBufferSize=\r\n-XX:ParallelGCToSpaceAllocBufferSize=\r\n-XX:CMSMarkStackSize=\r\n-XX:G1MarkStackSize=\r\n-XX:CMSMarkStackSizeMax=\r\n-XX:ParallelMarkingThreads=\r\n-XX:ParallelCMSThreads=\r\n-XX:MaxDirectMemorySize=\r\n-XX:+UseVMInterruptibleIO\r\n-XX:+ManagementServer\r\n-XX:\r\n-XX:\r\n-XX:Flags=\r\n-XX:+PrintVMOptions\r\n-XX:-PrintVMOptions\r\n-XX:+IgnoreUnrecognizedVMOptions\r\n-XX:-IgnoreUnrecognizedVMOptions\r\n-XX:+PrintFlagsInitial\r\n-XX:NativeMemoryTracking\r\n-XX:+PrintFlagsWithComments\r\n-XX:\r\n```\r\n## 另一部分是宏定义的列表，太多了，有将近一千个\r\n```bash\r\ncat hotspot/src/share/vm/runtime/globals.hpp |\r\n    grep &#039;\\\\&#039;  |\r\n    grep -v &#039;&quot;&#039; |\r\n    grep -v &#039;\\*&#039; |\r\n    grep -v &#039;#&#039; |\r\n    sed &#039;/^\\s*\\\\$/ d&#039; |\r\n    sed &#039;s/^ *//&#039; |\r\n    sed &#039;s/, *\\\\$//&#039;\r\n```\r\n```nohighlight\r\nlp64_product(bool, UseCompressedOops, false)\r\nlp64_product(bool, UseCompressedClassPointers, false)\r\nnotproduct(bool, CheckCompressedOops, true)\r\nproduct_pd(uintx, HeapBaseMinAddress)\r\ndiagnostic(bool, PrintCompressedOopsMode, false)\r\nlp64_product(intx, ObjectAlignmentInBytes, 8)\r\nproduct(bool, AssumeMP, false)\r\nproduct_pd(bool, UseMembar)\r\ndevelop(bool, CleanChunkPoolAsync, falseInEmbedded)\r\nexperimental(bool, UseMemSetInBOT, true)\r\ndiagnostic(bool, UnlockDiagnosticVMOptions, trueInDebug)\r\nexperimental(bool, UnlockExperimentalVMOptions, false)\r\nproduct(bool, JavaMonitorsInStackTrace, true)\r\nproduct_pd(bool, UseLargePages)\r\nproduct_pd(bool, UseLargePagesIndividualAllocation)\r\ndevelop(bool, LargePagesIndividualAllocationInjectError, false)\r\nproduct(bool, UseLargePagesInMetaspace, false)\r\ndevelop(bool, TracePageSizes, false)\r\nproduct(bool, UseNUMA, false)\r\nproduct(bool, UseNUMAInterleaving, false)\r\nproduct(bool, ForceNUMA, false)\r\nproduct(uintx, NUMAChunkResizeWeight, 20)\r\nproduct(bool, UseAdaptiveNUMAChunkSizing, true)\r\nproduct(bool, NUMAStats, false)\r\nproduct(uintx, NUMAPageScanRate, 256)\r\nproduct_pd(bool, NeedsDeoptSuspend)\r\nproduct(intx, UseSSE, 99)\r\nproduct(bool, UseAES, false)\r\nproduct(bool, UseSHA, false)\r\nproduct(uintx, LargePageSizeInBytes, 0)\r\nproduct(bool, ForceTimeHighResolution, false)\r\ndevelop(bool, TraceItables, false)\r\ndevelop(bool, TracePcPatching, false)\r\ndevelop(bool, TraceJumps, false)\r\ndevelop(bool, TraceRelocator, false)\r\ndevelop(bool, TraceLongCompiles, false)\r\ndevelop(bool, SafepointALot, false)\r\nproduct_pd(bool, BackgroundCompilation)\r\nproduct(bool, PrintVMQWaitTime, false)\r\ndevelop(bool, NoYieldsInMicrolock, false)\r\ndevelop(bool, TraceOopMapGeneration, false)\r\nproduct(bool, MethodFlushing, true)\r\ndevelop(bool, VerifyStack, false)\r\ndiagnostic(bool, ForceUnreachable, false)\r\nnotproduct(bool, StressDerivedPointers, false)\r\ndevelop(bool, TraceDerivedPointers, false)\r\nnotproduct(bool, TraceCodeBlobStacks, false)\r\nproduct(bool, PrintJNIResolving, false)\r\nnotproduct(bool, PrintRewrites, false)\r\nproduct(bool, UseInlineCaches, true)\r\ndevelop(bool, InlineArrayCopy, true)\r\ndevelop(bool, InlineObjectHash, true)\r\ndevelop(bool, InlineNatives, true)\r\ndevelop(bool, InlineMathNatives, true)\r\ndevelop(bool, InlineClassNatives, true)\r\ndevelop(bool, InlineThreadNatives, true)\r\ndevelop(bool, InlineUnsafeOps, true)\r\nproduct(bool, CriticalJNINatives, true)\r\nnotproduct(bool, StressCriticalJNINatives, false)\r\nproduct(bool, UseSSE42Intrinsics, false)\r\nproduct(bool, UseAESIntrinsics, false)\r\nproduct(bool, UseSHA1Intrinsics, false)\r\nproduct(bool, UseSHA256Intrinsics, false)\r\nproduct(bool, UseSHA512Intrinsics, false)\r\nproduct(bool, UseCRC32Intrinsics, false)\r\ndevelop(bool, TraceCallFixup, false)\r\ndevelop(bool, DeoptimizeALot, false)\r\nproduct(bool, DeoptimizeRandom, false)\r\nnotproduct(bool, ZombieALot, false)\r\nproduct(bool, UnlinkSymbolsALot, false)\r\nnotproduct(bool, WalkStackALot, false)\r\nproduct(bool, Debugging, false)\r\nnotproduct(bool, StrictSafepointChecks, trueInDebug)\r\nnotproduct(bool, VerifyLastFrame, false)\r\ndevelop(bool, TraceHandleAllocation, false)\r\nproduct(bool, UseCompilerSafepoints, true)\r\nproduct(bool, FailOverToOldVerifier, true)\r\ndevelop(bool, ShowSafepointMsgs, false)\r\nproduct(bool, SafepointTimeout, false)\r\ndevelop(bool, DieOnSafepointTimeout, false)\r\nproduct(intx, SuspendRetryCount, 50)\r\nproduct(intx, SuspendRetryDelay, 5)\r\nproduct(bool, AssertOnSuspendWaitFailure, false)\r\nproduct(bool, TraceSuspendWaitFailures, false)\r\nproduct(bool, MaxFDLimit, true)\r\ndiagnostic(bool, LogEvents, true)\r\ndiagnostic(uintx, LogEventsBufferEntries, 10)\r\nproduct(bool, BytecodeVerificationRemote, true)\r\nproduct(bool, BytecodeVerificationLocal, false)\r\ndevelop(bool, ForceFloatExceptions, trueInDebug)\r\ndevelop(bool, VerifyStackAtCalls, false)\r\ndevelop(bool, TraceJavaAssertions, false)\r\nnotproduct(bool, CheckAssertionStatusDirectives, false)\r\nnotproduct(bool, PrintMallocFree, false)\r\nproduct(bool, PrintOopAddress, false)\r\nnotproduct(bool, VerifyCodeCacheOften, false)\r\ndevelop(bool, ZapDeadCompiledLocals, false)\r\nnotproduct(bool, ZapDeadLocalsOld, false)\r\nnotproduct(bool, CheckOopishValues, false)\r\ndevelop(bool, UseMallocOnly, false)\r\ndevelop(bool, PrintMalloc, false)\r\ndevelop(bool, PrintMallocStatistics, false)\r\ndevelop(bool, ZapResourceArea, trueInDebug)\r\nnotproduct(bool, ZapVMHandleArea, trueInDebug)\r\ndevelop(bool, ZapJNIHandleArea, trueInDebug)\r\nnotproduct(bool, ZapStackSegments, trueInDebug)\r\ndevelop(bool, ZapUnusedHeapArea, trueInDebug)\r\ndevelop(bool, TraceZapUnusedHeapArea, false)\r\ndevelop(bool, CheckZapUnusedHeapArea, false)\r\ndevelop(bool, ZapFillerObjects, trueInDebug)\r\ndevelop(bool, PrintVMMessages, true)\r\nproduct(bool, PrintGCApplicationConcurrentTime, false)\r\nproduct(bool, PrintGCApplicationStoppedTime, false)\r\ndiagnostic(bool, VerboseVerification, false)\r\nnotproduct(uintx, ErrorHandlerTest, 0)\r\ndevelop(bool, Verbose, false)\r\ndevelop(bool, PrintMiscellaneous, false)\r\ndevelop(bool, WizardMode, false)\r\nproduct(bool, ShowMessageBoxOnError, false)\r\nproduct(bool, CreateMinidumpOnCrash, false)\r\nproduct_pd(bool, UseOSErrorReporting)\r\nproduct(bool, SuppressFatalErrorMessage, false)\r\nmanageable(bool, HeapDumpBeforeFullGC, false)\r\nmanageable(bool, HeapDumpAfterFullGC, false)\r\nmanageable(bool, HeapDumpOnOutOfMemoryError, false)\r\nmanageable(ccstr, HeapDumpPath, NULL)\r\ndevelop(bool, BreakAtWarning, false)\r\ndevelop(bool, TraceVMOperation, false)\r\ndevelop(bool, UseFakeTimers, false)\r\ndiagnostic(bool, PrintNMTStatistics, false)\r\ndiagnostic(bool, LogCompilation, false)\r\nproduct(bool, PrintCompilation, false)\r\ndiagnostic(bool, TraceNMethodInstalls, false)\r\ndiagnostic(intx, ScavengeRootsInCode, 2)\r\nproduct(bool, AlwaysRestoreFPU, false)\r\ndiagnostic(bool, PrintCompilation2, false)\r\ndiagnostic(bool, PrintAdapterHandlers, false)\r\ndiagnostic(bool, VerifyAdapterCalls, trueInDebug)\r\ndevelop(bool, VerifyAdapterSharing, false)\r\ndiagnostic(bool, PrintAssembly, false)\r\ndiagnostic(ccstr, PrintAssemblyOptions, NULL)\r\ndiagnostic(bool, PrintNMethods, false)\r\ndiagnostic(bool, PrintNativeNMethods, false)\r\ndevelop(bool, PrintDebugInfo, false)\r\ndevelop(bool, PrintRelocations, false)\r\ndevelop(bool, PrintDependencies, false)\r\ndevelop(bool, PrintExceptionHandlers, false)\r\ndevelop(bool, StressCompiledExceptionHandlers, false)\r\ndevelop(bool, InterceptOSException, false)\r\nproduct(bool, PrintCodeCache, false)\r\ndevelop(bool, PrintCodeCache2, false)\r\nproduct(bool, PrintCodeCacheOnCompilation, false)\r\ndiagnostic(bool, PrintStubCode, false)\r\nproduct(bool, StackTraceInThrowable, true)\r\nproduct(bool, OmitStackTraceInFastThrow, true)\r\nproduct(bool, ProfilerPrintByteCodeStatistics, false)\r\nproduct(bool, ProfilerRecordPC, false)\r\nproduct(bool, ProfileVM, false)\r\nproduct(bool, ProfileIntervals, false)\r\nnotproduct(bool, ProfilerCheckIntervals, false)\r\ndevelop(bool, PrintJVMWarnings, false)\r\nproduct(bool, PrintWarnings, true)\r\nnotproduct(uintx, WarnOnStalledSpinLock, 0)\r\nproduct(bool, RegisterFinalizersAtInit, true)\r\ndevelop(bool, RegisterReferences, true)\r\ndevelop(bool, IgnoreRewrites, false)\r\ndevelop(bool, PrintCodeCacheExtension, false)\r\ndevelop(bool, UsePrivilegedStack, true)\r\ndevelop(bool, ProtectionDomainVerification, true)\r\nproduct(bool, ClassUnloading, true)\r\nproduct(bool, ClassUnloadingWithConcurrentMark, true)\r\ndevelop(bool, DisableStartThread, false)\r\ndevelop(bool, MemProfiling, false)\r\nnotproduct(bool, PrintSystemDictionaryAtExit, false)\r\nexperimental(intx, PredictedLoadedClassCount, 0)\r\ndiagnostic(bool, UnsyncloadClass, false)\r\nproduct(bool, AlwaysLockClassLoader, false)\r\nproduct(bool, AllowParallelDefineClass, false)\r\nproduct(bool, MustCallLoadClassInternal, false)\r\nproduct_pd(bool, DontYieldALot)\r\nproduct_pd(bool, ConvertSleepToYield)\r\nproduct(bool, ConvertYieldToSleep, false)\r\nproduct(bool, UseBoundThreads, true)\r\ndevelop(bool, UseDetachedThreads, true)\r\nproduct(bool, UseLWPSynchronization, true)\r\nproduct(ccstr, SyncKnobs, NULL)\r\nproduct(intx, EmitSync, 0)\r\nproduct(intx, hashCode, 5)\r\nproduct(intx, WorkAroundNPTLTimedWaitHang, 1)\r\nproduct(bool, FilterSpuriousWakeups, true)\r\ndevelop(bool, UsePthreads, false)\r\nproduct(bool, AdjustConcurrency, false)\r\nproduct(bool, ReduceSignalUsage, false)\r\ndevelop_pd(bool, ShareVtableStubs)\r\ndevelop(bool, LoadLineNumberTables, true)\r\ndevelop(bool, LoadLocalVariableTables, true)\r\ndevelop(bool, LoadLocalVariableTypeTables, true)\r\nproduct(bool, AllowUserSignalHandlers, false)\r\nproduct(bool, UseSignalChaining, true)\r\nproduct(bool, UseAltSigs, false)\r\nproduct(bool, AllowJNIEnvProxy, false)\r\nproduct(bool, JNIDetachReleasesMonitors, true)\r\nproduct(bool, RestoreMXCSROnJNICalls, false)\r\nproduct(bool, CheckJNICalls, false)\r\nproduct(bool, CheckEndorsedAndExtDirs, false)\r\nproduct(bool, UseFastJNIAccessors, true)\r\nproduct(intx, MaxJNILocalCapacity, 65536)\r\nproduct(bool, EagerXrunInit, false)\r\nproduct(bool, PreserveAllAnnotations, false)\r\ndevelop(uintx, PreallocatedOutOfMemoryErrorCount, 4)\r\nproduct(bool, LazyBootClassLoader, true)\r\nproduct(bool, UseXMMForArrayCopy, false)\r\nproduct(intx, FieldsAllocationStyle, 1)\r\nproduct(bool, CompactFields, true)\r\nnotproduct(bool, PrintFieldLayout, false)\r\nproduct(intx, ContendedPaddingWidth, 128)\r\nproduct(bool, EnableContended, true)\r\nproduct(bool, RestrictContended, true)\r\nproduct(bool, UseBiasedLocking, true)\r\nproduct(intx, BiasedLockingStartupDelay, 4000)\r\ndiagnostic(bool, PrintBiasedLockingStatistics, false)\r\nproduct(intx, BiasedLockingBulkRebiasThreshold, 20)\r\nproduct(intx, BiasedLockingBulkRevokeThreshold, 40)\r\nproduct(intx, BiasedLockingDecayTime, 25000)\r\nproduct(bool, ExitOnOutOfMemoryError, false)\r\nproduct(bool, CrashOnOutOfMemoryError, false)\r\nnotproduct(bool, TraceRuntimeCalls, false)\r\ndevelop(bool, TraceJNICalls, false)\r\ndevelop(bool, StressRewriter, false)\r\nnotproduct(bool, TraceJVMCalls, false)\r\nproduct(ccstr, TraceJVMTI, NULL)\r\nproduct(bool, StressLdcRewrite, false)\r\nproduct(intx, TraceRedefineClasses, 0)\r\ndevelop(bool, StressMethodComparator, false)\r\nproduct(bool, VerifyMergedCPBytecodes, true)\r\ndevelop(bool, TraceJNIHandleAllocation, false)\r\ndevelop(bool, TraceThreadEvents, false)\r\ndevelop(bool, TraceBytecodes, false)\r\ndevelop(bool, TraceClassInitialization, false)\r\ndevelop(bool, TraceExceptions, false)\r\ndevelop(bool, TraceICs, false)\r\nnotproduct(bool, TraceInvocationCounterOverflow, false)\r\ndevelop(bool, TraceInlineCacheClearing, false)\r\ndevelop(bool, TraceDependencies, false)\r\ndevelop(bool, VerifyDependencies, trueInDebug)\r\ndevelop(bool, TraceNewOopMapGeneration, false)\r\ndevelop(bool, TraceNewOopMapGenerationDetailed, false)\r\ndevelop(bool, TimeOopMap, false)\r\ndevelop(bool, TimeOopMap2, false)\r\ndevelop(bool, TraceMonitorMismatch, false)\r\ndevelop(bool, TraceOopMapRewrites, false)\r\ndevelop(bool, TraceSafepoint, false)\r\ndevelop(bool, TraceICBuffer, false)\r\ndevelop(bool, TraceCompiledIC, false)\r\nnotproduct(bool, TraceZapDeadLocals, false)\r\ndevelop(bool, TraceStartupTime, false)\r\ndevelop(bool, TraceProtectionDomainVerification, false)\r\ndevelop(bool, TraceClearedExceptions, false)\r\nproduct(bool, TraceClassResolution, false)\r\nproduct(bool, TraceBiasedLocking, false)\r\nproduct(bool, TraceMonitorInflation, false)\r\nproduct(bool, UseSerialGC, false)\r\nproduct(bool, UseG1GC, false)\r\nproduct(bool, UseParallelGC, false)\r\nproduct(bool, UseParallelOldGC, false)\r\nproduct(uintx, HeapMaximumCompactionInterval, 20)\r\nproduct(uintx, HeapFirstMaximumCompactionCount, 3)\r\nproduct(bool, UseMaximumCompactionOnSystemGC, true)\r\nproduct(uintx, ParallelOldDeadWoodLimiterMean, 50)\r\nproduct(uintx, ParallelOldDeadWoodLimiterStdDev, 80)\r\nproduct(uintx, ParallelGCThreads, 0)\r\nproduct(bool, UseDynamicNumberOfGCThreads, false)\r\ndiagnostic(bool, ForceDynamicNumberOfGCThreads, false)\r\nproduct(bool, TraceDynamicGCThreads, false)\r\ndevelop(bool, ParallelOldGCSplitALot, false)\r\ndevelop(uintx, ParallelOldGCSplitInterval, 3)\r\nproduct(uintx, ConcGCThreads, 0)\r\nproduct(uintx, YoungPLABSize, 4096)\r\nproduct(uintx, OldPLABSize, 1024)\r\nproduct(uintx, GCTaskTimeStampEntries, 200)\r\nproduct(bool, AlwaysTenure, false)\r\nproduct(bool, NeverTenure, false)\r\nproduct(bool, ScavengeBeforeFullGC, true)\r\ndevelop(bool, ScavengeWithObjectsInToSpace, false)\r\nproduct(bool, UseConcMarkSweepGC, false)\r\nproduct(bool, ExplicitGCInvokesConcurrent, false)\r\nproduct(bool, ExplicitGCInvokesConcurrentAndUnloadsClasses, false)\r\nproduct(bool, GCLockerInvokesConcurrent, false)\r\nproduct(uintx, GCLockerEdenExpansionPercent, 5)\r\ndiagnostic(uintx, GCLockerRetryAllocationCount, 2)\r\ndevelop(bool, UseCMSAdaptiveFreeLists, true)\r\ndevelop(bool, UseAsyncConcMarkSweepGC, true)\r\ndevelop(bool, RotateCMSCollectionTypes, false)\r\nproduct(bool, UseCMSBestFit, true)\r\nproduct(bool, UseCMSCollectionPassing, true)\r\nproduct(bool, UseParNewGC, false)\r\nproduct(bool, ParallelGCVerbose, false)\r\nproduct(uintx, ParallelGCBufferWastePct, 10)\r\ndiagnostic(bool, ParallelGCRetainPLAB, false)\r\nproduct(uintx, TargetPLABWastePct, 10)\r\nproduct(uintx, PLABWeight, 75)\r\nproduct(bool, ResizePLAB, true)\r\nproduct(bool, PrintPLAB, false)\r\nproduct(intx, ParGCArrayScanChunk, 50)\r\nproduct(bool, ParGCUseLocalOverflow, false)\r\nproduct(bool, ParGCTrimOverflow, true)\r\nnotproduct(bool, ParGCWorkQueueOverflowALot, false)\r\nnotproduct(uintx, ParGCWorkQueueOverflowInterval, 1000)\r\nproduct(uintx, ParGCDesiredObjsFromOverflowList, 20)\r\ndiagnostic(uintx, ParGCStridesPerThread, 2)\r\ndiagnostic(intx, ParGCCardsPerStrideChunk, 256)\r\nproduct(uintx, CMSParPromoteBlocksToClaim, 16)\r\nproduct(uintx, OldPLABWeight, 50)\r\nproduct(bool, ResizeOldPLAB, true)\r\nproduct(bool, PrintOldPLAB, false)\r\nproduct(uintx, CMSOldPLABMin, 16)\r\nproduct(uintx, CMSOldPLABMax, 1024)\r\nproduct(uintx, CMSOldPLABNumRefills, 4)\r\nproduct(bool, CMSOldPLABResizeQuicker, false)\r\nproduct(uintx, CMSOldPLABToleranceFactor, 4)\r\nproduct(uintx, CMSOldPLABReactivityFactor, 2)\r\nproduct(bool, AlwaysPreTouch, false)\r\nproduct_pd(uintx, CMSYoungGenPerWorker)\r\nproduct(bool, CMSIncrementalMode, false)\r\nproduct(uintx, CMSIncrementalDutyCycle, 10)\r\nproduct(bool, CMSIncrementalPacing, true)\r\nproduct(uintx, CMSIncrementalDutyCycleMin, 0)\r\nproduct(uintx, CMSIncrementalSafetyFactor, 10)\r\nproduct(uintx, CMSIncrementalOffset, 0)\r\nproduct(uintx, CMSExpAvgFactor, 50)\r\nproduct(uintx, CMS_FLSWeight, 75)\r\nproduct(uintx, CMS_FLSPadding, 1)\r\nproduct(uintx, FLSCoalescePolicy, 2)\r\nproduct(bool, FLSAlwaysCoalesceLarge, false)\r\nproduct(double, FLSLargestBlockCoalesceProximity, 0.99)\r\nproduct(double, CMSSmallCoalSurplusPercent, 1.05)\r\nproduct(double, CMSLargeCoalSurplusPercent, 0.95)\r\nproduct(double, CMSSmallSplitSurplusPercent, 1.10)\r\nproduct(double, CMSLargeSplitSurplusPercent, 1.00)\r\nproduct(bool, CMSExtrapolateSweep, false)\r\nproduct(uintx, CMS_SweepWeight, 75)\r\nproduct(uintx, CMS_SweepPadding, 1)\r\nproduct(uintx, CMS_SweepTimerThresholdMillis, 10)\r\ndevelop(bool, CMSTraceIncrementalMode, false)\r\ndevelop(bool, CMSTraceIncrementalPacing, false)\r\ndevelop(bool, CMSTraceThreadState, false)\r\nproduct(bool, CMSClassUnloadingEnabled, true)\r\nproduct(uintx, CMSClassUnloadingMaxInterval, 0)\r\nproduct(bool, CMSCompactWhenClearAllSoftRefs, true)\r\nproduct(bool, UseCMSCompactAtFullCollection, true)\r\nproduct(uintx, CMSFullGCsBeforeCompaction, 0)\r\ndevelop(intx, CMSDictionaryChoice, 0)\r\nproduct(uintx, CMSIndexedFreeListReplenish, 4)\r\nproduct(bool, CMSReplenishIntermediate, true)\r\nproduct(bool, CMSSplitIndexedFreeListBlocks, true)\r\nproduct(bool, CMSLoopWarn, false)\r\ndevelop(bool, CMSOverflowEarlyRestoration, false)\r\nnotproduct(bool, CMSMarkStackOverflowALot, false)\r\nnotproduct(uintx, CMSMarkStackOverflowInterval, 1000)\r\nproduct(uintx, CMSMaxAbortablePrecleanLoops, 0)\r\nproduct(intx, CMSMaxAbortablePrecleanTime, 5000)\r\nproduct(uintx, CMSAbortablePrecleanMinWorkPerIteration, 100)\r\nmanageable(intx, CMSAbortablePrecleanWaitMillis, 100)\r\nproduct(uintx, CMSRescanMultiple, 32)\r\nproduct(uintx, CMSConcMarkMultiple, 32)\r\nproduct(bool, CMSAbortSemantics, false)\r\nproduct(bool, CMSParallelInitialMarkEnabled, true)\r\nproduct(bool, CMSParallelRemarkEnabled, true)\r\nproduct(bool, CMSParallelSurvivorRemarkEnabled, true)\r\nproduct(bool, CMSPLABRecordAlways, true)\r\nproduct(bool, CMSEdenChunksRecordAlways, true)\r\nproduct(bool, CMSPrintEdenSurvivorChunks, false)\r\nproduct(bool, CMSConcurrentMTEnabled, true)\r\nproduct(bool, CMSPrecleaningEnabled, true)\r\nproduct(uintx, CMSPrecleanIter, 3)\r\nproduct(uintx, CMSPrecleanNumerator, 2)\r\nproduct(uintx, CMSPrecleanDenominator, 3)\r\nproduct(bool, CMSPrecleanRefLists1, true)\r\nproduct(bool, CMSPrecleanRefLists2, false)\r\nproduct(bool, CMSPrecleanSurvivors1, false)\r\nproduct(bool, CMSPrecleanSurvivors2, true)\r\nproduct(uintx, CMSPrecleanThreshold, 1000)\r\nproduct(bool, CMSCleanOnEnter, true)\r\nproduct(uintx, CMSRemarkVerifyVariant, 1)\r\nproduct(uintx, CMSScheduleRemarkEdenPenetration, 50)\r\nproduct(uintx, CMSScheduleRemarkSamplingRatio, 5)\r\nproduct(bool, CMSScavengeBeforeRemark, false)\r\ndevelop(bool, CMSTraceSweeper, false)\r\nproduct(uintx, CMSWorkQueueDrainThreshold, 10)\r\nmanageable(intx, CMSWaitDuration, 2000)\r\ndevelop(uintx, CMSCheckInterval, 1000)\r\nproduct(bool, CMSYield, true)\r\nproduct(bool, CMSDumpAtPromotionFailure, false)\r\nproduct(bool, CMSPrintChunksInDump, false)\r\nproduct(bool, CMSPrintObjectsInDump, false)\r\ndiagnostic(bool, FLSVerifyAllHeapReferences, false)\r\ndiagnostic(bool, FLSVerifyLists, false)\r\ndiagnostic(bool, FLSVerifyIndexTable, false)\r\ndevelop(bool, FLSVerifyDictionary, false)\r\ndevelop(bool, VerifyBlockOffsetArray, false)\r\ndiagnostic(bool, BlockOffsetArrayUseUnallocatedBlock, false)\r\ndevelop(bool, TraceCMSState, false)\r\nproduct(intx, RefDiscoveryPolicy, 0)\r\nproduct(bool, ParallelRefProcEnabled, false)\r\nproduct(bool, ParallelRefProcBalancingEnabled, true)\r\nproduct(uintx, CMSTriggerRatio, 80)\r\nproduct(uintx, CMSBootstrapOccupancy, 50)\r\nproduct(intx, CMSInitiatingOccupancyFraction, -1)\r\nproduct(uintx, InitiatingHeapOccupancyPercent, 45)\r\nmanageable(intx, CMSTriggerInterval, -1)\r\nproduct(bool, UseCMSInitiatingOccupancyOnly, false)\r\nproduct(uintx, CMSIsTooFullPercentage, 98)\r\ndevelop(bool, CMSTestInFreeList, false)\r\nnotproduct(bool, CMSVerifyReturnedBytes, false)\r\nnotproduct(bool, ScavengeALot, false)\r\ndevelop(bool, FullGCALot, false)\r\nnotproduct(bool, GCALotAtAllSafepoints, false)\r\nproduct(bool, PrintPromotionFailure, false)\r\nnotproduct(bool, PromotionFailureALot, false)\r\ndevelop(uintx, PromotionFailureALotCount, 1000)\r\ndevelop(uintx, PromotionFailureALotInterval, 5)\r\nexperimental(uintx, WorkStealingSleepMillis, 1)\r\nexperimental(uintx, WorkStealingYieldsBeforeSleep, 5000)\r\nexperimental(uintx, WorkStealingHardSpins, 4096)\r\nexperimental(uintx, WorkStealingSpinToYieldRatio, 10)\r\ndevelop(uintx, ObjArrayMarkingStride, 512)\r\ndevelop(bool, MetadataAllocationFailALot, false)\r\ndevelop(uintx, MetadataAllocationFailALotInterval, 1000)\r\ndevelop(bool, TraceMetadataChunkAllocation, false)\r\nproduct(bool, TraceMetadataHumongousAllocation, false)\r\ndevelop(bool, TraceMetavirtualspaceAllocation, false)\r\nnotproduct(bool, ExecuteInternalVMTests, false)\r\nnotproduct(bool, VerboseInternalVMTests, false)\r\nproduct_pd(bool, ResizeTLAB)\r\nproduct(bool, ZeroTLAB, false)\r\nproduct(bool, FastTLABRefill, true)\r\nproduct(bool, PrintTLAB, false)\r\nproduct(bool, TLABStats, true)\r\nproduct_pd(bool, NeverActAsServerClassMachine)\r\nproduct(bool, AlwaysActAsServerClassMachine, false)\r\nproduct_pd(uint64_t, MaxRAM)\r\nproduct(uintx, ErgoHeapSizeLimit, 0)\r\nexperimental(bool, UseCGroupMemoryLimitForHeap, false)\r\nproduct(uintx, MaxRAMFraction, 4)\r\nproduct(uintx, DefaultMaxRAMFraction, 4)\r\nproduct(uintx, MinRAMFraction, 2)\r\nproduct(uintx, InitialRAMFraction, 64)\r\ndevelop(uintx, MaxVirtMemFraction, 2)\r\nproduct(bool, UseAutoGCSelectPolicy, false)\r\nproduct(uintx, AutoGCSelectPauseMillis, 5000)\r\nproduct(bool, UseAdaptiveSizePolicy, true)\r\nproduct(bool, UsePSAdaptiveSurvivorSizePolicy, true)\r\nproduct(bool, UseAdaptiveGenerationSizePolicyAtMinorCollection, true)\r\nproduct(bool, UseAdaptiveGenerationSizePolicyAtMajorCollection, true)\r\nproduct(bool, UseAdaptiveSizePolicyWithSystemGC, false)\r\nproduct(bool, UseAdaptiveGCBoundary, false)\r\ndevelop(bool, TraceAdaptiveGCBoundary, false)\r\ndevelop(intx, PSAdaptiveSizePolicyResizeVirtualSpaceAlot, -1)\r\nproduct(uintx, AdaptiveSizeThroughPutPolicy, 0)\r\nproduct(uintx, AdaptiveSizePausePolicy, 0)\r\ndevelop(bool, PSAdjustTenuredGenForMinorPause, false)\r\ndevelop(bool, PSAdjustYoungGenForMajorPause, false)\r\nproduct(uintx, AdaptiveSizePolicyInitializingSteps, 20)\r\ndevelop(uintx, AdaptiveSizePolicyReadyThreshold, 5)\r\nproduct(uintx, AdaptiveSizePolicyOutputInterval, 0)\r\nproduct(bool, UseAdaptiveSizePolicyFootprintGoal, true)\r\nproduct(uintx, AdaptiveSizePolicyWeight, 10)\r\nproduct(uintx, AdaptiveTimeWeight,       25)\r\nproduct(uintx, PausePadding, 1)\r\nproduct(uintx, PromotedPadding, 3)\r\nproduct(uintx, SurvivorPadding, 3)\r\nproduct(uintx, ThresholdTolerance, 10)\r\nproduct(uintx, AdaptiveSizePolicyCollectionCostMargin, 50)\r\nproduct(uintx, YoungGenerationSizeIncrement, 20)\r\nproduct(uintx, YoungGenerationSizeSupplement, 80)\r\nproduct(uintx, YoungGenerationSizeSupplementDecay, 8)\r\nproduct(uintx, TenuredGenerationSizeIncrement, 20)\r\nproduct(uintx, TenuredGenerationSizeSupplement, 80)\r\nproduct(uintx, TenuredGenerationSizeSupplementDecay, 2)\r\nproduct(uintx, MaxGCPauseMillis, max_uintx)\r\nproduct(uintx, GCPauseIntervalMillis, 0)\r\nproduct(uintx, MaxGCMinorPauseMillis, max_uintx)\r\nproduct(uintx, GCTimeRatio, 99)\r\nproduct(uintx, AdaptiveSizeDecrementScaleFactor, 4)\r\nproduct(bool, UseAdaptiveSizeDecayMajorGCCost, true)\r\nproduct(uintx, AdaptiveSizeMajorGCDecayTimeScale, 10)\r\nproduct(uintx, MinSurvivorRatio, 3)\r\nproduct(uintx, InitialSurvivorRatio, 8)\r\nproduct(bool, UseGCOverheadLimit, true)\r\nproduct(uintx, GCTimeLimit, 98)\r\nproduct(uintx, GCHeapFreeLimit, 2)\r\ndevelop(uintx, AdaptiveSizePolicyGCTimeLimitThreshold, 5)\r\nproduct(bool, PrintAdaptiveSizePolicy, false)\r\nproduct(intx, PrefetchCopyIntervalInBytes, -1)\r\nproduct(intx, PrefetchScanIntervalInBytes, -1)\r\nproduct(intx, PrefetchFieldsAhead, -1)\r\ndiagnostic(bool, VerifySilently, false)\r\ndiagnostic(bool, VerifyDuringStartup, false)\r\ndiagnostic(bool, VerifyBeforeExit, trueInDebug)\r\ndiagnostic(bool, VerifyBeforeGC, false)\r\ndiagnostic(bool, VerifyAfterGC, false)\r\ndiagnostic(bool, VerifyDuringGC, false)\r\ndiagnostic(bool, GCParallelVerificationEnabled, true)\r\ndiagnostic(bool, DeferInitialCardMark, false)\r\ndiagnostic(bool, VerifyRememberedSets, false)\r\ndiagnostic(bool, VerifyObjectStartArray, true)\r\nproduct(bool, DisableExplicitGC, false)\r\nnotproduct(bool, CheckMemoryInitialization, false)\r\nproduct(bool, CollectGen0First, false)\r\ndiagnostic(bool, BindCMSThreadToCPU, false)\r\ndiagnostic(uintx, CPUForCMSThread, 0)\r\nproduct(bool, BindGCTaskThreadsToCPUs, false)\r\nproduct(bool, UseGCTaskAffinity, false)\r\nproduct(uintx, ProcessDistributionStride, 4)\r\nproduct(uintx, CMSCoordinatorYieldSleepCount, 10)\r\nproduct(uintx, CMSYieldSleepCount, 0)\r\nmanageable(bool, PrintGC, false)\r\nmanageable(bool, PrintGCDetails, false)\r\nmanageable(bool, PrintGCDateStamps, false)\r\nmanageable(bool, PrintGCTimeStamps, false)\r\nmanageable(bool, PrintGCID, false)\r\nproduct(bool, PrintGCTaskTimeStamps, false)\r\ndevelop(intx, ConcGCYieldTimeout, 0)\r\nnotproduct(bool, TraceMarkSweep, false)\r\nproduct(bool, PrintReferenceGC, false)\r\ndevelop(bool, TraceReferenceGC, false)\r\ndevelop(bool, TraceFinalizerRegistration, false)\r\nnotproduct(bool, TraceScavenge, false)\r\nproduct(bool, IgnoreEmptyClassPaths, false)\r\nproduct(bool, TraceClassPaths, false)\r\nproduct_rw(bool, TraceClassLoading, false)\r\nproduct(bool, TraceClassLoadingPreorder, false)\r\nproduct_rw(bool, TraceClassUnloading, false)\r\nproduct_rw(bool, TraceLoaderConstraints, false)\r\ndevelop(bool, TraceClassLoaderData, false)\r\nproduct(uintx, InitialBootClassLoaderMetaspaceSize)\r\nproduct(bool, TraceGen0Time, false)\r\nproduct(bool, TraceGen1Time, false)\r\nproduct(bool, PrintTenuringDistribution, false)\r\nproduct_rw(bool, PrintHeapAtGC, false)\r\nproduct_rw(bool, PrintHeapAtGCExtended, false)\r\nproduct(bool, PrintHeapAtSIGBREAK, true)\r\nmanageable(bool, PrintClassHistogramBeforeFullGC, false)\r\nmanageable(bool, PrintClassHistogramAfterFullGC, false)\r\nmanageable(bool, PrintClassHistogram, false)\r\ndevelop(bool, TraceWorkGang, false)\r\nproduct(bool, TraceParallelOldGCTasks, false)\r\ndevelop(bool, TraceBlockOffsetTable, false)\r\ndevelop(bool, TraceCardTableModRefBS, false)\r\ndevelop(bool, TraceGCTaskManager, false)\r\ndevelop(bool, TraceGCTaskQueue, false)\r\ndiagnostic(bool, TraceGCTaskThread, false)\r\nproduct(bool, PrintParallelOldGCPhaseTimes, false)\r\ndevelop(bool, TraceParallelOldGCMarkingPhase, false)\r\ndevelop(bool, TraceParallelOldGCSummaryPhase, false)\r\ndevelop(bool, TraceParallelOldGCCompactionPhase, false)\r\ndevelop(bool, TraceParallelOldGCDensePrefix, false)\r\ndevelop(bool, IgnoreLibthreadGPFault, false)\r\nproduct(bool, PrintJNIGCStalls, false)\r\nexperimental(double, ObjectCountCutOffPercent, 0.5)\r\nproduct(bool, UseGCLogFileRotation, false)\r\nproduct(uintx, NumberOfGCLogFiles, 0)\r\ndiagnostic(bool, TraceJVMTIObjectTagging, false)\r\ndiagnostic(bool, VerifyBeforeIteration, false)\r\ndevelop(bool, CIPrintCompilerName, false)\r\ndevelop(bool, CIPrintCompileQueue, false)\r\ndevelop(bool, CIPrintRequests, false)\r\nproduct(bool, CITime, false)\r\ndevelop(bool, CITimeEach, false)\r\ndevelop(bool, CICountOSR, false)\r\ndevelop(bool, CICompileNatives, true)\r\ndevelop_pd(bool, CICompileOSR)\r\ndevelop(bool, CIPrintMethodCodes, false)\r\ndevelop(bool, CIPrintTypeFlow, false)\r\ndevelop(bool, CITraceTypeFlow, false)\r\ndevelop(intx, OSROnlyBCI, -1)\r\nproduct(intx, CICompilerCount, CI_COMPILER_COUNT)\r\nproduct(intx, CompilationPolicyChoice, 0)\r\ndevelop(bool, UseStackBanging, true)\r\ndevelop(bool, UseStrictFP, true)\r\ndevelop(bool, GenerateSynchronizationCode, true)\r\ndevelop(bool, GenerateCompilerNullChecks, true)\r\ndevelop(bool, GenerateRangeChecks, true)\r\ndevelop_pd(bool, ImplicitNullChecks)\r\nproduct_pd(bool, TrapBasedNullChecks)\r\nproduct(bool, PrintSafepointStatistics, false)\r\nproduct(intx, PrintSafepointStatisticsCount, 300)\r\nproduct(intx, PrintSafepointStatisticsTimeout,  -1)\r\nproduct(bool, TraceSafepointCleanupTime, false)\r\nproduct(bool, Inline, true)\r\nproduct(bool, ClipInlining, true)\r\ndevelop(bool, UseCHA, true)\r\nproduct(bool, UseTypeProfile, true)\r\nnotproduct(bool, TimeCompiler, false)\r\ndiagnostic(bool, PrintInlining, false)\r\nproduct(bool, UsePopCountInstruction, false)\r\ndevelop(bool, EagerInitialization, false)\r\ndevelop(bool, TraceMethodReplacement, false)\r\ndevelop(bool, PrintMethodFlushing, false)\r\ndiagnostic(bool, PrintMethodFlushingStatistics, false)\r\ndevelop(bool, UseRelocIndex, false)\r\ndevelop(bool, StressCodeBuffers, false)\r\ndiagnostic(bool, DebugNonSafepoints, trueInDebug)\r\nproduct(bool, PrintVMOptions, false)\r\nproduct(bool, IgnoreUnrecognizedVMOptions, false)\r\nproduct(bool, PrintCommandLineFlags, false)\r\nproduct(bool, PrintFlagsInitial, false)\r\nproduct(bool, PrintFlagsFinal, false)\r\nnotproduct(bool, PrintFlagsWithComments, false)\r\ndiagnostic(bool, SerializeVMOutput, true)\r\ndiagnostic(bool, DisplayVMOutput, true)\r\ndiagnostic(bool, LogVMOutput, false)\r\ndiagnostic(ccstr, LogFile, NULL)\r\nproduct(ccstr, ErrorFile, NULL)\r\nproduct(bool, DisplayVMOutputToStderr, false)\r\nproduct(bool, DisplayVMOutputToStdout, false)\r\nproduct(bool, UseHeavyMonitors, false)\r\nproduct(bool, PrintStringTableStatistics, false)\r\ndiagnostic(bool, VerifyStringTableAtExit, false)\r\nnotproduct(bool, PrintSymbolTableSizeHistogram, false)\r\nnotproduct(bool, ExitVMOnVerifyError, false)\r\nnotproduct(ccstr, AbortVMOnException, NULL)\r\nnotproduct(ccstr, AbortVMOnExceptionMessage, NULL)\r\ndevelop(bool, DebugVtables, false)\r\ndevelop(bool, PrintVtables, false)\r\nnotproduct(bool, PrintVtableStats, false)\r\ndevelop(bool, TraceCreateZombies, false)\r\nnotproduct(bool, IgnoreLockingAssertions, false)\r\nproduct(bool, RangeCheckElimination, true)\r\ndevelop_pd(bool, UncommonNullCast)\r\ndevelop(bool, TypeProfileCasts,  true)\r\ndevelop(bool, DelayCompilationDuringStartup, true)\r\ndevelop(bool, CompileTheWorld, false)\r\ndevelop(bool, CompileTheWorldPreloadClasses, true)\r\nnotproduct(intx, CompileTheWorldSafepointInterval, 100)\r\ndevelop(bool, FillDelaySlots, true)\r\ndevelop(bool, TimeLivenessAnalysis, false)\r\ndevelop(bool, TraceLivenessGen, false)\r\nnotproduct(bool, TraceLivenessQuery, false)\r\nnotproduct(bool, CollectIndexSetStatistics, false)\r\ndevelop(bool, UseLoopSafepoints, true)\r\nproduct(bool, AggressiveOpts, false)\r\nproduct_pd(uintx, TypeProfileLevel)\r\nproduct(intx, TypeProfileArgsLimit,     2)\r\nproduct(intx, TypeProfileParmsLimit,    2)\r\ndevelop(bool, CountCompiledCalls, false)\r\nnotproduct(bool, CountRuntimeCalls, false)\r\ndevelop(bool, CountJNICalls, false)\r\nnotproduct(bool, CountJVMCalls, false)\r\nnotproduct(bool, CountRemovableExceptions, false)\r\nnotproduct(bool, ICMissHistogram, false)\r\nnotproduct(bool, PrintClassStatistics, false)\r\nnotproduct(bool, PrintMethodStatistics, false)\r\ndevelop(bool, ClearInterpreterLocals, false)\r\nproduct_pd(bool, RewriteBytecodes)\r\nproduct_pd(bool, RewriteFrequentPairs)\r\ndiagnostic(bool, PrintInterpreter, false)\r\nproduct(bool, UseInterpreter, true)\r\ndevelop(bool, UseFastSignatureHandlers, true)\r\nproduct(bool, UseLoopCounter, true)\r\nproduct(bool, UseFastEmptyMethods, true)\r\nproduct(bool, UseFastAccessorMethods, true)\r\nproduct_pd(bool, UseOnStackReplacement)\r\nnotproduct(bool, TraceOnStackReplacement, false)\r\nproduct_pd(bool, PreferInterpreterNativeStubs)\r\ndevelop(bool, CountBytecodes, false)\r\ndevelop(bool, PrintBytecodeHistogram, false)\r\ndevelop(bool, PrintBytecodePairHistogram, false)\r\ndiagnostic(bool, PrintSignatureHandlers, false)\r\ndevelop(bool, VerifyOops, false)\r\ndevelop(bool, CheckUnhandledOops, false)\r\ndevelop(bool, VerifyJNIFields, trueInDebug)\r\nnotproduct(bool, VerifyJNIEnvThread, false)\r\ndevelop(bool, VerifyFPU, false)\r\ndevelop(bool, VerifyThread, false)\r\ndevelop(bool, VerifyActivationFrameSize, false)\r\ndevelop(bool, TraceFrequencyInlining, false)\r\ndevelop_pd(bool, InlineIntrinsics)\r\nproduct_pd(bool, ProfileInterpreter)\r\ndevelop(bool, TraceProfileInterpreter, false)\r\ndevelop_pd(bool, ProfileTraps)\r\nproduct(intx, ProfileMaturityPercentage, 20)\r\ndevelop(bool, PrintMethodData, false)\r\ndevelop(bool, VerifyDataPointer, trueInDebug)\r\ndevelop(bool, VerifyCompiledCode, false)\r\nnotproduct(bool, CrashGCForDumpingJavaThread, false)\r\nproduct(bool, UseCompiler, true)\r\ndevelop(bool, TraceCompilationPolicy, false)\r\ndevelop(bool, TimeCompilationPolicy, false)\r\nproduct(bool, UseCounterDecay, true)\r\ndevelop(intx, CounterHalfLifeTime,    30)\r\ndevelop(intx, CounterDecayMinIntervalLength,   500)\r\nproduct(bool, AlwaysCompileLoopMethods, false)\r\nproduct(bool, DontCompileHugeMethods, true)\r\nproduct(bool, EstimateArgEscape, true)\r\nproduct(intx, BCEATraceLevel, 0)\r\nproduct(intx, MaxBCEAEstimateLevel, 5)\r\nproduct(intx, MaxBCEAEstimateSize, 150)\r\nproduct(intx,  AllocatePrefetchStyle, 1)\r\nproduct(intx,  AllocatePrefetchDistance, -1)\r\nproduct(intx,  AllocatePrefetchLines, 3)\r\nproduct(intx,  AllocateInstancePrefetchLines, 1)\r\nproduct(intx,  AllocatePrefetchStepSize, 16)\r\nproduct(intx,  AllocatePrefetchInstr, 0)\r\ndevelop(bool, TraceDeoptimization, false)\r\ndevelop(bool, DebugDeoptimization, false)\r\nproduct(intx, SelfDestructTimer, 0)\r\nproduct(intx, MaxJavaStackTraceDepth, 1024)\r\nNOT_EMBEDDED(diagnostic(intx, GuaranteedSafepointInterval, 1000)\r\nEMBEDDED_ONLY(product(intx, GuaranteedSafepointInterval, 0)\r\nproduct(intx, SafepointTimeoutDelay, 10000)\r\nproduct(intx, NmethodSweepFraction, 16)\r\nproduct(intx, NmethodSweepCheckInterval, 5)\r\nproduct(intx, NmethodSweepActivity, 10)\r\nnotproduct(bool, LogSweeper, false)\r\nnotproduct(intx, SweeperLogEntries, 1024)\r\nnotproduct(intx, MemProfilingInterval, 500)\r\ndevelop(intx, MallocCatchPtr, -1)\r\nnotproduct(intx, AssertRepeat, 1)\r\nnotproduct(uintx, HandleAllocationLimit, 1024)\r\ndevelop(uintx, TotalHandleAllocationLimit, 1024)\r\ndevelop(intx, StackPrintLimit, 100)\r\nnotproduct(intx, MaxElementPrintSize, 256)\r\nnotproduct(intx, MaxSubklassPrintSize, 4)\r\nproduct(intx, MaxInlineLevel, 9)\r\nproduct(intx, MaxRecursiveInlineLevel, 1)\r\ndevelop(intx, MaxForceInlineLevel, 100)\r\nproduct_pd(intx, InlineSmallCode)\r\nproduct(intx, MaxInlineSize, 35)\r\nproduct_pd(intx, FreqInlineSize)\r\nproduct(intx, MaxTrivialSize, 6)\r\nproduct(intx, MinInliningThreshold, 250)\r\ndevelop(intx, MethodHistogramCutoff, 100)\r\ndevelop(intx, ProfilerNumberOfInterpretedMethods, 25)\r\ndevelop(intx, ProfilerNumberOfCompiledMethods, 25)\r\ndevelop(intx, ProfilerNumberOfStubMethods, 25)\r\ndevelop(intx, ProfilerNumberOfRuntimeStubNodes, 25)\r\nproduct(intx, ProfileIntervalsTicks, 100)\r\nnotproduct(intx, ScavengeALotInterval,     1)\r\nnotproduct(intx, FullGCALotInterval,     1)\r\nnotproduct(intx, FullGCALotStart,     0)\r\ndevelop(intx, DontYieldALotInterval,    10)\r\ndevelop(intx, MinSleepInterval,     1)\r\ndevelop(intx, ProfilerPCTickThreshold,    15)\r\nnotproduct(intx, DeoptimizeALotInterval,     5)\r\nnotproduct(intx, ZombieALotInterval,     5)\r\ndiagnostic(intx, MallocVerifyInterval,     0)\r\ndiagnostic(intx, MallocVerifyStart,     0)\r\ndiagnostic(uintx, MallocMaxTestWords,     0)\r\nproduct(intx, TypeProfileWidth,     2)\r\ndevelop(intx, BciProfileWidth,      2)\r\nproduct(intx, PerMethodRecompilationCutoff, 400)\r\nproduct(intx, PerBytecodeRecompilationCutoff, 200)\r\nproduct(intx, PerMethodTrapLimit,  100)\r\nexperimental(intx, PerMethodSpecTrapLimit,  5000)\r\nproduct(intx, PerBytecodeTrapLimit,  4)\r\nexperimental(intx, SpecTrapLimitExtraEntries,  3)\r\ndevelop(intx, InlineFrequencyRatio,    20)\r\ndevelop_pd(intx, InlineFrequencyCount)\r\ndevelop(intx, InlineThrowCount,    50)\r\ndevelop(intx, InlineThrowMaxSize,   200)\r\ndevelop(intx, ProfilerNodeSize,  1024)\r\nproduct_pd(intx, PreInflateSpin)\r\nproduct(uintx, InitialHeapSize, 0)\r\nproduct(uintx, MaxNewSize, max_uintx)\r\nproduct(uintx, PretenureSizeThreshold, 0)\r\nproduct(uintx, TLABSize, 0)\r\nproduct(uintx, TLABAllocationWeight, 35)\r\nproduct(uintx, TLABWasteTargetPercent, 1)\r\nproduct(uintx, TLABRefillWasteFraction,    64)\r\nproduct(uintx, TLABWasteIncrement,    4)\r\nproduct(uintx, SurvivorRatio, 8)\r\nproduct(uintx, NewRatio, 2)\r\nproduct_pd(uintx, NewSizeThreadIncrease)\r\nproduct_pd(uintx, MetaspaceSize)\r\nproduct(uintx, MaxMetaspaceSize, max_uintx)\r\nmanageable(uintx, MinHeapFreeRatio, 40)\r\nmanageable(uintx, MaxHeapFreeRatio, 70)\r\nproduct(intx, SoftRefLRUPolicyMSPerMB, 1000)\r\nproduct(uintx, MinMetaspaceFreeRatio,    40)\r\nproduct(uintx, MaxMetaspaceFreeRatio,    70)\r\nproduct(uintx, QueuedAllocationWarningCount, 0)\r\ndiagnostic(uintx, VerifyGCStartAt,   0)\r\ndiagnostic(intx, VerifyGCLevel,     0)\r\nproduct(uintx, MaxTenuringThreshold,    15)\r\nproduct(uintx, InitialTenuringThreshold,    7)\r\nproduct(uintx, TargetSurvivorRatio,    50)\r\nproduct(uintx, MarkSweepDeadRatio,     5)\r\nproduct(uintx, MarkSweepAlwaysCompactCount,     4)\r\nproduct(intx, PrintCMSStatistics, 0)\r\nproduct(bool, PrintCMSInitiationStatistics, false)\r\nproduct(intx, PrintFLSStatistics, 0)\r\nproduct(intx, PrintFLSCensus, 0)\r\ndevelop(uintx, GCExpandToAllocateDelayMillis, 0)\r\ndevelop(uintx, GCWorkerDelayMillis, 0)\r\nproduct(intx, DeferThrSuspendLoopCount,     4000)\r\nproduct(intx, DeferPollingPageLoopCount,     -1)\r\nproduct(bool, PSChunkLargeArrays, true)\r\nproduct(uintx, GCDrainStackTargetSize, 64)\r\nproduct_pd(intx, StackYellowPages)\r\nproduct_pd(intx, StackRedPages)\r\nproduct_pd(intx, StackShadowPages)\r\nproduct_pd(intx, ThreadStackSize)\r\nproduct_pd(intx, VMThreadStackSize)\r\nproduct_pd(intx, CompilerThreadStackSize)\r\ndevelop_pd(uintx, JVMInvokeMethodSlack)\r\ndevelop(uintx, CodeCacheSegmentSize, 64 PPC64_ONLY(+64))\r\ndevelop_pd(intx, CodeEntryAlignment)\r\nproduct_pd(intx, OptoLoopAlignment)\r\nproduct_pd(uintx, InitialCodeCacheSize)\r\ndevelop_pd(uintx, CodeCacheMinimumUseSpace)\r\nproduct_pd(uintx, ReservedCodeCacheSize)\r\nproduct_pd(uintx, CodeCacheExpansionSize)\r\ndevelop_pd(uintx, CodeCacheMinBlockLength)\r\nnotproduct(bool, ExitOnFullCodeCache, false)\r\nproduct(bool, UseCodeCacheFlushing, true)\r\ndevelop(intx, BinarySwitchThreshold, 5)\r\ndevelop(intx, StopInterpreterAt, 0)\r\ndevelop(intx, TraceBytecodesAt, 0)\r\ndevelop(intx, CIStart, 0)\r\ndevelop(intx, CIStop, max_jint)\r\ndevelop(intx, CIStartOSR, 0)\r\ndevelop(intx, CIStopOSR, max_jint)\r\ndevelop(intx, CIBreakAtOSR, -1)\r\ndevelop(intx, CIBreakAt, -1)\r\nproduct(ccstr, CompileCommandFile, NULL)\r\ndevelop(bool, ReplayCompiles, false)\r\nproduct(ccstr, ReplayDataFile, NULL)\r\nproduct(ccstr, InlineDataFile, NULL)\r\ndevelop(intx, ReplaySuppressInitializers, 2)\r\ndevelop(bool, ReplayIgnoreInitErrors, false)\r\nproduct(bool, DumpReplayDataOnError, true)\r\nproduct(bool, CICompilerCountPerCPU, false)\r\ndevelop(intx, CIFireOOMAt,    -1)\r\nnotproduct(intx, CICrashAt, -1)\r\nnotproduct(bool, CIObjectFactoryVerify, false)\r\nproduct(intx, ThreadPriorityPolicy, 0)\r\nproduct(bool, ThreadPriorityVerbose, false)\r\nproduct(intx, DefaultThreadPriority, -1)\r\nproduct(intx, CompilerThreadPriority, -1)\r\nproduct(intx, VMThreadPriority, -1)\r\nproduct(bool, CompilerThreadHintNoPreempt, true)\r\nproduct(bool, VMThreadHintNoPreempt, false)\r\nproduct(intx, JavaPriority1_To_OSPriority, -1)\r\nproduct(intx, JavaPriority2_To_OSPriority, -1)\r\nproduct(intx, JavaPriority3_To_OSPriority, -1)\r\nproduct(intx, JavaPriority4_To_OSPriority, -1)\r\nproduct(intx, JavaPriority5_To_OSPriority, -1)\r\nproduct(intx, JavaPriority6_To_OSPriority, -1)\r\nproduct(intx, JavaPriority7_To_OSPriority, -1)\r\nproduct(intx, JavaPriority8_To_OSPriority, -1)\r\nproduct(intx, JavaPriority9_To_OSPriority, -1)\r\nproduct(intx, JavaPriority10_To_OSPriority,-1)\r\nexperimental(bool, UseCriticalJavaThreadPriority, false)\r\nexperimental(bool, UseCriticalCompilerThreadPriority, false)\r\nexperimental(bool, UseCriticalCMSThreadPriority, false)\r\nnotproduct(intx, CompileTheWorldStartAt,     1)\r\nnotproduct(intx, CompileTheWorldStopAt, max_jint)\r\ndevelop(intx, NewCodeParameter,      0)\r\ndevelop(intx, MinOopMapAllocation,     8)\r\ndevelop(intx, LongCompileThreshold,     50)\r\nproduct(intx, StarvationMonitorInterval,    200)\r\nproduct_pd(intx, CompileThreshold)\r\nproduct_pd(intx, BackEdgeThreshold)\r\nproduct(intx, Tier0InvokeNotifyFreqLog, 7)\r\nproduct(intx, Tier2InvokeNotifyFreqLog, 11)\r\nproduct(intx, Tier3InvokeNotifyFreqLog, 10)\r\nproduct(intx, Tier23InlineeNotifyFreqLog, 20)\r\nproduct(intx, Tier0BackedgeNotifyFreqLog, 10)\r\nproduct(intx, Tier2BackedgeNotifyFreqLog, 14)\r\nproduct(intx, Tier3BackedgeNotifyFreqLog, 13)\r\nproduct(intx, Tier2CompileThreshold, 0)\r\nproduct(intx, Tier2BackEdgeThreshold, 0)\r\nproduct(intx, Tier3InvocationThreshold, 200)\r\nproduct(intx, Tier3MinInvocationThreshold, 100)\r\nproduct(intx, Tier3CompileThreshold, 2000)\r\nproduct(intx, Tier3BackEdgeThreshold,  60000)\r\nproduct(intx, Tier4InvocationThreshold, 5000)\r\nproduct(intx, Tier4MinInvocationThreshold, 600)\r\nproduct(intx, Tier4CompileThreshold, 15000)\r\nproduct(intx, Tier4BackEdgeThreshold, 40000)\r\nproduct(intx, Tier3DelayOn, 5)\r\nproduct(intx, Tier3DelayOff, 2)\r\nproduct(intx, Tier3LoadFeedback, 5)\r\nproduct(intx, Tier4LoadFeedback, 3)\r\nproduct(intx, TieredCompileTaskTimeout, 50)\r\nproduct(intx, TieredStopAtLevel, 4)\r\nproduct(intx, Tier0ProfilingStartPercentage, 200)\r\nproduct(uintx, IncreaseFirstTierCompileThresholdAt, 50)\r\nproduct(intx, TieredRateUpdateMinTime, 1)\r\nproduct(intx, TieredRateUpdateMaxTime, 25)\r\nproduct_pd(bool, TieredCompilation)\r\nproduct(bool, PrintTieredEvents, false)\r\nproduct_pd(intx, OnStackReplacePercentage)\r\nproduct(intx, InterpreterProfilePercentage, 33)\r\ndevelop(intx, MaxRecompilationSearchLength,    10)\r\ndevelop(intx, MaxInterpretedSearchLength,     3)\r\ndevelop(intx, DesiredMethodLimit,  8000)\r\ndevelop(intx, HugeMethodLimit,  8000)\r\ndevelop(bool, UseNewReflection, true)\r\ndevelop(bool, VerifyReflectionBytecodes, false)\r\nproduct(bool, ReflectionWrapResolutionErrors, true)\r\ndevelop(intx, FastSuperclassLimit, 8)\r\nproduct(uintx, MaxDirectMemorySize, 0)\r\ndiagnostic(bool, UseNewCode, false)\r\ndiagnostic(bool, UseNewCode2, false)\r\ndiagnostic(bool, UseNewCode3, false)\r\nproduct(bool, UsePerfData, falseInEmbedded)\r\nproduct(bool, PerfDataSaveToFile, false)\r\nproduct(ccstr, PerfDataSaveFile, NULL)\r\nproduct(intx, PerfDataSamplingInterval, 50)\r\ndevelop(bool, PerfTraceDataCreation, false)\r\ndevelop(bool, PerfTraceMemOps, false)\r\nproduct(bool, PerfDisableSharedMem, false)\r\nproduct(intx, PerfMaxStringConstLength, 1024)\r\nproduct(bool, PerfAllowAtExitRegistration, false)\r\nproduct(bool, PerfBypassFileSystemCheck, false)\r\nproduct(intx, UnguardOnExecutionViolation, 0)\r\nproduct(bool, ManagementServer, false)\r\nproduct(bool, DisableAttachMechanism, false)\r\nproduct(bool, StartAttachListener, false)\r\nmanageable(bool, PrintConcurrentLocks, false)\r\nproduct(bool, TransmitErrorReport, false)\r\nproduct(ccstr, ErrorReportServer, NULL)\r\nproduct(bool, UseSharedSpaces, true)\r\nproduct(bool, VerifySharedSpaces, false)\r\nproduct(bool, RequireSharedSpaces, false)\r\nproduct(bool, DumpSharedSpaces, false)\r\nproduct(bool, PrintSharedSpaces, false)\r\nproduct(bool, PrintSharedArchiveAndExit, false)\r\nproduct(bool, PrintSharedDictionary, false)\r\ndiagnostic(bool, EnableInvokeDynamic, true)\r\ndiagnostic(bool, IgnoreUnverifiableClassesDuringDump, false)\r\ndiagnostic(bool, PrintMethodHandleStubs, false)\r\ndevelop(bool, TraceMethodHandles, false)\r\ndiagnostic(bool, VerifyMethodHandles, trueInDebug)\r\ndiagnostic(bool, ShowHiddenFrames, false)\r\nexperimental(bool, TrustFinalNonStaticFields, false)\r\ndiagnostic(bool, FoldStableValues, true)\r\ndevelop(bool, TraceInvokeDynamic, false)\r\ndiagnostic(bool, PauseAtStartup,      false)\r\ndiagnostic(ccstr, PauseAtStartupFile, NULL)\r\ndiagnostic(bool, PauseAtExit, false)\r\nproduct(bool, ExtendedDTraceProbes,    false)\r\nproduct(bool, DTraceMethodProbes, false)\r\nproduct(bool, DTraceAllocProbes, false)\r\nproduct(bool, DTraceMonitorProbes, false)\r\nproduct(bool, RelaxAccessControlCheck, false)\r\ndiagnostic(bool, PrintDTraceDOF, false)\r\nproduct(uintx, StringTableSize, defaultStringTableSize)\r\nexperimental(uintx, SymbolTableSize, defaultSymbolTableSize)\r\nproduct(bool, UseStringDeduplication, false)\r\nproduct(bool, PrintStringDeduplicationStatistics, false)\r\nproduct(uintx, StringDeduplicationAgeThreshold, 3)\r\ndiagnostic(bool, StringDeduplicationResizeALot, false)\r\ndiagnostic(bool, StringDeduplicationRehashALot, false)\r\ndevelop(bool, TraceDefaultMethods, false)\r\ndevelop(bool, VerifyGenericSignatures, false)\r\nproduct(bool, UseVMInterruptibleIO, false)\r\ndiagnostic(bool, WhiteBoxAPI, false)\r\nproduct(bool, PrintGCCause, true)\r\nexperimental(intx, SurvivorAlignmentInBytes, 0)\r\nproduct(bool , AllowNonVirtualCalls, false)\r\nproduct(ccstr, DumpLoadedClassList, NULL)\r\nproduct(ccstr, SharedClassListFile, NULL)\r\ndiagnostic(ccstr, SharedArchiveFile, NULL)\r\nproduct(ccstr, ExtraSharedClassListFile, NULL)\r\nexperimental(uintx, ArrayAllocatorMallocLimit)\r\nproduct(bool, EnableTracing, false)\r\nproduct(bool, UseLockedTracing, false)\r\nproduct_pd(bool, PreserveFramePointer)\r\n```',86,'https://www.allisterke.com/?p=88',0,'revision','',0),(89,1,'2017-08-09 01:15:40','2017-08-08 17:15:40','java -X可以列出-X选项，但-XX选项好像并没有直接的方法可以列出。从源码里则可以得到。用hg下载源码后grep一下便可得到所有的-X和-XX选项了。\n\n<h2>一部分是单独列出来的</h2>\n\n<pre><code class=\"bash\">cat hotspot/src/share/vm/runtime/arguments.cpp |\n    grep -o \'option, \"-X[^\"]*\"\' |\n    sed -r \'s/.*\"(.*)\".*/\\1/\'\n</code></pre>\n\n<pre><code class=\"nohighlight\">-Xbootclasspath:\n-Xbootclasspath/a:\n-Xbootclasspath/p:\n-Xrun\n-Xnoclassgc\n-Xincgc\n-Xnoincgc\n-Xconcgc\n-Xnoconcgc\n-Xbatch\n-Xmn\n-Xms\n-Xmx\n-XX:MaxHeapSize=\n-Xmaxf\n-Xminf\n-Xss\n-Xoss\n-XX:CodeCacheExpansionSize=\n-Xmaxjitcodesize\n-XX:ReservedCodeCacheSize=\n-XX:IncreaseFirstTierCompileThresholdAt=\n-Xsqnopause\n-Xrs\n-Xusealtsigs\n-Xoptimize\n-Xprof\n-Xconcurrentio\n-Xinternalversion\n-Xprintflags\n-Xint\n-Xmixed\n-Xcomp\n-Xshare:dump\n-Xshare:on\n-Xshare:auto\n-Xshare:off\n-Xverify\n-Xdebug\n-Xnoagent\n-Xboundthreads\n-Xloggc:\n-Xcheck\n-XX:+AggressiveHeap\n-XX:+NeverTenure\n-XX:+AlwaysTenure\n-XX:+CMSPermGenSweepingEnabled\n-XX:-CMSPermGenSweepingEnabled\n-XX:+UseGCTimeLimit\n-XX:-UseGCTimeLimit\n-XX:MaxTLERatio=\n-XX:+ResizeTLE\n-XX:-ResizeTLE\n-XX:+PrintTLE\n-XX:-PrintTLE\n-XX:TLEFragmentationRatio=\n-XX:TLESize=\n-XX:TLEThreadRatio=\n-XX:+UseTLE\n-XX:-UseTLE\n-XX:+DisplayVMOutputToStderr\n-XX:+DisplayVMOutputToStdout\n-XX:+ExtendedDTraceProbes\n-XX:+FullGCALot\n-XX:CMSParPromoteBlocksToClaim=\n-XX:ParCMSPromoteBlocksToClaim=\n-XX:ParallelGCOldGenAllocBufferSize=\n-XX:ParallelGCToSpaceAllocBufferSize=\n-XX:CMSMarkStackSize=\n-XX:G1MarkStackSize=\n-XX:CMSMarkStackSizeMax=\n-XX:ParallelMarkingThreads=\n-XX:ParallelCMSThreads=\n-XX:MaxDirectMemorySize=\n-XX:+UseVMInterruptibleIO\n-XX:+ManagementServer\n-XX:\n-XX:\n-XX:Flags=\n-XX:+PrintVMOptions\n-XX:-PrintVMOptions\n-XX:+IgnoreUnrecognizedVMOptions\n-XX:-IgnoreUnrecognizedVMOptions\n-XX:+PrintFlagsInitial\n-XX:NativeMemoryTracking\n-XX:+PrintFlagsWithComments\n-XX:\n</code></pre>\n\n<h2>另一部分是宏定义的列表</h2>\n\n太多了，有将近一千个\n\n<pre><code class=\"bash\">cat hotspot/src/share/vm/runtime/globals.hpp |\n    grep \'\\\\\'  |\n    grep -v \'\"\' |\n    grep -v \'\\*\' |\n    grep -v \'#\' |\n    sed \'/^\\s*\\\\$/ d\' |\n    sed \'s/^ *//\' |\n    sed \'s/, *\\\\$//\'\n</code></pre>\n\n<pre><code class=\"nohighlight\">lp64_product(bool, UseCompressedOops, false)\nlp64_product(bool, UseCompressedClassPointers, false)\nnotproduct(bool, CheckCompressedOops, true)\nproduct_pd(uintx, HeapBaseMinAddress)\ndiagnostic(bool, PrintCompressedOopsMode, false)\nlp64_product(intx, ObjectAlignmentInBytes, 8)\nproduct(bool, AssumeMP, false)\nproduct_pd(bool, UseMembar)\ndevelop(bool, CleanChunkPoolAsync, falseInEmbedded)\nexperimental(bool, UseMemSetInBOT, true)\ndiagnostic(bool, UnlockDiagnosticVMOptions, trueInDebug)\nexperimental(bool, UnlockExperimentalVMOptions, false)\nproduct(bool, JavaMonitorsInStackTrace, true)\nproduct_pd(bool, UseLargePages)\nproduct_pd(bool, UseLargePagesIndividualAllocation)\ndevelop(bool, LargePagesIndividualAllocationInjectError, false)\nproduct(bool, UseLargePagesInMetaspace, false)\ndevelop(bool, TracePageSizes, false)\nproduct(bool, UseNUMA, false)\nproduct(bool, UseNUMAInterleaving, false)\nproduct(bool, ForceNUMA, false)\nproduct(uintx, NUMAChunkResizeWeight, 20)\nproduct(bool, UseAdaptiveNUMAChunkSizing, true)\nproduct(bool, NUMAStats, false)\nproduct(uintx, NUMAPageScanRate, 256)\nproduct_pd(bool, NeedsDeoptSuspend)\nproduct(intx, UseSSE, 99)\nproduct(bool, UseAES, false)\nproduct(bool, UseSHA, false)\nproduct(uintx, LargePageSizeInBytes, 0)\nproduct(bool, ForceTimeHighResolution, false)\ndevelop(bool, TraceItables, false)\ndevelop(bool, TracePcPatching, false)\ndevelop(bool, TraceJumps, false)\ndevelop(bool, TraceRelocator, false)\ndevelop(bool, TraceLongCompiles, false)\ndevelop(bool, SafepointALot, false)\nproduct_pd(bool, BackgroundCompilation)\nproduct(bool, PrintVMQWaitTime, false)\ndevelop(bool, NoYieldsInMicrolock, false)\ndevelop(bool, TraceOopMapGeneration, false)\nproduct(bool, MethodFlushing, true)\ndevelop(bool, VerifyStack, false)\ndiagnostic(bool, ForceUnreachable, false)\nnotproduct(bool, StressDerivedPointers, false)\ndevelop(bool, TraceDerivedPointers, false)\nnotproduct(bool, TraceCodeBlobStacks, false)\nproduct(bool, PrintJNIResolving, false)\nnotproduct(bool, PrintRewrites, false)\nproduct(bool, UseInlineCaches, true)\ndevelop(bool, InlineArrayCopy, true)\ndevelop(bool, InlineObjectHash, true)\ndevelop(bool, InlineNatives, true)\ndevelop(bool, InlineMathNatives, true)\ndevelop(bool, InlineClassNatives, true)\ndevelop(bool, InlineThreadNatives, true)\ndevelop(bool, InlineUnsafeOps, true)\nproduct(bool, CriticalJNINatives, true)\nnotproduct(bool, StressCriticalJNINatives, false)\nproduct(bool, UseSSE42Intrinsics, false)\nproduct(bool, UseAESIntrinsics, false)\nproduct(bool, UseSHA1Intrinsics, false)\nproduct(bool, UseSHA256Intrinsics, false)\nproduct(bool, UseSHA512Intrinsics, false)\nproduct(bool, UseCRC32Intrinsics, false)\ndevelop(bool, TraceCallFixup, false)\ndevelop(bool, DeoptimizeALot, false)\nproduct(bool, DeoptimizeRandom, false)\nnotproduct(bool, ZombieALot, false)\nproduct(bool, UnlinkSymbolsALot, false)\nnotproduct(bool, WalkStackALot, false)\nproduct(bool, Debugging, false)\nnotproduct(bool, StrictSafepointChecks, trueInDebug)\nnotproduct(bool, VerifyLastFrame, false)\ndevelop(bool, TraceHandleAllocation, false)\nproduct(bool, UseCompilerSafepoints, true)\nproduct(bool, FailOverToOldVerifier, true)\ndevelop(bool, ShowSafepointMsgs, false)\nproduct(bool, SafepointTimeout, false)\ndevelop(bool, DieOnSafepointTimeout, false)\nproduct(intx, SuspendRetryCount, 50)\nproduct(intx, SuspendRetryDelay, 5)\nproduct(bool, AssertOnSuspendWaitFailure, false)\nproduct(bool, TraceSuspendWaitFailures, false)\nproduct(bool, MaxFDLimit, true)\ndiagnostic(bool, LogEvents, true)\ndiagnostic(uintx, LogEventsBufferEntries, 10)\nproduct(bool, BytecodeVerificationRemote, true)\nproduct(bool, BytecodeVerificationLocal, false)\ndevelop(bool, ForceFloatExceptions, trueInDebug)\ndevelop(bool, VerifyStackAtCalls, false)\ndevelop(bool, TraceJavaAssertions, false)\nnotproduct(bool, CheckAssertionStatusDirectives, false)\nnotproduct(bool, PrintMallocFree, false)\nproduct(bool, PrintOopAddress, false)\nnotproduct(bool, VerifyCodeCacheOften, false)\ndevelop(bool, ZapDeadCompiledLocals, false)\nnotproduct(bool, ZapDeadLocalsOld, false)\nnotproduct(bool, CheckOopishValues, false)\ndevelop(bool, UseMallocOnly, false)\ndevelop(bool, PrintMalloc, false)\ndevelop(bool, PrintMallocStatistics, false)\ndevelop(bool, ZapResourceArea, trueInDebug)\nnotproduct(bool, ZapVMHandleArea, trueInDebug)\ndevelop(bool, ZapJNIHandleArea, trueInDebug)\nnotproduct(bool, ZapStackSegments, trueInDebug)\ndevelop(bool, ZapUnusedHeapArea, trueInDebug)\ndevelop(bool, TraceZapUnusedHeapArea, false)\ndevelop(bool, CheckZapUnusedHeapArea, false)\ndevelop(bool, ZapFillerObjects, trueInDebug)\ndevelop(bool, PrintVMMessages, true)\nproduct(bool, PrintGCApplicationConcurrentTime, false)\nproduct(bool, PrintGCApplicationStoppedTime, false)\ndiagnostic(bool, VerboseVerification, false)\nnotproduct(uintx, ErrorHandlerTest, 0)\ndevelop(bool, Verbose, false)\ndevelop(bool, PrintMiscellaneous, false)\ndevelop(bool, WizardMode, false)\nproduct(bool, ShowMessageBoxOnError, false)\nproduct(bool, CreateMinidumpOnCrash, false)\nproduct_pd(bool, UseOSErrorReporting)\nproduct(bool, SuppressFatalErrorMessage, false)\nmanageable(bool, HeapDumpBeforeFullGC, false)\nmanageable(bool, HeapDumpAfterFullGC, false)\nmanageable(bool, HeapDumpOnOutOfMemoryError, false)\nmanageable(ccstr, HeapDumpPath, NULL)\ndevelop(bool, BreakAtWarning, false)\ndevelop(bool, TraceVMOperation, false)\ndevelop(bool, UseFakeTimers, false)\ndiagnostic(bool, PrintNMTStatistics, false)\ndiagnostic(bool, LogCompilation, false)\nproduct(bool, PrintCompilation, false)\ndiagnostic(bool, TraceNMethodInstalls, false)\ndiagnostic(intx, ScavengeRootsInCode, 2)\nproduct(bool, AlwaysRestoreFPU, false)\ndiagnostic(bool, PrintCompilation2, false)\ndiagnostic(bool, PrintAdapterHandlers, false)\ndiagnostic(bool, VerifyAdapterCalls, trueInDebug)\ndevelop(bool, VerifyAdapterSharing, false)\ndiagnostic(bool, PrintAssembly, false)\ndiagnostic(ccstr, PrintAssemblyOptions, NULL)\ndiagnostic(bool, PrintNMethods, false)\ndiagnostic(bool, PrintNativeNMethods, false)\ndevelop(bool, PrintDebugInfo, false)\ndevelop(bool, PrintRelocations, false)\ndevelop(bool, PrintDependencies, false)\ndevelop(bool, PrintExceptionHandlers, false)\ndevelop(bool, StressCompiledExceptionHandlers, false)\ndevelop(bool, InterceptOSException, false)\nproduct(bool, PrintCodeCache, false)\ndevelop(bool, PrintCodeCache2, false)\nproduct(bool, PrintCodeCacheOnCompilation, false)\ndiagnostic(bool, PrintStubCode, false)\nproduct(bool, StackTraceInThrowable, true)\nproduct(bool, OmitStackTraceInFastThrow, true)\nproduct(bool, ProfilerPrintByteCodeStatistics, false)\nproduct(bool, ProfilerRecordPC, false)\nproduct(bool, ProfileVM, false)\nproduct(bool, ProfileIntervals, false)\nnotproduct(bool, ProfilerCheckIntervals, false)\ndevelop(bool, PrintJVMWarnings, false)\nproduct(bool, PrintWarnings, true)\nnotproduct(uintx, WarnOnStalledSpinLock, 0)\nproduct(bool, RegisterFinalizersAtInit, true)\ndevelop(bool, RegisterReferences, true)\ndevelop(bool, IgnoreRewrites, false)\ndevelop(bool, PrintCodeCacheExtension, false)\ndevelop(bool, UsePrivilegedStack, true)\ndevelop(bool, ProtectionDomainVerification, true)\nproduct(bool, ClassUnloading, true)\nproduct(bool, ClassUnloadingWithConcurrentMark, true)\ndevelop(bool, DisableStartThread, false)\ndevelop(bool, MemProfiling, false)\nnotproduct(bool, PrintSystemDictionaryAtExit, false)\nexperimental(intx, PredictedLoadedClassCount, 0)\ndiagnostic(bool, UnsyncloadClass, false)\nproduct(bool, AlwaysLockClassLoader, false)\nproduct(bool, AllowParallelDefineClass, false)\nproduct(bool, MustCallLoadClassInternal, false)\nproduct_pd(bool, DontYieldALot)\nproduct_pd(bool, ConvertSleepToYield)\nproduct(bool, ConvertYieldToSleep, false)\nproduct(bool, UseBoundThreads, true)\ndevelop(bool, UseDetachedThreads, true)\nproduct(bool, UseLWPSynchronization, true)\nproduct(ccstr, SyncKnobs, NULL)\nproduct(intx, EmitSync, 0)\nproduct(intx, hashCode, 5)\nproduct(intx, WorkAroundNPTLTimedWaitHang, 1)\nproduct(bool, FilterSpuriousWakeups, true)\ndevelop(bool, UsePthreads, false)\nproduct(bool, AdjustConcurrency, false)\nproduct(bool, ReduceSignalUsage, false)\ndevelop_pd(bool, ShareVtableStubs)\ndevelop(bool, LoadLineNumberTables, true)\ndevelop(bool, LoadLocalVariableTables, true)\ndevelop(bool, LoadLocalVariableTypeTables, true)\nproduct(bool, AllowUserSignalHandlers, false)\nproduct(bool, UseSignalChaining, true)\nproduct(bool, UseAltSigs, false)\nproduct(bool, AllowJNIEnvProxy, false)\nproduct(bool, JNIDetachReleasesMonitors, true)\nproduct(bool, RestoreMXCSROnJNICalls, false)\nproduct(bool, CheckJNICalls, false)\nproduct(bool, CheckEndorsedAndExtDirs, false)\nproduct(bool, UseFastJNIAccessors, true)\nproduct(intx, MaxJNILocalCapacity, 65536)\nproduct(bool, EagerXrunInit, false)\nproduct(bool, PreserveAllAnnotations, false)\ndevelop(uintx, PreallocatedOutOfMemoryErrorCount, 4)\nproduct(bool, LazyBootClassLoader, true)\nproduct(bool, UseXMMForArrayCopy, false)\nproduct(intx, FieldsAllocationStyle, 1)\nproduct(bool, CompactFields, true)\nnotproduct(bool, PrintFieldLayout, false)\nproduct(intx, ContendedPaddingWidth, 128)\nproduct(bool, EnableContended, true)\nproduct(bool, RestrictContended, true)\nproduct(bool, UseBiasedLocking, true)\nproduct(intx, BiasedLockingStartupDelay, 4000)\ndiagnostic(bool, PrintBiasedLockingStatistics, false)\nproduct(intx, BiasedLockingBulkRebiasThreshold, 20)\nproduct(intx, BiasedLockingBulkRevokeThreshold, 40)\nproduct(intx, BiasedLockingDecayTime, 25000)\nproduct(bool, ExitOnOutOfMemoryError, false)\nproduct(bool, CrashOnOutOfMemoryError, false)\nnotproduct(bool, TraceRuntimeCalls, false)\ndevelop(bool, TraceJNICalls, false)\ndevelop(bool, StressRewriter, false)\nnotproduct(bool, TraceJVMCalls, false)\nproduct(ccstr, TraceJVMTI, NULL)\nproduct(bool, StressLdcRewrite, false)\nproduct(intx, TraceRedefineClasses, 0)\ndevelop(bool, StressMethodComparator, false)\nproduct(bool, VerifyMergedCPBytecodes, true)\ndevelop(bool, TraceJNIHandleAllocation, false)\ndevelop(bool, TraceThreadEvents, false)\ndevelop(bool, TraceBytecodes, false)\ndevelop(bool, TraceClassInitialization, false)\ndevelop(bool, TraceExceptions, false)\ndevelop(bool, TraceICs, false)\nnotproduct(bool, TraceInvocationCounterOverflow, false)\ndevelop(bool, TraceInlineCacheClearing, false)\ndevelop(bool, TraceDependencies, false)\ndevelop(bool, VerifyDependencies, trueInDebug)\ndevelop(bool, TraceNewOopMapGeneration, false)\ndevelop(bool, TraceNewOopMapGenerationDetailed, false)\ndevelop(bool, TimeOopMap, false)\ndevelop(bool, TimeOopMap2, false)\ndevelop(bool, TraceMonitorMismatch, false)\ndevelop(bool, TraceOopMapRewrites, false)\ndevelop(bool, TraceSafepoint, false)\ndevelop(bool, TraceICBuffer, false)\ndevelop(bool, TraceCompiledIC, false)\nnotproduct(bool, TraceZapDeadLocals, false)\ndevelop(bool, TraceStartupTime, false)\ndevelop(bool, TraceProtectionDomainVerification, false)\ndevelop(bool, TraceClearedExceptions, false)\nproduct(bool, TraceClassResolution, false)\nproduct(bool, TraceBiasedLocking, false)\nproduct(bool, TraceMonitorInflation, false)\nproduct(bool, UseSerialGC, false)\nproduct(bool, UseG1GC, false)\nproduct(bool, UseParallelGC, false)\nproduct(bool, UseParallelOldGC, false)\nproduct(uintx, HeapMaximumCompactionInterval, 20)\nproduct(uintx, HeapFirstMaximumCompactionCount, 3)\nproduct(bool, UseMaximumCompactionOnSystemGC, true)\nproduct(uintx, ParallelOldDeadWoodLimiterMean, 50)\nproduct(uintx, ParallelOldDeadWoodLimiterStdDev, 80)\nproduct(uintx, ParallelGCThreads, 0)\nproduct(bool, UseDynamicNumberOfGCThreads, false)\ndiagnostic(bool, ForceDynamicNumberOfGCThreads, false)\nproduct(bool, TraceDynamicGCThreads, false)\ndevelop(bool, ParallelOldGCSplitALot, false)\ndevelop(uintx, ParallelOldGCSplitInterval, 3)\nproduct(uintx, ConcGCThreads, 0)\nproduct(uintx, YoungPLABSize, 4096)\nproduct(uintx, OldPLABSize, 1024)\nproduct(uintx, GCTaskTimeStampEntries, 200)\nproduct(bool, AlwaysTenure, false)\nproduct(bool, NeverTenure, false)\nproduct(bool, ScavengeBeforeFullGC, true)\ndevelop(bool, ScavengeWithObjectsInToSpace, false)\nproduct(bool, UseConcMarkSweepGC, false)\nproduct(bool, ExplicitGCInvokesConcurrent, false)\nproduct(bool, ExplicitGCInvokesConcurrentAndUnloadsClasses, false)\nproduct(bool, GCLockerInvokesConcurrent, false)\nproduct(uintx, GCLockerEdenExpansionPercent, 5)\ndiagnostic(uintx, GCLockerRetryAllocationCount, 2)\ndevelop(bool, UseCMSAdaptiveFreeLists, true)\ndevelop(bool, UseAsyncConcMarkSweepGC, true)\ndevelop(bool, RotateCMSCollectionTypes, false)\nproduct(bool, UseCMSBestFit, true)\nproduct(bool, UseCMSCollectionPassing, true)\nproduct(bool, UseParNewGC, false)\nproduct(bool, ParallelGCVerbose, false)\nproduct(uintx, ParallelGCBufferWastePct, 10)\ndiagnostic(bool, ParallelGCRetainPLAB, false)\nproduct(uintx, TargetPLABWastePct, 10)\nproduct(uintx, PLABWeight, 75)\nproduct(bool, ResizePLAB, true)\nproduct(bool, PrintPLAB, false)\nproduct(intx, ParGCArrayScanChunk, 50)\nproduct(bool, ParGCUseLocalOverflow, false)\nproduct(bool, ParGCTrimOverflow, true)\nnotproduct(bool, ParGCWorkQueueOverflowALot, false)\nnotproduct(uintx, ParGCWorkQueueOverflowInterval, 1000)\nproduct(uintx, ParGCDesiredObjsFromOverflowList, 20)\ndiagnostic(uintx, ParGCStridesPerThread, 2)\ndiagnostic(intx, ParGCCardsPerStrideChunk, 256)\nproduct(uintx, CMSParPromoteBlocksToClaim, 16)\nproduct(uintx, OldPLABWeight, 50)\nproduct(bool, ResizeOldPLAB, true)\nproduct(bool, PrintOldPLAB, false)\nproduct(uintx, CMSOldPLABMin, 16)\nproduct(uintx, CMSOldPLABMax, 1024)\nproduct(uintx, CMSOldPLABNumRefills, 4)\nproduct(bool, CMSOldPLABResizeQuicker, false)\nproduct(uintx, CMSOldPLABToleranceFactor, 4)\nproduct(uintx, CMSOldPLABReactivityFactor, 2)\nproduct(bool, AlwaysPreTouch, false)\nproduct_pd(uintx, CMSYoungGenPerWorker)\nproduct(bool, CMSIncrementalMode, false)\nproduct(uintx, CMSIncrementalDutyCycle, 10)\nproduct(bool, CMSIncrementalPacing, true)\nproduct(uintx, CMSIncrementalDutyCycleMin, 0)\nproduct(uintx, CMSIncrementalSafetyFactor, 10)\nproduct(uintx, CMSIncrementalOffset, 0)\nproduct(uintx, CMSExpAvgFactor, 50)\nproduct(uintx, CMS_FLSWeight, 75)\nproduct(uintx, CMS_FLSPadding, 1)\nproduct(uintx, FLSCoalescePolicy, 2)\nproduct(bool, FLSAlwaysCoalesceLarge, false)\nproduct(double, FLSLargestBlockCoalesceProximity, 0.99)\nproduct(double, CMSSmallCoalSurplusPercent, 1.05)\nproduct(double, CMSLargeCoalSurplusPercent, 0.95)\nproduct(double, CMSSmallSplitSurplusPercent, 1.10)\nproduct(double, CMSLargeSplitSurplusPercent, 1.00)\nproduct(bool, CMSExtrapolateSweep, false)\nproduct(uintx, CMS_SweepWeight, 75)\nproduct(uintx, CMS_SweepPadding, 1)\nproduct(uintx, CMS_SweepTimerThresholdMillis, 10)\ndevelop(bool, CMSTraceIncrementalMode, false)\ndevelop(bool, CMSTraceIncrementalPacing, false)\ndevelop(bool, CMSTraceThreadState, false)\nproduct(bool, CMSClassUnloadingEnabled, true)\nproduct(uintx, CMSClassUnloadingMaxInterval, 0)\nproduct(bool, CMSCompactWhenClearAllSoftRefs, true)\nproduct(bool, UseCMSCompactAtFullCollection, true)\nproduct(uintx, CMSFullGCsBeforeCompaction, 0)\ndevelop(intx, CMSDictionaryChoice, 0)\nproduct(uintx, CMSIndexedFreeListReplenish, 4)\nproduct(bool, CMSReplenishIntermediate, true)\nproduct(bool, CMSSplitIndexedFreeListBlocks, true)\nproduct(bool, CMSLoopWarn, false)\ndevelop(bool, CMSOverflowEarlyRestoration, false)\nnotproduct(bool, CMSMarkStackOverflowALot, false)\nnotproduct(uintx, CMSMarkStackOverflowInterval, 1000)\nproduct(uintx, CMSMaxAbortablePrecleanLoops, 0)\nproduct(intx, CMSMaxAbortablePrecleanTime, 5000)\nproduct(uintx, CMSAbortablePrecleanMinWorkPerIteration, 100)\nmanageable(intx, CMSAbortablePrecleanWaitMillis, 100)\nproduct(uintx, CMSRescanMultiple, 32)\nproduct(uintx, CMSConcMarkMultiple, 32)\nproduct(bool, CMSAbortSemantics, false)\nproduct(bool, CMSParallelInitialMarkEnabled, true)\nproduct(bool, CMSParallelRemarkEnabled, true)\nproduct(bool, CMSParallelSurvivorRemarkEnabled, true)\nproduct(bool, CMSPLABRecordAlways, true)\nproduct(bool, CMSEdenChunksRecordAlways, true)\nproduct(bool, CMSPrintEdenSurvivorChunks, false)\nproduct(bool, CMSConcurrentMTEnabled, true)\nproduct(bool, CMSPrecleaningEnabled, true)\nproduct(uintx, CMSPrecleanIter, 3)\nproduct(uintx, CMSPrecleanNumerator, 2)\nproduct(uintx, CMSPrecleanDenominator, 3)\nproduct(bool, CMSPrecleanRefLists1, true)\nproduct(bool, CMSPrecleanRefLists2, false)\nproduct(bool, CMSPrecleanSurvivors1, false)\nproduct(bool, CMSPrecleanSurvivors2, true)\nproduct(uintx, CMSPrecleanThreshold, 1000)\nproduct(bool, CMSCleanOnEnter, true)\nproduct(uintx, CMSRemarkVerifyVariant, 1)\nproduct(uintx, CMSScheduleRemarkEdenPenetration, 50)\nproduct(uintx, CMSScheduleRemarkSamplingRatio, 5)\nproduct(bool, CMSScavengeBeforeRemark, false)\ndevelop(bool, CMSTraceSweeper, false)\nproduct(uintx, CMSWorkQueueDrainThreshold, 10)\nmanageable(intx, CMSWaitDuration, 2000)\ndevelop(uintx, CMSCheckInterval, 1000)\nproduct(bool, CMSYield, true)\nproduct(bool, CMSDumpAtPromotionFailure, false)\nproduct(bool, CMSPrintChunksInDump, false)\nproduct(bool, CMSPrintObjectsInDump, false)\ndiagnostic(bool, FLSVerifyAllHeapReferences, false)\ndiagnostic(bool, FLSVerifyLists, false)\ndiagnostic(bool, FLSVerifyIndexTable, false)\ndevelop(bool, FLSVerifyDictionary, false)\ndevelop(bool, VerifyBlockOffsetArray, false)\ndiagnostic(bool, BlockOffsetArrayUseUnallocatedBlock, false)\ndevelop(bool, TraceCMSState, false)\nproduct(intx, RefDiscoveryPolicy, 0)\nproduct(bool, ParallelRefProcEnabled, false)\nproduct(bool, ParallelRefProcBalancingEnabled, true)\nproduct(uintx, CMSTriggerRatio, 80)\nproduct(uintx, CMSBootstrapOccupancy, 50)\nproduct(intx, CMSInitiatingOccupancyFraction, -1)\nproduct(uintx, InitiatingHeapOccupancyPercent, 45)\nmanageable(intx, CMSTriggerInterval, -1)\nproduct(bool, UseCMSInitiatingOccupancyOnly, false)\nproduct(uintx, CMSIsTooFullPercentage, 98)\ndevelop(bool, CMSTestInFreeList, false)\nnotproduct(bool, CMSVerifyReturnedBytes, false)\nnotproduct(bool, ScavengeALot, false)\ndevelop(bool, FullGCALot, false)\nnotproduct(bool, GCALotAtAllSafepoints, false)\nproduct(bool, PrintPromotionFailure, false)\nnotproduct(bool, PromotionFailureALot, false)\ndevelop(uintx, PromotionFailureALotCount, 1000)\ndevelop(uintx, PromotionFailureALotInterval, 5)\nexperimental(uintx, WorkStealingSleepMillis, 1)\nexperimental(uintx, WorkStealingYieldsBeforeSleep, 5000)\nexperimental(uintx, WorkStealingHardSpins, 4096)\nexperimental(uintx, WorkStealingSpinToYieldRatio, 10)\ndevelop(uintx, ObjArrayMarkingStride, 512)\ndevelop(bool, MetadataAllocationFailALot, false)\ndevelop(uintx, MetadataAllocationFailALotInterval, 1000)\ndevelop(bool, TraceMetadataChunkAllocation, false)\nproduct(bool, TraceMetadataHumongousAllocation, false)\ndevelop(bool, TraceMetavirtualspaceAllocation, false)\nnotproduct(bool, ExecuteInternalVMTests, false)\nnotproduct(bool, VerboseInternalVMTests, false)\nproduct_pd(bool, ResizeTLAB)\nproduct(bool, ZeroTLAB, false)\nproduct(bool, FastTLABRefill, true)\nproduct(bool, PrintTLAB, false)\nproduct(bool, TLABStats, true)\nproduct_pd(bool, NeverActAsServerClassMachine)\nproduct(bool, AlwaysActAsServerClassMachine, false)\nproduct_pd(uint64_t, MaxRAM)\nproduct(uintx, ErgoHeapSizeLimit, 0)\nexperimental(bool, UseCGroupMemoryLimitForHeap, false)\nproduct(uintx, MaxRAMFraction, 4)\nproduct(uintx, DefaultMaxRAMFraction, 4)\nproduct(uintx, MinRAMFraction, 2)\nproduct(uintx, InitialRAMFraction, 64)\ndevelop(uintx, MaxVirtMemFraction, 2)\nproduct(bool, UseAutoGCSelectPolicy, false)\nproduct(uintx, AutoGCSelectPauseMillis, 5000)\nproduct(bool, UseAdaptiveSizePolicy, true)\nproduct(bool, UsePSAdaptiveSurvivorSizePolicy, true)\nproduct(bool, UseAdaptiveGenerationSizePolicyAtMinorCollection, true)\nproduct(bool, UseAdaptiveGenerationSizePolicyAtMajorCollection, true)\nproduct(bool, UseAdaptiveSizePolicyWithSystemGC, false)\nproduct(bool, UseAdaptiveGCBoundary, false)\ndevelop(bool, TraceAdaptiveGCBoundary, false)\ndevelop(intx, PSAdaptiveSizePolicyResizeVirtualSpaceAlot, -1)\nproduct(uintx, AdaptiveSizeThroughPutPolicy, 0)\nproduct(uintx, AdaptiveSizePausePolicy, 0)\ndevelop(bool, PSAdjustTenuredGenForMinorPause, false)\ndevelop(bool, PSAdjustYoungGenForMajorPause, false)\nproduct(uintx, AdaptiveSizePolicyInitializingSteps, 20)\ndevelop(uintx, AdaptiveSizePolicyReadyThreshold, 5)\nproduct(uintx, AdaptiveSizePolicyOutputInterval, 0)\nproduct(bool, UseAdaptiveSizePolicyFootprintGoal, true)\nproduct(uintx, AdaptiveSizePolicyWeight, 10)\nproduct(uintx, AdaptiveTimeWeight,       25)\nproduct(uintx, PausePadding, 1)\nproduct(uintx, PromotedPadding, 3)\nproduct(uintx, SurvivorPadding, 3)\nproduct(uintx, ThresholdTolerance, 10)\nproduct(uintx, AdaptiveSizePolicyCollectionCostMargin, 50)\nproduct(uintx, YoungGenerationSizeIncrement, 20)\nproduct(uintx, YoungGenerationSizeSupplement, 80)\nproduct(uintx, YoungGenerationSizeSupplementDecay, 8)\nproduct(uintx, TenuredGenerationSizeIncrement, 20)\nproduct(uintx, TenuredGenerationSizeSupplement, 80)\nproduct(uintx, TenuredGenerationSizeSupplementDecay, 2)\nproduct(uintx, MaxGCPauseMillis, max_uintx)\nproduct(uintx, GCPauseIntervalMillis, 0)\nproduct(uintx, MaxGCMinorPauseMillis, max_uintx)\nproduct(uintx, GCTimeRatio, 99)\nproduct(uintx, AdaptiveSizeDecrementScaleFactor, 4)\nproduct(bool, UseAdaptiveSizeDecayMajorGCCost, true)\nproduct(uintx, AdaptiveSizeMajorGCDecayTimeScale, 10)\nproduct(uintx, MinSurvivorRatio, 3)\nproduct(uintx, InitialSurvivorRatio, 8)\nproduct(bool, UseGCOverheadLimit, true)\nproduct(uintx, GCTimeLimit, 98)\nproduct(uintx, GCHeapFreeLimit, 2)\ndevelop(uintx, AdaptiveSizePolicyGCTimeLimitThreshold, 5)\nproduct(bool, PrintAdaptiveSizePolicy, false)\nproduct(intx, PrefetchCopyIntervalInBytes, -1)\nproduct(intx, PrefetchScanIntervalInBytes, -1)\nproduct(intx, PrefetchFieldsAhead, -1)\ndiagnostic(bool, VerifySilently, false)\ndiagnostic(bool, VerifyDuringStartup, false)\ndiagnostic(bool, VerifyBeforeExit, trueInDebug)\ndiagnostic(bool, VerifyBeforeGC, false)\ndiagnostic(bool, VerifyAfterGC, false)\ndiagnostic(bool, VerifyDuringGC, false)\ndiagnostic(bool, GCParallelVerificationEnabled, true)\ndiagnostic(bool, DeferInitialCardMark, false)\ndiagnostic(bool, VerifyRememberedSets, false)\ndiagnostic(bool, VerifyObjectStartArray, true)\nproduct(bool, DisableExplicitGC, false)\nnotproduct(bool, CheckMemoryInitialization, false)\nproduct(bool, CollectGen0First, false)\ndiagnostic(bool, BindCMSThreadToCPU, false)\ndiagnostic(uintx, CPUForCMSThread, 0)\nproduct(bool, BindGCTaskThreadsToCPUs, false)\nproduct(bool, UseGCTaskAffinity, false)\nproduct(uintx, ProcessDistributionStride, 4)\nproduct(uintx, CMSCoordinatorYieldSleepCount, 10)\nproduct(uintx, CMSYieldSleepCount, 0)\nmanageable(bool, PrintGC, false)\nmanageable(bool, PrintGCDetails, false)\nmanageable(bool, PrintGCDateStamps, false)\nmanageable(bool, PrintGCTimeStamps, false)\nmanageable(bool, PrintGCID, false)\nproduct(bool, PrintGCTaskTimeStamps, false)\ndevelop(intx, ConcGCYieldTimeout, 0)\nnotproduct(bool, TraceMarkSweep, false)\nproduct(bool, PrintReferenceGC, false)\ndevelop(bool, TraceReferenceGC, false)\ndevelop(bool, TraceFinalizerRegistration, false)\nnotproduct(bool, TraceScavenge, false)\nproduct(bool, IgnoreEmptyClassPaths, false)\nproduct(bool, TraceClassPaths, false)\nproduct_rw(bool, TraceClassLoading, false)\nproduct(bool, TraceClassLoadingPreorder, false)\nproduct_rw(bool, TraceClassUnloading, false)\nproduct_rw(bool, TraceLoaderConstraints, false)\ndevelop(bool, TraceClassLoaderData, false)\nproduct(uintx, InitialBootClassLoaderMetaspaceSize)\nproduct(bool, TraceGen0Time, false)\nproduct(bool, TraceGen1Time, false)\nproduct(bool, PrintTenuringDistribution, false)\nproduct_rw(bool, PrintHeapAtGC, false)\nproduct_rw(bool, PrintHeapAtGCExtended, false)\nproduct(bool, PrintHeapAtSIGBREAK, true)\nmanageable(bool, PrintClassHistogramBeforeFullGC, false)\nmanageable(bool, PrintClassHistogramAfterFullGC, false)\nmanageable(bool, PrintClassHistogram, false)\ndevelop(bool, TraceWorkGang, false)\nproduct(bool, TraceParallelOldGCTasks, false)\ndevelop(bool, TraceBlockOffsetTable, false)\ndevelop(bool, TraceCardTableModRefBS, false)\ndevelop(bool, TraceGCTaskManager, false)\ndevelop(bool, TraceGCTaskQueue, false)\ndiagnostic(bool, TraceGCTaskThread, false)\nproduct(bool, PrintParallelOldGCPhaseTimes, false)\ndevelop(bool, TraceParallelOldGCMarkingPhase, false)\ndevelop(bool, TraceParallelOldGCSummaryPhase, false)\ndevelop(bool, TraceParallelOldGCCompactionPhase, false)\ndevelop(bool, TraceParallelOldGCDensePrefix, false)\ndevelop(bool, IgnoreLibthreadGPFault, false)\nproduct(bool, PrintJNIGCStalls, false)\nexperimental(double, ObjectCountCutOffPercent, 0.5)\nproduct(bool, UseGCLogFileRotation, false)\nproduct(uintx, NumberOfGCLogFiles, 0)\ndiagnostic(bool, TraceJVMTIObjectTagging, false)\ndiagnostic(bool, VerifyBeforeIteration, false)\ndevelop(bool, CIPrintCompilerName, false)\ndevelop(bool, CIPrintCompileQueue, false)\ndevelop(bool, CIPrintRequests, false)\nproduct(bool, CITime, false)\ndevelop(bool, CITimeEach, false)\ndevelop(bool, CICountOSR, false)\ndevelop(bool, CICompileNatives, true)\ndevelop_pd(bool, CICompileOSR)\ndevelop(bool, CIPrintMethodCodes, false)\ndevelop(bool, CIPrintTypeFlow, false)\ndevelop(bool, CITraceTypeFlow, false)\ndevelop(intx, OSROnlyBCI, -1)\nproduct(intx, CICompilerCount, CI_COMPILER_COUNT)\nproduct(intx, CompilationPolicyChoice, 0)\ndevelop(bool, UseStackBanging, true)\ndevelop(bool, UseStrictFP, true)\ndevelop(bool, GenerateSynchronizationCode, true)\ndevelop(bool, GenerateCompilerNullChecks, true)\ndevelop(bool, GenerateRangeChecks, true)\ndevelop_pd(bool, ImplicitNullChecks)\nproduct_pd(bool, TrapBasedNullChecks)\nproduct(bool, PrintSafepointStatistics, false)\nproduct(intx, PrintSafepointStatisticsCount, 300)\nproduct(intx, PrintSafepointStatisticsTimeout,  -1)\nproduct(bool, TraceSafepointCleanupTime, false)\nproduct(bool, Inline, true)\nproduct(bool, ClipInlining, true)\ndevelop(bool, UseCHA, true)\nproduct(bool, UseTypeProfile, true)\nnotproduct(bool, TimeCompiler, false)\ndiagnostic(bool, PrintInlining, false)\nproduct(bool, UsePopCountInstruction, false)\ndevelop(bool, EagerInitialization, false)\ndevelop(bool, TraceMethodReplacement, false)\ndevelop(bool, PrintMethodFlushing, false)\ndiagnostic(bool, PrintMethodFlushingStatistics, false)\ndevelop(bool, UseRelocIndex, false)\ndevelop(bool, StressCodeBuffers, false)\ndiagnostic(bool, DebugNonSafepoints, trueInDebug)\nproduct(bool, PrintVMOptions, false)\nproduct(bool, IgnoreUnrecognizedVMOptions, false)\nproduct(bool, PrintCommandLineFlags, false)\nproduct(bool, PrintFlagsInitial, false)\nproduct(bool, PrintFlagsFinal, false)\nnotproduct(bool, PrintFlagsWithComments, false)\ndiagnostic(bool, SerializeVMOutput, true)\ndiagnostic(bool, DisplayVMOutput, true)\ndiagnostic(bool, LogVMOutput, false)\ndiagnostic(ccstr, LogFile, NULL)\nproduct(ccstr, ErrorFile, NULL)\nproduct(bool, DisplayVMOutputToStderr, false)\nproduct(bool, DisplayVMOutputToStdout, false)\nproduct(bool, UseHeavyMonitors, false)\nproduct(bool, PrintStringTableStatistics, false)\ndiagnostic(bool, VerifyStringTableAtExit, false)\nnotproduct(bool, PrintSymbolTableSizeHistogram, false)\nnotproduct(bool, ExitVMOnVerifyError, false)\nnotproduct(ccstr, AbortVMOnException, NULL)\nnotproduct(ccstr, AbortVMOnExceptionMessage, NULL)\ndevelop(bool, DebugVtables, false)\ndevelop(bool, PrintVtables, false)\nnotproduct(bool, PrintVtableStats, false)\ndevelop(bool, TraceCreateZombies, false)\nnotproduct(bool, IgnoreLockingAssertions, false)\nproduct(bool, RangeCheckElimination, true)\ndevelop_pd(bool, UncommonNullCast)\ndevelop(bool, TypeProfileCasts,  true)\ndevelop(bool, DelayCompilationDuringStartup, true)\ndevelop(bool, CompileTheWorld, false)\ndevelop(bool, CompileTheWorldPreloadClasses, true)\nnotproduct(intx, CompileTheWorldSafepointInterval, 100)\ndevelop(bool, FillDelaySlots, true)\ndevelop(bool, TimeLivenessAnalysis, false)\ndevelop(bool, TraceLivenessGen, false)\nnotproduct(bool, TraceLivenessQuery, false)\nnotproduct(bool, CollectIndexSetStatistics, false)\ndevelop(bool, UseLoopSafepoints, true)\nproduct(bool, AggressiveOpts, false)\nproduct_pd(uintx, TypeProfileLevel)\nproduct(intx, TypeProfileArgsLimit,     2)\nproduct(intx, TypeProfileParmsLimit,    2)\ndevelop(bool, CountCompiledCalls, false)\nnotproduct(bool, CountRuntimeCalls, false)\ndevelop(bool, CountJNICalls, false)\nnotproduct(bool, CountJVMCalls, false)\nnotproduct(bool, CountRemovableExceptions, false)\nnotproduct(bool, ICMissHistogram, false)\nnotproduct(bool, PrintClassStatistics, false)\nnotproduct(bool, PrintMethodStatistics, false)\ndevelop(bool, ClearInterpreterLocals, false)\nproduct_pd(bool, RewriteBytecodes)\nproduct_pd(bool, RewriteFrequentPairs)\ndiagnostic(bool, PrintInterpreter, false)\nproduct(bool, UseInterpreter, true)\ndevelop(bool, UseFastSignatureHandlers, true)\nproduct(bool, UseLoopCounter, true)\nproduct(bool, UseFastEmptyMethods, true)\nproduct(bool, UseFastAccessorMethods, true)\nproduct_pd(bool, UseOnStackReplacement)\nnotproduct(bool, TraceOnStackReplacement, false)\nproduct_pd(bool, PreferInterpreterNativeStubs)\ndevelop(bool, CountBytecodes, false)\ndevelop(bool, PrintBytecodeHistogram, false)\ndevelop(bool, PrintBytecodePairHistogram, false)\ndiagnostic(bool, PrintSignatureHandlers, false)\ndevelop(bool, VerifyOops, false)\ndevelop(bool, CheckUnhandledOops, false)\ndevelop(bool, VerifyJNIFields, trueInDebug)\nnotproduct(bool, VerifyJNIEnvThread, false)\ndevelop(bool, VerifyFPU, false)\ndevelop(bool, VerifyThread, false)\ndevelop(bool, VerifyActivationFrameSize, false)\ndevelop(bool, TraceFrequencyInlining, false)\ndevelop_pd(bool, InlineIntrinsics)\nproduct_pd(bool, ProfileInterpreter)\ndevelop(bool, TraceProfileInterpreter, false)\ndevelop_pd(bool, ProfileTraps)\nproduct(intx, ProfileMaturityPercentage, 20)\ndevelop(bool, PrintMethodData, false)\ndevelop(bool, VerifyDataPointer, trueInDebug)\ndevelop(bool, VerifyCompiledCode, false)\nnotproduct(bool, CrashGCForDumpingJavaThread, false)\nproduct(bool, UseCompiler, true)\ndevelop(bool, TraceCompilationPolicy, false)\ndevelop(bool, TimeCompilationPolicy, false)\nproduct(bool, UseCounterDecay, true)\ndevelop(intx, CounterHalfLifeTime,    30)\ndevelop(intx, CounterDecayMinIntervalLength,   500)\nproduct(bool, AlwaysCompileLoopMethods, false)\nproduct(bool, DontCompileHugeMethods, true)\nproduct(bool, EstimateArgEscape, true)\nproduct(intx, BCEATraceLevel, 0)\nproduct(intx, MaxBCEAEstimateLevel, 5)\nproduct(intx, MaxBCEAEstimateSize, 150)\nproduct(intx,  AllocatePrefetchStyle, 1)\nproduct(intx,  AllocatePrefetchDistance, -1)\nproduct(intx,  AllocatePrefetchLines, 3)\nproduct(intx,  AllocateInstancePrefetchLines, 1)\nproduct(intx,  AllocatePrefetchStepSize, 16)\nproduct(intx,  AllocatePrefetchInstr, 0)\ndevelop(bool, TraceDeoptimization, false)\ndevelop(bool, DebugDeoptimization, false)\nproduct(intx, SelfDestructTimer, 0)\nproduct(intx, MaxJavaStackTraceDepth, 1024)\nNOT_EMBEDDED(diagnostic(intx, GuaranteedSafepointInterval, 1000)\nEMBEDDED_ONLY(product(intx, GuaranteedSafepointInterval, 0)\nproduct(intx, SafepointTimeoutDelay, 10000)\nproduct(intx, NmethodSweepFraction, 16)\nproduct(intx, NmethodSweepCheckInterval, 5)\nproduct(intx, NmethodSweepActivity, 10)\nnotproduct(bool, LogSweeper, false)\nnotproduct(intx, SweeperLogEntries, 1024)\nnotproduct(intx, MemProfilingInterval, 500)\ndevelop(intx, MallocCatchPtr, -1)\nnotproduct(intx, AssertRepeat, 1)\nnotproduct(uintx, HandleAllocationLimit, 1024)\ndevelop(uintx, TotalHandleAllocationLimit, 1024)\ndevelop(intx, StackPrintLimit, 100)\nnotproduct(intx, MaxElementPrintSize, 256)\nnotproduct(intx, MaxSubklassPrintSize, 4)\nproduct(intx, MaxInlineLevel, 9)\nproduct(intx, MaxRecursiveInlineLevel, 1)\ndevelop(intx, MaxForceInlineLevel, 100)\nproduct_pd(intx, InlineSmallCode)\nproduct(intx, MaxInlineSize, 35)\nproduct_pd(intx, FreqInlineSize)\nproduct(intx, MaxTrivialSize, 6)\nproduct(intx, MinInliningThreshold, 250)\ndevelop(intx, MethodHistogramCutoff, 100)\ndevelop(intx, ProfilerNumberOfInterpretedMethods, 25)\ndevelop(intx, ProfilerNumberOfCompiledMethods, 25)\ndevelop(intx, ProfilerNumberOfStubMethods, 25)\ndevelop(intx, ProfilerNumberOfRuntimeStubNodes, 25)\nproduct(intx, ProfileIntervalsTicks, 100)\nnotproduct(intx, ScavengeALotInterval,     1)\nnotproduct(intx, FullGCALotInterval,     1)\nnotproduct(intx, FullGCALotStart,     0)\ndevelop(intx, DontYieldALotInterval,    10)\ndevelop(intx, MinSleepInterval,     1)\ndevelop(intx, ProfilerPCTickThreshold,    15)\nnotproduct(intx, DeoptimizeALotInterval,     5)\nnotproduct(intx, ZombieALotInterval,     5)\ndiagnostic(intx, MallocVerifyInterval,     0)\ndiagnostic(intx, MallocVerifyStart,     0)\ndiagnostic(uintx, MallocMaxTestWords,     0)\nproduct(intx, TypeProfileWidth,     2)\ndevelop(intx, BciProfileWidth,      2)\nproduct(intx, PerMethodRecompilationCutoff, 400)\nproduct(intx, PerBytecodeRecompilationCutoff, 200)\nproduct(intx, PerMethodTrapLimit,  100)\nexperimental(intx, PerMethodSpecTrapLimit,  5000)\nproduct(intx, PerBytecodeTrapLimit,  4)\nexperimental(intx, SpecTrapLimitExtraEntries,  3)\ndevelop(intx, InlineFrequencyRatio,    20)\ndevelop_pd(intx, InlineFrequencyCount)\ndevelop(intx, InlineThrowCount,    50)\ndevelop(intx, InlineThrowMaxSize,   200)\ndevelop(intx, ProfilerNodeSize,  1024)\nproduct_pd(intx, PreInflateSpin)\nproduct(uintx, InitialHeapSize, 0)\nproduct(uintx, MaxNewSize, max_uintx)\nproduct(uintx, PretenureSizeThreshold, 0)\nproduct(uintx, TLABSize, 0)\nproduct(uintx, TLABAllocationWeight, 35)\nproduct(uintx, TLABWasteTargetPercent, 1)\nproduct(uintx, TLABRefillWasteFraction,    64)\nproduct(uintx, TLABWasteIncrement,    4)\nproduct(uintx, SurvivorRatio, 8)\nproduct(uintx, NewRatio, 2)\nproduct_pd(uintx, NewSizeThreadIncrease)\nproduct_pd(uintx, MetaspaceSize)\nproduct(uintx, MaxMetaspaceSize, max_uintx)\nmanageable(uintx, MinHeapFreeRatio, 40)\nmanageable(uintx, MaxHeapFreeRatio, 70)\nproduct(intx, SoftRefLRUPolicyMSPerMB, 1000)\nproduct(uintx, MinMetaspaceFreeRatio,    40)\nproduct(uintx, MaxMetaspaceFreeRatio,    70)\nproduct(uintx, QueuedAllocationWarningCount, 0)\ndiagnostic(uintx, VerifyGCStartAt,   0)\ndiagnostic(intx, VerifyGCLevel,     0)\nproduct(uintx, MaxTenuringThreshold,    15)\nproduct(uintx, InitialTenuringThreshold,    7)\nproduct(uintx, TargetSurvivorRatio,    50)\nproduct(uintx, MarkSweepDeadRatio,     5)\nproduct(uintx, MarkSweepAlwaysCompactCount,     4)\nproduct(intx, PrintCMSStatistics, 0)\nproduct(bool, PrintCMSInitiationStatistics, false)\nproduct(intx, PrintFLSStatistics, 0)\nproduct(intx, PrintFLSCensus, 0)\ndevelop(uintx, GCExpandToAllocateDelayMillis, 0)\ndevelop(uintx, GCWorkerDelayMillis, 0)\nproduct(intx, DeferThrSuspendLoopCount,     4000)\nproduct(intx, DeferPollingPageLoopCount,     -1)\nproduct(bool, PSChunkLargeArrays, true)\nproduct(uintx, GCDrainStackTargetSize, 64)\nproduct_pd(intx, StackYellowPages)\nproduct_pd(intx, StackRedPages)\nproduct_pd(intx, StackShadowPages)\nproduct_pd(intx, ThreadStackSize)\nproduct_pd(intx, VMThreadStackSize)\nproduct_pd(intx, CompilerThreadStackSize)\ndevelop_pd(uintx, JVMInvokeMethodSlack)\ndevelop(uintx, CodeCacheSegmentSize, 64 PPC64_ONLY(+64))\ndevelop_pd(intx, CodeEntryAlignment)\nproduct_pd(intx, OptoLoopAlignment)\nproduct_pd(uintx, InitialCodeCacheSize)\ndevelop_pd(uintx, CodeCacheMinimumUseSpace)\nproduct_pd(uintx, ReservedCodeCacheSize)\nproduct_pd(uintx, CodeCacheExpansionSize)\ndevelop_pd(uintx, CodeCacheMinBlockLength)\nnotproduct(bool, ExitOnFullCodeCache, false)\nproduct(bool, UseCodeCacheFlushing, true)\ndevelop(intx, BinarySwitchThreshold, 5)\ndevelop(intx, StopInterpreterAt, 0)\ndevelop(intx, TraceBytecodesAt, 0)\ndevelop(intx, CIStart, 0)\ndevelop(intx, CIStop, max_jint)\ndevelop(intx, CIStartOSR, 0)\ndevelop(intx, CIStopOSR, max_jint)\ndevelop(intx, CIBreakAtOSR, -1)\ndevelop(intx, CIBreakAt, -1)\nproduct(ccstr, CompileCommandFile, NULL)\ndevelop(bool, ReplayCompiles, false)\nproduct(ccstr, ReplayDataFile, NULL)\nproduct(ccstr, InlineDataFile, NULL)\ndevelop(intx, ReplaySuppressInitializers, 2)\ndevelop(bool, ReplayIgnoreInitErrors, false)\nproduct(bool, DumpReplayDataOnError, true)\nproduct(bool, CICompilerCountPerCPU, false)\ndevelop(intx, CIFireOOMAt,    -1)\nnotproduct(intx, CICrashAt, -1)\nnotproduct(bool, CIObjectFactoryVerify, false)\nproduct(intx, ThreadPriorityPolicy, 0)\nproduct(bool, ThreadPriorityVerbose, false)\nproduct(intx, DefaultThreadPriority, -1)\nproduct(intx, CompilerThreadPriority, -1)\nproduct(intx, VMThreadPriority, -1)\nproduct(bool, CompilerThreadHintNoPreempt, true)\nproduct(bool, VMThreadHintNoPreempt, false)\nproduct(intx, JavaPriority1_To_OSPriority, -1)\nproduct(intx, JavaPriority2_To_OSPriority, -1)\nproduct(intx, JavaPriority3_To_OSPriority, -1)\nproduct(intx, JavaPriority4_To_OSPriority, -1)\nproduct(intx, JavaPriority5_To_OSPriority, -1)\nproduct(intx, JavaPriority6_To_OSPriority, -1)\nproduct(intx, JavaPriority7_To_OSPriority, -1)\nproduct(intx, JavaPriority8_To_OSPriority, -1)\nproduct(intx, JavaPriority9_To_OSPriority, -1)\nproduct(intx, JavaPriority10_To_OSPriority,-1)\nexperimental(bool, UseCriticalJavaThreadPriority, false)\nexperimental(bool, UseCriticalCompilerThreadPriority, false)\nexperimental(bool, UseCriticalCMSThreadPriority, false)\nnotproduct(intx, CompileTheWorldStartAt,     1)\nnotproduct(intx, CompileTheWorldStopAt, max_jint)\ndevelop(intx, NewCodeParameter,      0)\ndevelop(intx, MinOopMapAllocation,     8)\ndevelop(intx, LongCompileThreshold,     50)\nproduct(intx, StarvationMonitorInterval,    200)\nproduct_pd(intx, CompileThreshold)\nproduct_pd(intx, BackEdgeThreshold)\nproduct(intx, Tier0InvokeNotifyFreqLog, 7)\nproduct(intx, Tier2InvokeNotifyFreqLog, 11)\nproduct(intx, Tier3InvokeNotifyFreqLog, 10)\nproduct(intx, Tier23InlineeNotifyFreqLog, 20)\nproduct(intx, Tier0BackedgeNotifyFreqLog, 10)\nproduct(intx, Tier2BackedgeNotifyFreqLog, 14)\nproduct(intx, Tier3BackedgeNotifyFreqLog, 13)\nproduct(intx, Tier2CompileThreshold, 0)\nproduct(intx, Tier2BackEdgeThreshold, 0)\nproduct(intx, Tier3InvocationThreshold, 200)\nproduct(intx, Tier3MinInvocationThreshold, 100)\nproduct(intx, Tier3CompileThreshold, 2000)\nproduct(intx, Tier3BackEdgeThreshold,  60000)\nproduct(intx, Tier4InvocationThreshold, 5000)\nproduct(intx, Tier4MinInvocationThreshold, 600)\nproduct(intx, Tier4CompileThreshold, 15000)\nproduct(intx, Tier4BackEdgeThreshold, 40000)\nproduct(intx, Tier3DelayOn, 5)\nproduct(intx, Tier3DelayOff, 2)\nproduct(intx, Tier3LoadFeedback, 5)\nproduct(intx, Tier4LoadFeedback, 3)\nproduct(intx, TieredCompileTaskTimeout, 50)\nproduct(intx, TieredStopAtLevel, 4)\nproduct(intx, Tier0ProfilingStartPercentage, 200)\nproduct(uintx, IncreaseFirstTierCompileThresholdAt, 50)\nproduct(intx, TieredRateUpdateMinTime, 1)\nproduct(intx, TieredRateUpdateMaxTime, 25)\nproduct_pd(bool, TieredCompilation)\nproduct(bool, PrintTieredEvents, false)\nproduct_pd(intx, OnStackReplacePercentage)\nproduct(intx, InterpreterProfilePercentage, 33)\ndevelop(intx, MaxRecompilationSearchLength,    10)\ndevelop(intx, MaxInterpretedSearchLength,     3)\ndevelop(intx, DesiredMethodLimit,  8000)\ndevelop(intx, HugeMethodLimit,  8000)\ndevelop(bool, UseNewReflection, true)\ndevelop(bool, VerifyReflectionBytecodes, false)\nproduct(bool, ReflectionWrapResolutionErrors, true)\ndevelop(intx, FastSuperclassLimit, 8)\nproduct(uintx, MaxDirectMemorySize, 0)\ndiagnostic(bool, UseNewCode, false)\ndiagnostic(bool, UseNewCode2, false)\ndiagnostic(bool, UseNewCode3, false)\nproduct(bool, UsePerfData, falseInEmbedded)\nproduct(bool, PerfDataSaveToFile, false)\nproduct(ccstr, PerfDataSaveFile, NULL)\nproduct(intx, PerfDataSamplingInterval, 50)\ndevelop(bool, PerfTraceDataCreation, false)\ndevelop(bool, PerfTraceMemOps, false)\nproduct(bool, PerfDisableSharedMem, false)\nproduct(intx, PerfMaxStringConstLength, 1024)\nproduct(bool, PerfAllowAtExitRegistration, false)\nproduct(bool, PerfBypassFileSystemCheck, false)\nproduct(intx, UnguardOnExecutionViolation, 0)\nproduct(bool, ManagementServer, false)\nproduct(bool, DisableAttachMechanism, false)\nproduct(bool, StartAttachListener, false)\nmanageable(bool, PrintConcurrentLocks, false)\nproduct(bool, TransmitErrorReport, false)\nproduct(ccstr, ErrorReportServer, NULL)\nproduct(bool, UseSharedSpaces, true)\nproduct(bool, VerifySharedSpaces, false)\nproduct(bool, RequireSharedSpaces, false)\nproduct(bool, DumpSharedSpaces, false)\nproduct(bool, PrintSharedSpaces, false)\nproduct(bool, PrintSharedArchiveAndExit, false)\nproduct(bool, PrintSharedDictionary, false)\ndiagnostic(bool, EnableInvokeDynamic, true)\ndiagnostic(bool, IgnoreUnverifiableClassesDuringDump, false)\ndiagnostic(bool, PrintMethodHandleStubs, false)\ndevelop(bool, TraceMethodHandles, false)\ndiagnostic(bool, VerifyMethodHandles, trueInDebug)\ndiagnostic(bool, ShowHiddenFrames, false)\nexperimental(bool, TrustFinalNonStaticFields, false)\ndiagnostic(bool, FoldStableValues, true)\ndevelop(bool, TraceInvokeDynamic, false)\ndiagnostic(bool, PauseAtStartup,      false)\ndiagnostic(ccstr, PauseAtStartupFile, NULL)\ndiagnostic(bool, PauseAtExit, false)\nproduct(bool, ExtendedDTraceProbes,    false)\nproduct(bool, DTraceMethodProbes, false)\nproduct(bool, DTraceAllocProbes, false)\nproduct(bool, DTraceMonitorProbes, false)\nproduct(bool, RelaxAccessControlCheck, false)\ndiagnostic(bool, PrintDTraceDOF, false)\nproduct(uintx, StringTableSize, defaultStringTableSize)\nexperimental(uintx, SymbolTableSize, defaultSymbolTableSize)\nproduct(bool, UseStringDeduplication, false)\nproduct(bool, PrintStringDeduplicationStatistics, false)\nproduct(uintx, StringDeduplicationAgeThreshold, 3)\ndiagnostic(bool, StringDeduplicationResizeALot, false)\ndiagnostic(bool, StringDeduplicationRehashALot, false)\ndevelop(bool, TraceDefaultMethods, false)\ndevelop(bool, VerifyGenericSignatures, false)\nproduct(bool, UseVMInterruptibleIO, false)\ndiagnostic(bool, WhiteBoxAPI, false)\nproduct(bool, PrintGCCause, true)\nexperimental(intx, SurvivorAlignmentInBytes, 0)\nproduct(bool , AllowNonVirtualCalls, false)\nproduct(ccstr, DumpLoadedClassList, NULL)\nproduct(ccstr, SharedClassListFile, NULL)\ndiagnostic(ccstr, SharedArchiveFile, NULL)\nproduct(ccstr, ExtraSharedClassListFile, NULL)\nexperimental(uintx, ArrayAllocatorMallocLimit)\nproduct(bool, EnableTracing, false)\nproduct(bool, UseLockedTracing, false)\nproduct_pd(bool, PreserveFramePointer)\n</code></pre>','列出java命令所有-X和-XX选项','','inherit','closed','closed','','86-revision-v1','','','2017-08-09 01:15:40','2017-08-08 17:15:40','java -X可以列出-X选项，但-XX选项好像并没有直接的方法可以列出。从源码里则可以得到。用hg下载源码后grep一下便可得到所有的-X和-XX选项了。\r\n## 一部分是单独列出来的\r\n```bash\r\ncat hotspot/src/share/vm/runtime/arguments.cpp |\r\n    grep -o &#039;option, &quot;-X[^&quot;]*&quot;&#039; |\r\n    sed -r &#039;s/.*&quot;(.*)&quot;.*/\\1/&#039;\r\n```\r\n```nohighlight\r\n-Xbootclasspath:\r\n-Xbootclasspath/a:\r\n-Xbootclasspath/p:\r\n-Xrun\r\n-Xnoclassgc\r\n-Xincgc\r\n-Xnoincgc\r\n-Xconcgc\r\n-Xnoconcgc\r\n-Xbatch\r\n-Xmn\r\n-Xms\r\n-Xmx\r\n-XX:MaxHeapSize=\r\n-Xmaxf\r\n-Xminf\r\n-Xss\r\n-Xoss\r\n-XX:CodeCacheExpansionSize=\r\n-Xmaxjitcodesize\r\n-XX:ReservedCodeCacheSize=\r\n-XX:IncreaseFirstTierCompileThresholdAt=\r\n-Xsqnopause\r\n-Xrs\r\n-Xusealtsigs\r\n-Xoptimize\r\n-Xprof\r\n-Xconcurrentio\r\n-Xinternalversion\r\n-Xprintflags\r\n-Xint\r\n-Xmixed\r\n-Xcomp\r\n-Xshare:dump\r\n-Xshare:on\r\n-Xshare:auto\r\n-Xshare:off\r\n-Xverify\r\n-Xdebug\r\n-Xnoagent\r\n-Xboundthreads\r\n-Xloggc:\r\n-Xcheck\r\n-XX:+AggressiveHeap\r\n-XX:+NeverTenure\r\n-XX:+AlwaysTenure\r\n-XX:+CMSPermGenSweepingEnabled\r\n-XX:-CMSPermGenSweepingEnabled\r\n-XX:+UseGCTimeLimit\r\n-XX:-UseGCTimeLimit\r\n-XX:MaxTLERatio=\r\n-XX:+ResizeTLE\r\n-XX:-ResizeTLE\r\n-XX:+PrintTLE\r\n-XX:-PrintTLE\r\n-XX:TLEFragmentationRatio=\r\n-XX:TLESize=\r\n-XX:TLEThreadRatio=\r\n-XX:+UseTLE\r\n-XX:-UseTLE\r\n-XX:+DisplayVMOutputToStderr\r\n-XX:+DisplayVMOutputToStdout\r\n-XX:+ExtendedDTraceProbes\r\n-XX:+FullGCALot\r\n-XX:CMSParPromoteBlocksToClaim=\r\n-XX:ParCMSPromoteBlocksToClaim=\r\n-XX:ParallelGCOldGenAllocBufferSize=\r\n-XX:ParallelGCToSpaceAllocBufferSize=\r\n-XX:CMSMarkStackSize=\r\n-XX:G1MarkStackSize=\r\n-XX:CMSMarkStackSizeMax=\r\n-XX:ParallelMarkingThreads=\r\n-XX:ParallelCMSThreads=\r\n-XX:MaxDirectMemorySize=\r\n-XX:+UseVMInterruptibleIO\r\n-XX:+ManagementServer\r\n-XX:\r\n-XX:\r\n-XX:Flags=\r\n-XX:+PrintVMOptions\r\n-XX:-PrintVMOptions\r\n-XX:+IgnoreUnrecognizedVMOptions\r\n-XX:-IgnoreUnrecognizedVMOptions\r\n-XX:+PrintFlagsInitial\r\n-XX:NativeMemoryTracking\r\n-XX:+PrintFlagsWithComments\r\n-XX:\r\n```\r\n## 另一部分是宏定义的列表\r\n太多了，有将近一千个\r\n```bash\r\ncat hotspot/src/share/vm/runtime/globals.hpp |\r\n    grep &#039;\\\\&#039;  |\r\n    grep -v &#039;&quot;&#039; |\r\n    grep -v &#039;\\*&#039; |\r\n    grep -v &#039;#&#039; |\r\n    sed &#039;/^\\s*\\\\$/ d&#039; |\r\n    sed &#039;s/^ *//&#039; |\r\n    sed &#039;s/, *\\\\$//&#039;\r\n```\r\n```nohighlight\r\nlp64_product(bool, UseCompressedOops, false)\r\nlp64_product(bool, UseCompressedClassPointers, false)\r\nnotproduct(bool, CheckCompressedOops, true)\r\nproduct_pd(uintx, HeapBaseMinAddress)\r\ndiagnostic(bool, PrintCompressedOopsMode, false)\r\nlp64_product(intx, ObjectAlignmentInBytes, 8)\r\nproduct(bool, AssumeMP, false)\r\nproduct_pd(bool, UseMembar)\r\ndevelop(bool, CleanChunkPoolAsync, falseInEmbedded)\r\nexperimental(bool, UseMemSetInBOT, true)\r\ndiagnostic(bool, UnlockDiagnosticVMOptions, trueInDebug)\r\nexperimental(bool, UnlockExperimentalVMOptions, false)\r\nproduct(bool, JavaMonitorsInStackTrace, true)\r\nproduct_pd(bool, UseLargePages)\r\nproduct_pd(bool, UseLargePagesIndividualAllocation)\r\ndevelop(bool, LargePagesIndividualAllocationInjectError, false)\r\nproduct(bool, UseLargePagesInMetaspace, false)\r\ndevelop(bool, TracePageSizes, false)\r\nproduct(bool, UseNUMA, false)\r\nproduct(bool, UseNUMAInterleaving, false)\r\nproduct(bool, ForceNUMA, false)\r\nproduct(uintx, NUMAChunkResizeWeight, 20)\r\nproduct(bool, UseAdaptiveNUMAChunkSizing, true)\r\nproduct(bool, NUMAStats, false)\r\nproduct(uintx, NUMAPageScanRate, 256)\r\nproduct_pd(bool, NeedsDeoptSuspend)\r\nproduct(intx, UseSSE, 99)\r\nproduct(bool, UseAES, false)\r\nproduct(bool, UseSHA, false)\r\nproduct(uintx, LargePageSizeInBytes, 0)\r\nproduct(bool, ForceTimeHighResolution, false)\r\ndevelop(bool, TraceItables, false)\r\ndevelop(bool, TracePcPatching, false)\r\ndevelop(bool, TraceJumps, false)\r\ndevelop(bool, TraceRelocator, false)\r\ndevelop(bool, TraceLongCompiles, false)\r\ndevelop(bool, SafepointALot, false)\r\nproduct_pd(bool, BackgroundCompilation)\r\nproduct(bool, PrintVMQWaitTime, false)\r\ndevelop(bool, NoYieldsInMicrolock, false)\r\ndevelop(bool, TraceOopMapGeneration, false)\r\nproduct(bool, MethodFlushing, true)\r\ndevelop(bool, VerifyStack, false)\r\ndiagnostic(bool, ForceUnreachable, false)\r\nnotproduct(bool, StressDerivedPointers, false)\r\ndevelop(bool, TraceDerivedPointers, false)\r\nnotproduct(bool, TraceCodeBlobStacks, false)\r\nproduct(bool, PrintJNIResolving, false)\r\nnotproduct(bool, PrintRewrites, false)\r\nproduct(bool, UseInlineCaches, true)\r\ndevelop(bool, InlineArrayCopy, true)\r\ndevelop(bool, InlineObjectHash, true)\r\ndevelop(bool, InlineNatives, true)\r\ndevelop(bool, InlineMathNatives, true)\r\ndevelop(bool, InlineClassNatives, true)\r\ndevelop(bool, InlineThreadNatives, true)\r\ndevelop(bool, InlineUnsafeOps, true)\r\nproduct(bool, CriticalJNINatives, true)\r\nnotproduct(bool, StressCriticalJNINatives, false)\r\nproduct(bool, UseSSE42Intrinsics, false)\r\nproduct(bool, UseAESIntrinsics, false)\r\nproduct(bool, UseSHA1Intrinsics, false)\r\nproduct(bool, UseSHA256Intrinsics, false)\r\nproduct(bool, UseSHA512Intrinsics, false)\r\nproduct(bool, UseCRC32Intrinsics, false)\r\ndevelop(bool, TraceCallFixup, false)\r\ndevelop(bool, DeoptimizeALot, false)\r\nproduct(bool, DeoptimizeRandom, false)\r\nnotproduct(bool, ZombieALot, false)\r\nproduct(bool, UnlinkSymbolsALot, false)\r\nnotproduct(bool, WalkStackALot, false)\r\nproduct(bool, Debugging, false)\r\nnotproduct(bool, StrictSafepointChecks, trueInDebug)\r\nnotproduct(bool, VerifyLastFrame, false)\r\ndevelop(bool, TraceHandleAllocation, false)\r\nproduct(bool, UseCompilerSafepoints, true)\r\nproduct(bool, FailOverToOldVerifier, true)\r\ndevelop(bool, ShowSafepointMsgs, false)\r\nproduct(bool, SafepointTimeout, false)\r\ndevelop(bool, DieOnSafepointTimeout, false)\r\nproduct(intx, SuspendRetryCount, 50)\r\nproduct(intx, SuspendRetryDelay, 5)\r\nproduct(bool, AssertOnSuspendWaitFailure, false)\r\nproduct(bool, TraceSuspendWaitFailures, false)\r\nproduct(bool, MaxFDLimit, true)\r\ndiagnostic(bool, LogEvents, true)\r\ndiagnostic(uintx, LogEventsBufferEntries, 10)\r\nproduct(bool, BytecodeVerificationRemote, true)\r\nproduct(bool, BytecodeVerificationLocal, false)\r\ndevelop(bool, ForceFloatExceptions, trueInDebug)\r\ndevelop(bool, VerifyStackAtCalls, false)\r\ndevelop(bool, TraceJavaAssertions, false)\r\nnotproduct(bool, CheckAssertionStatusDirectives, false)\r\nnotproduct(bool, PrintMallocFree, false)\r\nproduct(bool, PrintOopAddress, false)\r\nnotproduct(bool, VerifyCodeCacheOften, false)\r\ndevelop(bool, ZapDeadCompiledLocals, false)\r\nnotproduct(bool, ZapDeadLocalsOld, false)\r\nnotproduct(bool, CheckOopishValues, false)\r\ndevelop(bool, UseMallocOnly, false)\r\ndevelop(bool, PrintMalloc, false)\r\ndevelop(bool, PrintMallocStatistics, false)\r\ndevelop(bool, ZapResourceArea, trueInDebug)\r\nnotproduct(bool, ZapVMHandleArea, trueInDebug)\r\ndevelop(bool, ZapJNIHandleArea, trueInDebug)\r\nnotproduct(bool, ZapStackSegments, trueInDebug)\r\ndevelop(bool, ZapUnusedHeapArea, trueInDebug)\r\ndevelop(bool, TraceZapUnusedHeapArea, false)\r\ndevelop(bool, CheckZapUnusedHeapArea, false)\r\ndevelop(bool, ZapFillerObjects, trueInDebug)\r\ndevelop(bool, PrintVMMessages, true)\r\nproduct(bool, PrintGCApplicationConcurrentTime, false)\r\nproduct(bool, PrintGCApplicationStoppedTime, false)\r\ndiagnostic(bool, VerboseVerification, false)\r\nnotproduct(uintx, ErrorHandlerTest, 0)\r\ndevelop(bool, Verbose, false)\r\ndevelop(bool, PrintMiscellaneous, false)\r\ndevelop(bool, WizardMode, false)\r\nproduct(bool, ShowMessageBoxOnError, false)\r\nproduct(bool, CreateMinidumpOnCrash, false)\r\nproduct_pd(bool, UseOSErrorReporting)\r\nproduct(bool, SuppressFatalErrorMessage, false)\r\nmanageable(bool, HeapDumpBeforeFullGC, false)\r\nmanageable(bool, HeapDumpAfterFullGC, false)\r\nmanageable(bool, HeapDumpOnOutOfMemoryError, false)\r\nmanageable(ccstr, HeapDumpPath, NULL)\r\ndevelop(bool, BreakAtWarning, false)\r\ndevelop(bool, TraceVMOperation, false)\r\ndevelop(bool, UseFakeTimers, false)\r\ndiagnostic(bool, PrintNMTStatistics, false)\r\ndiagnostic(bool, LogCompilation, false)\r\nproduct(bool, PrintCompilation, false)\r\ndiagnostic(bool, TraceNMethodInstalls, false)\r\ndiagnostic(intx, ScavengeRootsInCode, 2)\r\nproduct(bool, AlwaysRestoreFPU, false)\r\ndiagnostic(bool, PrintCompilation2, false)\r\ndiagnostic(bool, PrintAdapterHandlers, false)\r\ndiagnostic(bool, VerifyAdapterCalls, trueInDebug)\r\ndevelop(bool, VerifyAdapterSharing, false)\r\ndiagnostic(bool, PrintAssembly, false)\r\ndiagnostic(ccstr, PrintAssemblyOptions, NULL)\r\ndiagnostic(bool, PrintNMethods, false)\r\ndiagnostic(bool, PrintNativeNMethods, false)\r\ndevelop(bool, PrintDebugInfo, false)\r\ndevelop(bool, PrintRelocations, false)\r\ndevelop(bool, PrintDependencies, false)\r\ndevelop(bool, PrintExceptionHandlers, false)\r\ndevelop(bool, StressCompiledExceptionHandlers, false)\r\ndevelop(bool, InterceptOSException, false)\r\nproduct(bool, PrintCodeCache, false)\r\ndevelop(bool, PrintCodeCache2, false)\r\nproduct(bool, PrintCodeCacheOnCompilation, false)\r\ndiagnostic(bool, PrintStubCode, false)\r\nproduct(bool, StackTraceInThrowable, true)\r\nproduct(bool, OmitStackTraceInFastThrow, true)\r\nproduct(bool, ProfilerPrintByteCodeStatistics, false)\r\nproduct(bool, ProfilerRecordPC, false)\r\nproduct(bool, ProfileVM, false)\r\nproduct(bool, ProfileIntervals, false)\r\nnotproduct(bool, ProfilerCheckIntervals, false)\r\ndevelop(bool, PrintJVMWarnings, false)\r\nproduct(bool, PrintWarnings, true)\r\nnotproduct(uintx, WarnOnStalledSpinLock, 0)\r\nproduct(bool, RegisterFinalizersAtInit, true)\r\ndevelop(bool, RegisterReferences, true)\r\ndevelop(bool, IgnoreRewrites, false)\r\ndevelop(bool, PrintCodeCacheExtension, false)\r\ndevelop(bool, UsePrivilegedStack, true)\r\ndevelop(bool, ProtectionDomainVerification, true)\r\nproduct(bool, ClassUnloading, true)\r\nproduct(bool, ClassUnloadingWithConcurrentMark, true)\r\ndevelop(bool, DisableStartThread, false)\r\ndevelop(bool, MemProfiling, false)\r\nnotproduct(bool, PrintSystemDictionaryAtExit, false)\r\nexperimental(intx, PredictedLoadedClassCount, 0)\r\ndiagnostic(bool, UnsyncloadClass, false)\r\nproduct(bool, AlwaysLockClassLoader, false)\r\nproduct(bool, AllowParallelDefineClass, false)\r\nproduct(bool, MustCallLoadClassInternal, false)\r\nproduct_pd(bool, DontYieldALot)\r\nproduct_pd(bool, ConvertSleepToYield)\r\nproduct(bool, ConvertYieldToSleep, false)\r\nproduct(bool, UseBoundThreads, true)\r\ndevelop(bool, UseDetachedThreads, true)\r\nproduct(bool, UseLWPSynchronization, true)\r\nproduct(ccstr, SyncKnobs, NULL)\r\nproduct(intx, EmitSync, 0)\r\nproduct(intx, hashCode, 5)\r\nproduct(intx, WorkAroundNPTLTimedWaitHang, 1)\r\nproduct(bool, FilterSpuriousWakeups, true)\r\ndevelop(bool, UsePthreads, false)\r\nproduct(bool, AdjustConcurrency, false)\r\nproduct(bool, ReduceSignalUsage, false)\r\ndevelop_pd(bool, ShareVtableStubs)\r\ndevelop(bool, LoadLineNumberTables, true)\r\ndevelop(bool, LoadLocalVariableTables, true)\r\ndevelop(bool, LoadLocalVariableTypeTables, true)\r\nproduct(bool, AllowUserSignalHandlers, false)\r\nproduct(bool, UseSignalChaining, true)\r\nproduct(bool, UseAltSigs, false)\r\nproduct(bool, AllowJNIEnvProxy, false)\r\nproduct(bool, JNIDetachReleasesMonitors, true)\r\nproduct(bool, RestoreMXCSROnJNICalls, false)\r\nproduct(bool, CheckJNICalls, false)\r\nproduct(bool, CheckEndorsedAndExtDirs, false)\r\nproduct(bool, UseFastJNIAccessors, true)\r\nproduct(intx, MaxJNILocalCapacity, 65536)\r\nproduct(bool, EagerXrunInit, false)\r\nproduct(bool, PreserveAllAnnotations, false)\r\ndevelop(uintx, PreallocatedOutOfMemoryErrorCount, 4)\r\nproduct(bool, LazyBootClassLoader, true)\r\nproduct(bool, UseXMMForArrayCopy, false)\r\nproduct(intx, FieldsAllocationStyle, 1)\r\nproduct(bool, CompactFields, true)\r\nnotproduct(bool, PrintFieldLayout, false)\r\nproduct(intx, ContendedPaddingWidth, 128)\r\nproduct(bool, EnableContended, true)\r\nproduct(bool, RestrictContended, true)\r\nproduct(bool, UseBiasedLocking, true)\r\nproduct(intx, BiasedLockingStartupDelay, 4000)\r\ndiagnostic(bool, PrintBiasedLockingStatistics, false)\r\nproduct(intx, BiasedLockingBulkRebiasThreshold, 20)\r\nproduct(intx, BiasedLockingBulkRevokeThreshold, 40)\r\nproduct(intx, BiasedLockingDecayTime, 25000)\r\nproduct(bool, ExitOnOutOfMemoryError, false)\r\nproduct(bool, CrashOnOutOfMemoryError, false)\r\nnotproduct(bool, TraceRuntimeCalls, false)\r\ndevelop(bool, TraceJNICalls, false)\r\ndevelop(bool, StressRewriter, false)\r\nnotproduct(bool, TraceJVMCalls, false)\r\nproduct(ccstr, TraceJVMTI, NULL)\r\nproduct(bool, StressLdcRewrite, false)\r\nproduct(intx, TraceRedefineClasses, 0)\r\ndevelop(bool, StressMethodComparator, false)\r\nproduct(bool, VerifyMergedCPBytecodes, true)\r\ndevelop(bool, TraceJNIHandleAllocation, false)\r\ndevelop(bool, TraceThreadEvents, false)\r\ndevelop(bool, TraceBytecodes, false)\r\ndevelop(bool, TraceClassInitialization, false)\r\ndevelop(bool, TraceExceptions, false)\r\ndevelop(bool, TraceICs, false)\r\nnotproduct(bool, TraceInvocationCounterOverflow, false)\r\ndevelop(bool, TraceInlineCacheClearing, false)\r\ndevelop(bool, TraceDependencies, false)\r\ndevelop(bool, VerifyDependencies, trueInDebug)\r\ndevelop(bool, TraceNewOopMapGeneration, false)\r\ndevelop(bool, TraceNewOopMapGenerationDetailed, false)\r\ndevelop(bool, TimeOopMap, false)\r\ndevelop(bool, TimeOopMap2, false)\r\ndevelop(bool, TraceMonitorMismatch, false)\r\ndevelop(bool, TraceOopMapRewrites, false)\r\ndevelop(bool, TraceSafepoint, false)\r\ndevelop(bool, TraceICBuffer, false)\r\ndevelop(bool, TraceCompiledIC, false)\r\nnotproduct(bool, TraceZapDeadLocals, false)\r\ndevelop(bool, TraceStartupTime, false)\r\ndevelop(bool, TraceProtectionDomainVerification, false)\r\ndevelop(bool, TraceClearedExceptions, false)\r\nproduct(bool, TraceClassResolution, false)\r\nproduct(bool, TraceBiasedLocking, false)\r\nproduct(bool, TraceMonitorInflation, false)\r\nproduct(bool, UseSerialGC, false)\r\nproduct(bool, UseG1GC, false)\r\nproduct(bool, UseParallelGC, false)\r\nproduct(bool, UseParallelOldGC, false)\r\nproduct(uintx, HeapMaximumCompactionInterval, 20)\r\nproduct(uintx, HeapFirstMaximumCompactionCount, 3)\r\nproduct(bool, UseMaximumCompactionOnSystemGC, true)\r\nproduct(uintx, ParallelOldDeadWoodLimiterMean, 50)\r\nproduct(uintx, ParallelOldDeadWoodLimiterStdDev, 80)\r\nproduct(uintx, ParallelGCThreads, 0)\r\nproduct(bool, UseDynamicNumberOfGCThreads, false)\r\ndiagnostic(bool, ForceDynamicNumberOfGCThreads, false)\r\nproduct(bool, TraceDynamicGCThreads, false)\r\ndevelop(bool, ParallelOldGCSplitALot, false)\r\ndevelop(uintx, ParallelOldGCSplitInterval, 3)\r\nproduct(uintx, ConcGCThreads, 0)\r\nproduct(uintx, YoungPLABSize, 4096)\r\nproduct(uintx, OldPLABSize, 1024)\r\nproduct(uintx, GCTaskTimeStampEntries, 200)\r\nproduct(bool, AlwaysTenure, false)\r\nproduct(bool, NeverTenure, false)\r\nproduct(bool, ScavengeBeforeFullGC, true)\r\ndevelop(bool, ScavengeWithObjectsInToSpace, false)\r\nproduct(bool, UseConcMarkSweepGC, false)\r\nproduct(bool, ExplicitGCInvokesConcurrent, false)\r\nproduct(bool, ExplicitGCInvokesConcurrentAndUnloadsClasses, false)\r\nproduct(bool, GCLockerInvokesConcurrent, false)\r\nproduct(uintx, GCLockerEdenExpansionPercent, 5)\r\ndiagnostic(uintx, GCLockerRetryAllocationCount, 2)\r\ndevelop(bool, UseCMSAdaptiveFreeLists, true)\r\ndevelop(bool, UseAsyncConcMarkSweepGC, true)\r\ndevelop(bool, RotateCMSCollectionTypes, false)\r\nproduct(bool, UseCMSBestFit, true)\r\nproduct(bool, UseCMSCollectionPassing, true)\r\nproduct(bool, UseParNewGC, false)\r\nproduct(bool, ParallelGCVerbose, false)\r\nproduct(uintx, ParallelGCBufferWastePct, 10)\r\ndiagnostic(bool, ParallelGCRetainPLAB, false)\r\nproduct(uintx, TargetPLABWastePct, 10)\r\nproduct(uintx, PLABWeight, 75)\r\nproduct(bool, ResizePLAB, true)\r\nproduct(bool, PrintPLAB, false)\r\nproduct(intx, ParGCArrayScanChunk, 50)\r\nproduct(bool, ParGCUseLocalOverflow, false)\r\nproduct(bool, ParGCTrimOverflow, true)\r\nnotproduct(bool, ParGCWorkQueueOverflowALot, false)\r\nnotproduct(uintx, ParGCWorkQueueOverflowInterval, 1000)\r\nproduct(uintx, ParGCDesiredObjsFromOverflowList, 20)\r\ndiagnostic(uintx, ParGCStridesPerThread, 2)\r\ndiagnostic(intx, ParGCCardsPerStrideChunk, 256)\r\nproduct(uintx, CMSParPromoteBlocksToClaim, 16)\r\nproduct(uintx, OldPLABWeight, 50)\r\nproduct(bool, ResizeOldPLAB, true)\r\nproduct(bool, PrintOldPLAB, false)\r\nproduct(uintx, CMSOldPLABMin, 16)\r\nproduct(uintx, CMSOldPLABMax, 1024)\r\nproduct(uintx, CMSOldPLABNumRefills, 4)\r\nproduct(bool, CMSOldPLABResizeQuicker, false)\r\nproduct(uintx, CMSOldPLABToleranceFactor, 4)\r\nproduct(uintx, CMSOldPLABReactivityFactor, 2)\r\nproduct(bool, AlwaysPreTouch, false)\r\nproduct_pd(uintx, CMSYoungGenPerWorker)\r\nproduct(bool, CMSIncrementalMode, false)\r\nproduct(uintx, CMSIncrementalDutyCycle, 10)\r\nproduct(bool, CMSIncrementalPacing, true)\r\nproduct(uintx, CMSIncrementalDutyCycleMin, 0)\r\nproduct(uintx, CMSIncrementalSafetyFactor, 10)\r\nproduct(uintx, CMSIncrementalOffset, 0)\r\nproduct(uintx, CMSExpAvgFactor, 50)\r\nproduct(uintx, CMS_FLSWeight, 75)\r\nproduct(uintx, CMS_FLSPadding, 1)\r\nproduct(uintx, FLSCoalescePolicy, 2)\r\nproduct(bool, FLSAlwaysCoalesceLarge, false)\r\nproduct(double, FLSLargestBlockCoalesceProximity, 0.99)\r\nproduct(double, CMSSmallCoalSurplusPercent, 1.05)\r\nproduct(double, CMSLargeCoalSurplusPercent, 0.95)\r\nproduct(double, CMSSmallSplitSurplusPercent, 1.10)\r\nproduct(double, CMSLargeSplitSurplusPercent, 1.00)\r\nproduct(bool, CMSExtrapolateSweep, false)\r\nproduct(uintx, CMS_SweepWeight, 75)\r\nproduct(uintx, CMS_SweepPadding, 1)\r\nproduct(uintx, CMS_SweepTimerThresholdMillis, 10)\r\ndevelop(bool, CMSTraceIncrementalMode, false)\r\ndevelop(bool, CMSTraceIncrementalPacing, false)\r\ndevelop(bool, CMSTraceThreadState, false)\r\nproduct(bool, CMSClassUnloadingEnabled, true)\r\nproduct(uintx, CMSClassUnloadingMaxInterval, 0)\r\nproduct(bool, CMSCompactWhenClearAllSoftRefs, true)\r\nproduct(bool, UseCMSCompactAtFullCollection, true)\r\nproduct(uintx, CMSFullGCsBeforeCompaction, 0)\r\ndevelop(intx, CMSDictionaryChoice, 0)\r\nproduct(uintx, CMSIndexedFreeListReplenish, 4)\r\nproduct(bool, CMSReplenishIntermediate, true)\r\nproduct(bool, CMSSplitIndexedFreeListBlocks, true)\r\nproduct(bool, CMSLoopWarn, false)\r\ndevelop(bool, CMSOverflowEarlyRestoration, false)\r\nnotproduct(bool, CMSMarkStackOverflowALot, false)\r\nnotproduct(uintx, CMSMarkStackOverflowInterval, 1000)\r\nproduct(uintx, CMSMaxAbortablePrecleanLoops, 0)\r\nproduct(intx, CMSMaxAbortablePrecleanTime, 5000)\r\nproduct(uintx, CMSAbortablePrecleanMinWorkPerIteration, 100)\r\nmanageable(intx, CMSAbortablePrecleanWaitMillis, 100)\r\nproduct(uintx, CMSRescanMultiple, 32)\r\nproduct(uintx, CMSConcMarkMultiple, 32)\r\nproduct(bool, CMSAbortSemantics, false)\r\nproduct(bool, CMSParallelInitialMarkEnabled, true)\r\nproduct(bool, CMSParallelRemarkEnabled, true)\r\nproduct(bool, CMSParallelSurvivorRemarkEnabled, true)\r\nproduct(bool, CMSPLABRecordAlways, true)\r\nproduct(bool, CMSEdenChunksRecordAlways, true)\r\nproduct(bool, CMSPrintEdenSurvivorChunks, false)\r\nproduct(bool, CMSConcurrentMTEnabled, true)\r\nproduct(bool, CMSPrecleaningEnabled, true)\r\nproduct(uintx, CMSPrecleanIter, 3)\r\nproduct(uintx, CMSPrecleanNumerator, 2)\r\nproduct(uintx, CMSPrecleanDenominator, 3)\r\nproduct(bool, CMSPrecleanRefLists1, true)\r\nproduct(bool, CMSPrecleanRefLists2, false)\r\nproduct(bool, CMSPrecleanSurvivors1, false)\r\nproduct(bool, CMSPrecleanSurvivors2, true)\r\nproduct(uintx, CMSPrecleanThreshold, 1000)\r\nproduct(bool, CMSCleanOnEnter, true)\r\nproduct(uintx, CMSRemarkVerifyVariant, 1)\r\nproduct(uintx, CMSScheduleRemarkEdenPenetration, 50)\r\nproduct(uintx, CMSScheduleRemarkSamplingRatio, 5)\r\nproduct(bool, CMSScavengeBeforeRemark, false)\r\ndevelop(bool, CMSTraceSweeper, false)\r\nproduct(uintx, CMSWorkQueueDrainThreshold, 10)\r\nmanageable(intx, CMSWaitDuration, 2000)\r\ndevelop(uintx, CMSCheckInterval, 1000)\r\nproduct(bool, CMSYield, true)\r\nproduct(bool, CMSDumpAtPromotionFailure, false)\r\nproduct(bool, CMSPrintChunksInDump, false)\r\nproduct(bool, CMSPrintObjectsInDump, false)\r\ndiagnostic(bool, FLSVerifyAllHeapReferences, false)\r\ndiagnostic(bool, FLSVerifyLists, false)\r\ndiagnostic(bool, FLSVerifyIndexTable, false)\r\ndevelop(bool, FLSVerifyDictionary, false)\r\ndevelop(bool, VerifyBlockOffsetArray, false)\r\ndiagnostic(bool, BlockOffsetArrayUseUnallocatedBlock, false)\r\ndevelop(bool, TraceCMSState, false)\r\nproduct(intx, RefDiscoveryPolicy, 0)\r\nproduct(bool, ParallelRefProcEnabled, false)\r\nproduct(bool, ParallelRefProcBalancingEnabled, true)\r\nproduct(uintx, CMSTriggerRatio, 80)\r\nproduct(uintx, CMSBootstrapOccupancy, 50)\r\nproduct(intx, CMSInitiatingOccupancyFraction, -1)\r\nproduct(uintx, InitiatingHeapOccupancyPercent, 45)\r\nmanageable(intx, CMSTriggerInterval, -1)\r\nproduct(bool, UseCMSInitiatingOccupancyOnly, false)\r\nproduct(uintx, CMSIsTooFullPercentage, 98)\r\ndevelop(bool, CMSTestInFreeList, false)\r\nnotproduct(bool, CMSVerifyReturnedBytes, false)\r\nnotproduct(bool, ScavengeALot, false)\r\ndevelop(bool, FullGCALot, false)\r\nnotproduct(bool, GCALotAtAllSafepoints, false)\r\nproduct(bool, PrintPromotionFailure, false)\r\nnotproduct(bool, PromotionFailureALot, false)\r\ndevelop(uintx, PromotionFailureALotCount, 1000)\r\ndevelop(uintx, PromotionFailureALotInterval, 5)\r\nexperimental(uintx, WorkStealingSleepMillis, 1)\r\nexperimental(uintx, WorkStealingYieldsBeforeSleep, 5000)\r\nexperimental(uintx, WorkStealingHardSpins, 4096)\r\nexperimental(uintx, WorkStealingSpinToYieldRatio, 10)\r\ndevelop(uintx, ObjArrayMarkingStride, 512)\r\ndevelop(bool, MetadataAllocationFailALot, false)\r\ndevelop(uintx, MetadataAllocationFailALotInterval, 1000)\r\ndevelop(bool, TraceMetadataChunkAllocation, false)\r\nproduct(bool, TraceMetadataHumongousAllocation, false)\r\ndevelop(bool, TraceMetavirtualspaceAllocation, false)\r\nnotproduct(bool, ExecuteInternalVMTests, false)\r\nnotproduct(bool, VerboseInternalVMTests, false)\r\nproduct_pd(bool, ResizeTLAB)\r\nproduct(bool, ZeroTLAB, false)\r\nproduct(bool, FastTLABRefill, true)\r\nproduct(bool, PrintTLAB, false)\r\nproduct(bool, TLABStats, true)\r\nproduct_pd(bool, NeverActAsServerClassMachine)\r\nproduct(bool, AlwaysActAsServerClassMachine, false)\r\nproduct_pd(uint64_t, MaxRAM)\r\nproduct(uintx, ErgoHeapSizeLimit, 0)\r\nexperimental(bool, UseCGroupMemoryLimitForHeap, false)\r\nproduct(uintx, MaxRAMFraction, 4)\r\nproduct(uintx, DefaultMaxRAMFraction, 4)\r\nproduct(uintx, MinRAMFraction, 2)\r\nproduct(uintx, InitialRAMFraction, 64)\r\ndevelop(uintx, MaxVirtMemFraction, 2)\r\nproduct(bool, UseAutoGCSelectPolicy, false)\r\nproduct(uintx, AutoGCSelectPauseMillis, 5000)\r\nproduct(bool, UseAdaptiveSizePolicy, true)\r\nproduct(bool, UsePSAdaptiveSurvivorSizePolicy, true)\r\nproduct(bool, UseAdaptiveGenerationSizePolicyAtMinorCollection, true)\r\nproduct(bool, UseAdaptiveGenerationSizePolicyAtMajorCollection, true)\r\nproduct(bool, UseAdaptiveSizePolicyWithSystemGC, false)\r\nproduct(bool, UseAdaptiveGCBoundary, false)\r\ndevelop(bool, TraceAdaptiveGCBoundary, false)\r\ndevelop(intx, PSAdaptiveSizePolicyResizeVirtualSpaceAlot, -1)\r\nproduct(uintx, AdaptiveSizeThroughPutPolicy, 0)\r\nproduct(uintx, AdaptiveSizePausePolicy, 0)\r\ndevelop(bool, PSAdjustTenuredGenForMinorPause, false)\r\ndevelop(bool, PSAdjustYoungGenForMajorPause, false)\r\nproduct(uintx, AdaptiveSizePolicyInitializingSteps, 20)\r\ndevelop(uintx, AdaptiveSizePolicyReadyThreshold, 5)\r\nproduct(uintx, AdaptiveSizePolicyOutputInterval, 0)\r\nproduct(bool, UseAdaptiveSizePolicyFootprintGoal, true)\r\nproduct(uintx, AdaptiveSizePolicyWeight, 10)\r\nproduct(uintx, AdaptiveTimeWeight,       25)\r\nproduct(uintx, PausePadding, 1)\r\nproduct(uintx, PromotedPadding, 3)\r\nproduct(uintx, SurvivorPadding, 3)\r\nproduct(uintx, ThresholdTolerance, 10)\r\nproduct(uintx, AdaptiveSizePolicyCollectionCostMargin, 50)\r\nproduct(uintx, YoungGenerationSizeIncrement, 20)\r\nproduct(uintx, YoungGenerationSizeSupplement, 80)\r\nproduct(uintx, YoungGenerationSizeSupplementDecay, 8)\r\nproduct(uintx, TenuredGenerationSizeIncrement, 20)\r\nproduct(uintx, TenuredGenerationSizeSupplement, 80)\r\nproduct(uintx, TenuredGenerationSizeSupplementDecay, 2)\r\nproduct(uintx, MaxGCPauseMillis, max_uintx)\r\nproduct(uintx, GCPauseIntervalMillis, 0)\r\nproduct(uintx, MaxGCMinorPauseMillis, max_uintx)\r\nproduct(uintx, GCTimeRatio, 99)\r\nproduct(uintx, AdaptiveSizeDecrementScaleFactor, 4)\r\nproduct(bool, UseAdaptiveSizeDecayMajorGCCost, true)\r\nproduct(uintx, AdaptiveSizeMajorGCDecayTimeScale, 10)\r\nproduct(uintx, MinSurvivorRatio, 3)\r\nproduct(uintx, InitialSurvivorRatio, 8)\r\nproduct(bool, UseGCOverheadLimit, true)\r\nproduct(uintx, GCTimeLimit, 98)\r\nproduct(uintx, GCHeapFreeLimit, 2)\r\ndevelop(uintx, AdaptiveSizePolicyGCTimeLimitThreshold, 5)\r\nproduct(bool, PrintAdaptiveSizePolicy, false)\r\nproduct(intx, PrefetchCopyIntervalInBytes, -1)\r\nproduct(intx, PrefetchScanIntervalInBytes, -1)\r\nproduct(intx, PrefetchFieldsAhead, -1)\r\ndiagnostic(bool, VerifySilently, false)\r\ndiagnostic(bool, VerifyDuringStartup, false)\r\ndiagnostic(bool, VerifyBeforeExit, trueInDebug)\r\ndiagnostic(bool, VerifyBeforeGC, false)\r\ndiagnostic(bool, VerifyAfterGC, false)\r\ndiagnostic(bool, VerifyDuringGC, false)\r\ndiagnostic(bool, GCParallelVerificationEnabled, true)\r\ndiagnostic(bool, DeferInitialCardMark, false)\r\ndiagnostic(bool, VerifyRememberedSets, false)\r\ndiagnostic(bool, VerifyObjectStartArray, true)\r\nproduct(bool, DisableExplicitGC, false)\r\nnotproduct(bool, CheckMemoryInitialization, false)\r\nproduct(bool, CollectGen0First, false)\r\ndiagnostic(bool, BindCMSThreadToCPU, false)\r\ndiagnostic(uintx, CPUForCMSThread, 0)\r\nproduct(bool, BindGCTaskThreadsToCPUs, false)\r\nproduct(bool, UseGCTaskAffinity, false)\r\nproduct(uintx, ProcessDistributionStride, 4)\r\nproduct(uintx, CMSCoordinatorYieldSleepCount, 10)\r\nproduct(uintx, CMSYieldSleepCount, 0)\r\nmanageable(bool, PrintGC, false)\r\nmanageable(bool, PrintGCDetails, false)\r\nmanageable(bool, PrintGCDateStamps, false)\r\nmanageable(bool, PrintGCTimeStamps, false)\r\nmanageable(bool, PrintGCID, false)\r\nproduct(bool, PrintGCTaskTimeStamps, false)\r\ndevelop(intx, ConcGCYieldTimeout, 0)\r\nnotproduct(bool, TraceMarkSweep, false)\r\nproduct(bool, PrintReferenceGC, false)\r\ndevelop(bool, TraceReferenceGC, false)\r\ndevelop(bool, TraceFinalizerRegistration, false)\r\nnotproduct(bool, TraceScavenge, false)\r\nproduct(bool, IgnoreEmptyClassPaths, false)\r\nproduct(bool, TraceClassPaths, false)\r\nproduct_rw(bool, TraceClassLoading, false)\r\nproduct(bool, TraceClassLoadingPreorder, false)\r\nproduct_rw(bool, TraceClassUnloading, false)\r\nproduct_rw(bool, TraceLoaderConstraints, false)\r\ndevelop(bool, TraceClassLoaderData, false)\r\nproduct(uintx, InitialBootClassLoaderMetaspaceSize)\r\nproduct(bool, TraceGen0Time, false)\r\nproduct(bool, TraceGen1Time, false)\r\nproduct(bool, PrintTenuringDistribution, false)\r\nproduct_rw(bool, PrintHeapAtGC, false)\r\nproduct_rw(bool, PrintHeapAtGCExtended, false)\r\nproduct(bool, PrintHeapAtSIGBREAK, true)\r\nmanageable(bool, PrintClassHistogramBeforeFullGC, false)\r\nmanageable(bool, PrintClassHistogramAfterFullGC, false)\r\nmanageable(bool, PrintClassHistogram, false)\r\ndevelop(bool, TraceWorkGang, false)\r\nproduct(bool, TraceParallelOldGCTasks, false)\r\ndevelop(bool, TraceBlockOffsetTable, false)\r\ndevelop(bool, TraceCardTableModRefBS, false)\r\ndevelop(bool, TraceGCTaskManager, false)\r\ndevelop(bool, TraceGCTaskQueue, false)\r\ndiagnostic(bool, TraceGCTaskThread, false)\r\nproduct(bool, PrintParallelOldGCPhaseTimes, false)\r\ndevelop(bool, TraceParallelOldGCMarkingPhase, false)\r\ndevelop(bool, TraceParallelOldGCSummaryPhase, false)\r\ndevelop(bool, TraceParallelOldGCCompactionPhase, false)\r\ndevelop(bool, TraceParallelOldGCDensePrefix, false)\r\ndevelop(bool, IgnoreLibthreadGPFault, false)\r\nproduct(bool, PrintJNIGCStalls, false)\r\nexperimental(double, ObjectCountCutOffPercent, 0.5)\r\nproduct(bool, UseGCLogFileRotation, false)\r\nproduct(uintx, NumberOfGCLogFiles, 0)\r\ndiagnostic(bool, TraceJVMTIObjectTagging, false)\r\ndiagnostic(bool, VerifyBeforeIteration, false)\r\ndevelop(bool, CIPrintCompilerName, false)\r\ndevelop(bool, CIPrintCompileQueue, false)\r\ndevelop(bool, CIPrintRequests, false)\r\nproduct(bool, CITime, false)\r\ndevelop(bool, CITimeEach, false)\r\ndevelop(bool, CICountOSR, false)\r\ndevelop(bool, CICompileNatives, true)\r\ndevelop_pd(bool, CICompileOSR)\r\ndevelop(bool, CIPrintMethodCodes, false)\r\ndevelop(bool, CIPrintTypeFlow, false)\r\ndevelop(bool, CITraceTypeFlow, false)\r\ndevelop(intx, OSROnlyBCI, -1)\r\nproduct(intx, CICompilerCount, CI_COMPILER_COUNT)\r\nproduct(intx, CompilationPolicyChoice, 0)\r\ndevelop(bool, UseStackBanging, true)\r\ndevelop(bool, UseStrictFP, true)\r\ndevelop(bool, GenerateSynchronizationCode, true)\r\ndevelop(bool, GenerateCompilerNullChecks, true)\r\ndevelop(bool, GenerateRangeChecks, true)\r\ndevelop_pd(bool, ImplicitNullChecks)\r\nproduct_pd(bool, TrapBasedNullChecks)\r\nproduct(bool, PrintSafepointStatistics, false)\r\nproduct(intx, PrintSafepointStatisticsCount, 300)\r\nproduct(intx, PrintSafepointStatisticsTimeout,  -1)\r\nproduct(bool, TraceSafepointCleanupTime, false)\r\nproduct(bool, Inline, true)\r\nproduct(bool, ClipInlining, true)\r\ndevelop(bool, UseCHA, true)\r\nproduct(bool, UseTypeProfile, true)\r\nnotproduct(bool, TimeCompiler, false)\r\ndiagnostic(bool, PrintInlining, false)\r\nproduct(bool, UsePopCountInstruction, false)\r\ndevelop(bool, EagerInitialization, false)\r\ndevelop(bool, TraceMethodReplacement, false)\r\ndevelop(bool, PrintMethodFlushing, false)\r\ndiagnostic(bool, PrintMethodFlushingStatistics, false)\r\ndevelop(bool, UseRelocIndex, false)\r\ndevelop(bool, StressCodeBuffers, false)\r\ndiagnostic(bool, DebugNonSafepoints, trueInDebug)\r\nproduct(bool, PrintVMOptions, false)\r\nproduct(bool, IgnoreUnrecognizedVMOptions, false)\r\nproduct(bool, PrintCommandLineFlags, false)\r\nproduct(bool, PrintFlagsInitial, false)\r\nproduct(bool, PrintFlagsFinal, false)\r\nnotproduct(bool, PrintFlagsWithComments, false)\r\ndiagnostic(bool, SerializeVMOutput, true)\r\ndiagnostic(bool, DisplayVMOutput, true)\r\ndiagnostic(bool, LogVMOutput, false)\r\ndiagnostic(ccstr, LogFile, NULL)\r\nproduct(ccstr, ErrorFile, NULL)\r\nproduct(bool, DisplayVMOutputToStderr, false)\r\nproduct(bool, DisplayVMOutputToStdout, false)\r\nproduct(bool, UseHeavyMonitors, false)\r\nproduct(bool, PrintStringTableStatistics, false)\r\ndiagnostic(bool, VerifyStringTableAtExit, false)\r\nnotproduct(bool, PrintSymbolTableSizeHistogram, false)\r\nnotproduct(bool, ExitVMOnVerifyError, false)\r\nnotproduct(ccstr, AbortVMOnException, NULL)\r\nnotproduct(ccstr, AbortVMOnExceptionMessage, NULL)\r\ndevelop(bool, DebugVtables, false)\r\ndevelop(bool, PrintVtables, false)\r\nnotproduct(bool, PrintVtableStats, false)\r\ndevelop(bool, TraceCreateZombies, false)\r\nnotproduct(bool, IgnoreLockingAssertions, false)\r\nproduct(bool, RangeCheckElimination, true)\r\ndevelop_pd(bool, UncommonNullCast)\r\ndevelop(bool, TypeProfileCasts,  true)\r\ndevelop(bool, DelayCompilationDuringStartup, true)\r\ndevelop(bool, CompileTheWorld, false)\r\ndevelop(bool, CompileTheWorldPreloadClasses, true)\r\nnotproduct(intx, CompileTheWorldSafepointInterval, 100)\r\ndevelop(bool, FillDelaySlots, true)\r\ndevelop(bool, TimeLivenessAnalysis, false)\r\ndevelop(bool, TraceLivenessGen, false)\r\nnotproduct(bool, TraceLivenessQuery, false)\r\nnotproduct(bool, CollectIndexSetStatistics, false)\r\ndevelop(bool, UseLoopSafepoints, true)\r\nproduct(bool, AggressiveOpts, false)\r\nproduct_pd(uintx, TypeProfileLevel)\r\nproduct(intx, TypeProfileArgsLimit,     2)\r\nproduct(intx, TypeProfileParmsLimit,    2)\r\ndevelop(bool, CountCompiledCalls, false)\r\nnotproduct(bool, CountRuntimeCalls, false)\r\ndevelop(bool, CountJNICalls, false)\r\nnotproduct(bool, CountJVMCalls, false)\r\nnotproduct(bool, CountRemovableExceptions, false)\r\nnotproduct(bool, ICMissHistogram, false)\r\nnotproduct(bool, PrintClassStatistics, false)\r\nnotproduct(bool, PrintMethodStatistics, false)\r\ndevelop(bool, ClearInterpreterLocals, false)\r\nproduct_pd(bool, RewriteBytecodes)\r\nproduct_pd(bool, RewriteFrequentPairs)\r\ndiagnostic(bool, PrintInterpreter, false)\r\nproduct(bool, UseInterpreter, true)\r\ndevelop(bool, UseFastSignatureHandlers, true)\r\nproduct(bool, UseLoopCounter, true)\r\nproduct(bool, UseFastEmptyMethods, true)\r\nproduct(bool, UseFastAccessorMethods, true)\r\nproduct_pd(bool, UseOnStackReplacement)\r\nnotproduct(bool, TraceOnStackReplacement, false)\r\nproduct_pd(bool, PreferInterpreterNativeStubs)\r\ndevelop(bool, CountBytecodes, false)\r\ndevelop(bool, PrintBytecodeHistogram, false)\r\ndevelop(bool, PrintBytecodePairHistogram, false)\r\ndiagnostic(bool, PrintSignatureHandlers, false)\r\ndevelop(bool, VerifyOops, false)\r\ndevelop(bool, CheckUnhandledOops, false)\r\ndevelop(bool, VerifyJNIFields, trueInDebug)\r\nnotproduct(bool, VerifyJNIEnvThread, false)\r\ndevelop(bool, VerifyFPU, false)\r\ndevelop(bool, VerifyThread, false)\r\ndevelop(bool, VerifyActivationFrameSize, false)\r\ndevelop(bool, TraceFrequencyInlining, false)\r\ndevelop_pd(bool, InlineIntrinsics)\r\nproduct_pd(bool, ProfileInterpreter)\r\ndevelop(bool, TraceProfileInterpreter, false)\r\ndevelop_pd(bool, ProfileTraps)\r\nproduct(intx, ProfileMaturityPercentage, 20)\r\ndevelop(bool, PrintMethodData, false)\r\ndevelop(bool, VerifyDataPointer, trueInDebug)\r\ndevelop(bool, VerifyCompiledCode, false)\r\nnotproduct(bool, CrashGCForDumpingJavaThread, false)\r\nproduct(bool, UseCompiler, true)\r\ndevelop(bool, TraceCompilationPolicy, false)\r\ndevelop(bool, TimeCompilationPolicy, false)\r\nproduct(bool, UseCounterDecay, true)\r\ndevelop(intx, CounterHalfLifeTime,    30)\r\ndevelop(intx, CounterDecayMinIntervalLength,   500)\r\nproduct(bool, AlwaysCompileLoopMethods, false)\r\nproduct(bool, DontCompileHugeMethods, true)\r\nproduct(bool, EstimateArgEscape, true)\r\nproduct(intx, BCEATraceLevel, 0)\r\nproduct(intx, MaxBCEAEstimateLevel, 5)\r\nproduct(intx, MaxBCEAEstimateSize, 150)\r\nproduct(intx,  AllocatePrefetchStyle, 1)\r\nproduct(intx,  AllocatePrefetchDistance, -1)\r\nproduct(intx,  AllocatePrefetchLines, 3)\r\nproduct(intx,  AllocateInstancePrefetchLines, 1)\r\nproduct(intx,  AllocatePrefetchStepSize, 16)\r\nproduct(intx,  AllocatePrefetchInstr, 0)\r\ndevelop(bool, TraceDeoptimization, false)\r\ndevelop(bool, DebugDeoptimization, false)\r\nproduct(intx, SelfDestructTimer, 0)\r\nproduct(intx, MaxJavaStackTraceDepth, 1024)\r\nNOT_EMBEDDED(diagnostic(intx, GuaranteedSafepointInterval, 1000)\r\nEMBEDDED_ONLY(product(intx, GuaranteedSafepointInterval, 0)\r\nproduct(intx, SafepointTimeoutDelay, 10000)\r\nproduct(intx, NmethodSweepFraction, 16)\r\nproduct(intx, NmethodSweepCheckInterval, 5)\r\nproduct(intx, NmethodSweepActivity, 10)\r\nnotproduct(bool, LogSweeper, false)\r\nnotproduct(intx, SweeperLogEntries, 1024)\r\nnotproduct(intx, MemProfilingInterval, 500)\r\ndevelop(intx, MallocCatchPtr, -1)\r\nnotproduct(intx, AssertRepeat, 1)\r\nnotproduct(uintx, HandleAllocationLimit, 1024)\r\ndevelop(uintx, TotalHandleAllocationLimit, 1024)\r\ndevelop(intx, StackPrintLimit, 100)\r\nnotproduct(intx, MaxElementPrintSize, 256)\r\nnotproduct(intx, MaxSubklassPrintSize, 4)\r\nproduct(intx, MaxInlineLevel, 9)\r\nproduct(intx, MaxRecursiveInlineLevel, 1)\r\ndevelop(intx, MaxForceInlineLevel, 100)\r\nproduct_pd(intx, InlineSmallCode)\r\nproduct(intx, MaxInlineSize, 35)\r\nproduct_pd(intx, FreqInlineSize)\r\nproduct(intx, MaxTrivialSize, 6)\r\nproduct(intx, MinInliningThreshold, 250)\r\ndevelop(intx, MethodHistogramCutoff, 100)\r\ndevelop(intx, ProfilerNumberOfInterpretedMethods, 25)\r\ndevelop(intx, ProfilerNumberOfCompiledMethods, 25)\r\ndevelop(intx, ProfilerNumberOfStubMethods, 25)\r\ndevelop(intx, ProfilerNumberOfRuntimeStubNodes, 25)\r\nproduct(intx, ProfileIntervalsTicks, 100)\r\nnotproduct(intx, ScavengeALotInterval,     1)\r\nnotproduct(intx, FullGCALotInterval,     1)\r\nnotproduct(intx, FullGCALotStart,     0)\r\ndevelop(intx, DontYieldALotInterval,    10)\r\ndevelop(intx, MinSleepInterval,     1)\r\ndevelop(intx, ProfilerPCTickThreshold,    15)\r\nnotproduct(intx, DeoptimizeALotInterval,     5)\r\nnotproduct(intx, ZombieALotInterval,     5)\r\ndiagnostic(intx, MallocVerifyInterval,     0)\r\ndiagnostic(intx, MallocVerifyStart,     0)\r\ndiagnostic(uintx, MallocMaxTestWords,     0)\r\nproduct(intx, TypeProfileWidth,     2)\r\ndevelop(intx, BciProfileWidth,      2)\r\nproduct(intx, PerMethodRecompilationCutoff, 400)\r\nproduct(intx, PerBytecodeRecompilationCutoff, 200)\r\nproduct(intx, PerMethodTrapLimit,  100)\r\nexperimental(intx, PerMethodSpecTrapLimit,  5000)\r\nproduct(intx, PerBytecodeTrapLimit,  4)\r\nexperimental(intx, SpecTrapLimitExtraEntries,  3)\r\ndevelop(intx, InlineFrequencyRatio,    20)\r\ndevelop_pd(intx, InlineFrequencyCount)\r\ndevelop(intx, InlineThrowCount,    50)\r\ndevelop(intx, InlineThrowMaxSize,   200)\r\ndevelop(intx, ProfilerNodeSize,  1024)\r\nproduct_pd(intx, PreInflateSpin)\r\nproduct(uintx, InitialHeapSize, 0)\r\nproduct(uintx, MaxNewSize, max_uintx)\r\nproduct(uintx, PretenureSizeThreshold, 0)\r\nproduct(uintx, TLABSize, 0)\r\nproduct(uintx, TLABAllocationWeight, 35)\r\nproduct(uintx, TLABWasteTargetPercent, 1)\r\nproduct(uintx, TLABRefillWasteFraction,    64)\r\nproduct(uintx, TLABWasteIncrement,    4)\r\nproduct(uintx, SurvivorRatio, 8)\r\nproduct(uintx, NewRatio, 2)\r\nproduct_pd(uintx, NewSizeThreadIncrease)\r\nproduct_pd(uintx, MetaspaceSize)\r\nproduct(uintx, MaxMetaspaceSize, max_uintx)\r\nmanageable(uintx, MinHeapFreeRatio, 40)\r\nmanageable(uintx, MaxHeapFreeRatio, 70)\r\nproduct(intx, SoftRefLRUPolicyMSPerMB, 1000)\r\nproduct(uintx, MinMetaspaceFreeRatio,    40)\r\nproduct(uintx, MaxMetaspaceFreeRatio,    70)\r\nproduct(uintx, QueuedAllocationWarningCount, 0)\r\ndiagnostic(uintx, VerifyGCStartAt,   0)\r\ndiagnostic(intx, VerifyGCLevel,     0)\r\nproduct(uintx, MaxTenuringThreshold,    15)\r\nproduct(uintx, InitialTenuringThreshold,    7)\r\nproduct(uintx, TargetSurvivorRatio,    50)\r\nproduct(uintx, MarkSweepDeadRatio,     5)\r\nproduct(uintx, MarkSweepAlwaysCompactCount,     4)\r\nproduct(intx, PrintCMSStatistics, 0)\r\nproduct(bool, PrintCMSInitiationStatistics, false)\r\nproduct(intx, PrintFLSStatistics, 0)\r\nproduct(intx, PrintFLSCensus, 0)\r\ndevelop(uintx, GCExpandToAllocateDelayMillis, 0)\r\ndevelop(uintx, GCWorkerDelayMillis, 0)\r\nproduct(intx, DeferThrSuspendLoopCount,     4000)\r\nproduct(intx, DeferPollingPageLoopCount,     -1)\r\nproduct(bool, PSChunkLargeArrays, true)\r\nproduct(uintx, GCDrainStackTargetSize, 64)\r\nproduct_pd(intx, StackYellowPages)\r\nproduct_pd(intx, StackRedPages)\r\nproduct_pd(intx, StackShadowPages)\r\nproduct_pd(intx, ThreadStackSize)\r\nproduct_pd(intx, VMThreadStackSize)\r\nproduct_pd(intx, CompilerThreadStackSize)\r\ndevelop_pd(uintx, JVMInvokeMethodSlack)\r\ndevelop(uintx, CodeCacheSegmentSize, 64 PPC64_ONLY(+64))\r\ndevelop_pd(intx, CodeEntryAlignment)\r\nproduct_pd(intx, OptoLoopAlignment)\r\nproduct_pd(uintx, InitialCodeCacheSize)\r\ndevelop_pd(uintx, CodeCacheMinimumUseSpace)\r\nproduct_pd(uintx, ReservedCodeCacheSize)\r\nproduct_pd(uintx, CodeCacheExpansionSize)\r\ndevelop_pd(uintx, CodeCacheMinBlockLength)\r\nnotproduct(bool, ExitOnFullCodeCache, false)\r\nproduct(bool, UseCodeCacheFlushing, true)\r\ndevelop(intx, BinarySwitchThreshold, 5)\r\ndevelop(intx, StopInterpreterAt, 0)\r\ndevelop(intx, TraceBytecodesAt, 0)\r\ndevelop(intx, CIStart, 0)\r\ndevelop(intx, CIStop, max_jint)\r\ndevelop(intx, CIStartOSR, 0)\r\ndevelop(intx, CIStopOSR, max_jint)\r\ndevelop(intx, CIBreakAtOSR, -1)\r\ndevelop(intx, CIBreakAt, -1)\r\nproduct(ccstr, CompileCommandFile, NULL)\r\ndevelop(bool, ReplayCompiles, false)\r\nproduct(ccstr, ReplayDataFile, NULL)\r\nproduct(ccstr, InlineDataFile, NULL)\r\ndevelop(intx, ReplaySuppressInitializers, 2)\r\ndevelop(bool, ReplayIgnoreInitErrors, false)\r\nproduct(bool, DumpReplayDataOnError, true)\r\nproduct(bool, CICompilerCountPerCPU, false)\r\ndevelop(intx, CIFireOOMAt,    -1)\r\nnotproduct(intx, CICrashAt, -1)\r\nnotproduct(bool, CIObjectFactoryVerify, false)\r\nproduct(intx, ThreadPriorityPolicy, 0)\r\nproduct(bool, ThreadPriorityVerbose, false)\r\nproduct(intx, DefaultThreadPriority, -1)\r\nproduct(intx, CompilerThreadPriority, -1)\r\nproduct(intx, VMThreadPriority, -1)\r\nproduct(bool, CompilerThreadHintNoPreempt, true)\r\nproduct(bool, VMThreadHintNoPreempt, false)\r\nproduct(intx, JavaPriority1_To_OSPriority, -1)\r\nproduct(intx, JavaPriority2_To_OSPriority, -1)\r\nproduct(intx, JavaPriority3_To_OSPriority, -1)\r\nproduct(intx, JavaPriority4_To_OSPriority, -1)\r\nproduct(intx, JavaPriority5_To_OSPriority, -1)\r\nproduct(intx, JavaPriority6_To_OSPriority, -1)\r\nproduct(intx, JavaPriority7_To_OSPriority, -1)\r\nproduct(intx, JavaPriority8_To_OSPriority, -1)\r\nproduct(intx, JavaPriority9_To_OSPriority, -1)\r\nproduct(intx, JavaPriority10_To_OSPriority,-1)\r\nexperimental(bool, UseCriticalJavaThreadPriority, false)\r\nexperimental(bool, UseCriticalCompilerThreadPriority, false)\r\nexperimental(bool, UseCriticalCMSThreadPriority, false)\r\nnotproduct(intx, CompileTheWorldStartAt,     1)\r\nnotproduct(intx, CompileTheWorldStopAt, max_jint)\r\ndevelop(intx, NewCodeParameter,      0)\r\ndevelop(intx, MinOopMapAllocation,     8)\r\ndevelop(intx, LongCompileThreshold,     50)\r\nproduct(intx, StarvationMonitorInterval,    200)\r\nproduct_pd(intx, CompileThreshold)\r\nproduct_pd(intx, BackEdgeThreshold)\r\nproduct(intx, Tier0InvokeNotifyFreqLog, 7)\r\nproduct(intx, Tier2InvokeNotifyFreqLog, 11)\r\nproduct(intx, Tier3InvokeNotifyFreqLog, 10)\r\nproduct(intx, Tier23InlineeNotifyFreqLog, 20)\r\nproduct(intx, Tier0BackedgeNotifyFreqLog, 10)\r\nproduct(intx, Tier2BackedgeNotifyFreqLog, 14)\r\nproduct(intx, Tier3BackedgeNotifyFreqLog, 13)\r\nproduct(intx, Tier2CompileThreshold, 0)\r\nproduct(intx, Tier2BackEdgeThreshold, 0)\r\nproduct(intx, Tier3InvocationThreshold, 200)\r\nproduct(intx, Tier3MinInvocationThreshold, 100)\r\nproduct(intx, Tier3CompileThreshold, 2000)\r\nproduct(intx, Tier3BackEdgeThreshold,  60000)\r\nproduct(intx, Tier4InvocationThreshold, 5000)\r\nproduct(intx, Tier4MinInvocationThreshold, 600)\r\nproduct(intx, Tier4CompileThreshold, 15000)\r\nproduct(intx, Tier4BackEdgeThreshold, 40000)\r\nproduct(intx, Tier3DelayOn, 5)\r\nproduct(intx, Tier3DelayOff, 2)\r\nproduct(intx, Tier3LoadFeedback, 5)\r\nproduct(intx, Tier4LoadFeedback, 3)\r\nproduct(intx, TieredCompileTaskTimeout, 50)\r\nproduct(intx, TieredStopAtLevel, 4)\r\nproduct(intx, Tier0ProfilingStartPercentage, 200)\r\nproduct(uintx, IncreaseFirstTierCompileThresholdAt, 50)\r\nproduct(intx, TieredRateUpdateMinTime, 1)\r\nproduct(intx, TieredRateUpdateMaxTime, 25)\r\nproduct_pd(bool, TieredCompilation)\r\nproduct(bool, PrintTieredEvents, false)\r\nproduct_pd(intx, OnStackReplacePercentage)\r\nproduct(intx, InterpreterProfilePercentage, 33)\r\ndevelop(intx, MaxRecompilationSearchLength,    10)\r\ndevelop(intx, MaxInterpretedSearchLength,     3)\r\ndevelop(intx, DesiredMethodLimit,  8000)\r\ndevelop(intx, HugeMethodLimit,  8000)\r\ndevelop(bool, UseNewReflection, true)\r\ndevelop(bool, VerifyReflectionBytecodes, false)\r\nproduct(bool, ReflectionWrapResolutionErrors, true)\r\ndevelop(intx, FastSuperclassLimit, 8)\r\nproduct(uintx, MaxDirectMemorySize, 0)\r\ndiagnostic(bool, UseNewCode, false)\r\ndiagnostic(bool, UseNewCode2, false)\r\ndiagnostic(bool, UseNewCode3, false)\r\nproduct(bool, UsePerfData, falseInEmbedded)\r\nproduct(bool, PerfDataSaveToFile, false)\r\nproduct(ccstr, PerfDataSaveFile, NULL)\r\nproduct(intx, PerfDataSamplingInterval, 50)\r\ndevelop(bool, PerfTraceDataCreation, false)\r\ndevelop(bool, PerfTraceMemOps, false)\r\nproduct(bool, PerfDisableSharedMem, false)\r\nproduct(intx, PerfMaxStringConstLength, 1024)\r\nproduct(bool, PerfAllowAtExitRegistration, false)\r\nproduct(bool, PerfBypassFileSystemCheck, false)\r\nproduct(intx, UnguardOnExecutionViolation, 0)\r\nproduct(bool, ManagementServer, false)\r\nproduct(bool, DisableAttachMechanism, false)\r\nproduct(bool, StartAttachListener, false)\r\nmanageable(bool, PrintConcurrentLocks, false)\r\nproduct(bool, TransmitErrorReport, false)\r\nproduct(ccstr, ErrorReportServer, NULL)\r\nproduct(bool, UseSharedSpaces, true)\r\nproduct(bool, VerifySharedSpaces, false)\r\nproduct(bool, RequireSharedSpaces, false)\r\nproduct(bool, DumpSharedSpaces, false)\r\nproduct(bool, PrintSharedSpaces, false)\r\nproduct(bool, PrintSharedArchiveAndExit, false)\r\nproduct(bool, PrintSharedDictionary, false)\r\ndiagnostic(bool, EnableInvokeDynamic, true)\r\ndiagnostic(bool, IgnoreUnverifiableClassesDuringDump, false)\r\ndiagnostic(bool, PrintMethodHandleStubs, false)\r\ndevelop(bool, TraceMethodHandles, false)\r\ndiagnostic(bool, VerifyMethodHandles, trueInDebug)\r\ndiagnostic(bool, ShowHiddenFrames, false)\r\nexperimental(bool, TrustFinalNonStaticFields, false)\r\ndiagnostic(bool, FoldStableValues, true)\r\ndevelop(bool, TraceInvokeDynamic, false)\r\ndiagnostic(bool, PauseAtStartup,      false)\r\ndiagnostic(ccstr, PauseAtStartupFile, NULL)\r\ndiagnostic(bool, PauseAtExit, false)\r\nproduct(bool, ExtendedDTraceProbes,    false)\r\nproduct(bool, DTraceMethodProbes, false)\r\nproduct(bool, DTraceAllocProbes, false)\r\nproduct(bool, DTraceMonitorProbes, false)\r\nproduct(bool, RelaxAccessControlCheck, false)\r\ndiagnostic(bool, PrintDTraceDOF, false)\r\nproduct(uintx, StringTableSize, defaultStringTableSize)\r\nexperimental(uintx, SymbolTableSize, defaultSymbolTableSize)\r\nproduct(bool, UseStringDeduplication, false)\r\nproduct(bool, PrintStringDeduplicationStatistics, false)\r\nproduct(uintx, StringDeduplicationAgeThreshold, 3)\r\ndiagnostic(bool, StringDeduplicationResizeALot, false)\r\ndiagnostic(bool, StringDeduplicationRehashALot, false)\r\ndevelop(bool, TraceDefaultMethods, false)\r\ndevelop(bool, VerifyGenericSignatures, false)\r\nproduct(bool, UseVMInterruptibleIO, false)\r\ndiagnostic(bool, WhiteBoxAPI, false)\r\nproduct(bool, PrintGCCause, true)\r\nexperimental(intx, SurvivorAlignmentInBytes, 0)\r\nproduct(bool , AllowNonVirtualCalls, false)\r\nproduct(ccstr, DumpLoadedClassList, NULL)\r\nproduct(ccstr, SharedClassListFile, NULL)\r\ndiagnostic(ccstr, SharedArchiveFile, NULL)\r\nproduct(ccstr, ExtraSharedClassListFile, NULL)\r\nexperimental(uintx, ArrayAllocatorMallocLimit)\r\nproduct(bool, EnableTracing, false)\r\nproduct(bool, UseLockedTracing, false)\r\nproduct_pd(bool, PreserveFramePointer)\r\n```',86,'https://www.allisterke.com/?p=89',0,'revision','',0),(90,1,'2017-08-09 01:16:40','2017-08-08 17:16:40','java -X可以列出-X选项，但-XX选项好像并没有直接的方法可以列出。从源码里则可以得到。用hg下载源码后grep一下便可得到所有的-X和-XX选项了。\n\n<h2>一部分是单独列出来的</h2>\n\n<pre><code class=\"bash\">cat hotspot/src/share/vm/runtime/arguments.cpp |\n    grep -o \'option, \"-X[^\"]*\"\' |\n    sed -r \'s/.*\"(.*)\".*/\\1/\'\n</code></pre>\n\n<pre><code class=\"nohighlight\">-Xbootclasspath:\n-Xbootclasspath/a:\n-Xbootclasspath/p:\n-Xrun\n-Xnoclassgc\n-Xincgc\n-Xnoincgc\n-Xconcgc\n-Xnoconcgc\n-Xbatch\n-Xmn\n-Xms\n-Xmx\n-XX:MaxHeapSize=\n-Xmaxf\n-Xminf\n-Xss\n-Xoss\n-XX:CodeCacheExpansionSize=\n-Xmaxjitcodesize\n-XX:ReservedCodeCacheSize=\n-XX:IncreaseFirstTierCompileThresholdAt=\n-Xsqnopause\n-Xrs\n-Xusealtsigs\n-Xoptimize\n-Xprof\n-Xconcurrentio\n-Xinternalversion\n-Xprintflags\n-Xint\n-Xmixed\n-Xcomp\n-Xshare:dump\n-Xshare:on\n-Xshare:auto\n-Xshare:off\n-Xverify\n-Xdebug\n-Xnoagent\n-Xboundthreads\n-Xloggc:\n-Xcheck\n-XX:+AggressiveHeap\n-XX:+NeverTenure\n-XX:+AlwaysTenure\n-XX:+CMSPermGenSweepingEnabled\n-XX:-CMSPermGenSweepingEnabled\n-XX:+UseGCTimeLimit\n-XX:-UseGCTimeLimit\n-XX:MaxTLERatio=\n-XX:+ResizeTLE\n-XX:-ResizeTLE\n-XX:+PrintTLE\n-XX:-PrintTLE\n-XX:TLEFragmentationRatio=\n-XX:TLESize=\n-XX:TLEThreadRatio=\n-XX:+UseTLE\n-XX:-UseTLE\n-XX:+DisplayVMOutputToStderr\n-XX:+DisplayVMOutputToStdout\n-XX:+ExtendedDTraceProbes\n-XX:+FullGCALot\n-XX:CMSParPromoteBlocksToClaim=\n-XX:ParCMSPromoteBlocksToClaim=\n-XX:ParallelGCOldGenAllocBufferSize=\n-XX:ParallelGCToSpaceAllocBufferSize=\n-XX:CMSMarkStackSize=\n-XX:G1MarkStackSize=\n-XX:CMSMarkStackSizeMax=\n-XX:ParallelMarkingThreads=\n-XX:ParallelCMSThreads=\n-XX:MaxDirectMemorySize=\n-XX:+UseVMInterruptibleIO\n-XX:+ManagementServer\n-XX:\n-XX:\n-XX:Flags=\n-XX:+PrintVMOptions\n-XX:-PrintVMOptions\n-XX:+IgnoreUnrecognizedVMOptions\n-XX:-IgnoreUnrecognizedVMOptions\n-XX:+PrintFlagsInitial\n-XX:NativeMemoryTracking\n-XX:+PrintFlagsWithComments\n-XX:\n</code></pre>\n\n<h2>另一部分是宏定义的-XX:选项列表</h2>\n\n太多了，有将近一千个\n\n<pre><code class=\"bash\">cat hotspot/src/share/vm/runtime/globals.hpp |\n    grep \'\\\\\'  |\n    grep -v \'\"\' |\n    grep -v \'\\*\' |\n    grep -v \'#\' |\n    sed \'/^\\s*\\\\$/ d\' |\n    sed \'s/^ *//\' |\n    sed \'s/, *\\\\$//\'\n</code></pre>\n\n<pre><code class=\"nohighlight\">lp64_product(bool, UseCompressedOops, false)\nlp64_product(bool, UseCompressedClassPointers, false)\nnotproduct(bool, CheckCompressedOops, true)\nproduct_pd(uintx, HeapBaseMinAddress)\ndiagnostic(bool, PrintCompressedOopsMode, false)\nlp64_product(intx, ObjectAlignmentInBytes, 8)\nproduct(bool, AssumeMP, false)\nproduct_pd(bool, UseMembar)\ndevelop(bool, CleanChunkPoolAsync, falseInEmbedded)\nexperimental(bool, UseMemSetInBOT, true)\ndiagnostic(bool, UnlockDiagnosticVMOptions, trueInDebug)\nexperimental(bool, UnlockExperimentalVMOptions, false)\nproduct(bool, JavaMonitorsInStackTrace, true)\nproduct_pd(bool, UseLargePages)\nproduct_pd(bool, UseLargePagesIndividualAllocation)\ndevelop(bool, LargePagesIndividualAllocationInjectError, false)\nproduct(bool, UseLargePagesInMetaspace, false)\ndevelop(bool, TracePageSizes, false)\nproduct(bool, UseNUMA, false)\nproduct(bool, UseNUMAInterleaving, false)\nproduct(bool, ForceNUMA, false)\nproduct(uintx, NUMAChunkResizeWeight, 20)\nproduct(bool, UseAdaptiveNUMAChunkSizing, true)\nproduct(bool, NUMAStats, false)\nproduct(uintx, NUMAPageScanRate, 256)\nproduct_pd(bool, NeedsDeoptSuspend)\nproduct(intx, UseSSE, 99)\nproduct(bool, UseAES, false)\nproduct(bool, UseSHA, false)\nproduct(uintx, LargePageSizeInBytes, 0)\nproduct(bool, ForceTimeHighResolution, false)\ndevelop(bool, TraceItables, false)\ndevelop(bool, TracePcPatching, false)\ndevelop(bool, TraceJumps, false)\ndevelop(bool, TraceRelocator, false)\ndevelop(bool, TraceLongCompiles, false)\ndevelop(bool, SafepointALot, false)\nproduct_pd(bool, BackgroundCompilation)\nproduct(bool, PrintVMQWaitTime, false)\ndevelop(bool, NoYieldsInMicrolock, false)\ndevelop(bool, TraceOopMapGeneration, false)\nproduct(bool, MethodFlushing, true)\ndevelop(bool, VerifyStack, false)\ndiagnostic(bool, ForceUnreachable, false)\nnotproduct(bool, StressDerivedPointers, false)\ndevelop(bool, TraceDerivedPointers, false)\nnotproduct(bool, TraceCodeBlobStacks, false)\nproduct(bool, PrintJNIResolving, false)\nnotproduct(bool, PrintRewrites, false)\nproduct(bool, UseInlineCaches, true)\ndevelop(bool, InlineArrayCopy, true)\ndevelop(bool, InlineObjectHash, true)\ndevelop(bool, InlineNatives, true)\ndevelop(bool, InlineMathNatives, true)\ndevelop(bool, InlineClassNatives, true)\ndevelop(bool, InlineThreadNatives, true)\ndevelop(bool, InlineUnsafeOps, true)\nproduct(bool, CriticalJNINatives, true)\nnotproduct(bool, StressCriticalJNINatives, false)\nproduct(bool, UseSSE42Intrinsics, false)\nproduct(bool, UseAESIntrinsics, false)\nproduct(bool, UseSHA1Intrinsics, false)\nproduct(bool, UseSHA256Intrinsics, false)\nproduct(bool, UseSHA512Intrinsics, false)\nproduct(bool, UseCRC32Intrinsics, false)\ndevelop(bool, TraceCallFixup, false)\ndevelop(bool, DeoptimizeALot, false)\nproduct(bool, DeoptimizeRandom, false)\nnotproduct(bool, ZombieALot, false)\nproduct(bool, UnlinkSymbolsALot, false)\nnotproduct(bool, WalkStackALot, false)\nproduct(bool, Debugging, false)\nnotproduct(bool, StrictSafepointChecks, trueInDebug)\nnotproduct(bool, VerifyLastFrame, false)\ndevelop(bool, TraceHandleAllocation, false)\nproduct(bool, UseCompilerSafepoints, true)\nproduct(bool, FailOverToOldVerifier, true)\ndevelop(bool, ShowSafepointMsgs, false)\nproduct(bool, SafepointTimeout, false)\ndevelop(bool, DieOnSafepointTimeout, false)\nproduct(intx, SuspendRetryCount, 50)\nproduct(intx, SuspendRetryDelay, 5)\nproduct(bool, AssertOnSuspendWaitFailure, false)\nproduct(bool, TraceSuspendWaitFailures, false)\nproduct(bool, MaxFDLimit, true)\ndiagnostic(bool, LogEvents, true)\ndiagnostic(uintx, LogEventsBufferEntries, 10)\nproduct(bool, BytecodeVerificationRemote, true)\nproduct(bool, BytecodeVerificationLocal, false)\ndevelop(bool, ForceFloatExceptions, trueInDebug)\ndevelop(bool, VerifyStackAtCalls, false)\ndevelop(bool, TraceJavaAssertions, false)\nnotproduct(bool, CheckAssertionStatusDirectives, false)\nnotproduct(bool, PrintMallocFree, false)\nproduct(bool, PrintOopAddress, false)\nnotproduct(bool, VerifyCodeCacheOften, false)\ndevelop(bool, ZapDeadCompiledLocals, false)\nnotproduct(bool, ZapDeadLocalsOld, false)\nnotproduct(bool, CheckOopishValues, false)\ndevelop(bool, UseMallocOnly, false)\ndevelop(bool, PrintMalloc, false)\ndevelop(bool, PrintMallocStatistics, false)\ndevelop(bool, ZapResourceArea, trueInDebug)\nnotproduct(bool, ZapVMHandleArea, trueInDebug)\ndevelop(bool, ZapJNIHandleArea, trueInDebug)\nnotproduct(bool, ZapStackSegments, trueInDebug)\ndevelop(bool, ZapUnusedHeapArea, trueInDebug)\ndevelop(bool, TraceZapUnusedHeapArea, false)\ndevelop(bool, CheckZapUnusedHeapArea, false)\ndevelop(bool, ZapFillerObjects, trueInDebug)\ndevelop(bool, PrintVMMessages, true)\nproduct(bool, PrintGCApplicationConcurrentTime, false)\nproduct(bool, PrintGCApplicationStoppedTime, false)\ndiagnostic(bool, VerboseVerification, false)\nnotproduct(uintx, ErrorHandlerTest, 0)\ndevelop(bool, Verbose, false)\ndevelop(bool, PrintMiscellaneous, false)\ndevelop(bool, WizardMode, false)\nproduct(bool, ShowMessageBoxOnError, false)\nproduct(bool, CreateMinidumpOnCrash, false)\nproduct_pd(bool, UseOSErrorReporting)\nproduct(bool, SuppressFatalErrorMessage, false)\nmanageable(bool, HeapDumpBeforeFullGC, false)\nmanageable(bool, HeapDumpAfterFullGC, false)\nmanageable(bool, HeapDumpOnOutOfMemoryError, false)\nmanageable(ccstr, HeapDumpPath, NULL)\ndevelop(bool, BreakAtWarning, false)\ndevelop(bool, TraceVMOperation, false)\ndevelop(bool, UseFakeTimers, false)\ndiagnostic(bool, PrintNMTStatistics, false)\ndiagnostic(bool, LogCompilation, false)\nproduct(bool, PrintCompilation, false)\ndiagnostic(bool, TraceNMethodInstalls, false)\ndiagnostic(intx, ScavengeRootsInCode, 2)\nproduct(bool, AlwaysRestoreFPU, false)\ndiagnostic(bool, PrintCompilation2, false)\ndiagnostic(bool, PrintAdapterHandlers, false)\ndiagnostic(bool, VerifyAdapterCalls, trueInDebug)\ndevelop(bool, VerifyAdapterSharing, false)\ndiagnostic(bool, PrintAssembly, false)\ndiagnostic(ccstr, PrintAssemblyOptions, NULL)\ndiagnostic(bool, PrintNMethods, false)\ndiagnostic(bool, PrintNativeNMethods, false)\ndevelop(bool, PrintDebugInfo, false)\ndevelop(bool, PrintRelocations, false)\ndevelop(bool, PrintDependencies, false)\ndevelop(bool, PrintExceptionHandlers, false)\ndevelop(bool, StressCompiledExceptionHandlers, false)\ndevelop(bool, InterceptOSException, false)\nproduct(bool, PrintCodeCache, false)\ndevelop(bool, PrintCodeCache2, false)\nproduct(bool, PrintCodeCacheOnCompilation, false)\ndiagnostic(bool, PrintStubCode, false)\nproduct(bool, StackTraceInThrowable, true)\nproduct(bool, OmitStackTraceInFastThrow, true)\nproduct(bool, ProfilerPrintByteCodeStatistics, false)\nproduct(bool, ProfilerRecordPC, false)\nproduct(bool, ProfileVM, false)\nproduct(bool, ProfileIntervals, false)\nnotproduct(bool, ProfilerCheckIntervals, false)\ndevelop(bool, PrintJVMWarnings, false)\nproduct(bool, PrintWarnings, true)\nnotproduct(uintx, WarnOnStalledSpinLock, 0)\nproduct(bool, RegisterFinalizersAtInit, true)\ndevelop(bool, RegisterReferences, true)\ndevelop(bool, IgnoreRewrites, false)\ndevelop(bool, PrintCodeCacheExtension, false)\ndevelop(bool, UsePrivilegedStack, true)\ndevelop(bool, ProtectionDomainVerification, true)\nproduct(bool, ClassUnloading, true)\nproduct(bool, ClassUnloadingWithConcurrentMark, true)\ndevelop(bool, DisableStartThread, false)\ndevelop(bool, MemProfiling, false)\nnotproduct(bool, PrintSystemDictionaryAtExit, false)\nexperimental(intx, PredictedLoadedClassCount, 0)\ndiagnostic(bool, UnsyncloadClass, false)\nproduct(bool, AlwaysLockClassLoader, false)\nproduct(bool, AllowParallelDefineClass, false)\nproduct(bool, MustCallLoadClassInternal, false)\nproduct_pd(bool, DontYieldALot)\nproduct_pd(bool, ConvertSleepToYield)\nproduct(bool, ConvertYieldToSleep, false)\nproduct(bool, UseBoundThreads, true)\ndevelop(bool, UseDetachedThreads, true)\nproduct(bool, UseLWPSynchronization, true)\nproduct(ccstr, SyncKnobs, NULL)\nproduct(intx, EmitSync, 0)\nproduct(intx, hashCode, 5)\nproduct(intx, WorkAroundNPTLTimedWaitHang, 1)\nproduct(bool, FilterSpuriousWakeups, true)\ndevelop(bool, UsePthreads, false)\nproduct(bool, AdjustConcurrency, false)\nproduct(bool, ReduceSignalUsage, false)\ndevelop_pd(bool, ShareVtableStubs)\ndevelop(bool, LoadLineNumberTables, true)\ndevelop(bool, LoadLocalVariableTables, true)\ndevelop(bool, LoadLocalVariableTypeTables, true)\nproduct(bool, AllowUserSignalHandlers, false)\nproduct(bool, UseSignalChaining, true)\nproduct(bool, UseAltSigs, false)\nproduct(bool, AllowJNIEnvProxy, false)\nproduct(bool, JNIDetachReleasesMonitors, true)\nproduct(bool, RestoreMXCSROnJNICalls, false)\nproduct(bool, CheckJNICalls, false)\nproduct(bool, CheckEndorsedAndExtDirs, false)\nproduct(bool, UseFastJNIAccessors, true)\nproduct(intx, MaxJNILocalCapacity, 65536)\nproduct(bool, EagerXrunInit, false)\nproduct(bool, PreserveAllAnnotations, false)\ndevelop(uintx, PreallocatedOutOfMemoryErrorCount, 4)\nproduct(bool, LazyBootClassLoader, true)\nproduct(bool, UseXMMForArrayCopy, false)\nproduct(intx, FieldsAllocationStyle, 1)\nproduct(bool, CompactFields, true)\nnotproduct(bool, PrintFieldLayout, false)\nproduct(intx, ContendedPaddingWidth, 128)\nproduct(bool, EnableContended, true)\nproduct(bool, RestrictContended, true)\nproduct(bool, UseBiasedLocking, true)\nproduct(intx, BiasedLockingStartupDelay, 4000)\ndiagnostic(bool, PrintBiasedLockingStatistics, false)\nproduct(intx, BiasedLockingBulkRebiasThreshold, 20)\nproduct(intx, BiasedLockingBulkRevokeThreshold, 40)\nproduct(intx, BiasedLockingDecayTime, 25000)\nproduct(bool, ExitOnOutOfMemoryError, false)\nproduct(bool, CrashOnOutOfMemoryError, false)\nnotproduct(bool, TraceRuntimeCalls, false)\ndevelop(bool, TraceJNICalls, false)\ndevelop(bool, StressRewriter, false)\nnotproduct(bool, TraceJVMCalls, false)\nproduct(ccstr, TraceJVMTI, NULL)\nproduct(bool, StressLdcRewrite, false)\nproduct(intx, TraceRedefineClasses, 0)\ndevelop(bool, StressMethodComparator, false)\nproduct(bool, VerifyMergedCPBytecodes, true)\ndevelop(bool, TraceJNIHandleAllocation, false)\ndevelop(bool, TraceThreadEvents, false)\ndevelop(bool, TraceBytecodes, false)\ndevelop(bool, TraceClassInitialization, false)\ndevelop(bool, TraceExceptions, false)\ndevelop(bool, TraceICs, false)\nnotproduct(bool, TraceInvocationCounterOverflow, false)\ndevelop(bool, TraceInlineCacheClearing, false)\ndevelop(bool, TraceDependencies, false)\ndevelop(bool, VerifyDependencies, trueInDebug)\ndevelop(bool, TraceNewOopMapGeneration, false)\ndevelop(bool, TraceNewOopMapGenerationDetailed, false)\ndevelop(bool, TimeOopMap, false)\ndevelop(bool, TimeOopMap2, false)\ndevelop(bool, TraceMonitorMismatch, false)\ndevelop(bool, TraceOopMapRewrites, false)\ndevelop(bool, TraceSafepoint, false)\ndevelop(bool, TraceICBuffer, false)\ndevelop(bool, TraceCompiledIC, false)\nnotproduct(bool, TraceZapDeadLocals, false)\ndevelop(bool, TraceStartupTime, false)\ndevelop(bool, TraceProtectionDomainVerification, false)\ndevelop(bool, TraceClearedExceptions, false)\nproduct(bool, TraceClassResolution, false)\nproduct(bool, TraceBiasedLocking, false)\nproduct(bool, TraceMonitorInflation, false)\nproduct(bool, UseSerialGC, false)\nproduct(bool, UseG1GC, false)\nproduct(bool, UseParallelGC, false)\nproduct(bool, UseParallelOldGC, false)\nproduct(uintx, HeapMaximumCompactionInterval, 20)\nproduct(uintx, HeapFirstMaximumCompactionCount, 3)\nproduct(bool, UseMaximumCompactionOnSystemGC, true)\nproduct(uintx, ParallelOldDeadWoodLimiterMean, 50)\nproduct(uintx, ParallelOldDeadWoodLimiterStdDev, 80)\nproduct(uintx, ParallelGCThreads, 0)\nproduct(bool, UseDynamicNumberOfGCThreads, false)\ndiagnostic(bool, ForceDynamicNumberOfGCThreads, false)\nproduct(bool, TraceDynamicGCThreads, false)\ndevelop(bool, ParallelOldGCSplitALot, false)\ndevelop(uintx, ParallelOldGCSplitInterval, 3)\nproduct(uintx, ConcGCThreads, 0)\nproduct(uintx, YoungPLABSize, 4096)\nproduct(uintx, OldPLABSize, 1024)\nproduct(uintx, GCTaskTimeStampEntries, 200)\nproduct(bool, AlwaysTenure, false)\nproduct(bool, NeverTenure, false)\nproduct(bool, ScavengeBeforeFullGC, true)\ndevelop(bool, ScavengeWithObjectsInToSpace, false)\nproduct(bool, UseConcMarkSweepGC, false)\nproduct(bool, ExplicitGCInvokesConcurrent, false)\nproduct(bool, ExplicitGCInvokesConcurrentAndUnloadsClasses, false)\nproduct(bool, GCLockerInvokesConcurrent, false)\nproduct(uintx, GCLockerEdenExpansionPercent, 5)\ndiagnostic(uintx, GCLockerRetryAllocationCount, 2)\ndevelop(bool, UseCMSAdaptiveFreeLists, true)\ndevelop(bool, UseAsyncConcMarkSweepGC, true)\ndevelop(bool, RotateCMSCollectionTypes, false)\nproduct(bool, UseCMSBestFit, true)\nproduct(bool, UseCMSCollectionPassing, true)\nproduct(bool, UseParNewGC, false)\nproduct(bool, ParallelGCVerbose, false)\nproduct(uintx, ParallelGCBufferWastePct, 10)\ndiagnostic(bool, ParallelGCRetainPLAB, false)\nproduct(uintx, TargetPLABWastePct, 10)\nproduct(uintx, PLABWeight, 75)\nproduct(bool, ResizePLAB, true)\nproduct(bool, PrintPLAB, false)\nproduct(intx, ParGCArrayScanChunk, 50)\nproduct(bool, ParGCUseLocalOverflow, false)\nproduct(bool, ParGCTrimOverflow, true)\nnotproduct(bool, ParGCWorkQueueOverflowALot, false)\nnotproduct(uintx, ParGCWorkQueueOverflowInterval, 1000)\nproduct(uintx, ParGCDesiredObjsFromOverflowList, 20)\ndiagnostic(uintx, ParGCStridesPerThread, 2)\ndiagnostic(intx, ParGCCardsPerStrideChunk, 256)\nproduct(uintx, CMSParPromoteBlocksToClaim, 16)\nproduct(uintx, OldPLABWeight, 50)\nproduct(bool, ResizeOldPLAB, true)\nproduct(bool, PrintOldPLAB, false)\nproduct(uintx, CMSOldPLABMin, 16)\nproduct(uintx, CMSOldPLABMax, 1024)\nproduct(uintx, CMSOldPLABNumRefills, 4)\nproduct(bool, CMSOldPLABResizeQuicker, false)\nproduct(uintx, CMSOldPLABToleranceFactor, 4)\nproduct(uintx, CMSOldPLABReactivityFactor, 2)\nproduct(bool, AlwaysPreTouch, false)\nproduct_pd(uintx, CMSYoungGenPerWorker)\nproduct(bool, CMSIncrementalMode, false)\nproduct(uintx, CMSIncrementalDutyCycle, 10)\nproduct(bool, CMSIncrementalPacing, true)\nproduct(uintx, CMSIncrementalDutyCycleMin, 0)\nproduct(uintx, CMSIncrementalSafetyFactor, 10)\nproduct(uintx, CMSIncrementalOffset, 0)\nproduct(uintx, CMSExpAvgFactor, 50)\nproduct(uintx, CMS_FLSWeight, 75)\nproduct(uintx, CMS_FLSPadding, 1)\nproduct(uintx, FLSCoalescePolicy, 2)\nproduct(bool, FLSAlwaysCoalesceLarge, false)\nproduct(double, FLSLargestBlockCoalesceProximity, 0.99)\nproduct(double, CMSSmallCoalSurplusPercent, 1.05)\nproduct(double, CMSLargeCoalSurplusPercent, 0.95)\nproduct(double, CMSSmallSplitSurplusPercent, 1.10)\nproduct(double, CMSLargeSplitSurplusPercent, 1.00)\nproduct(bool, CMSExtrapolateSweep, false)\nproduct(uintx, CMS_SweepWeight, 75)\nproduct(uintx, CMS_SweepPadding, 1)\nproduct(uintx, CMS_SweepTimerThresholdMillis, 10)\ndevelop(bool, CMSTraceIncrementalMode, false)\ndevelop(bool, CMSTraceIncrementalPacing, false)\ndevelop(bool, CMSTraceThreadState, false)\nproduct(bool, CMSClassUnloadingEnabled, true)\nproduct(uintx, CMSClassUnloadingMaxInterval, 0)\nproduct(bool, CMSCompactWhenClearAllSoftRefs, true)\nproduct(bool, UseCMSCompactAtFullCollection, true)\nproduct(uintx, CMSFullGCsBeforeCompaction, 0)\ndevelop(intx, CMSDictionaryChoice, 0)\nproduct(uintx, CMSIndexedFreeListReplenish, 4)\nproduct(bool, CMSReplenishIntermediate, true)\nproduct(bool, CMSSplitIndexedFreeListBlocks, true)\nproduct(bool, CMSLoopWarn, false)\ndevelop(bool, CMSOverflowEarlyRestoration, false)\nnotproduct(bool, CMSMarkStackOverflowALot, false)\nnotproduct(uintx, CMSMarkStackOverflowInterval, 1000)\nproduct(uintx, CMSMaxAbortablePrecleanLoops, 0)\nproduct(intx, CMSMaxAbortablePrecleanTime, 5000)\nproduct(uintx, CMSAbortablePrecleanMinWorkPerIteration, 100)\nmanageable(intx, CMSAbortablePrecleanWaitMillis, 100)\nproduct(uintx, CMSRescanMultiple, 32)\nproduct(uintx, CMSConcMarkMultiple, 32)\nproduct(bool, CMSAbortSemantics, false)\nproduct(bool, CMSParallelInitialMarkEnabled, true)\nproduct(bool, CMSParallelRemarkEnabled, true)\nproduct(bool, CMSParallelSurvivorRemarkEnabled, true)\nproduct(bool, CMSPLABRecordAlways, true)\nproduct(bool, CMSEdenChunksRecordAlways, true)\nproduct(bool, CMSPrintEdenSurvivorChunks, false)\nproduct(bool, CMSConcurrentMTEnabled, true)\nproduct(bool, CMSPrecleaningEnabled, true)\nproduct(uintx, CMSPrecleanIter, 3)\nproduct(uintx, CMSPrecleanNumerator, 2)\nproduct(uintx, CMSPrecleanDenominator, 3)\nproduct(bool, CMSPrecleanRefLists1, true)\nproduct(bool, CMSPrecleanRefLists2, false)\nproduct(bool, CMSPrecleanSurvivors1, false)\nproduct(bool, CMSPrecleanSurvivors2, true)\nproduct(uintx, CMSPrecleanThreshold, 1000)\nproduct(bool, CMSCleanOnEnter, true)\nproduct(uintx, CMSRemarkVerifyVariant, 1)\nproduct(uintx, CMSScheduleRemarkEdenPenetration, 50)\nproduct(uintx, CMSScheduleRemarkSamplingRatio, 5)\nproduct(bool, CMSScavengeBeforeRemark, false)\ndevelop(bool, CMSTraceSweeper, false)\nproduct(uintx, CMSWorkQueueDrainThreshold, 10)\nmanageable(intx, CMSWaitDuration, 2000)\ndevelop(uintx, CMSCheckInterval, 1000)\nproduct(bool, CMSYield, true)\nproduct(bool, CMSDumpAtPromotionFailure, false)\nproduct(bool, CMSPrintChunksInDump, false)\nproduct(bool, CMSPrintObjectsInDump, false)\ndiagnostic(bool, FLSVerifyAllHeapReferences, false)\ndiagnostic(bool, FLSVerifyLists, false)\ndiagnostic(bool, FLSVerifyIndexTable, false)\ndevelop(bool, FLSVerifyDictionary, false)\ndevelop(bool, VerifyBlockOffsetArray, false)\ndiagnostic(bool, BlockOffsetArrayUseUnallocatedBlock, false)\ndevelop(bool, TraceCMSState, false)\nproduct(intx, RefDiscoveryPolicy, 0)\nproduct(bool, ParallelRefProcEnabled, false)\nproduct(bool, ParallelRefProcBalancingEnabled, true)\nproduct(uintx, CMSTriggerRatio, 80)\nproduct(uintx, CMSBootstrapOccupancy, 50)\nproduct(intx, CMSInitiatingOccupancyFraction, -1)\nproduct(uintx, InitiatingHeapOccupancyPercent, 45)\nmanageable(intx, CMSTriggerInterval, -1)\nproduct(bool, UseCMSInitiatingOccupancyOnly, false)\nproduct(uintx, CMSIsTooFullPercentage, 98)\ndevelop(bool, CMSTestInFreeList, false)\nnotproduct(bool, CMSVerifyReturnedBytes, false)\nnotproduct(bool, ScavengeALot, false)\ndevelop(bool, FullGCALot, false)\nnotproduct(bool, GCALotAtAllSafepoints, false)\nproduct(bool, PrintPromotionFailure, false)\nnotproduct(bool, PromotionFailureALot, false)\ndevelop(uintx, PromotionFailureALotCount, 1000)\ndevelop(uintx, PromotionFailureALotInterval, 5)\nexperimental(uintx, WorkStealingSleepMillis, 1)\nexperimental(uintx, WorkStealingYieldsBeforeSleep, 5000)\nexperimental(uintx, WorkStealingHardSpins, 4096)\nexperimental(uintx, WorkStealingSpinToYieldRatio, 10)\ndevelop(uintx, ObjArrayMarkingStride, 512)\ndevelop(bool, MetadataAllocationFailALot, false)\ndevelop(uintx, MetadataAllocationFailALotInterval, 1000)\ndevelop(bool, TraceMetadataChunkAllocation, false)\nproduct(bool, TraceMetadataHumongousAllocation, false)\ndevelop(bool, TraceMetavirtualspaceAllocation, false)\nnotproduct(bool, ExecuteInternalVMTests, false)\nnotproduct(bool, VerboseInternalVMTests, false)\nproduct_pd(bool, ResizeTLAB)\nproduct(bool, ZeroTLAB, false)\nproduct(bool, FastTLABRefill, true)\nproduct(bool, PrintTLAB, false)\nproduct(bool, TLABStats, true)\nproduct_pd(bool, NeverActAsServerClassMachine)\nproduct(bool, AlwaysActAsServerClassMachine, false)\nproduct_pd(uint64_t, MaxRAM)\nproduct(uintx, ErgoHeapSizeLimit, 0)\nexperimental(bool, UseCGroupMemoryLimitForHeap, false)\nproduct(uintx, MaxRAMFraction, 4)\nproduct(uintx, DefaultMaxRAMFraction, 4)\nproduct(uintx, MinRAMFraction, 2)\nproduct(uintx, InitialRAMFraction, 64)\ndevelop(uintx, MaxVirtMemFraction, 2)\nproduct(bool, UseAutoGCSelectPolicy, false)\nproduct(uintx, AutoGCSelectPauseMillis, 5000)\nproduct(bool, UseAdaptiveSizePolicy, true)\nproduct(bool, UsePSAdaptiveSurvivorSizePolicy, true)\nproduct(bool, UseAdaptiveGenerationSizePolicyAtMinorCollection, true)\nproduct(bool, UseAdaptiveGenerationSizePolicyAtMajorCollection, true)\nproduct(bool, UseAdaptiveSizePolicyWithSystemGC, false)\nproduct(bool, UseAdaptiveGCBoundary, false)\ndevelop(bool, TraceAdaptiveGCBoundary, false)\ndevelop(intx, PSAdaptiveSizePolicyResizeVirtualSpaceAlot, -1)\nproduct(uintx, AdaptiveSizeThroughPutPolicy, 0)\nproduct(uintx, AdaptiveSizePausePolicy, 0)\ndevelop(bool, PSAdjustTenuredGenForMinorPause, false)\ndevelop(bool, PSAdjustYoungGenForMajorPause, false)\nproduct(uintx, AdaptiveSizePolicyInitializingSteps, 20)\ndevelop(uintx, AdaptiveSizePolicyReadyThreshold, 5)\nproduct(uintx, AdaptiveSizePolicyOutputInterval, 0)\nproduct(bool, UseAdaptiveSizePolicyFootprintGoal, true)\nproduct(uintx, AdaptiveSizePolicyWeight, 10)\nproduct(uintx, AdaptiveTimeWeight,       25)\nproduct(uintx, PausePadding, 1)\nproduct(uintx, PromotedPadding, 3)\nproduct(uintx, SurvivorPadding, 3)\nproduct(uintx, ThresholdTolerance, 10)\nproduct(uintx, AdaptiveSizePolicyCollectionCostMargin, 50)\nproduct(uintx, YoungGenerationSizeIncrement, 20)\nproduct(uintx, YoungGenerationSizeSupplement, 80)\nproduct(uintx, YoungGenerationSizeSupplementDecay, 8)\nproduct(uintx, TenuredGenerationSizeIncrement, 20)\nproduct(uintx, TenuredGenerationSizeSupplement, 80)\nproduct(uintx, TenuredGenerationSizeSupplementDecay, 2)\nproduct(uintx, MaxGCPauseMillis, max_uintx)\nproduct(uintx, GCPauseIntervalMillis, 0)\nproduct(uintx, MaxGCMinorPauseMillis, max_uintx)\nproduct(uintx, GCTimeRatio, 99)\nproduct(uintx, AdaptiveSizeDecrementScaleFactor, 4)\nproduct(bool, UseAdaptiveSizeDecayMajorGCCost, true)\nproduct(uintx, AdaptiveSizeMajorGCDecayTimeScale, 10)\nproduct(uintx, MinSurvivorRatio, 3)\nproduct(uintx, InitialSurvivorRatio, 8)\nproduct(bool, UseGCOverheadLimit, true)\nproduct(uintx, GCTimeLimit, 98)\nproduct(uintx, GCHeapFreeLimit, 2)\ndevelop(uintx, AdaptiveSizePolicyGCTimeLimitThreshold, 5)\nproduct(bool, PrintAdaptiveSizePolicy, false)\nproduct(intx, PrefetchCopyIntervalInBytes, -1)\nproduct(intx, PrefetchScanIntervalInBytes, -1)\nproduct(intx, PrefetchFieldsAhead, -1)\ndiagnostic(bool, VerifySilently, false)\ndiagnostic(bool, VerifyDuringStartup, false)\ndiagnostic(bool, VerifyBeforeExit, trueInDebug)\ndiagnostic(bool, VerifyBeforeGC, false)\ndiagnostic(bool, VerifyAfterGC, false)\ndiagnostic(bool, VerifyDuringGC, false)\ndiagnostic(bool, GCParallelVerificationEnabled, true)\ndiagnostic(bool, DeferInitialCardMark, false)\ndiagnostic(bool, VerifyRememberedSets, false)\ndiagnostic(bool, VerifyObjectStartArray, true)\nproduct(bool, DisableExplicitGC, false)\nnotproduct(bool, CheckMemoryInitialization, false)\nproduct(bool, CollectGen0First, false)\ndiagnostic(bool, BindCMSThreadToCPU, false)\ndiagnostic(uintx, CPUForCMSThread, 0)\nproduct(bool, BindGCTaskThreadsToCPUs, false)\nproduct(bool, UseGCTaskAffinity, false)\nproduct(uintx, ProcessDistributionStride, 4)\nproduct(uintx, CMSCoordinatorYieldSleepCount, 10)\nproduct(uintx, CMSYieldSleepCount, 0)\nmanageable(bool, PrintGC, false)\nmanageable(bool, PrintGCDetails, false)\nmanageable(bool, PrintGCDateStamps, false)\nmanageable(bool, PrintGCTimeStamps, false)\nmanageable(bool, PrintGCID, false)\nproduct(bool, PrintGCTaskTimeStamps, false)\ndevelop(intx, ConcGCYieldTimeout, 0)\nnotproduct(bool, TraceMarkSweep, false)\nproduct(bool, PrintReferenceGC, false)\ndevelop(bool, TraceReferenceGC, false)\ndevelop(bool, TraceFinalizerRegistration, false)\nnotproduct(bool, TraceScavenge, false)\nproduct(bool, IgnoreEmptyClassPaths, false)\nproduct(bool, TraceClassPaths, false)\nproduct_rw(bool, TraceClassLoading, false)\nproduct(bool, TraceClassLoadingPreorder, false)\nproduct_rw(bool, TraceClassUnloading, false)\nproduct_rw(bool, TraceLoaderConstraints, false)\ndevelop(bool, TraceClassLoaderData, false)\nproduct(uintx, InitialBootClassLoaderMetaspaceSize)\nproduct(bool, TraceGen0Time, false)\nproduct(bool, TraceGen1Time, false)\nproduct(bool, PrintTenuringDistribution, false)\nproduct_rw(bool, PrintHeapAtGC, false)\nproduct_rw(bool, PrintHeapAtGCExtended, false)\nproduct(bool, PrintHeapAtSIGBREAK, true)\nmanageable(bool, PrintClassHistogramBeforeFullGC, false)\nmanageable(bool, PrintClassHistogramAfterFullGC, false)\nmanageable(bool, PrintClassHistogram, false)\ndevelop(bool, TraceWorkGang, false)\nproduct(bool, TraceParallelOldGCTasks, false)\ndevelop(bool, TraceBlockOffsetTable, false)\ndevelop(bool, TraceCardTableModRefBS, false)\ndevelop(bool, TraceGCTaskManager, false)\ndevelop(bool, TraceGCTaskQueue, false)\ndiagnostic(bool, TraceGCTaskThread, false)\nproduct(bool, PrintParallelOldGCPhaseTimes, false)\ndevelop(bool, TraceParallelOldGCMarkingPhase, false)\ndevelop(bool, TraceParallelOldGCSummaryPhase, false)\ndevelop(bool, TraceParallelOldGCCompactionPhase, false)\ndevelop(bool, TraceParallelOldGCDensePrefix, false)\ndevelop(bool, IgnoreLibthreadGPFault, false)\nproduct(bool, PrintJNIGCStalls, false)\nexperimental(double, ObjectCountCutOffPercent, 0.5)\nproduct(bool, UseGCLogFileRotation, false)\nproduct(uintx, NumberOfGCLogFiles, 0)\ndiagnostic(bool, TraceJVMTIObjectTagging, false)\ndiagnostic(bool, VerifyBeforeIteration, false)\ndevelop(bool, CIPrintCompilerName, false)\ndevelop(bool, CIPrintCompileQueue, false)\ndevelop(bool, CIPrintRequests, false)\nproduct(bool, CITime, false)\ndevelop(bool, CITimeEach, false)\ndevelop(bool, CICountOSR, false)\ndevelop(bool, CICompileNatives, true)\ndevelop_pd(bool, CICompileOSR)\ndevelop(bool, CIPrintMethodCodes, false)\ndevelop(bool, CIPrintTypeFlow, false)\ndevelop(bool, CITraceTypeFlow, false)\ndevelop(intx, OSROnlyBCI, -1)\nproduct(intx, CICompilerCount, CI_COMPILER_COUNT)\nproduct(intx, CompilationPolicyChoice, 0)\ndevelop(bool, UseStackBanging, true)\ndevelop(bool, UseStrictFP, true)\ndevelop(bool, GenerateSynchronizationCode, true)\ndevelop(bool, GenerateCompilerNullChecks, true)\ndevelop(bool, GenerateRangeChecks, true)\ndevelop_pd(bool, ImplicitNullChecks)\nproduct_pd(bool, TrapBasedNullChecks)\nproduct(bool, PrintSafepointStatistics, false)\nproduct(intx, PrintSafepointStatisticsCount, 300)\nproduct(intx, PrintSafepointStatisticsTimeout,  -1)\nproduct(bool, TraceSafepointCleanupTime, false)\nproduct(bool, Inline, true)\nproduct(bool, ClipInlining, true)\ndevelop(bool, UseCHA, true)\nproduct(bool, UseTypeProfile, true)\nnotproduct(bool, TimeCompiler, false)\ndiagnostic(bool, PrintInlining, false)\nproduct(bool, UsePopCountInstruction, false)\ndevelop(bool, EagerInitialization, false)\ndevelop(bool, TraceMethodReplacement, false)\ndevelop(bool, PrintMethodFlushing, false)\ndiagnostic(bool, PrintMethodFlushingStatistics, false)\ndevelop(bool, UseRelocIndex, false)\ndevelop(bool, StressCodeBuffers, false)\ndiagnostic(bool, DebugNonSafepoints, trueInDebug)\nproduct(bool, PrintVMOptions, false)\nproduct(bool, IgnoreUnrecognizedVMOptions, false)\nproduct(bool, PrintCommandLineFlags, false)\nproduct(bool, PrintFlagsInitial, false)\nproduct(bool, PrintFlagsFinal, false)\nnotproduct(bool, PrintFlagsWithComments, false)\ndiagnostic(bool, SerializeVMOutput, true)\ndiagnostic(bool, DisplayVMOutput, true)\ndiagnostic(bool, LogVMOutput, false)\ndiagnostic(ccstr, LogFile, NULL)\nproduct(ccstr, ErrorFile, NULL)\nproduct(bool, DisplayVMOutputToStderr, false)\nproduct(bool, DisplayVMOutputToStdout, false)\nproduct(bool, UseHeavyMonitors, false)\nproduct(bool, PrintStringTableStatistics, false)\ndiagnostic(bool, VerifyStringTableAtExit, false)\nnotproduct(bool, PrintSymbolTableSizeHistogram, false)\nnotproduct(bool, ExitVMOnVerifyError, false)\nnotproduct(ccstr, AbortVMOnException, NULL)\nnotproduct(ccstr, AbortVMOnExceptionMessage, NULL)\ndevelop(bool, DebugVtables, false)\ndevelop(bool, PrintVtables, false)\nnotproduct(bool, PrintVtableStats, false)\ndevelop(bool, TraceCreateZombies, false)\nnotproduct(bool, IgnoreLockingAssertions, false)\nproduct(bool, RangeCheckElimination, true)\ndevelop_pd(bool, UncommonNullCast)\ndevelop(bool, TypeProfileCasts,  true)\ndevelop(bool, DelayCompilationDuringStartup, true)\ndevelop(bool, CompileTheWorld, false)\ndevelop(bool, CompileTheWorldPreloadClasses, true)\nnotproduct(intx, CompileTheWorldSafepointInterval, 100)\ndevelop(bool, FillDelaySlots, true)\ndevelop(bool, TimeLivenessAnalysis, false)\ndevelop(bool, TraceLivenessGen, false)\nnotproduct(bool, TraceLivenessQuery, false)\nnotproduct(bool, CollectIndexSetStatistics, false)\ndevelop(bool, UseLoopSafepoints, true)\nproduct(bool, AggressiveOpts, false)\nproduct_pd(uintx, TypeProfileLevel)\nproduct(intx, TypeProfileArgsLimit,     2)\nproduct(intx, TypeProfileParmsLimit,    2)\ndevelop(bool, CountCompiledCalls, false)\nnotproduct(bool, CountRuntimeCalls, false)\ndevelop(bool, CountJNICalls, false)\nnotproduct(bool, CountJVMCalls, false)\nnotproduct(bool, CountRemovableExceptions, false)\nnotproduct(bool, ICMissHistogram, false)\nnotproduct(bool, PrintClassStatistics, false)\nnotproduct(bool, PrintMethodStatistics, false)\ndevelop(bool, ClearInterpreterLocals, false)\nproduct_pd(bool, RewriteBytecodes)\nproduct_pd(bool, RewriteFrequentPairs)\ndiagnostic(bool, PrintInterpreter, false)\nproduct(bool, UseInterpreter, true)\ndevelop(bool, UseFastSignatureHandlers, true)\nproduct(bool, UseLoopCounter, true)\nproduct(bool, UseFastEmptyMethods, true)\nproduct(bool, UseFastAccessorMethods, true)\nproduct_pd(bool, UseOnStackReplacement)\nnotproduct(bool, TraceOnStackReplacement, false)\nproduct_pd(bool, PreferInterpreterNativeStubs)\ndevelop(bool, CountBytecodes, false)\ndevelop(bool, PrintBytecodeHistogram, false)\ndevelop(bool, PrintBytecodePairHistogram, false)\ndiagnostic(bool, PrintSignatureHandlers, false)\ndevelop(bool, VerifyOops, false)\ndevelop(bool, CheckUnhandledOops, false)\ndevelop(bool, VerifyJNIFields, trueInDebug)\nnotproduct(bool, VerifyJNIEnvThread, false)\ndevelop(bool, VerifyFPU, false)\ndevelop(bool, VerifyThread, false)\ndevelop(bool, VerifyActivationFrameSize, false)\ndevelop(bool, TraceFrequencyInlining, false)\ndevelop_pd(bool, InlineIntrinsics)\nproduct_pd(bool, ProfileInterpreter)\ndevelop(bool, TraceProfileInterpreter, false)\ndevelop_pd(bool, ProfileTraps)\nproduct(intx, ProfileMaturityPercentage, 20)\ndevelop(bool, PrintMethodData, false)\ndevelop(bool, VerifyDataPointer, trueInDebug)\ndevelop(bool, VerifyCompiledCode, false)\nnotproduct(bool, CrashGCForDumpingJavaThread, false)\nproduct(bool, UseCompiler, true)\ndevelop(bool, TraceCompilationPolicy, false)\ndevelop(bool, TimeCompilationPolicy, false)\nproduct(bool, UseCounterDecay, true)\ndevelop(intx, CounterHalfLifeTime,    30)\ndevelop(intx, CounterDecayMinIntervalLength,   500)\nproduct(bool, AlwaysCompileLoopMethods, false)\nproduct(bool, DontCompileHugeMethods, true)\nproduct(bool, EstimateArgEscape, true)\nproduct(intx, BCEATraceLevel, 0)\nproduct(intx, MaxBCEAEstimateLevel, 5)\nproduct(intx, MaxBCEAEstimateSize, 150)\nproduct(intx,  AllocatePrefetchStyle, 1)\nproduct(intx,  AllocatePrefetchDistance, -1)\nproduct(intx,  AllocatePrefetchLines, 3)\nproduct(intx,  AllocateInstancePrefetchLines, 1)\nproduct(intx,  AllocatePrefetchStepSize, 16)\nproduct(intx,  AllocatePrefetchInstr, 0)\ndevelop(bool, TraceDeoptimization, false)\ndevelop(bool, DebugDeoptimization, false)\nproduct(intx, SelfDestructTimer, 0)\nproduct(intx, MaxJavaStackTraceDepth, 1024)\nNOT_EMBEDDED(diagnostic(intx, GuaranteedSafepointInterval, 1000)\nEMBEDDED_ONLY(product(intx, GuaranteedSafepointInterval, 0)\nproduct(intx, SafepointTimeoutDelay, 10000)\nproduct(intx, NmethodSweepFraction, 16)\nproduct(intx, NmethodSweepCheckInterval, 5)\nproduct(intx, NmethodSweepActivity, 10)\nnotproduct(bool, LogSweeper, false)\nnotproduct(intx, SweeperLogEntries, 1024)\nnotproduct(intx, MemProfilingInterval, 500)\ndevelop(intx, MallocCatchPtr, -1)\nnotproduct(intx, AssertRepeat, 1)\nnotproduct(uintx, HandleAllocationLimit, 1024)\ndevelop(uintx, TotalHandleAllocationLimit, 1024)\ndevelop(intx, StackPrintLimit, 100)\nnotproduct(intx, MaxElementPrintSize, 256)\nnotproduct(intx, MaxSubklassPrintSize, 4)\nproduct(intx, MaxInlineLevel, 9)\nproduct(intx, MaxRecursiveInlineLevel, 1)\ndevelop(intx, MaxForceInlineLevel, 100)\nproduct_pd(intx, InlineSmallCode)\nproduct(intx, MaxInlineSize, 35)\nproduct_pd(intx, FreqInlineSize)\nproduct(intx, MaxTrivialSize, 6)\nproduct(intx, MinInliningThreshold, 250)\ndevelop(intx, MethodHistogramCutoff, 100)\ndevelop(intx, ProfilerNumberOfInterpretedMethods, 25)\ndevelop(intx, ProfilerNumberOfCompiledMethods, 25)\ndevelop(intx, ProfilerNumberOfStubMethods, 25)\ndevelop(intx, ProfilerNumberOfRuntimeStubNodes, 25)\nproduct(intx, ProfileIntervalsTicks, 100)\nnotproduct(intx, ScavengeALotInterval,     1)\nnotproduct(intx, FullGCALotInterval,     1)\nnotproduct(intx, FullGCALotStart,     0)\ndevelop(intx, DontYieldALotInterval,    10)\ndevelop(intx, MinSleepInterval,     1)\ndevelop(intx, ProfilerPCTickThreshold,    15)\nnotproduct(intx, DeoptimizeALotInterval,     5)\nnotproduct(intx, ZombieALotInterval,     5)\ndiagnostic(intx, MallocVerifyInterval,     0)\ndiagnostic(intx, MallocVerifyStart,     0)\ndiagnostic(uintx, MallocMaxTestWords,     0)\nproduct(intx, TypeProfileWidth,     2)\ndevelop(intx, BciProfileWidth,      2)\nproduct(intx, PerMethodRecompilationCutoff, 400)\nproduct(intx, PerBytecodeRecompilationCutoff, 200)\nproduct(intx, PerMethodTrapLimit,  100)\nexperimental(intx, PerMethodSpecTrapLimit,  5000)\nproduct(intx, PerBytecodeTrapLimit,  4)\nexperimental(intx, SpecTrapLimitExtraEntries,  3)\ndevelop(intx, InlineFrequencyRatio,    20)\ndevelop_pd(intx, InlineFrequencyCount)\ndevelop(intx, InlineThrowCount,    50)\ndevelop(intx, InlineThrowMaxSize,   200)\ndevelop(intx, ProfilerNodeSize,  1024)\nproduct_pd(intx, PreInflateSpin)\nproduct(uintx, InitialHeapSize, 0)\nproduct(uintx, MaxNewSize, max_uintx)\nproduct(uintx, PretenureSizeThreshold, 0)\nproduct(uintx, TLABSize, 0)\nproduct(uintx, TLABAllocationWeight, 35)\nproduct(uintx, TLABWasteTargetPercent, 1)\nproduct(uintx, TLABRefillWasteFraction,    64)\nproduct(uintx, TLABWasteIncrement,    4)\nproduct(uintx, SurvivorRatio, 8)\nproduct(uintx, NewRatio, 2)\nproduct_pd(uintx, NewSizeThreadIncrease)\nproduct_pd(uintx, MetaspaceSize)\nproduct(uintx, MaxMetaspaceSize, max_uintx)\nmanageable(uintx, MinHeapFreeRatio, 40)\nmanageable(uintx, MaxHeapFreeRatio, 70)\nproduct(intx, SoftRefLRUPolicyMSPerMB, 1000)\nproduct(uintx, MinMetaspaceFreeRatio,    40)\nproduct(uintx, MaxMetaspaceFreeRatio,    70)\nproduct(uintx, QueuedAllocationWarningCount, 0)\ndiagnostic(uintx, VerifyGCStartAt,   0)\ndiagnostic(intx, VerifyGCLevel,     0)\nproduct(uintx, MaxTenuringThreshold,    15)\nproduct(uintx, InitialTenuringThreshold,    7)\nproduct(uintx, TargetSurvivorRatio,    50)\nproduct(uintx, MarkSweepDeadRatio,     5)\nproduct(uintx, MarkSweepAlwaysCompactCount,     4)\nproduct(intx, PrintCMSStatistics, 0)\nproduct(bool, PrintCMSInitiationStatistics, false)\nproduct(intx, PrintFLSStatistics, 0)\nproduct(intx, PrintFLSCensus, 0)\ndevelop(uintx, GCExpandToAllocateDelayMillis, 0)\ndevelop(uintx, GCWorkerDelayMillis, 0)\nproduct(intx, DeferThrSuspendLoopCount,     4000)\nproduct(intx, DeferPollingPageLoopCount,     -1)\nproduct(bool, PSChunkLargeArrays, true)\nproduct(uintx, GCDrainStackTargetSize, 64)\nproduct_pd(intx, StackYellowPages)\nproduct_pd(intx, StackRedPages)\nproduct_pd(intx, StackShadowPages)\nproduct_pd(intx, ThreadStackSize)\nproduct_pd(intx, VMThreadStackSize)\nproduct_pd(intx, CompilerThreadStackSize)\ndevelop_pd(uintx, JVMInvokeMethodSlack)\ndevelop(uintx, CodeCacheSegmentSize, 64 PPC64_ONLY(+64))\ndevelop_pd(intx, CodeEntryAlignment)\nproduct_pd(intx, OptoLoopAlignment)\nproduct_pd(uintx, InitialCodeCacheSize)\ndevelop_pd(uintx, CodeCacheMinimumUseSpace)\nproduct_pd(uintx, ReservedCodeCacheSize)\nproduct_pd(uintx, CodeCacheExpansionSize)\ndevelop_pd(uintx, CodeCacheMinBlockLength)\nnotproduct(bool, ExitOnFullCodeCache, false)\nproduct(bool, UseCodeCacheFlushing, true)\ndevelop(intx, BinarySwitchThreshold, 5)\ndevelop(intx, StopInterpreterAt, 0)\ndevelop(intx, TraceBytecodesAt, 0)\ndevelop(intx, CIStart, 0)\ndevelop(intx, CIStop, max_jint)\ndevelop(intx, CIStartOSR, 0)\ndevelop(intx, CIStopOSR, max_jint)\ndevelop(intx, CIBreakAtOSR, -1)\ndevelop(intx, CIBreakAt, -1)\nproduct(ccstr, CompileCommandFile, NULL)\ndevelop(bool, ReplayCompiles, false)\nproduct(ccstr, ReplayDataFile, NULL)\nproduct(ccstr, InlineDataFile, NULL)\ndevelop(intx, ReplaySuppressInitializers, 2)\ndevelop(bool, ReplayIgnoreInitErrors, false)\nproduct(bool, DumpReplayDataOnError, true)\nproduct(bool, CICompilerCountPerCPU, false)\ndevelop(intx, CIFireOOMAt,    -1)\nnotproduct(intx, CICrashAt, -1)\nnotproduct(bool, CIObjectFactoryVerify, false)\nproduct(intx, ThreadPriorityPolicy, 0)\nproduct(bool, ThreadPriorityVerbose, false)\nproduct(intx, DefaultThreadPriority, -1)\nproduct(intx, CompilerThreadPriority, -1)\nproduct(intx, VMThreadPriority, -1)\nproduct(bool, CompilerThreadHintNoPreempt, true)\nproduct(bool, VMThreadHintNoPreempt, false)\nproduct(intx, JavaPriority1_To_OSPriority, -1)\nproduct(intx, JavaPriority2_To_OSPriority, -1)\nproduct(intx, JavaPriority3_To_OSPriority, -1)\nproduct(intx, JavaPriority4_To_OSPriority, -1)\nproduct(intx, JavaPriority5_To_OSPriority, -1)\nproduct(intx, JavaPriority6_To_OSPriority, -1)\nproduct(intx, JavaPriority7_To_OSPriority, -1)\nproduct(intx, JavaPriority8_To_OSPriority, -1)\nproduct(intx, JavaPriority9_To_OSPriority, -1)\nproduct(intx, JavaPriority10_To_OSPriority,-1)\nexperimental(bool, UseCriticalJavaThreadPriority, false)\nexperimental(bool, UseCriticalCompilerThreadPriority, false)\nexperimental(bool, UseCriticalCMSThreadPriority, false)\nnotproduct(intx, CompileTheWorldStartAt,     1)\nnotproduct(intx, CompileTheWorldStopAt, max_jint)\ndevelop(intx, NewCodeParameter,      0)\ndevelop(intx, MinOopMapAllocation,     8)\ndevelop(intx, LongCompileThreshold,     50)\nproduct(intx, StarvationMonitorInterval,    200)\nproduct_pd(intx, CompileThreshold)\nproduct_pd(intx, BackEdgeThreshold)\nproduct(intx, Tier0InvokeNotifyFreqLog, 7)\nproduct(intx, Tier2InvokeNotifyFreqLog, 11)\nproduct(intx, Tier3InvokeNotifyFreqLog, 10)\nproduct(intx, Tier23InlineeNotifyFreqLog, 20)\nproduct(intx, Tier0BackedgeNotifyFreqLog, 10)\nproduct(intx, Tier2BackedgeNotifyFreqLog, 14)\nproduct(intx, Tier3BackedgeNotifyFreqLog, 13)\nproduct(intx, Tier2CompileThreshold, 0)\nproduct(intx, Tier2BackEdgeThreshold, 0)\nproduct(intx, Tier3InvocationThreshold, 200)\nproduct(intx, Tier3MinInvocationThreshold, 100)\nproduct(intx, Tier3CompileThreshold, 2000)\nproduct(intx, Tier3BackEdgeThreshold,  60000)\nproduct(intx, Tier4InvocationThreshold, 5000)\nproduct(intx, Tier4MinInvocationThreshold, 600)\nproduct(intx, Tier4CompileThreshold, 15000)\nproduct(intx, Tier4BackEdgeThreshold, 40000)\nproduct(intx, Tier3DelayOn, 5)\nproduct(intx, Tier3DelayOff, 2)\nproduct(intx, Tier3LoadFeedback, 5)\nproduct(intx, Tier4LoadFeedback, 3)\nproduct(intx, TieredCompileTaskTimeout, 50)\nproduct(intx, TieredStopAtLevel, 4)\nproduct(intx, Tier0ProfilingStartPercentage, 200)\nproduct(uintx, IncreaseFirstTierCompileThresholdAt, 50)\nproduct(intx, TieredRateUpdateMinTime, 1)\nproduct(intx, TieredRateUpdateMaxTime, 25)\nproduct_pd(bool, TieredCompilation)\nproduct(bool, PrintTieredEvents, false)\nproduct_pd(intx, OnStackReplacePercentage)\nproduct(intx, InterpreterProfilePercentage, 33)\ndevelop(intx, MaxRecompilationSearchLength,    10)\ndevelop(intx, MaxInterpretedSearchLength,     3)\ndevelop(intx, DesiredMethodLimit,  8000)\ndevelop(intx, HugeMethodLimit,  8000)\ndevelop(bool, UseNewReflection, true)\ndevelop(bool, VerifyReflectionBytecodes, false)\nproduct(bool, ReflectionWrapResolutionErrors, true)\ndevelop(intx, FastSuperclassLimit, 8)\nproduct(uintx, MaxDirectMemorySize, 0)\ndiagnostic(bool, UseNewCode, false)\ndiagnostic(bool, UseNewCode2, false)\ndiagnostic(bool, UseNewCode3, false)\nproduct(bool, UsePerfData, falseInEmbedded)\nproduct(bool, PerfDataSaveToFile, false)\nproduct(ccstr, PerfDataSaveFile, NULL)\nproduct(intx, PerfDataSamplingInterval, 50)\ndevelop(bool, PerfTraceDataCreation, false)\ndevelop(bool, PerfTraceMemOps, false)\nproduct(bool, PerfDisableSharedMem, false)\nproduct(intx, PerfMaxStringConstLength, 1024)\nproduct(bool, PerfAllowAtExitRegistration, false)\nproduct(bool, PerfBypassFileSystemCheck, false)\nproduct(intx, UnguardOnExecutionViolation, 0)\nproduct(bool, ManagementServer, false)\nproduct(bool, DisableAttachMechanism, false)\nproduct(bool, StartAttachListener, false)\nmanageable(bool, PrintConcurrentLocks, false)\nproduct(bool, TransmitErrorReport, false)\nproduct(ccstr, ErrorReportServer, NULL)\nproduct(bool, UseSharedSpaces, true)\nproduct(bool, VerifySharedSpaces, false)\nproduct(bool, RequireSharedSpaces, false)\nproduct(bool, DumpSharedSpaces, false)\nproduct(bool, PrintSharedSpaces, false)\nproduct(bool, PrintSharedArchiveAndExit, false)\nproduct(bool, PrintSharedDictionary, false)\ndiagnostic(bool, EnableInvokeDynamic, true)\ndiagnostic(bool, IgnoreUnverifiableClassesDuringDump, false)\ndiagnostic(bool, PrintMethodHandleStubs, false)\ndevelop(bool, TraceMethodHandles, false)\ndiagnostic(bool, VerifyMethodHandles, trueInDebug)\ndiagnostic(bool, ShowHiddenFrames, false)\nexperimental(bool, TrustFinalNonStaticFields, false)\ndiagnostic(bool, FoldStableValues, true)\ndevelop(bool, TraceInvokeDynamic, false)\ndiagnostic(bool, PauseAtStartup,      false)\ndiagnostic(ccstr, PauseAtStartupFile, NULL)\ndiagnostic(bool, PauseAtExit, false)\nproduct(bool, ExtendedDTraceProbes,    false)\nproduct(bool, DTraceMethodProbes, false)\nproduct(bool, DTraceAllocProbes, false)\nproduct(bool, DTraceMonitorProbes, false)\nproduct(bool, RelaxAccessControlCheck, false)\ndiagnostic(bool, PrintDTraceDOF, false)\nproduct(uintx, StringTableSize, defaultStringTableSize)\nexperimental(uintx, SymbolTableSize, defaultSymbolTableSize)\nproduct(bool, UseStringDeduplication, false)\nproduct(bool, PrintStringDeduplicationStatistics, false)\nproduct(uintx, StringDeduplicationAgeThreshold, 3)\ndiagnostic(bool, StringDeduplicationResizeALot, false)\ndiagnostic(bool, StringDeduplicationRehashALot, false)\ndevelop(bool, TraceDefaultMethods, false)\ndevelop(bool, VerifyGenericSignatures, false)\nproduct(bool, UseVMInterruptibleIO, false)\ndiagnostic(bool, WhiteBoxAPI, false)\nproduct(bool, PrintGCCause, true)\nexperimental(intx, SurvivorAlignmentInBytes, 0)\nproduct(bool , AllowNonVirtualCalls, false)\nproduct(ccstr, DumpLoadedClassList, NULL)\nproduct(ccstr, SharedClassListFile, NULL)\ndiagnostic(ccstr, SharedArchiveFile, NULL)\nproduct(ccstr, ExtraSharedClassListFile, NULL)\nexperimental(uintx, ArrayAllocatorMallocLimit)\nproduct(bool, EnableTracing, false)\nproduct(bool, UseLockedTracing, false)\nproduct_pd(bool, PreserveFramePointer)\n</code></pre>','列出java命令所有-X和-XX选项','','inherit','closed','closed','','86-revision-v1','','','2017-08-09 01:16:40','2017-08-08 17:16:40','java -X可以列出-X选项，但-XX选项好像并没有直接的方法可以列出。从源码里则可以得到。用hg下载源码后grep一下便可得到所有的-X和-XX选项了。\r\n## 一部分是单独列出来的\r\n```bash\r\ncat hotspot/src/share/vm/runtime/arguments.cpp |\r\n    grep -o &#039;option, &quot;-X[^&quot;]*&quot;&#039; |\r\n    sed -r &#039;s/.*&quot;(.*)&quot;.*/\\1/&#039;\r\n```\r\n```nohighlight\r\n-Xbootclasspath:\r\n-Xbootclasspath/a:\r\n-Xbootclasspath/p:\r\n-Xrun\r\n-Xnoclassgc\r\n-Xincgc\r\n-Xnoincgc\r\n-Xconcgc\r\n-Xnoconcgc\r\n-Xbatch\r\n-Xmn\r\n-Xms\r\n-Xmx\r\n-XX:MaxHeapSize=\r\n-Xmaxf\r\n-Xminf\r\n-Xss\r\n-Xoss\r\n-XX:CodeCacheExpansionSize=\r\n-Xmaxjitcodesize\r\n-XX:ReservedCodeCacheSize=\r\n-XX:IncreaseFirstTierCompileThresholdAt=\r\n-Xsqnopause\r\n-Xrs\r\n-Xusealtsigs\r\n-Xoptimize\r\n-Xprof\r\n-Xconcurrentio\r\n-Xinternalversion\r\n-Xprintflags\r\n-Xint\r\n-Xmixed\r\n-Xcomp\r\n-Xshare:dump\r\n-Xshare:on\r\n-Xshare:auto\r\n-Xshare:off\r\n-Xverify\r\n-Xdebug\r\n-Xnoagent\r\n-Xboundthreads\r\n-Xloggc:\r\n-Xcheck\r\n-XX:+AggressiveHeap\r\n-XX:+NeverTenure\r\n-XX:+AlwaysTenure\r\n-XX:+CMSPermGenSweepingEnabled\r\n-XX:-CMSPermGenSweepingEnabled\r\n-XX:+UseGCTimeLimit\r\n-XX:-UseGCTimeLimit\r\n-XX:MaxTLERatio=\r\n-XX:+ResizeTLE\r\n-XX:-ResizeTLE\r\n-XX:+PrintTLE\r\n-XX:-PrintTLE\r\n-XX:TLEFragmentationRatio=\r\n-XX:TLESize=\r\n-XX:TLEThreadRatio=\r\n-XX:+UseTLE\r\n-XX:-UseTLE\r\n-XX:+DisplayVMOutputToStderr\r\n-XX:+DisplayVMOutputToStdout\r\n-XX:+ExtendedDTraceProbes\r\n-XX:+FullGCALot\r\n-XX:CMSParPromoteBlocksToClaim=\r\n-XX:ParCMSPromoteBlocksToClaim=\r\n-XX:ParallelGCOldGenAllocBufferSize=\r\n-XX:ParallelGCToSpaceAllocBufferSize=\r\n-XX:CMSMarkStackSize=\r\n-XX:G1MarkStackSize=\r\n-XX:CMSMarkStackSizeMax=\r\n-XX:ParallelMarkingThreads=\r\n-XX:ParallelCMSThreads=\r\n-XX:MaxDirectMemorySize=\r\n-XX:+UseVMInterruptibleIO\r\n-XX:+ManagementServer\r\n-XX:\r\n-XX:\r\n-XX:Flags=\r\n-XX:+PrintVMOptions\r\n-XX:-PrintVMOptions\r\n-XX:+IgnoreUnrecognizedVMOptions\r\n-XX:-IgnoreUnrecognizedVMOptions\r\n-XX:+PrintFlagsInitial\r\n-XX:NativeMemoryTracking\r\n-XX:+PrintFlagsWithComments\r\n-XX:\r\n```\r\n## 另一部分是宏定义的-XX:选项列表\r\n太多了，有将近一千个\r\n```bash\r\ncat hotspot/src/share/vm/runtime/globals.hpp |\r\n    grep &#039;\\\\&#039;  |\r\n    grep -v &#039;&quot;&#039; |\r\n    grep -v &#039;\\*&#039; |\r\n    grep -v &#039;#&#039; |\r\n    sed &#039;/^\\s*\\\\$/ d&#039; |\r\n    sed &#039;s/^ *//&#039; |\r\n    sed &#039;s/, *\\\\$//&#039;\r\n```\r\n```nohighlight\r\nlp64_product(bool, UseCompressedOops, false)\r\nlp64_product(bool, UseCompressedClassPointers, false)\r\nnotproduct(bool, CheckCompressedOops, true)\r\nproduct_pd(uintx, HeapBaseMinAddress)\r\ndiagnostic(bool, PrintCompressedOopsMode, false)\r\nlp64_product(intx, ObjectAlignmentInBytes, 8)\r\nproduct(bool, AssumeMP, false)\r\nproduct_pd(bool, UseMembar)\r\ndevelop(bool, CleanChunkPoolAsync, falseInEmbedded)\r\nexperimental(bool, UseMemSetInBOT, true)\r\ndiagnostic(bool, UnlockDiagnosticVMOptions, trueInDebug)\r\nexperimental(bool, UnlockExperimentalVMOptions, false)\r\nproduct(bool, JavaMonitorsInStackTrace, true)\r\nproduct_pd(bool, UseLargePages)\r\nproduct_pd(bool, UseLargePagesIndividualAllocation)\r\ndevelop(bool, LargePagesIndividualAllocationInjectError, false)\r\nproduct(bool, UseLargePagesInMetaspace, false)\r\ndevelop(bool, TracePageSizes, false)\r\nproduct(bool, UseNUMA, false)\r\nproduct(bool, UseNUMAInterleaving, false)\r\nproduct(bool, ForceNUMA, false)\r\nproduct(uintx, NUMAChunkResizeWeight, 20)\r\nproduct(bool, UseAdaptiveNUMAChunkSizing, true)\r\nproduct(bool, NUMAStats, false)\r\nproduct(uintx, NUMAPageScanRate, 256)\r\nproduct_pd(bool, NeedsDeoptSuspend)\r\nproduct(intx, UseSSE, 99)\r\nproduct(bool, UseAES, false)\r\nproduct(bool, UseSHA, false)\r\nproduct(uintx, LargePageSizeInBytes, 0)\r\nproduct(bool, ForceTimeHighResolution, false)\r\ndevelop(bool, TraceItables, false)\r\ndevelop(bool, TracePcPatching, false)\r\ndevelop(bool, TraceJumps, false)\r\ndevelop(bool, TraceRelocator, false)\r\ndevelop(bool, TraceLongCompiles, false)\r\ndevelop(bool, SafepointALot, false)\r\nproduct_pd(bool, BackgroundCompilation)\r\nproduct(bool, PrintVMQWaitTime, false)\r\ndevelop(bool, NoYieldsInMicrolock, false)\r\ndevelop(bool, TraceOopMapGeneration, false)\r\nproduct(bool, MethodFlushing, true)\r\ndevelop(bool, VerifyStack, false)\r\ndiagnostic(bool, ForceUnreachable, false)\r\nnotproduct(bool, StressDerivedPointers, false)\r\ndevelop(bool, TraceDerivedPointers, false)\r\nnotproduct(bool, TraceCodeBlobStacks, false)\r\nproduct(bool, PrintJNIResolving, false)\r\nnotproduct(bool, PrintRewrites, false)\r\nproduct(bool, UseInlineCaches, true)\r\ndevelop(bool, InlineArrayCopy, true)\r\ndevelop(bool, InlineObjectHash, true)\r\ndevelop(bool, InlineNatives, true)\r\ndevelop(bool, InlineMathNatives, true)\r\ndevelop(bool, InlineClassNatives, true)\r\ndevelop(bool, InlineThreadNatives, true)\r\ndevelop(bool, InlineUnsafeOps, true)\r\nproduct(bool, CriticalJNINatives, true)\r\nnotproduct(bool, StressCriticalJNINatives, false)\r\nproduct(bool, UseSSE42Intrinsics, false)\r\nproduct(bool, UseAESIntrinsics, false)\r\nproduct(bool, UseSHA1Intrinsics, false)\r\nproduct(bool, UseSHA256Intrinsics, false)\r\nproduct(bool, UseSHA512Intrinsics, false)\r\nproduct(bool, UseCRC32Intrinsics, false)\r\ndevelop(bool, TraceCallFixup, false)\r\ndevelop(bool, DeoptimizeALot, false)\r\nproduct(bool, DeoptimizeRandom, false)\r\nnotproduct(bool, ZombieALot, false)\r\nproduct(bool, UnlinkSymbolsALot, false)\r\nnotproduct(bool, WalkStackALot, false)\r\nproduct(bool, Debugging, false)\r\nnotproduct(bool, StrictSafepointChecks, trueInDebug)\r\nnotproduct(bool, VerifyLastFrame, false)\r\ndevelop(bool, TraceHandleAllocation, false)\r\nproduct(bool, UseCompilerSafepoints, true)\r\nproduct(bool, FailOverToOldVerifier, true)\r\ndevelop(bool, ShowSafepointMsgs, false)\r\nproduct(bool, SafepointTimeout, false)\r\ndevelop(bool, DieOnSafepointTimeout, false)\r\nproduct(intx, SuspendRetryCount, 50)\r\nproduct(intx, SuspendRetryDelay, 5)\r\nproduct(bool, AssertOnSuspendWaitFailure, false)\r\nproduct(bool, TraceSuspendWaitFailures, false)\r\nproduct(bool, MaxFDLimit, true)\r\ndiagnostic(bool, LogEvents, true)\r\ndiagnostic(uintx, LogEventsBufferEntries, 10)\r\nproduct(bool, BytecodeVerificationRemote, true)\r\nproduct(bool, BytecodeVerificationLocal, false)\r\ndevelop(bool, ForceFloatExceptions, trueInDebug)\r\ndevelop(bool, VerifyStackAtCalls, false)\r\ndevelop(bool, TraceJavaAssertions, false)\r\nnotproduct(bool, CheckAssertionStatusDirectives, false)\r\nnotproduct(bool, PrintMallocFree, false)\r\nproduct(bool, PrintOopAddress, false)\r\nnotproduct(bool, VerifyCodeCacheOften, false)\r\ndevelop(bool, ZapDeadCompiledLocals, false)\r\nnotproduct(bool, ZapDeadLocalsOld, false)\r\nnotproduct(bool, CheckOopishValues, false)\r\ndevelop(bool, UseMallocOnly, false)\r\ndevelop(bool, PrintMalloc, false)\r\ndevelop(bool, PrintMallocStatistics, false)\r\ndevelop(bool, ZapResourceArea, trueInDebug)\r\nnotproduct(bool, ZapVMHandleArea, trueInDebug)\r\ndevelop(bool, ZapJNIHandleArea, trueInDebug)\r\nnotproduct(bool, ZapStackSegments, trueInDebug)\r\ndevelop(bool, ZapUnusedHeapArea, trueInDebug)\r\ndevelop(bool, TraceZapUnusedHeapArea, false)\r\ndevelop(bool, CheckZapUnusedHeapArea, false)\r\ndevelop(bool, ZapFillerObjects, trueInDebug)\r\ndevelop(bool, PrintVMMessages, true)\r\nproduct(bool, PrintGCApplicationConcurrentTime, false)\r\nproduct(bool, PrintGCApplicationStoppedTime, false)\r\ndiagnostic(bool, VerboseVerification, false)\r\nnotproduct(uintx, ErrorHandlerTest, 0)\r\ndevelop(bool, Verbose, false)\r\ndevelop(bool, PrintMiscellaneous, false)\r\ndevelop(bool, WizardMode, false)\r\nproduct(bool, ShowMessageBoxOnError, false)\r\nproduct(bool, CreateMinidumpOnCrash, false)\r\nproduct_pd(bool, UseOSErrorReporting)\r\nproduct(bool, SuppressFatalErrorMessage, false)\r\nmanageable(bool, HeapDumpBeforeFullGC, false)\r\nmanageable(bool, HeapDumpAfterFullGC, false)\r\nmanageable(bool, HeapDumpOnOutOfMemoryError, false)\r\nmanageable(ccstr, HeapDumpPath, NULL)\r\ndevelop(bool, BreakAtWarning, false)\r\ndevelop(bool, TraceVMOperation, false)\r\ndevelop(bool, UseFakeTimers, false)\r\ndiagnostic(bool, PrintNMTStatistics, false)\r\ndiagnostic(bool, LogCompilation, false)\r\nproduct(bool, PrintCompilation, false)\r\ndiagnostic(bool, TraceNMethodInstalls, false)\r\ndiagnostic(intx, ScavengeRootsInCode, 2)\r\nproduct(bool, AlwaysRestoreFPU, false)\r\ndiagnostic(bool, PrintCompilation2, false)\r\ndiagnostic(bool, PrintAdapterHandlers, false)\r\ndiagnostic(bool, VerifyAdapterCalls, trueInDebug)\r\ndevelop(bool, VerifyAdapterSharing, false)\r\ndiagnostic(bool, PrintAssembly, false)\r\ndiagnostic(ccstr, PrintAssemblyOptions, NULL)\r\ndiagnostic(bool, PrintNMethods, false)\r\ndiagnostic(bool, PrintNativeNMethods, false)\r\ndevelop(bool, PrintDebugInfo, false)\r\ndevelop(bool, PrintRelocations, false)\r\ndevelop(bool, PrintDependencies, false)\r\ndevelop(bool, PrintExceptionHandlers, false)\r\ndevelop(bool, StressCompiledExceptionHandlers, false)\r\ndevelop(bool, InterceptOSException, false)\r\nproduct(bool, PrintCodeCache, false)\r\ndevelop(bool, PrintCodeCache2, false)\r\nproduct(bool, PrintCodeCacheOnCompilation, false)\r\ndiagnostic(bool, PrintStubCode, false)\r\nproduct(bool, StackTraceInThrowable, true)\r\nproduct(bool, OmitStackTraceInFastThrow, true)\r\nproduct(bool, ProfilerPrintByteCodeStatistics, false)\r\nproduct(bool, ProfilerRecordPC, false)\r\nproduct(bool, ProfileVM, false)\r\nproduct(bool, ProfileIntervals, false)\r\nnotproduct(bool, ProfilerCheckIntervals, false)\r\ndevelop(bool, PrintJVMWarnings, false)\r\nproduct(bool, PrintWarnings, true)\r\nnotproduct(uintx, WarnOnStalledSpinLock, 0)\r\nproduct(bool, RegisterFinalizersAtInit, true)\r\ndevelop(bool, RegisterReferences, true)\r\ndevelop(bool, IgnoreRewrites, false)\r\ndevelop(bool, PrintCodeCacheExtension, false)\r\ndevelop(bool, UsePrivilegedStack, true)\r\ndevelop(bool, ProtectionDomainVerification, true)\r\nproduct(bool, ClassUnloading, true)\r\nproduct(bool, ClassUnloadingWithConcurrentMark, true)\r\ndevelop(bool, DisableStartThread, false)\r\ndevelop(bool, MemProfiling, false)\r\nnotproduct(bool, PrintSystemDictionaryAtExit, false)\r\nexperimental(intx, PredictedLoadedClassCount, 0)\r\ndiagnostic(bool, UnsyncloadClass, false)\r\nproduct(bool, AlwaysLockClassLoader, false)\r\nproduct(bool, AllowParallelDefineClass, false)\r\nproduct(bool, MustCallLoadClassInternal, false)\r\nproduct_pd(bool, DontYieldALot)\r\nproduct_pd(bool, ConvertSleepToYield)\r\nproduct(bool, ConvertYieldToSleep, false)\r\nproduct(bool, UseBoundThreads, true)\r\ndevelop(bool, UseDetachedThreads, true)\r\nproduct(bool, UseLWPSynchronization, true)\r\nproduct(ccstr, SyncKnobs, NULL)\r\nproduct(intx, EmitSync, 0)\r\nproduct(intx, hashCode, 5)\r\nproduct(intx, WorkAroundNPTLTimedWaitHang, 1)\r\nproduct(bool, FilterSpuriousWakeups, true)\r\ndevelop(bool, UsePthreads, false)\r\nproduct(bool, AdjustConcurrency, false)\r\nproduct(bool, ReduceSignalUsage, false)\r\ndevelop_pd(bool, ShareVtableStubs)\r\ndevelop(bool, LoadLineNumberTables, true)\r\ndevelop(bool, LoadLocalVariableTables, true)\r\ndevelop(bool, LoadLocalVariableTypeTables, true)\r\nproduct(bool, AllowUserSignalHandlers, false)\r\nproduct(bool, UseSignalChaining, true)\r\nproduct(bool, UseAltSigs, false)\r\nproduct(bool, AllowJNIEnvProxy, false)\r\nproduct(bool, JNIDetachReleasesMonitors, true)\r\nproduct(bool, RestoreMXCSROnJNICalls, false)\r\nproduct(bool, CheckJNICalls, false)\r\nproduct(bool, CheckEndorsedAndExtDirs, false)\r\nproduct(bool, UseFastJNIAccessors, true)\r\nproduct(intx, MaxJNILocalCapacity, 65536)\r\nproduct(bool, EagerXrunInit, false)\r\nproduct(bool, PreserveAllAnnotations, false)\r\ndevelop(uintx, PreallocatedOutOfMemoryErrorCount, 4)\r\nproduct(bool, LazyBootClassLoader, true)\r\nproduct(bool, UseXMMForArrayCopy, false)\r\nproduct(intx, FieldsAllocationStyle, 1)\r\nproduct(bool, CompactFields, true)\r\nnotproduct(bool, PrintFieldLayout, false)\r\nproduct(intx, ContendedPaddingWidth, 128)\r\nproduct(bool, EnableContended, true)\r\nproduct(bool, RestrictContended, true)\r\nproduct(bool, UseBiasedLocking, true)\r\nproduct(intx, BiasedLockingStartupDelay, 4000)\r\ndiagnostic(bool, PrintBiasedLockingStatistics, false)\r\nproduct(intx, BiasedLockingBulkRebiasThreshold, 20)\r\nproduct(intx, BiasedLockingBulkRevokeThreshold, 40)\r\nproduct(intx, BiasedLockingDecayTime, 25000)\r\nproduct(bool, ExitOnOutOfMemoryError, false)\r\nproduct(bool, CrashOnOutOfMemoryError, false)\r\nnotproduct(bool, TraceRuntimeCalls, false)\r\ndevelop(bool, TraceJNICalls, false)\r\ndevelop(bool, StressRewriter, false)\r\nnotproduct(bool, TraceJVMCalls, false)\r\nproduct(ccstr, TraceJVMTI, NULL)\r\nproduct(bool, StressLdcRewrite, false)\r\nproduct(intx, TraceRedefineClasses, 0)\r\ndevelop(bool, StressMethodComparator, false)\r\nproduct(bool, VerifyMergedCPBytecodes, true)\r\ndevelop(bool, TraceJNIHandleAllocation, false)\r\ndevelop(bool, TraceThreadEvents, false)\r\ndevelop(bool, TraceBytecodes, false)\r\ndevelop(bool, TraceClassInitialization, false)\r\ndevelop(bool, TraceExceptions, false)\r\ndevelop(bool, TraceICs, false)\r\nnotproduct(bool, TraceInvocationCounterOverflow, false)\r\ndevelop(bool, TraceInlineCacheClearing, false)\r\ndevelop(bool, TraceDependencies, false)\r\ndevelop(bool, VerifyDependencies, trueInDebug)\r\ndevelop(bool, TraceNewOopMapGeneration, false)\r\ndevelop(bool, TraceNewOopMapGenerationDetailed, false)\r\ndevelop(bool, TimeOopMap, false)\r\ndevelop(bool, TimeOopMap2, false)\r\ndevelop(bool, TraceMonitorMismatch, false)\r\ndevelop(bool, TraceOopMapRewrites, false)\r\ndevelop(bool, TraceSafepoint, false)\r\ndevelop(bool, TraceICBuffer, false)\r\ndevelop(bool, TraceCompiledIC, false)\r\nnotproduct(bool, TraceZapDeadLocals, false)\r\ndevelop(bool, TraceStartupTime, false)\r\ndevelop(bool, TraceProtectionDomainVerification, false)\r\ndevelop(bool, TraceClearedExceptions, false)\r\nproduct(bool, TraceClassResolution, false)\r\nproduct(bool, TraceBiasedLocking, false)\r\nproduct(bool, TraceMonitorInflation, false)\r\nproduct(bool, UseSerialGC, false)\r\nproduct(bool, UseG1GC, false)\r\nproduct(bool, UseParallelGC, false)\r\nproduct(bool, UseParallelOldGC, false)\r\nproduct(uintx, HeapMaximumCompactionInterval, 20)\r\nproduct(uintx, HeapFirstMaximumCompactionCount, 3)\r\nproduct(bool, UseMaximumCompactionOnSystemGC, true)\r\nproduct(uintx, ParallelOldDeadWoodLimiterMean, 50)\r\nproduct(uintx, ParallelOldDeadWoodLimiterStdDev, 80)\r\nproduct(uintx, ParallelGCThreads, 0)\r\nproduct(bool, UseDynamicNumberOfGCThreads, false)\r\ndiagnostic(bool, ForceDynamicNumberOfGCThreads, false)\r\nproduct(bool, TraceDynamicGCThreads, false)\r\ndevelop(bool, ParallelOldGCSplitALot, false)\r\ndevelop(uintx, ParallelOldGCSplitInterval, 3)\r\nproduct(uintx, ConcGCThreads, 0)\r\nproduct(uintx, YoungPLABSize, 4096)\r\nproduct(uintx, OldPLABSize, 1024)\r\nproduct(uintx, GCTaskTimeStampEntries, 200)\r\nproduct(bool, AlwaysTenure, false)\r\nproduct(bool, NeverTenure, false)\r\nproduct(bool, ScavengeBeforeFullGC, true)\r\ndevelop(bool, ScavengeWithObjectsInToSpace, false)\r\nproduct(bool, UseConcMarkSweepGC, false)\r\nproduct(bool, ExplicitGCInvokesConcurrent, false)\r\nproduct(bool, ExplicitGCInvokesConcurrentAndUnloadsClasses, false)\r\nproduct(bool, GCLockerInvokesConcurrent, false)\r\nproduct(uintx, GCLockerEdenExpansionPercent, 5)\r\ndiagnostic(uintx, GCLockerRetryAllocationCount, 2)\r\ndevelop(bool, UseCMSAdaptiveFreeLists, true)\r\ndevelop(bool, UseAsyncConcMarkSweepGC, true)\r\ndevelop(bool, RotateCMSCollectionTypes, false)\r\nproduct(bool, UseCMSBestFit, true)\r\nproduct(bool, UseCMSCollectionPassing, true)\r\nproduct(bool, UseParNewGC, false)\r\nproduct(bool, ParallelGCVerbose, false)\r\nproduct(uintx, ParallelGCBufferWastePct, 10)\r\ndiagnostic(bool, ParallelGCRetainPLAB, false)\r\nproduct(uintx, TargetPLABWastePct, 10)\r\nproduct(uintx, PLABWeight, 75)\r\nproduct(bool, ResizePLAB, true)\r\nproduct(bool, PrintPLAB, false)\r\nproduct(intx, ParGCArrayScanChunk, 50)\r\nproduct(bool, ParGCUseLocalOverflow, false)\r\nproduct(bool, ParGCTrimOverflow, true)\r\nnotproduct(bool, ParGCWorkQueueOverflowALot, false)\r\nnotproduct(uintx, ParGCWorkQueueOverflowInterval, 1000)\r\nproduct(uintx, ParGCDesiredObjsFromOverflowList, 20)\r\ndiagnostic(uintx, ParGCStridesPerThread, 2)\r\ndiagnostic(intx, ParGCCardsPerStrideChunk, 256)\r\nproduct(uintx, CMSParPromoteBlocksToClaim, 16)\r\nproduct(uintx, OldPLABWeight, 50)\r\nproduct(bool, ResizeOldPLAB, true)\r\nproduct(bool, PrintOldPLAB, false)\r\nproduct(uintx, CMSOldPLABMin, 16)\r\nproduct(uintx, CMSOldPLABMax, 1024)\r\nproduct(uintx, CMSOldPLABNumRefills, 4)\r\nproduct(bool, CMSOldPLABResizeQuicker, false)\r\nproduct(uintx, CMSOldPLABToleranceFactor, 4)\r\nproduct(uintx, CMSOldPLABReactivityFactor, 2)\r\nproduct(bool, AlwaysPreTouch, false)\r\nproduct_pd(uintx, CMSYoungGenPerWorker)\r\nproduct(bool, CMSIncrementalMode, false)\r\nproduct(uintx, CMSIncrementalDutyCycle, 10)\r\nproduct(bool, CMSIncrementalPacing, true)\r\nproduct(uintx, CMSIncrementalDutyCycleMin, 0)\r\nproduct(uintx, CMSIncrementalSafetyFactor, 10)\r\nproduct(uintx, CMSIncrementalOffset, 0)\r\nproduct(uintx, CMSExpAvgFactor, 50)\r\nproduct(uintx, CMS_FLSWeight, 75)\r\nproduct(uintx, CMS_FLSPadding, 1)\r\nproduct(uintx, FLSCoalescePolicy, 2)\r\nproduct(bool, FLSAlwaysCoalesceLarge, false)\r\nproduct(double, FLSLargestBlockCoalesceProximity, 0.99)\r\nproduct(double, CMSSmallCoalSurplusPercent, 1.05)\r\nproduct(double, CMSLargeCoalSurplusPercent, 0.95)\r\nproduct(double, CMSSmallSplitSurplusPercent, 1.10)\r\nproduct(double, CMSLargeSplitSurplusPercent, 1.00)\r\nproduct(bool, CMSExtrapolateSweep, false)\r\nproduct(uintx, CMS_SweepWeight, 75)\r\nproduct(uintx, CMS_SweepPadding, 1)\r\nproduct(uintx, CMS_SweepTimerThresholdMillis, 10)\r\ndevelop(bool, CMSTraceIncrementalMode, false)\r\ndevelop(bool, CMSTraceIncrementalPacing, false)\r\ndevelop(bool, CMSTraceThreadState, false)\r\nproduct(bool, CMSClassUnloadingEnabled, true)\r\nproduct(uintx, CMSClassUnloadingMaxInterval, 0)\r\nproduct(bool, CMSCompactWhenClearAllSoftRefs, true)\r\nproduct(bool, UseCMSCompactAtFullCollection, true)\r\nproduct(uintx, CMSFullGCsBeforeCompaction, 0)\r\ndevelop(intx, CMSDictionaryChoice, 0)\r\nproduct(uintx, CMSIndexedFreeListReplenish, 4)\r\nproduct(bool, CMSReplenishIntermediate, true)\r\nproduct(bool, CMSSplitIndexedFreeListBlocks, true)\r\nproduct(bool, CMSLoopWarn, false)\r\ndevelop(bool, CMSOverflowEarlyRestoration, false)\r\nnotproduct(bool, CMSMarkStackOverflowALot, false)\r\nnotproduct(uintx, CMSMarkStackOverflowInterval, 1000)\r\nproduct(uintx, CMSMaxAbortablePrecleanLoops, 0)\r\nproduct(intx, CMSMaxAbortablePrecleanTime, 5000)\r\nproduct(uintx, CMSAbortablePrecleanMinWorkPerIteration, 100)\r\nmanageable(intx, CMSAbortablePrecleanWaitMillis, 100)\r\nproduct(uintx, CMSRescanMultiple, 32)\r\nproduct(uintx, CMSConcMarkMultiple, 32)\r\nproduct(bool, CMSAbortSemantics, false)\r\nproduct(bool, CMSParallelInitialMarkEnabled, true)\r\nproduct(bool, CMSParallelRemarkEnabled, true)\r\nproduct(bool, CMSParallelSurvivorRemarkEnabled, true)\r\nproduct(bool, CMSPLABRecordAlways, true)\r\nproduct(bool, CMSEdenChunksRecordAlways, true)\r\nproduct(bool, CMSPrintEdenSurvivorChunks, false)\r\nproduct(bool, CMSConcurrentMTEnabled, true)\r\nproduct(bool, CMSPrecleaningEnabled, true)\r\nproduct(uintx, CMSPrecleanIter, 3)\r\nproduct(uintx, CMSPrecleanNumerator, 2)\r\nproduct(uintx, CMSPrecleanDenominator, 3)\r\nproduct(bool, CMSPrecleanRefLists1, true)\r\nproduct(bool, CMSPrecleanRefLists2, false)\r\nproduct(bool, CMSPrecleanSurvivors1, false)\r\nproduct(bool, CMSPrecleanSurvivors2, true)\r\nproduct(uintx, CMSPrecleanThreshold, 1000)\r\nproduct(bool, CMSCleanOnEnter, true)\r\nproduct(uintx, CMSRemarkVerifyVariant, 1)\r\nproduct(uintx, CMSScheduleRemarkEdenPenetration, 50)\r\nproduct(uintx, CMSScheduleRemarkSamplingRatio, 5)\r\nproduct(bool, CMSScavengeBeforeRemark, false)\r\ndevelop(bool, CMSTraceSweeper, false)\r\nproduct(uintx, CMSWorkQueueDrainThreshold, 10)\r\nmanageable(intx, CMSWaitDuration, 2000)\r\ndevelop(uintx, CMSCheckInterval, 1000)\r\nproduct(bool, CMSYield, true)\r\nproduct(bool, CMSDumpAtPromotionFailure, false)\r\nproduct(bool, CMSPrintChunksInDump, false)\r\nproduct(bool, CMSPrintObjectsInDump, false)\r\ndiagnostic(bool, FLSVerifyAllHeapReferences, false)\r\ndiagnostic(bool, FLSVerifyLists, false)\r\ndiagnostic(bool, FLSVerifyIndexTable, false)\r\ndevelop(bool, FLSVerifyDictionary, false)\r\ndevelop(bool, VerifyBlockOffsetArray, false)\r\ndiagnostic(bool, BlockOffsetArrayUseUnallocatedBlock, false)\r\ndevelop(bool, TraceCMSState, false)\r\nproduct(intx, RefDiscoveryPolicy, 0)\r\nproduct(bool, ParallelRefProcEnabled, false)\r\nproduct(bool, ParallelRefProcBalancingEnabled, true)\r\nproduct(uintx, CMSTriggerRatio, 80)\r\nproduct(uintx, CMSBootstrapOccupancy, 50)\r\nproduct(intx, CMSInitiatingOccupancyFraction, -1)\r\nproduct(uintx, InitiatingHeapOccupancyPercent, 45)\r\nmanageable(intx, CMSTriggerInterval, -1)\r\nproduct(bool, UseCMSInitiatingOccupancyOnly, false)\r\nproduct(uintx, CMSIsTooFullPercentage, 98)\r\ndevelop(bool, CMSTestInFreeList, false)\r\nnotproduct(bool, CMSVerifyReturnedBytes, false)\r\nnotproduct(bool, ScavengeALot, false)\r\ndevelop(bool, FullGCALot, false)\r\nnotproduct(bool, GCALotAtAllSafepoints, false)\r\nproduct(bool, PrintPromotionFailure, false)\r\nnotproduct(bool, PromotionFailureALot, false)\r\ndevelop(uintx, PromotionFailureALotCount, 1000)\r\ndevelop(uintx, PromotionFailureALotInterval, 5)\r\nexperimental(uintx, WorkStealingSleepMillis, 1)\r\nexperimental(uintx, WorkStealingYieldsBeforeSleep, 5000)\r\nexperimental(uintx, WorkStealingHardSpins, 4096)\r\nexperimental(uintx, WorkStealingSpinToYieldRatio, 10)\r\ndevelop(uintx, ObjArrayMarkingStride, 512)\r\ndevelop(bool, MetadataAllocationFailALot, false)\r\ndevelop(uintx, MetadataAllocationFailALotInterval, 1000)\r\ndevelop(bool, TraceMetadataChunkAllocation, false)\r\nproduct(bool, TraceMetadataHumongousAllocation, false)\r\ndevelop(bool, TraceMetavirtualspaceAllocation, false)\r\nnotproduct(bool, ExecuteInternalVMTests, false)\r\nnotproduct(bool, VerboseInternalVMTests, false)\r\nproduct_pd(bool, ResizeTLAB)\r\nproduct(bool, ZeroTLAB, false)\r\nproduct(bool, FastTLABRefill, true)\r\nproduct(bool, PrintTLAB, false)\r\nproduct(bool, TLABStats, true)\r\nproduct_pd(bool, NeverActAsServerClassMachine)\r\nproduct(bool, AlwaysActAsServerClassMachine, false)\r\nproduct_pd(uint64_t, MaxRAM)\r\nproduct(uintx, ErgoHeapSizeLimit, 0)\r\nexperimental(bool, UseCGroupMemoryLimitForHeap, false)\r\nproduct(uintx, MaxRAMFraction, 4)\r\nproduct(uintx, DefaultMaxRAMFraction, 4)\r\nproduct(uintx, MinRAMFraction, 2)\r\nproduct(uintx, InitialRAMFraction, 64)\r\ndevelop(uintx, MaxVirtMemFraction, 2)\r\nproduct(bool, UseAutoGCSelectPolicy, false)\r\nproduct(uintx, AutoGCSelectPauseMillis, 5000)\r\nproduct(bool, UseAdaptiveSizePolicy, true)\r\nproduct(bool, UsePSAdaptiveSurvivorSizePolicy, true)\r\nproduct(bool, UseAdaptiveGenerationSizePolicyAtMinorCollection, true)\r\nproduct(bool, UseAdaptiveGenerationSizePolicyAtMajorCollection, true)\r\nproduct(bool, UseAdaptiveSizePolicyWithSystemGC, false)\r\nproduct(bool, UseAdaptiveGCBoundary, false)\r\ndevelop(bool, TraceAdaptiveGCBoundary, false)\r\ndevelop(intx, PSAdaptiveSizePolicyResizeVirtualSpaceAlot, -1)\r\nproduct(uintx, AdaptiveSizeThroughPutPolicy, 0)\r\nproduct(uintx, AdaptiveSizePausePolicy, 0)\r\ndevelop(bool, PSAdjustTenuredGenForMinorPause, false)\r\ndevelop(bool, PSAdjustYoungGenForMajorPause, false)\r\nproduct(uintx, AdaptiveSizePolicyInitializingSteps, 20)\r\ndevelop(uintx, AdaptiveSizePolicyReadyThreshold, 5)\r\nproduct(uintx, AdaptiveSizePolicyOutputInterval, 0)\r\nproduct(bool, UseAdaptiveSizePolicyFootprintGoal, true)\r\nproduct(uintx, AdaptiveSizePolicyWeight, 10)\r\nproduct(uintx, AdaptiveTimeWeight,       25)\r\nproduct(uintx, PausePadding, 1)\r\nproduct(uintx, PromotedPadding, 3)\r\nproduct(uintx, SurvivorPadding, 3)\r\nproduct(uintx, ThresholdTolerance, 10)\r\nproduct(uintx, AdaptiveSizePolicyCollectionCostMargin, 50)\r\nproduct(uintx, YoungGenerationSizeIncrement, 20)\r\nproduct(uintx, YoungGenerationSizeSupplement, 80)\r\nproduct(uintx, YoungGenerationSizeSupplementDecay, 8)\r\nproduct(uintx, TenuredGenerationSizeIncrement, 20)\r\nproduct(uintx, TenuredGenerationSizeSupplement, 80)\r\nproduct(uintx, TenuredGenerationSizeSupplementDecay, 2)\r\nproduct(uintx, MaxGCPauseMillis, max_uintx)\r\nproduct(uintx, GCPauseIntervalMillis, 0)\r\nproduct(uintx, MaxGCMinorPauseMillis, max_uintx)\r\nproduct(uintx, GCTimeRatio, 99)\r\nproduct(uintx, AdaptiveSizeDecrementScaleFactor, 4)\r\nproduct(bool, UseAdaptiveSizeDecayMajorGCCost, true)\r\nproduct(uintx, AdaptiveSizeMajorGCDecayTimeScale, 10)\r\nproduct(uintx, MinSurvivorRatio, 3)\r\nproduct(uintx, InitialSurvivorRatio, 8)\r\nproduct(bool, UseGCOverheadLimit, true)\r\nproduct(uintx, GCTimeLimit, 98)\r\nproduct(uintx, GCHeapFreeLimit, 2)\r\ndevelop(uintx, AdaptiveSizePolicyGCTimeLimitThreshold, 5)\r\nproduct(bool, PrintAdaptiveSizePolicy, false)\r\nproduct(intx, PrefetchCopyIntervalInBytes, -1)\r\nproduct(intx, PrefetchScanIntervalInBytes, -1)\r\nproduct(intx, PrefetchFieldsAhead, -1)\r\ndiagnostic(bool, VerifySilently, false)\r\ndiagnostic(bool, VerifyDuringStartup, false)\r\ndiagnostic(bool, VerifyBeforeExit, trueInDebug)\r\ndiagnostic(bool, VerifyBeforeGC, false)\r\ndiagnostic(bool, VerifyAfterGC, false)\r\ndiagnostic(bool, VerifyDuringGC, false)\r\ndiagnostic(bool, GCParallelVerificationEnabled, true)\r\ndiagnostic(bool, DeferInitialCardMark, false)\r\ndiagnostic(bool, VerifyRememberedSets, false)\r\ndiagnostic(bool, VerifyObjectStartArray, true)\r\nproduct(bool, DisableExplicitGC, false)\r\nnotproduct(bool, CheckMemoryInitialization, false)\r\nproduct(bool, CollectGen0First, false)\r\ndiagnostic(bool, BindCMSThreadToCPU, false)\r\ndiagnostic(uintx, CPUForCMSThread, 0)\r\nproduct(bool, BindGCTaskThreadsToCPUs, false)\r\nproduct(bool, UseGCTaskAffinity, false)\r\nproduct(uintx, ProcessDistributionStride, 4)\r\nproduct(uintx, CMSCoordinatorYieldSleepCount, 10)\r\nproduct(uintx, CMSYieldSleepCount, 0)\r\nmanageable(bool, PrintGC, false)\r\nmanageable(bool, PrintGCDetails, false)\r\nmanageable(bool, PrintGCDateStamps, false)\r\nmanageable(bool, PrintGCTimeStamps, false)\r\nmanageable(bool, PrintGCID, false)\r\nproduct(bool, PrintGCTaskTimeStamps, false)\r\ndevelop(intx, ConcGCYieldTimeout, 0)\r\nnotproduct(bool, TraceMarkSweep, false)\r\nproduct(bool, PrintReferenceGC, false)\r\ndevelop(bool, TraceReferenceGC, false)\r\ndevelop(bool, TraceFinalizerRegistration, false)\r\nnotproduct(bool, TraceScavenge, false)\r\nproduct(bool, IgnoreEmptyClassPaths, false)\r\nproduct(bool, TraceClassPaths, false)\r\nproduct_rw(bool, TraceClassLoading, false)\r\nproduct(bool, TraceClassLoadingPreorder, false)\r\nproduct_rw(bool, TraceClassUnloading, false)\r\nproduct_rw(bool, TraceLoaderConstraints, false)\r\ndevelop(bool, TraceClassLoaderData, false)\r\nproduct(uintx, InitialBootClassLoaderMetaspaceSize)\r\nproduct(bool, TraceGen0Time, false)\r\nproduct(bool, TraceGen1Time, false)\r\nproduct(bool, PrintTenuringDistribution, false)\r\nproduct_rw(bool, PrintHeapAtGC, false)\r\nproduct_rw(bool, PrintHeapAtGCExtended, false)\r\nproduct(bool, PrintHeapAtSIGBREAK, true)\r\nmanageable(bool, PrintClassHistogramBeforeFullGC, false)\r\nmanageable(bool, PrintClassHistogramAfterFullGC, false)\r\nmanageable(bool, PrintClassHistogram, false)\r\ndevelop(bool, TraceWorkGang, false)\r\nproduct(bool, TraceParallelOldGCTasks, false)\r\ndevelop(bool, TraceBlockOffsetTable, false)\r\ndevelop(bool, TraceCardTableModRefBS, false)\r\ndevelop(bool, TraceGCTaskManager, false)\r\ndevelop(bool, TraceGCTaskQueue, false)\r\ndiagnostic(bool, TraceGCTaskThread, false)\r\nproduct(bool, PrintParallelOldGCPhaseTimes, false)\r\ndevelop(bool, TraceParallelOldGCMarkingPhase, false)\r\ndevelop(bool, TraceParallelOldGCSummaryPhase, false)\r\ndevelop(bool, TraceParallelOldGCCompactionPhase, false)\r\ndevelop(bool, TraceParallelOldGCDensePrefix, false)\r\ndevelop(bool, IgnoreLibthreadGPFault, false)\r\nproduct(bool, PrintJNIGCStalls, false)\r\nexperimental(double, ObjectCountCutOffPercent, 0.5)\r\nproduct(bool, UseGCLogFileRotation, false)\r\nproduct(uintx, NumberOfGCLogFiles, 0)\r\ndiagnostic(bool, TraceJVMTIObjectTagging, false)\r\ndiagnostic(bool, VerifyBeforeIteration, false)\r\ndevelop(bool, CIPrintCompilerName, false)\r\ndevelop(bool, CIPrintCompileQueue, false)\r\ndevelop(bool, CIPrintRequests, false)\r\nproduct(bool, CITime, false)\r\ndevelop(bool, CITimeEach, false)\r\ndevelop(bool, CICountOSR, false)\r\ndevelop(bool, CICompileNatives, true)\r\ndevelop_pd(bool, CICompileOSR)\r\ndevelop(bool, CIPrintMethodCodes, false)\r\ndevelop(bool, CIPrintTypeFlow, false)\r\ndevelop(bool, CITraceTypeFlow, false)\r\ndevelop(intx, OSROnlyBCI, -1)\r\nproduct(intx, CICompilerCount, CI_COMPILER_COUNT)\r\nproduct(intx, CompilationPolicyChoice, 0)\r\ndevelop(bool, UseStackBanging, true)\r\ndevelop(bool, UseStrictFP, true)\r\ndevelop(bool, GenerateSynchronizationCode, true)\r\ndevelop(bool, GenerateCompilerNullChecks, true)\r\ndevelop(bool, GenerateRangeChecks, true)\r\ndevelop_pd(bool, ImplicitNullChecks)\r\nproduct_pd(bool, TrapBasedNullChecks)\r\nproduct(bool, PrintSafepointStatistics, false)\r\nproduct(intx, PrintSafepointStatisticsCount, 300)\r\nproduct(intx, PrintSafepointStatisticsTimeout,  -1)\r\nproduct(bool, TraceSafepointCleanupTime, false)\r\nproduct(bool, Inline, true)\r\nproduct(bool, ClipInlining, true)\r\ndevelop(bool, UseCHA, true)\r\nproduct(bool, UseTypeProfile, true)\r\nnotproduct(bool, TimeCompiler, false)\r\ndiagnostic(bool, PrintInlining, false)\r\nproduct(bool, UsePopCountInstruction, false)\r\ndevelop(bool, EagerInitialization, false)\r\ndevelop(bool, TraceMethodReplacement, false)\r\ndevelop(bool, PrintMethodFlushing, false)\r\ndiagnostic(bool, PrintMethodFlushingStatistics, false)\r\ndevelop(bool, UseRelocIndex, false)\r\ndevelop(bool, StressCodeBuffers, false)\r\ndiagnostic(bool, DebugNonSafepoints, trueInDebug)\r\nproduct(bool, PrintVMOptions, false)\r\nproduct(bool, IgnoreUnrecognizedVMOptions, false)\r\nproduct(bool, PrintCommandLineFlags, false)\r\nproduct(bool, PrintFlagsInitial, false)\r\nproduct(bool, PrintFlagsFinal, false)\r\nnotproduct(bool, PrintFlagsWithComments, false)\r\ndiagnostic(bool, SerializeVMOutput, true)\r\ndiagnostic(bool, DisplayVMOutput, true)\r\ndiagnostic(bool, LogVMOutput, false)\r\ndiagnostic(ccstr, LogFile, NULL)\r\nproduct(ccstr, ErrorFile, NULL)\r\nproduct(bool, DisplayVMOutputToStderr, false)\r\nproduct(bool, DisplayVMOutputToStdout, false)\r\nproduct(bool, UseHeavyMonitors, false)\r\nproduct(bool, PrintStringTableStatistics, false)\r\ndiagnostic(bool, VerifyStringTableAtExit, false)\r\nnotproduct(bool, PrintSymbolTableSizeHistogram, false)\r\nnotproduct(bool, ExitVMOnVerifyError, false)\r\nnotproduct(ccstr, AbortVMOnException, NULL)\r\nnotproduct(ccstr, AbortVMOnExceptionMessage, NULL)\r\ndevelop(bool, DebugVtables, false)\r\ndevelop(bool, PrintVtables, false)\r\nnotproduct(bool, PrintVtableStats, false)\r\ndevelop(bool, TraceCreateZombies, false)\r\nnotproduct(bool, IgnoreLockingAssertions, false)\r\nproduct(bool, RangeCheckElimination, true)\r\ndevelop_pd(bool, UncommonNullCast)\r\ndevelop(bool, TypeProfileCasts,  true)\r\ndevelop(bool, DelayCompilationDuringStartup, true)\r\ndevelop(bool, CompileTheWorld, false)\r\ndevelop(bool, CompileTheWorldPreloadClasses, true)\r\nnotproduct(intx, CompileTheWorldSafepointInterval, 100)\r\ndevelop(bool, FillDelaySlots, true)\r\ndevelop(bool, TimeLivenessAnalysis, false)\r\ndevelop(bool, TraceLivenessGen, false)\r\nnotproduct(bool, TraceLivenessQuery, false)\r\nnotproduct(bool, CollectIndexSetStatistics, false)\r\ndevelop(bool, UseLoopSafepoints, true)\r\nproduct(bool, AggressiveOpts, false)\r\nproduct_pd(uintx, TypeProfileLevel)\r\nproduct(intx, TypeProfileArgsLimit,     2)\r\nproduct(intx, TypeProfileParmsLimit,    2)\r\ndevelop(bool, CountCompiledCalls, false)\r\nnotproduct(bool, CountRuntimeCalls, false)\r\ndevelop(bool, CountJNICalls, false)\r\nnotproduct(bool, CountJVMCalls, false)\r\nnotproduct(bool, CountRemovableExceptions, false)\r\nnotproduct(bool, ICMissHistogram, false)\r\nnotproduct(bool, PrintClassStatistics, false)\r\nnotproduct(bool, PrintMethodStatistics, false)\r\ndevelop(bool, ClearInterpreterLocals, false)\r\nproduct_pd(bool, RewriteBytecodes)\r\nproduct_pd(bool, RewriteFrequentPairs)\r\ndiagnostic(bool, PrintInterpreter, false)\r\nproduct(bool, UseInterpreter, true)\r\ndevelop(bool, UseFastSignatureHandlers, true)\r\nproduct(bool, UseLoopCounter, true)\r\nproduct(bool, UseFastEmptyMethods, true)\r\nproduct(bool, UseFastAccessorMethods, true)\r\nproduct_pd(bool, UseOnStackReplacement)\r\nnotproduct(bool, TraceOnStackReplacement, false)\r\nproduct_pd(bool, PreferInterpreterNativeStubs)\r\ndevelop(bool, CountBytecodes, false)\r\ndevelop(bool, PrintBytecodeHistogram, false)\r\ndevelop(bool, PrintBytecodePairHistogram, false)\r\ndiagnostic(bool, PrintSignatureHandlers, false)\r\ndevelop(bool, VerifyOops, false)\r\ndevelop(bool, CheckUnhandledOops, false)\r\ndevelop(bool, VerifyJNIFields, trueInDebug)\r\nnotproduct(bool, VerifyJNIEnvThread, false)\r\ndevelop(bool, VerifyFPU, false)\r\ndevelop(bool, VerifyThread, false)\r\ndevelop(bool, VerifyActivationFrameSize, false)\r\ndevelop(bool, TraceFrequencyInlining, false)\r\ndevelop_pd(bool, InlineIntrinsics)\r\nproduct_pd(bool, ProfileInterpreter)\r\ndevelop(bool, TraceProfileInterpreter, false)\r\ndevelop_pd(bool, ProfileTraps)\r\nproduct(intx, ProfileMaturityPercentage, 20)\r\ndevelop(bool, PrintMethodData, false)\r\ndevelop(bool, VerifyDataPointer, trueInDebug)\r\ndevelop(bool, VerifyCompiledCode, false)\r\nnotproduct(bool, CrashGCForDumpingJavaThread, false)\r\nproduct(bool, UseCompiler, true)\r\ndevelop(bool, TraceCompilationPolicy, false)\r\ndevelop(bool, TimeCompilationPolicy, false)\r\nproduct(bool, UseCounterDecay, true)\r\ndevelop(intx, CounterHalfLifeTime,    30)\r\ndevelop(intx, CounterDecayMinIntervalLength,   500)\r\nproduct(bool, AlwaysCompileLoopMethods, false)\r\nproduct(bool, DontCompileHugeMethods, true)\r\nproduct(bool, EstimateArgEscape, true)\r\nproduct(intx, BCEATraceLevel, 0)\r\nproduct(intx, MaxBCEAEstimateLevel, 5)\r\nproduct(intx, MaxBCEAEstimateSize, 150)\r\nproduct(intx,  AllocatePrefetchStyle, 1)\r\nproduct(intx,  AllocatePrefetchDistance, -1)\r\nproduct(intx,  AllocatePrefetchLines, 3)\r\nproduct(intx,  AllocateInstancePrefetchLines, 1)\r\nproduct(intx,  AllocatePrefetchStepSize, 16)\r\nproduct(intx,  AllocatePrefetchInstr, 0)\r\ndevelop(bool, TraceDeoptimization, false)\r\ndevelop(bool, DebugDeoptimization, false)\r\nproduct(intx, SelfDestructTimer, 0)\r\nproduct(intx, MaxJavaStackTraceDepth, 1024)\r\nNOT_EMBEDDED(diagnostic(intx, GuaranteedSafepointInterval, 1000)\r\nEMBEDDED_ONLY(product(intx, GuaranteedSafepointInterval, 0)\r\nproduct(intx, SafepointTimeoutDelay, 10000)\r\nproduct(intx, NmethodSweepFraction, 16)\r\nproduct(intx, NmethodSweepCheckInterval, 5)\r\nproduct(intx, NmethodSweepActivity, 10)\r\nnotproduct(bool, LogSweeper, false)\r\nnotproduct(intx, SweeperLogEntries, 1024)\r\nnotproduct(intx, MemProfilingInterval, 500)\r\ndevelop(intx, MallocCatchPtr, -1)\r\nnotproduct(intx, AssertRepeat, 1)\r\nnotproduct(uintx, HandleAllocationLimit, 1024)\r\ndevelop(uintx, TotalHandleAllocationLimit, 1024)\r\ndevelop(intx, StackPrintLimit, 100)\r\nnotproduct(intx, MaxElementPrintSize, 256)\r\nnotproduct(intx, MaxSubklassPrintSize, 4)\r\nproduct(intx, MaxInlineLevel, 9)\r\nproduct(intx, MaxRecursiveInlineLevel, 1)\r\ndevelop(intx, MaxForceInlineLevel, 100)\r\nproduct_pd(intx, InlineSmallCode)\r\nproduct(intx, MaxInlineSize, 35)\r\nproduct_pd(intx, FreqInlineSize)\r\nproduct(intx, MaxTrivialSize, 6)\r\nproduct(intx, MinInliningThreshold, 250)\r\ndevelop(intx, MethodHistogramCutoff, 100)\r\ndevelop(intx, ProfilerNumberOfInterpretedMethods, 25)\r\ndevelop(intx, ProfilerNumberOfCompiledMethods, 25)\r\ndevelop(intx, ProfilerNumberOfStubMethods, 25)\r\ndevelop(intx, ProfilerNumberOfRuntimeStubNodes, 25)\r\nproduct(intx, ProfileIntervalsTicks, 100)\r\nnotproduct(intx, ScavengeALotInterval,     1)\r\nnotproduct(intx, FullGCALotInterval,     1)\r\nnotproduct(intx, FullGCALotStart,     0)\r\ndevelop(intx, DontYieldALotInterval,    10)\r\ndevelop(intx, MinSleepInterval,     1)\r\ndevelop(intx, ProfilerPCTickThreshold,    15)\r\nnotproduct(intx, DeoptimizeALotInterval,     5)\r\nnotproduct(intx, ZombieALotInterval,     5)\r\ndiagnostic(intx, MallocVerifyInterval,     0)\r\ndiagnostic(intx, MallocVerifyStart,     0)\r\ndiagnostic(uintx, MallocMaxTestWords,     0)\r\nproduct(intx, TypeProfileWidth,     2)\r\ndevelop(intx, BciProfileWidth,      2)\r\nproduct(intx, PerMethodRecompilationCutoff, 400)\r\nproduct(intx, PerBytecodeRecompilationCutoff, 200)\r\nproduct(intx, PerMethodTrapLimit,  100)\r\nexperimental(intx, PerMethodSpecTrapLimit,  5000)\r\nproduct(intx, PerBytecodeTrapLimit,  4)\r\nexperimental(intx, SpecTrapLimitExtraEntries,  3)\r\ndevelop(intx, InlineFrequencyRatio,    20)\r\ndevelop_pd(intx, InlineFrequencyCount)\r\ndevelop(intx, InlineThrowCount,    50)\r\ndevelop(intx, InlineThrowMaxSize,   200)\r\ndevelop(intx, ProfilerNodeSize,  1024)\r\nproduct_pd(intx, PreInflateSpin)\r\nproduct(uintx, InitialHeapSize, 0)\r\nproduct(uintx, MaxNewSize, max_uintx)\r\nproduct(uintx, PretenureSizeThreshold, 0)\r\nproduct(uintx, TLABSize, 0)\r\nproduct(uintx, TLABAllocationWeight, 35)\r\nproduct(uintx, TLABWasteTargetPercent, 1)\r\nproduct(uintx, TLABRefillWasteFraction,    64)\r\nproduct(uintx, TLABWasteIncrement,    4)\r\nproduct(uintx, SurvivorRatio, 8)\r\nproduct(uintx, NewRatio, 2)\r\nproduct_pd(uintx, NewSizeThreadIncrease)\r\nproduct_pd(uintx, MetaspaceSize)\r\nproduct(uintx, MaxMetaspaceSize, max_uintx)\r\nmanageable(uintx, MinHeapFreeRatio, 40)\r\nmanageable(uintx, MaxHeapFreeRatio, 70)\r\nproduct(intx, SoftRefLRUPolicyMSPerMB, 1000)\r\nproduct(uintx, MinMetaspaceFreeRatio,    40)\r\nproduct(uintx, MaxMetaspaceFreeRatio,    70)\r\nproduct(uintx, QueuedAllocationWarningCount, 0)\r\ndiagnostic(uintx, VerifyGCStartAt,   0)\r\ndiagnostic(intx, VerifyGCLevel,     0)\r\nproduct(uintx, MaxTenuringThreshold,    15)\r\nproduct(uintx, InitialTenuringThreshold,    7)\r\nproduct(uintx, TargetSurvivorRatio,    50)\r\nproduct(uintx, MarkSweepDeadRatio,     5)\r\nproduct(uintx, MarkSweepAlwaysCompactCount,     4)\r\nproduct(intx, PrintCMSStatistics, 0)\r\nproduct(bool, PrintCMSInitiationStatistics, false)\r\nproduct(intx, PrintFLSStatistics, 0)\r\nproduct(intx, PrintFLSCensus, 0)\r\ndevelop(uintx, GCExpandToAllocateDelayMillis, 0)\r\ndevelop(uintx, GCWorkerDelayMillis, 0)\r\nproduct(intx, DeferThrSuspendLoopCount,     4000)\r\nproduct(intx, DeferPollingPageLoopCount,     -1)\r\nproduct(bool, PSChunkLargeArrays, true)\r\nproduct(uintx, GCDrainStackTargetSize, 64)\r\nproduct_pd(intx, StackYellowPages)\r\nproduct_pd(intx, StackRedPages)\r\nproduct_pd(intx, StackShadowPages)\r\nproduct_pd(intx, ThreadStackSize)\r\nproduct_pd(intx, VMThreadStackSize)\r\nproduct_pd(intx, CompilerThreadStackSize)\r\ndevelop_pd(uintx, JVMInvokeMethodSlack)\r\ndevelop(uintx, CodeCacheSegmentSize, 64 PPC64_ONLY(+64))\r\ndevelop_pd(intx, CodeEntryAlignment)\r\nproduct_pd(intx, OptoLoopAlignment)\r\nproduct_pd(uintx, InitialCodeCacheSize)\r\ndevelop_pd(uintx, CodeCacheMinimumUseSpace)\r\nproduct_pd(uintx, ReservedCodeCacheSize)\r\nproduct_pd(uintx, CodeCacheExpansionSize)\r\ndevelop_pd(uintx, CodeCacheMinBlockLength)\r\nnotproduct(bool, ExitOnFullCodeCache, false)\r\nproduct(bool, UseCodeCacheFlushing, true)\r\ndevelop(intx, BinarySwitchThreshold, 5)\r\ndevelop(intx, StopInterpreterAt, 0)\r\ndevelop(intx, TraceBytecodesAt, 0)\r\ndevelop(intx, CIStart, 0)\r\ndevelop(intx, CIStop, max_jint)\r\ndevelop(intx, CIStartOSR, 0)\r\ndevelop(intx, CIStopOSR, max_jint)\r\ndevelop(intx, CIBreakAtOSR, -1)\r\ndevelop(intx, CIBreakAt, -1)\r\nproduct(ccstr, CompileCommandFile, NULL)\r\ndevelop(bool, ReplayCompiles, false)\r\nproduct(ccstr, ReplayDataFile, NULL)\r\nproduct(ccstr, InlineDataFile, NULL)\r\ndevelop(intx, ReplaySuppressInitializers, 2)\r\ndevelop(bool, ReplayIgnoreInitErrors, false)\r\nproduct(bool, DumpReplayDataOnError, true)\r\nproduct(bool, CICompilerCountPerCPU, false)\r\ndevelop(intx, CIFireOOMAt,    -1)\r\nnotproduct(intx, CICrashAt, -1)\r\nnotproduct(bool, CIObjectFactoryVerify, false)\r\nproduct(intx, ThreadPriorityPolicy, 0)\r\nproduct(bool, ThreadPriorityVerbose, false)\r\nproduct(intx, DefaultThreadPriority, -1)\r\nproduct(intx, CompilerThreadPriority, -1)\r\nproduct(intx, VMThreadPriority, -1)\r\nproduct(bool, CompilerThreadHintNoPreempt, true)\r\nproduct(bool, VMThreadHintNoPreempt, false)\r\nproduct(intx, JavaPriority1_To_OSPriority, -1)\r\nproduct(intx, JavaPriority2_To_OSPriority, -1)\r\nproduct(intx, JavaPriority3_To_OSPriority, -1)\r\nproduct(intx, JavaPriority4_To_OSPriority, -1)\r\nproduct(intx, JavaPriority5_To_OSPriority, -1)\r\nproduct(intx, JavaPriority6_To_OSPriority, -1)\r\nproduct(intx, JavaPriority7_To_OSPriority, -1)\r\nproduct(intx, JavaPriority8_To_OSPriority, -1)\r\nproduct(intx, JavaPriority9_To_OSPriority, -1)\r\nproduct(intx, JavaPriority10_To_OSPriority,-1)\r\nexperimental(bool, UseCriticalJavaThreadPriority, false)\r\nexperimental(bool, UseCriticalCompilerThreadPriority, false)\r\nexperimental(bool, UseCriticalCMSThreadPriority, false)\r\nnotproduct(intx, CompileTheWorldStartAt,     1)\r\nnotproduct(intx, CompileTheWorldStopAt, max_jint)\r\ndevelop(intx, NewCodeParameter,      0)\r\ndevelop(intx, MinOopMapAllocation,     8)\r\ndevelop(intx, LongCompileThreshold,     50)\r\nproduct(intx, StarvationMonitorInterval,    200)\r\nproduct_pd(intx, CompileThreshold)\r\nproduct_pd(intx, BackEdgeThreshold)\r\nproduct(intx, Tier0InvokeNotifyFreqLog, 7)\r\nproduct(intx, Tier2InvokeNotifyFreqLog, 11)\r\nproduct(intx, Tier3InvokeNotifyFreqLog, 10)\r\nproduct(intx, Tier23InlineeNotifyFreqLog, 20)\r\nproduct(intx, Tier0BackedgeNotifyFreqLog, 10)\r\nproduct(intx, Tier2BackedgeNotifyFreqLog, 14)\r\nproduct(intx, Tier3BackedgeNotifyFreqLog, 13)\r\nproduct(intx, Tier2CompileThreshold, 0)\r\nproduct(intx, Tier2BackEdgeThreshold, 0)\r\nproduct(intx, Tier3InvocationThreshold, 200)\r\nproduct(intx, Tier3MinInvocationThreshold, 100)\r\nproduct(intx, Tier3CompileThreshold, 2000)\r\nproduct(intx, Tier3BackEdgeThreshold,  60000)\r\nproduct(intx, Tier4InvocationThreshold, 5000)\r\nproduct(intx, Tier4MinInvocationThreshold, 600)\r\nproduct(intx, Tier4CompileThreshold, 15000)\r\nproduct(intx, Tier4BackEdgeThreshold, 40000)\r\nproduct(intx, Tier3DelayOn, 5)\r\nproduct(intx, Tier3DelayOff, 2)\r\nproduct(intx, Tier3LoadFeedback, 5)\r\nproduct(intx, Tier4LoadFeedback, 3)\r\nproduct(intx, TieredCompileTaskTimeout, 50)\r\nproduct(intx, TieredStopAtLevel, 4)\r\nproduct(intx, Tier0ProfilingStartPercentage, 200)\r\nproduct(uintx, IncreaseFirstTierCompileThresholdAt, 50)\r\nproduct(intx, TieredRateUpdateMinTime, 1)\r\nproduct(intx, TieredRateUpdateMaxTime, 25)\r\nproduct_pd(bool, TieredCompilation)\r\nproduct(bool, PrintTieredEvents, false)\r\nproduct_pd(intx, OnStackReplacePercentage)\r\nproduct(intx, InterpreterProfilePercentage, 33)\r\ndevelop(intx, MaxRecompilationSearchLength,    10)\r\ndevelop(intx, MaxInterpretedSearchLength,     3)\r\ndevelop(intx, DesiredMethodLimit,  8000)\r\ndevelop(intx, HugeMethodLimit,  8000)\r\ndevelop(bool, UseNewReflection, true)\r\ndevelop(bool, VerifyReflectionBytecodes, false)\r\nproduct(bool, ReflectionWrapResolutionErrors, true)\r\ndevelop(intx, FastSuperclassLimit, 8)\r\nproduct(uintx, MaxDirectMemorySize, 0)\r\ndiagnostic(bool, UseNewCode, false)\r\ndiagnostic(bool, UseNewCode2, false)\r\ndiagnostic(bool, UseNewCode3, false)\r\nproduct(bool, UsePerfData, falseInEmbedded)\r\nproduct(bool, PerfDataSaveToFile, false)\r\nproduct(ccstr, PerfDataSaveFile, NULL)\r\nproduct(intx, PerfDataSamplingInterval, 50)\r\ndevelop(bool, PerfTraceDataCreation, false)\r\ndevelop(bool, PerfTraceMemOps, false)\r\nproduct(bool, PerfDisableSharedMem, false)\r\nproduct(intx, PerfMaxStringConstLength, 1024)\r\nproduct(bool, PerfAllowAtExitRegistration, false)\r\nproduct(bool, PerfBypassFileSystemCheck, false)\r\nproduct(intx, UnguardOnExecutionViolation, 0)\r\nproduct(bool, ManagementServer, false)\r\nproduct(bool, DisableAttachMechanism, false)\r\nproduct(bool, StartAttachListener, false)\r\nmanageable(bool, PrintConcurrentLocks, false)\r\nproduct(bool, TransmitErrorReport, false)\r\nproduct(ccstr, ErrorReportServer, NULL)\r\nproduct(bool, UseSharedSpaces, true)\r\nproduct(bool, VerifySharedSpaces, false)\r\nproduct(bool, RequireSharedSpaces, false)\r\nproduct(bool, DumpSharedSpaces, false)\r\nproduct(bool, PrintSharedSpaces, false)\r\nproduct(bool, PrintSharedArchiveAndExit, false)\r\nproduct(bool, PrintSharedDictionary, false)\r\ndiagnostic(bool, EnableInvokeDynamic, true)\r\ndiagnostic(bool, IgnoreUnverifiableClassesDuringDump, false)\r\ndiagnostic(bool, PrintMethodHandleStubs, false)\r\ndevelop(bool, TraceMethodHandles, false)\r\ndiagnostic(bool, VerifyMethodHandles, trueInDebug)\r\ndiagnostic(bool, ShowHiddenFrames, false)\r\nexperimental(bool, TrustFinalNonStaticFields, false)\r\ndiagnostic(bool, FoldStableValues, true)\r\ndevelop(bool, TraceInvokeDynamic, false)\r\ndiagnostic(bool, PauseAtStartup,      false)\r\ndiagnostic(ccstr, PauseAtStartupFile, NULL)\r\ndiagnostic(bool, PauseAtExit, false)\r\nproduct(bool, ExtendedDTraceProbes,    false)\r\nproduct(bool, DTraceMethodProbes, false)\r\nproduct(bool, DTraceAllocProbes, false)\r\nproduct(bool, DTraceMonitorProbes, false)\r\nproduct(bool, RelaxAccessControlCheck, false)\r\ndiagnostic(bool, PrintDTraceDOF, false)\r\nproduct(uintx, StringTableSize, defaultStringTableSize)\r\nexperimental(uintx, SymbolTableSize, defaultSymbolTableSize)\r\nproduct(bool, UseStringDeduplication, false)\r\nproduct(bool, PrintStringDeduplicationStatistics, false)\r\nproduct(uintx, StringDeduplicationAgeThreshold, 3)\r\ndiagnostic(bool, StringDeduplicationResizeALot, false)\r\ndiagnostic(bool, StringDeduplicationRehashALot, false)\r\ndevelop(bool, TraceDefaultMethods, false)\r\ndevelop(bool, VerifyGenericSignatures, false)\r\nproduct(bool, UseVMInterruptibleIO, false)\r\ndiagnostic(bool, WhiteBoxAPI, false)\r\nproduct(bool, PrintGCCause, true)\r\nexperimental(intx, SurvivorAlignmentInBytes, 0)\r\nproduct(bool , AllowNonVirtualCalls, false)\r\nproduct(ccstr, DumpLoadedClassList, NULL)\r\nproduct(ccstr, SharedClassListFile, NULL)\r\ndiagnostic(ccstr, SharedArchiveFile, NULL)\r\nproduct(ccstr, ExtraSharedClassListFile, NULL)\r\nexperimental(uintx, ArrayAllocatorMallocLimit)\r\nproduct(bool, EnableTracing, false)\r\nproduct(bool, UseLockedTracing, false)\r\nproduct_pd(bool, PreserveFramePointer)\r\n```',86,'https://www.allisterke.com/?p=90',0,'revision','',0),(91,1,'2017-08-09 01:19:28','2017-08-08 17:19:28','java -X可以列出-X选项，但-XX选项好像并没有直接的方法可以列出。从源码里则可以得到。用hg下载源码后grep一下便可得到所有的-X和-XX选项了。\n\n<h2>一部分是单独列出来的</h2>\n\n<pre><code class=\"bash\">cat hotspot/src/share/vm/runtime/arguments.cpp |\n    grep -o \'option, \"-X[^\"]*\"\' |\n    sed -r \'s/.*\"(.*)\".*/\\1/\'\n</code></pre>\n\n<pre><code class=\"nohighlight\">-Xbootclasspath:\n-Xbootclasspath/a:\n-Xbootclasspath/p:\n-Xrun\n-Xnoclassgc\n-Xincgc\n-Xnoincgc\n-Xconcgc\n-Xnoconcgc\n-Xbatch\n-Xmn\n-Xms\n-Xmx\n-XX:MaxHeapSize=\n-Xmaxf\n-Xminf\n-Xss\n-Xoss\n-XX:CodeCacheExpansionSize=\n-Xmaxjitcodesize\n-XX:ReservedCodeCacheSize=\n-XX:IncreaseFirstTierCompileThresholdAt=\n-Xsqnopause\n-Xrs\n-Xusealtsigs\n-Xoptimize\n-Xprof\n-Xconcurrentio\n-Xinternalversion\n-Xprintflags\n-Xint\n-Xmixed\n-Xcomp\n-Xshare:dump\n-Xshare:on\n-Xshare:auto\n-Xshare:off\n-Xverify\n-Xdebug\n-Xnoagent\n-Xboundthreads\n-Xloggc:\n-Xcheck\n-XX:+AggressiveHeap\n-XX:+NeverTenure\n-XX:+AlwaysTenure\n-XX:+CMSPermGenSweepingEnabled\n-XX:-CMSPermGenSweepingEnabled\n-XX:+UseGCTimeLimit\n-XX:-UseGCTimeLimit\n-XX:MaxTLERatio=\n-XX:+ResizeTLE\n-XX:-ResizeTLE\n-XX:+PrintTLE\n-XX:-PrintTLE\n-XX:TLEFragmentationRatio=\n-XX:TLESize=\n-XX:TLEThreadRatio=\n-XX:+UseTLE\n-XX:-UseTLE\n-XX:+DisplayVMOutputToStderr\n-XX:+DisplayVMOutputToStdout\n-XX:+ExtendedDTraceProbes\n-XX:+FullGCALot\n-XX:CMSParPromoteBlocksToClaim=\n-XX:ParCMSPromoteBlocksToClaim=\n-XX:ParallelGCOldGenAllocBufferSize=\n-XX:ParallelGCToSpaceAllocBufferSize=\n-XX:CMSMarkStackSize=\n-XX:G1MarkStackSize=\n-XX:CMSMarkStackSizeMax=\n-XX:ParallelMarkingThreads=\n-XX:ParallelCMSThreads=\n-XX:MaxDirectMemorySize=\n-XX:+UseVMInterruptibleIO\n-XX:+ManagementServer\n-XX:\n-XX:\n-XX:Flags=\n-XX:+PrintVMOptions\n-XX:-PrintVMOptions\n-XX:+IgnoreUnrecognizedVMOptions\n-XX:-IgnoreUnrecognizedVMOptions\n-XX:+PrintFlagsInitial\n-XX:NativeMemoryTracking\n-XX:+PrintFlagsWithComments\n-XX:\n</code></pre>\n\n<h2>另一部分是宏定义的-XX:选项列表</h2>\n\n太多了，有将近一千个\n\n<pre><code class=\"bash\">cat hotspot/src/share/vm/runtime/globals.hpp |\n    grep \'\\\\\'  |\n    grep -v \'\"\' |\n    grep -v \'\\*\' |\n    grep -v \'#\' |\n    sed \'/^\\s*\\\\$/ d\' |\n    sed \'s/^ *//\' |\n    sed \'s/, *\\\\$//\' |\n    sort -r\n</code></pre>\n\n<pre><code class=\"nohighlight\">product(uintx, YoungPLABSize, 4096\nproduct(uintx, YoungGenerationSizeSupplementDecay, 8\nproduct(uintx, YoungGenerationSizeSupplement, 80\nproduct(uintx, YoungGenerationSizeIncrement, 20\nproduct(uintx, TLABWasteTargetPercent, 1\nproduct(uintx, TLABWasteIncrement,    4\nproduct(uintx, TLABSize, 0\nproduct(uintx, TLABRefillWasteFraction,    64\nproduct(uintx, TLABAllocationWeight, 35\nproduct(uintx, ThresholdTolerance, 10\nproduct(uintx, TenuredGenerationSizeSupplementDecay, 2\nproduct(uintx, TenuredGenerationSizeSupplement, 80\nproduct(uintx, TenuredGenerationSizeIncrement, 20\nproduct(uintx, TargetSurvivorRatio,    50\nproduct(uintx, TargetPLABWastePct, 10\nproduct(uintx, SurvivorRatio, 8\nproduct(uintx, SurvivorPadding, 3\nproduct(uintx, StringTableSize, defaultStringTableSize\nproduct(uintx, StringDeduplicationAgeThreshold, 3\nproduct(uintx, QueuedAllocationWarningCount, 0\nproduct(uintx, PromotedPadding, 3\nproduct(uintx, ProcessDistributionStride, 4\nproduct(uintx, PretenureSizeThreshold, 0\nproduct(uintx, PLABWeight, 75\nproduct(uintx, PausePadding, 1\nproduct(uintx, ParGCDesiredObjsFromOverflowList, 20\nproduct(uintx, ParallelOldDeadWoodLimiterStdDev, 80\nproduct(uintx, ParallelOldDeadWoodLimiterMean, 50\nproduct(uintx, ParallelGCThreads, 0\nproduct(uintx, ParallelGCBufferWastePct, 10\nproduct(uintx, OldPLABWeight, 50\nproduct(uintx, OldPLABSize, 1024\nproduct(uintx, NumberOfGCLogFiles, 0\nproduct(uintx, NUMAPageScanRate, 256\nproduct(uintx, NUMAChunkResizeWeight, 20\nproduct(uintx, NewRatio, 2\nproduct(uintx, MinSurvivorRatio, 3\nproduct(uintx, MinRAMFraction, 2\nproduct(uintx, MinMetaspaceFreeRatio,    40\nproduct(uintx, MaxTenuringThreshold,    15\nproduct(uintx, MaxRAMFraction, 4\nproduct(uintx, MaxNewSize, max_uintx\nproduct(uintx, MaxMetaspaceSize, max_uintx\nproduct(uintx, MaxMetaspaceFreeRatio,    70\nproduct(uintx, MaxGCPauseMillis, max_uintx\nproduct(uintx, MaxGCMinorPauseMillis, max_uintx\nproduct(uintx, MaxDirectMemorySize, 0\nproduct(uintx, MarkSweepDeadRatio,     5\nproduct(uintx, MarkSweepAlwaysCompactCount,     4\nproduct(uintx, LargePageSizeInBytes, 0\nproduct(uintx, InitiatingHeapOccupancyPercent, 45\nproduct(uintx, InitialTenuringThreshold,    7\nproduct(uintx, InitialSurvivorRatio, 8\nproduct(uintx, InitialRAMFraction, 64\nproduct(uintx, InitialHeapSize, 0\nproduct(uintx, InitialBootClassLoaderMetaspaceSize\nproduct(uintx, IncreaseFirstTierCompileThresholdAt, 50\nproduct(uintx, HeapMaximumCompactionInterval, 20\nproduct(uintx, HeapFirstMaximumCompactionCount, 3\nproduct(uintx, GCTimeRatio, 99\nproduct(uintx, GCTimeLimit, 98\nproduct(uintx, GCTaskTimeStampEntries, 200\nproduct(uintx, GCPauseIntervalMillis, 0\nproduct(uintx, GCLockerEdenExpansionPercent, 5\nproduct(uintx, GCHeapFreeLimit, 2\nproduct(uintx, GCDrainStackTargetSize, 64\nproduct(uintx, FLSCoalescePolicy, 2\nproduct(uintx, ErgoHeapSizeLimit, 0\nproduct(uintx, DefaultMaxRAMFraction, 4\nproduct(uintx, ConcGCThreads, 0\nproduct(uintx, CMSYieldSleepCount, 0\nproduct(uintx, CMSWorkQueueDrainThreshold, 10\nproduct(uintx, CMSTriggerRatio, 80\nproduct(uintx, CMS_SweepWeight, 75\nproduct(uintx, CMS_SweepTimerThresholdMillis, 10\nproduct(uintx, CMS_SweepPadding, 1\nproduct(uintx, CMSScheduleRemarkSamplingRatio, 5\nproduct(uintx, CMSScheduleRemarkEdenPenetration, 50\nproduct(uintx, CMSRescanMultiple, 32\nproduct(uintx, CMSRemarkVerifyVariant, 1\nproduct(uintx, CMSPrecleanThreshold, 1000\nproduct(uintx, CMSPrecleanNumerator, 2\nproduct(uintx, CMSPrecleanIter, 3\nproduct(uintx, CMSPrecleanDenominator, 3\nproduct(uintx, CMSParPromoteBlocksToClaim, 16\nproduct(uintx, CMSOldPLABToleranceFactor, 4\nproduct(uintx, CMSOldPLABReactivityFactor, 2\nproduct(uintx, CMSOldPLABNumRefills, 4\nproduct(uintx, CMSOldPLABMin, 16\nproduct(uintx, CMSOldPLABMax, 1024\nproduct(uintx, CMSMaxAbortablePrecleanLoops, 0\nproduct(uintx, CMSIsTooFullPercentage, 98\nproduct(uintx, CMSIndexedFreeListReplenish, 4\nproduct(uintx, CMSIncrementalSafetyFactor, 10\nproduct(uintx, CMSIncrementalOffset, 0\nproduct(uintx, CMSIncrementalDutyCycleMin, 0\nproduct(uintx, CMSIncrementalDutyCycle, 10\nproduct(uintx, CMSFullGCsBeforeCompaction, 0\nproduct(uintx, CMS_FLSWeight, 75\nproduct(uintx, CMS_FLSPadding, 1\nproduct(uintx, CMSExpAvgFactor, 50\nproduct(uintx, CMSCoordinatorYieldSleepCount, 10\nproduct(uintx, CMSConcMarkMultiple, 32\nproduct(uintx, CMSClassUnloadingMaxInterval, 0\nproduct(uintx, CMSBootstrapOccupancy, 50\nproduct(uintx, CMSAbortablePrecleanMinWorkPerIteration, 100\nproduct(uintx, AutoGCSelectPauseMillis, 5000\nproduct(uintx, AdaptiveTimeWeight,       25\nproduct(uintx, AdaptiveSizeThroughPutPolicy, 0\nproduct(uintx, AdaptiveSizePolicyWeight, 10\nproduct(uintx, AdaptiveSizePolicyOutputInterval, 0\nproduct(uintx, AdaptiveSizePolicyInitializingSteps, 20\nproduct(uintx, AdaptiveSizePolicyCollectionCostMargin, 50\nproduct(uintx, AdaptiveSizePausePolicy, 0\nproduct(uintx, AdaptiveSizeMajorGCDecayTimeScale, 10\nproduct(uintx, AdaptiveSizeDecrementScaleFactor, 4\nproduct_rw(bool, TraceLoaderConstraints, false\nproduct_rw(bool, TraceClassUnloading, false\nproduct_rw(bool, TraceClassLoading, false\nproduct_rw(bool, PrintHeapAtGC, false\nproduct_rw(bool, PrintHeapAtGCExtended, false\nproduct_pd(uintx, TypeProfileLevel\nproduct_pd(uintx, ReservedCodeCacheSize\nproduct_pd(uintx, NewSizeThreadIncrease\nproduct_pd(uintx, MetaspaceSize\nproduct_pd(uintx, InitialCodeCacheSize\nproduct_pd(uintx, HeapBaseMinAddress\nproduct_pd(uintx, CodeCacheExpansionSize\nproduct_pd(uintx, CMSYoungGenPerWorker\nproduct_pd(uint64_t, MaxRAM\nproduct_pd(intx, VMThreadStackSize\nproduct_pd(intx, ThreadStackSize\nproduct_pd(intx, StackYellowPages\nproduct_pd(intx, StackShadowPages\nproduct_pd(intx, StackRedPages\nproduct_pd(intx, PreInflateSpin\nproduct_pd(intx, OptoLoopAlignment\nproduct_pd(intx, OnStackReplacePercentage\nproduct_pd(intx, InlineSmallCode\nproduct_pd(intx, FreqInlineSize\nproduct_pd(intx, CompileThreshold\nproduct_pd(intx, CompilerThreadStackSize\nproduct_pd(intx, BackEdgeThreshold\nproduct_pd(bool, UseOSErrorReporting\nproduct_pd(bool, UseOnStackReplacement\nproduct_pd(bool, UseMembar\nproduct_pd(bool, UseLargePagesIndividualAllocation\nproduct_pd(bool, UseLargePages\nproduct_pd(bool, TrapBasedNullChecks\nproduct_pd(bool, TieredCompilation\nproduct_pd(bool, RewriteFrequentPairs\nproduct_pd(bool, RewriteBytecodes\nproduct_pd(bool, ResizeTLAB\nproduct_pd(bool, ProfileInterpreter\nproduct_pd(bool, PreserveFramePointer\nproduct_pd(bool, PreferInterpreterNativeStubs\nproduct_pd(bool, NeverActAsServerClassMachine\nproduct_pd(bool, NeedsDeoptSuspend\nproduct_pd(bool, DontYieldALot\nproduct_pd(bool, ConvertSleepToYield\nproduct_pd(bool, BackgroundCompilation\nproduct(intx, WorkAroundNPTLTimedWaitHang, 1\nproduct(intx, VMThreadPriority, -1\nproduct(intx, UseSSE, 99\nproduct(intx, UnguardOnExecutionViolation, 0\nproduct(intx, TypeProfileWidth,     2\nproduct(intx, TypeProfileParmsLimit,    2\nproduct(intx, TypeProfileArgsLimit,     2\nproduct(intx, TraceRedefineClasses, 0\nproduct(intx, TieredStopAtLevel, 4\nproduct(intx, TieredRateUpdateMinTime, 1\nproduct(intx, TieredRateUpdateMaxTime, 25\nproduct(intx, TieredCompileTaskTimeout, 50\nproduct(intx, Tier4MinInvocationThreshold, 600\nproduct(intx, Tier4LoadFeedback, 3\nproduct(intx, Tier4InvocationThreshold, 5000\nproduct(intx, Tier4CompileThreshold, 15000\nproduct(intx, Tier4BackEdgeThreshold, 40000\nproduct(intx, Tier3MinInvocationThreshold, 100\nproduct(intx, Tier3LoadFeedback, 5\nproduct(intx, Tier3InvokeNotifyFreqLog, 10\nproduct(intx, Tier3InvocationThreshold, 200\nproduct(intx, Tier3DelayOn, 5\nproduct(intx, Tier3DelayOff, 2\nproduct(intx, Tier3CompileThreshold, 2000\nproduct(intx, Tier3BackEdgeThreshold,  60000\nproduct(intx, Tier3BackedgeNotifyFreqLog, 13\nproduct(intx, Tier2InvokeNotifyFreqLog, 11\nproduct(intx, Tier2CompileThreshold, 0\nproduct(intx, Tier2BackEdgeThreshold, 0\nproduct(intx, Tier2BackedgeNotifyFreqLog, 14\nproduct(intx, Tier23InlineeNotifyFreqLog, 20\nproduct(intx, Tier0ProfilingStartPercentage, 200\nproduct(intx, Tier0InvokeNotifyFreqLog, 7\nproduct(intx, Tier0BackedgeNotifyFreqLog, 10\nproduct(intx, ThreadPriorityPolicy, 0\nproduct(intx, SuspendRetryDelay, 5\nproduct(intx, SuspendRetryCount, 50\nproduct(intx, StarvationMonitorInterval,    200\nproduct(intx, SoftRefLRUPolicyMSPerMB, 1000\nproduct(intx, SelfDestructTimer, 0\nproduct(intx, SafepointTimeoutDelay, 10000\nproduct(intx, RefDiscoveryPolicy, 0\nproduct(intx, ProfileMaturityPercentage, 20\nproduct(intx, ProfileIntervalsTicks, 100\nproduct(intx, PrintSafepointStatisticsTimeout,  -1\nproduct(intx, PrintSafepointStatisticsCount, 300\nproduct(intx, PrintFLSStatistics, 0\nproduct(intx, PrintFLSCensus, 0\nproduct(intx, PrintCMSStatistics, 0\nproduct(intx, PrefetchScanIntervalInBytes, -1\nproduct(intx, PrefetchFieldsAhead, -1\nproduct(intx, PrefetchCopyIntervalInBytes, -1\nproduct(intx, PerMethodTrapLimit,  100\nproduct(intx, PerMethodRecompilationCutoff, 400\nproduct(intx, PerfMaxStringConstLength, 1024\nproduct(intx, PerfDataSamplingInterval, 50\nproduct(intx, PerBytecodeTrapLimit,  4\nproduct(intx, PerBytecodeRecompilationCutoff, 200\nproduct(intx, ParGCArrayScanChunk, 50\nproduct(intx, NmethodSweepFraction, 16\nproduct(intx, NmethodSweepCheckInterval, 5\nproduct(intx, NmethodSweepActivity, 10\nproduct(intx, MinInliningThreshold, 250\nproduct(intx, MaxTrivialSize, 6\nproduct(intx, MaxRecursiveInlineLevel, 1\nproduct(intx, MaxJNILocalCapacity, 65536\nproduct(intx, MaxJavaStackTraceDepth, 1024\nproduct(intx, MaxInlineSize, 35\nproduct(intx, MaxInlineLevel, 9\nproduct(intx, MaxBCEAEstimateSize, 150\nproduct(intx, MaxBCEAEstimateLevel, 5\nproduct(intx, JavaPriority9_To_OSPriority, -1\nproduct(intx, JavaPriority8_To_OSPriority, -1\nproduct(intx, JavaPriority7_To_OSPriority, -1\nproduct(intx, JavaPriority6_To_OSPriority, -1\nproduct(intx, JavaPriority5_To_OSPriority, -1\nproduct(intx, JavaPriority4_To_OSPriority, -1\nproduct(intx, JavaPriority3_To_OSPriority, -1\nproduct(intx, JavaPriority2_To_OSPriority, -1\nproduct(intx, JavaPriority1_To_OSPriority, -1\nproduct(intx, JavaPriority10_To_OSPriority,-1\nproduct(intx, InterpreterProfilePercentage, 33\nproduct(intx, hashCode, 5\nproduct(intx, FieldsAllocationStyle, 1\nproduct(intx, EmitSync, 0\nproduct(intx, DeferThrSuspendLoopCount,     4000\nproduct(intx, DeferPollingPageLoopCount,     -1\nproduct(intx, DefaultThreadPriority, -1\nproduct(intx, ContendedPaddingWidth, 128\nproduct(intx, CompilerThreadPriority, -1\nproduct(intx, CompilationPolicyChoice, 0\nproduct(intx, CMSMaxAbortablePrecleanTime, 5000\nproduct(intx, CMSInitiatingOccupancyFraction, -1\nproduct(intx, CICompilerCount, CI_COMPILER_COUNT\nproduct(intx, BiasedLockingStartupDelay, 4000\nproduct(intx, BiasedLockingDecayTime, 25000\nproduct(intx, BiasedLockingBulkRevokeThreshold, 40\nproduct(intx, BiasedLockingBulkRebiasThreshold, 20\nproduct(intx, BCEATraceLevel, 0\nproduct(intx,  AllocatePrefetchStyle, 1\nproduct(intx,  AllocatePrefetchStepSize, 16\nproduct(intx,  AllocatePrefetchLines, 3\nproduct(intx,  AllocatePrefetchInstr, 0\nproduct(intx,  AllocatePrefetchDistance, -1\nproduct(intx,  AllocateInstancePrefetchLines, 1\nproduct(double, FLSLargestBlockCoalesceProximity, 0.99\nproduct(double, CMSSmallSplitSurplusPercent, 1.10\nproduct(double, CMSSmallCoalSurplusPercent, 1.05\nproduct(double, CMSLargeSplitSurplusPercent, 1.00\nproduct(double, CMSLargeCoalSurplusPercent, 0.95\nproduct(ccstr, TraceJVMTI, NULL\nproduct(ccstr, SyncKnobs, NULL\nproduct(ccstr, SharedClassListFile, NULL\nproduct(ccstr, ReplayDataFile, NULL\nproduct(ccstr, PerfDataSaveFile, NULL\nproduct(ccstr, InlineDataFile, NULL\nproduct(ccstr, ExtraSharedClassListFile, NULL\nproduct(ccstr, ErrorReportServer, NULL\nproduct(ccstr, ErrorFile, NULL\nproduct(ccstr, DumpLoadedClassList, NULL\nproduct(ccstr, CompileCommandFile, NULL\nproduct(bool, ZeroTLAB, false\nproduct(bool, VMThreadHintNoPreempt, false\nproduct(bool, VerifySharedSpaces, false\nproduct(bool, VerifyMergedCPBytecodes, true\nproduct(bool, UseXMMForArrayCopy, false\nproduct(bool, UseVMInterruptibleIO, false\nproduct(bool, UseTypeProfile, true\nproduct(bool, UseStringDeduplication, false\nproduct(bool, UseSSE42Intrinsics, false\nproduct(bool, UseSignalChaining, true\nproduct(bool, UseSharedSpaces, true\nproduct(bool, UseSHA, false\nproduct(bool, UseSHA512Intrinsics, false\nproduct(bool, UseSHA256Intrinsics, false\nproduct(bool, UseSHA1Intrinsics, false\nproduct(bool, UseSerialGC, false\nproduct(bool, UsePSAdaptiveSurvivorSizePolicy, true\nproduct(bool, UsePopCountInstruction, false\nproduct(bool, UsePerfData, falseInEmbedded\nproduct(bool, UseParNewGC, false\nproduct(bool, UseParallelOldGC, false\nproduct(bool, UseParallelGC, false\nproduct(bool, UseNUMAInterleaving, false\nproduct(bool, UseNUMA, false\nproduct(bool, UseMaximumCompactionOnSystemGC, true\nproduct(bool, UseLWPSynchronization, true\nproduct(bool, UseLoopCounter, true\nproduct(bool, UseLockedTracing, false\nproduct(bool, UseLargePagesInMetaspace, false\nproduct(bool, UseInterpreter, true\nproduct(bool, UseInlineCaches, true\nproduct(bool, UseHeavyMonitors, false\nproduct(bool, UseGCTaskAffinity, false\nproduct(bool, UseGCOverheadLimit, true\nproduct(bool, UseGCLogFileRotation, false\nproduct(bool, UseG1GC, false\nproduct(bool, UseFastJNIAccessors, true\nproduct(bool, UseFastEmptyMethods, true\nproduct(bool, UseFastAccessorMethods, true\nproduct(bool, UseDynamicNumberOfGCThreads, false\nproduct(bool, UseCRC32Intrinsics, false\nproduct(bool, UseCounterDecay, true\nproduct(bool, UseConcMarkSweepGC, false\nproduct(bool, UseCompiler, true\nproduct(bool, UseCompilerSafepoints, true\nproduct(bool, UseCodeCacheFlushing, true\nproduct(bool, UseCMSInitiatingOccupancyOnly, false\nproduct(bool, UseCMSCompactAtFullCollection, true\nproduct(bool, UseCMSCollectionPassing, true\nproduct(bool, UseCMSBestFit, true\nproduct(bool, UseBoundThreads, true\nproduct(bool, UseBiasedLocking, true\nproduct(bool, UseAutoGCSelectPolicy, false\nproduct(bool, UseAltSigs, false\nproduct(bool, UseAESIntrinsics, false\nproduct(bool, UseAES, false\nproduct(bool, UseAdaptiveSizePolicyWithSystemGC, false\nproduct(bool, UseAdaptiveSizePolicy, true\nproduct(bool, UseAdaptiveSizePolicyFootprintGoal, true\nproduct(bool, UseAdaptiveSizeDecayMajorGCCost, true\nproduct(bool, UseAdaptiveNUMAChunkSizing, true\nproduct(bool, UseAdaptiveGenerationSizePolicyAtMinorCollection, true\nproduct(bool, UseAdaptiveGenerationSizePolicyAtMajorCollection, true\nproduct(bool, UseAdaptiveGCBoundary, false\nproduct(bool, UnlinkSymbolsALot, false\nproduct(bool, TransmitErrorReport, false\nproduct(bool, TraceSuspendWaitFailures, false\nproduct(bool, TraceSafepointCleanupTime, false\nproduct(bool, TraceParallelOldGCTasks, false\nproduct(bool, TraceMonitorInflation, false\nproduct(bool, TraceMetadataHumongousAllocation, false\nproduct(bool, TraceGen1Time, false\nproduct(bool, TraceGen0Time, false\nproduct(bool, TraceDynamicGCThreads, false\nproduct(bool, TraceClassResolution, false\nproduct(bool, TraceClassPaths, false\nproduct(bool, TraceClassLoadingPreorder, false\nproduct(bool, TraceBiasedLocking, false\nproduct(bool, TLABStats, true\nproduct(bool, ThreadPriorityVerbose, false\nproduct(bool, SuppressFatalErrorMessage, false\nproduct(bool, StressLdcRewrite, false\nproduct(bool, StartAttachListener, false\nproduct(bool, StackTraceInThrowable, true\nproduct(bool, ShowMessageBoxOnError, false\nproduct(bool, ScavengeBeforeFullGC, true\nproduct(bool, SafepointTimeout, false\nproduct(bool, RestrictContended, true\nproduct(bool, RestoreMXCSROnJNICalls, false\nproduct(bool, ResizePLAB, true\nproduct(bool, ResizeOldPLAB, true\nproduct(bool, RequireSharedSpaces, false\nproduct(bool, RelaxAccessControlCheck, false\nproduct(bool, RegisterFinalizersAtInit, true\nproduct(bool, ReflectionWrapResolutionErrors, true\nproduct(bool, ReduceSignalUsage, false\nproduct(bool, RangeCheckElimination, true\nproduct(bool, PSChunkLargeArrays, true\nproduct(bool, ProfileVM, false\nproduct(bool, ProfilerRecordPC, false\nproduct(bool, ProfilerPrintByteCodeStatistics, false\nproduct(bool, ProfileIntervals, false\nproduct(bool, PrintWarnings, true\nproduct(bool, PrintVMQWaitTime, false\nproduct(bool, PrintVMOptions, false\nproduct(bool, PrintTLAB, false\nproduct(bool, PrintTieredEvents, false\nproduct(bool, PrintTenuringDistribution, false\nproduct(bool, PrintStringTableStatistics, false\nproduct(bool, PrintStringDeduplicationStatistics, false\nproduct(bool, PrintSharedSpaces, false\nproduct(bool, PrintSharedDictionary, false\nproduct(bool, PrintSharedArchiveAndExit, false\nproduct(bool, PrintSafepointStatistics, false\nproduct(bool, PrintReferenceGC, false\nproduct(bool, PrintPromotionFailure, false\nproduct(bool, PrintPLAB, false\nproduct(bool, PrintParallelOldGCPhaseTimes, false\nproduct(bool, PrintOopAddress, false\nproduct(bool, PrintOldPLAB, false\nproduct(bool, PrintJNIResolving, false\nproduct(bool, PrintJNIGCStalls, false\nproduct(bool, PrintHeapAtSIGBREAK, true\nproduct(bool, PrintGCTaskTimeStamps, false\nproduct(bool, PrintGCCause, true\nproduct(bool, PrintGCApplicationStoppedTime, false\nproduct(bool, PrintGCApplicationConcurrentTime, false\nproduct(bool, PrintFlagsInitial, false\nproduct(bool, PrintFlagsFinal, false\nproduct(bool, PrintCompilation, false\nproduct(bool, PrintCommandLineFlags, false\nproduct(bool, PrintCodeCacheOnCompilation, false\nproduct(bool, PrintCodeCache, false\nproduct(bool, PrintCMSInitiationStatistics, false\nproduct(bool, PrintAdaptiveSizePolicy, false\nproduct(bool, PreserveAllAnnotations, false\nproduct(bool, PerfDisableSharedMem, false\nproduct(bool, PerfDataSaveToFile, false\nproduct(bool, PerfBypassFileSystemCheck, false\nproduct(bool, PerfAllowAtExitRegistration, false\nproduct(bool, ParGCUseLocalOverflow, false\nproduct(bool, ParGCTrimOverflow, true\nproduct(bool, ParallelRefProcEnabled, false\nproduct(bool, ParallelRefProcBalancingEnabled, true\nproduct(bool, ParallelGCVerbose, false\nproduct(bool, OmitStackTraceInFastThrow, true\nproduct(bool, NUMAStats, false\nproduct(bool, NeverTenure, false\nproduct(bool, MustCallLoadClassInternal, false\nproduct(bool, MethodFlushing, true\nproduct(bool, MaxFDLimit, true\nproduct(bool, ManagementServer, false\nproduct(bool, LazyBootClassLoader, true\nproduct(bool, JNIDetachReleasesMonitors, true\nproduct(bool, JavaMonitorsInStackTrace, true\nproduct(bool, Inline, true\nproduct(bool, IgnoreUnrecognizedVMOptions, false\nproduct(bool, IgnoreEmptyClassPaths, false\nproduct(bool, GCLockerInvokesConcurrent, false\nproduct(bool, ForceTimeHighResolution, false\nproduct(bool, ForceNUMA, false\nproduct(bool, FLSAlwaysCoalesceLarge, false\nproduct(bool, FilterSpuriousWakeups, true\nproduct(bool, FastTLABRefill, true\nproduct(bool, FailOverToOldVerifier, true\nproduct(bool, ExtendedDTraceProbes,    false\nproduct(bool, ExplicitGCInvokesConcurrent, false\nproduct(bool, ExplicitGCInvokesConcurrentAndUnloadsClasses, false\nproduct(bool, ExitOnOutOfMemoryError, false\nproduct(bool, EstimateArgEscape, true\nproduct(bool, EnableTracing, false\nproduct(bool, EnableContended, true\nproduct(bool, EagerXrunInit, false\nproduct(bool, DumpSharedSpaces, false\nproduct(bool, DumpReplayDataOnError, true\nproduct(bool, DTraceMonitorProbes, false\nproduct(bool, DTraceMethodProbes, false\nproduct(bool, DTraceAllocProbes, false\nproduct(bool, DontCompileHugeMethods, true\nproduct(bool, DisplayVMOutputToStdout, false\nproduct(bool, DisplayVMOutputToStderr, false\nproduct(bool, DisableExplicitGC, false\nproduct(bool, DisableAttachMechanism, false\nproduct(bool, DeoptimizeRandom, false\nproduct(bool, Debugging, false\nproduct(bool, CriticalJNINatives, true\nproduct(bool, CreateMinidumpOnCrash, false\nproduct(bool, CrashOnOutOfMemoryError, false\nproduct(bool, ConvertYieldToSleep, false\nproduct(bool, CompilerThreadHintNoPreempt, true\nproduct(bool, CompactFields, true\nproduct(bool, CollectGen0First, false\nproduct(bool, CMSYield, true\nproduct(bool, CMSSplitIndexedFreeListBlocks, true\nproduct(bool, CMSScavengeBeforeRemark, false\nproduct(bool, CMSReplenishIntermediate, true\nproduct(bool, CMSPrintObjectsInDump, false\nproduct(bool, CMSPrintEdenSurvivorChunks, false\nproduct(bool, CMSPrintChunksInDump, false\nproduct(bool, CMSPrecleanSurvivors2, true\nproduct(bool, CMSPrecleanSurvivors1, false\nproduct(bool, CMSPrecleanRefLists2, false\nproduct(bool, CMSPrecleanRefLists1, true\nproduct(bool, CMSPrecleaningEnabled, true\nproduct(bool, CMSPLABRecordAlways, true\nproduct(bool, CMSParallelSurvivorRemarkEnabled, true\nproduct(bool, CMSParallelRemarkEnabled, true\nproduct(bool, CMSParallelInitialMarkEnabled, true\nproduct(bool, CMSOldPLABResizeQuicker, false\nproduct(bool, CMSLoopWarn, false\nproduct(bool, CMSIncrementalPacing, true\nproduct(bool, CMSIncrementalMode, false\nproduct(bool, CMSExtrapolateSweep, false\nproduct(bool, CMSEdenChunksRecordAlways, true\nproduct(bool, CMSDumpAtPromotionFailure, false\nproduct(bool, CMSConcurrentMTEnabled, true\nproduct(bool, CMSCompactWhenClearAllSoftRefs, true\nproduct(bool, CMSCleanOnEnter, true\nproduct(bool, CMSClassUnloadingEnabled, true\nproduct(bool, CMSAbortSemantics, false\nproduct(bool, ClipInlining, true\nproduct(bool, ClassUnloadingWithConcurrentMark, true\nproduct(bool, ClassUnloading, true\nproduct(bool, CITime, false\nproduct(bool, CICompilerCountPerCPU, false\nproduct(bool, CheckJNICalls, false\nproduct(bool, CheckEndorsedAndExtDirs, false\nproduct(bool, BytecodeVerificationRemote, true\nproduct(bool, BytecodeVerificationLocal, false\nproduct(bool, BindGCTaskThreadsToCPUs, false\nproduct(bool, AssumeMP, false\nproduct(bool, AssertOnSuspendWaitFailure, false\nproduct(bool, AlwaysTenure, false\nproduct(bool, AlwaysRestoreFPU, false\nproduct(bool, AlwaysPreTouch, false\nproduct(bool, AlwaysLockClassLoader, false\nproduct(bool, AlwaysCompileLoopMethods, false\nproduct(bool, AlwaysActAsServerClassMachine, false\nproduct(bool, AllowUserSignalHandlers, false\nproduct(bool, AllowParallelDefineClass, false\nproduct(bool , AllowNonVirtualCalls, false\nproduct(bool, AllowJNIEnvProxy, false\nproduct(bool, AggressiveOpts, false\nproduct(bool, AdjustConcurrency, false\nnotproduct(uintx, WarnOnStalledSpinLock, 0\nnotproduct(uintx, ParGCWorkQueueOverflowInterval, 1000\nnotproduct(uintx, HandleAllocationLimit, 1024\nnotproduct(uintx, ErrorHandlerTest, 0\nnotproduct(uintx, CMSMarkStackOverflowInterval, 1000\nnotproduct(intx, ZombieALotInterval,     5\nnotproduct(intx, SweeperLogEntries, 1024\nnotproduct(intx, ScavengeALotInterval,     1\nnotproduct(intx, MemProfilingInterval, 500\nnotproduct(intx, MaxSubklassPrintSize, 4\nnotproduct(intx, MaxElementPrintSize, 256\nnotproduct(intx, FullGCALotStart,     0\nnotproduct(intx, FullGCALotInterval,     1\nnotproduct(intx, DeoptimizeALotInterval,     5\nnotproduct(intx, CompileTheWorldStopAt, max_jint\nnotproduct(intx, CompileTheWorldStartAt,     1\nnotproduct(intx, CompileTheWorldSafepointInterval, 100\nnotproduct(intx, CICrashAt, -1\nnotproduct(intx, AssertRepeat, 1\nnotproduct(ccstr, AbortVMOnException, NULL\nnotproduct(ccstr, AbortVMOnExceptionMessage, NULL\nnotproduct(bool, ZombieALot, false\nnotproduct(bool, ZapVMHandleArea, trueInDebug\nnotproduct(bool, ZapStackSegments, trueInDebug\nnotproduct(bool, ZapDeadLocalsOld, false\nnotproduct(bool, WalkStackALot, false\nnotproduct(bool, VerifyLastFrame, false\nnotproduct(bool, VerifyJNIEnvThread, false\nnotproduct(bool, VerifyCodeCacheOften, false\nnotproduct(bool, VerboseInternalVMTests, false\nnotproduct(bool, TraceZapDeadLocals, false\nnotproduct(bool, TraceScavenge, false\nnotproduct(bool, TraceRuntimeCalls, false\nnotproduct(bool, TraceOnStackReplacement, false\nnotproduct(bool, TraceMarkSweep, false\nnotproduct(bool, TraceLivenessQuery, false\nnotproduct(bool, TraceJVMCalls, false\nnotproduct(bool, TraceInvocationCounterOverflow, false\nnotproduct(bool, TraceCodeBlobStacks, false\nnotproduct(bool, TimeCompiler, false\nnotproduct(bool, StrictSafepointChecks, trueInDebug\nnotproduct(bool, StressDerivedPointers, false\nnotproduct(bool, StressCriticalJNINatives, false\nnotproduct(bool, ScavengeALot, false\nnotproduct(bool, PromotionFailureALot, false\nnotproduct(bool, ProfilerCheckIntervals, false\nnotproduct(bool, PrintVtableStats, false\nnotproduct(bool, PrintSystemDictionaryAtExit, false\nnotproduct(bool, PrintSymbolTableSizeHistogram, false\nnotproduct(bool, PrintRewrites, false\nnotproduct(bool, PrintMethodStatistics, false\nnotproduct(bool, PrintMallocFree, false\nnotproduct(bool, PrintFlagsWithComments, false\nnotproduct(bool, PrintFieldLayout, false\nnotproduct(bool, PrintClassStatistics, false\nnotproduct(bool, ParGCWorkQueueOverflowALot, false\nnotproduct(bool, LogSweeper, false\nnotproduct(bool, IgnoreLockingAssertions, false\nnotproduct(bool, ICMissHistogram, false\nnotproduct(bool, GCALotAtAllSafepoints, false\nnotproduct(bool, ExitVMOnVerifyError, false\nnotproduct(bool, ExitOnFullCodeCache, false\nnotproduct(bool, ExecuteInternalVMTests, false\nnotproduct(bool, CrashGCForDumpingJavaThread, false\nnotproduct(bool, CountRuntimeCalls, false\nnotproduct(bool, CountRemovableExceptions, false\nnotproduct(bool, CountJVMCalls, false\nnotproduct(bool, CollectIndexSetStatistics, false\nnotproduct(bool, CMSVerifyReturnedBytes, false\nnotproduct(bool, CMSMarkStackOverflowALot, false\nnotproduct(bool, CIObjectFactoryVerify, false\nnotproduct(bool, CheckOopishValues, false\nnotproduct(bool, CheckMemoryInitialization, false\nnotproduct(bool, CheckCompressedOops, true\nnotproduct(bool, CheckAssertionStatusDirectives, false\nNOT_EMBEDDED(diagnostic(intx, GuaranteedSafepointInterval, 1000\nmanageable(uintx, MinHeapFreeRatio, 40\nmanageable(uintx, MaxHeapFreeRatio, 70\nmanageable(intx, CMSWaitDuration, 2000\nmanageable(intx, CMSTriggerInterval, -1\nmanageable(intx, CMSAbortablePrecleanWaitMillis, 100\nmanageable(ccstr, HeapDumpPath, NULL\nmanageable(bool, PrintGCTimeStamps, false\nmanageable(bool, PrintGCID, false\nmanageable(bool, PrintGC, false\nmanageable(bool, PrintGCDetails, false\nmanageable(bool, PrintGCDateStamps, false\nmanageable(bool, PrintConcurrentLocks, false\nmanageable(bool, PrintClassHistogram, false\nmanageable(bool, PrintClassHistogramBeforeFullGC, false\nmanageable(bool, PrintClassHistogramAfterFullGC, false\nmanageable(bool, HeapDumpOnOutOfMemoryError, false\nmanageable(bool, HeapDumpBeforeFullGC, false\nmanageable(bool, HeapDumpAfterFullGC, false\nlp64_product(intx, ObjectAlignmentInBytes, 8\nlp64_product(bool, UseCompressedOops, false\nlp64_product(bool, UseCompressedClassPointers, false\nexperimental(uintx, WorkStealingYieldsBeforeSleep, 5000\nexperimental(uintx, WorkStealingSpinToYieldRatio, 10\nexperimental(uintx, WorkStealingSleepMillis, 1\nexperimental(uintx, WorkStealingHardSpins, 4096\nexperimental(uintx, SymbolTableSize, defaultSymbolTableSize\nexperimental(uintx, ArrayAllocatorMallocLimit\nexperimental(intx, SurvivorAlignmentInBytes, 0\nexperimental(intx, SpecTrapLimitExtraEntries,  3\nexperimental(intx, PredictedLoadedClassCount, 0\nexperimental(intx, PerMethodSpecTrapLimit,  5000\nexperimental(double, ObjectCountCutOffPercent, 0.5\nexperimental(bool, UseMemSetInBOT, true\nexperimental(bool, UseCriticalJavaThreadPriority, false\nexperimental(bool, UseCriticalCompilerThreadPriority, false\nexperimental(bool, UseCriticalCMSThreadPriority, false\nexperimental(bool, UseCGroupMemoryLimitForHeap, false\nexperimental(bool, UnlockExperimentalVMOptions, false\nexperimental(bool, TrustFinalNonStaticFields, false\nEMBEDDED_ONLY(product(intx, GuaranteedSafepointInterval, 0\ndiagnostic(uintx, VerifyGCStartAt,   0\ndiagnostic(uintx, ParGCStridesPerThread, 2\ndiagnostic(uintx, MallocMaxTestWords,     0\ndiagnostic(uintx, LogEventsBufferEntries, 10\ndiagnostic(uintx, GCLockerRetryAllocationCount, 2\ndiagnostic(uintx, CPUForCMSThread, 0\ndiagnostic(intx, VerifyGCLevel,     0\ndiagnostic(intx, ScavengeRootsInCode, 2\ndiagnostic(intx, ParGCCardsPerStrideChunk, 256\ndiagnostic(intx, MallocVerifyStart,     0\ndiagnostic(intx, MallocVerifyInterval,     0\ndiagnostic(ccstr, SharedArchiveFile, NULL\ndiagnostic(ccstr, PrintAssemblyOptions, NULL\ndiagnostic(ccstr, PauseAtStartupFile, NULL\ndiagnostic(ccstr, LogFile, NULL\ndiagnostic(bool, WhiteBoxAPI, false\ndiagnostic(bool, VerifyStringTableAtExit, false\ndiagnostic(bool, VerifySilently, false\ndiagnostic(bool, VerifyRememberedSets, false\ndiagnostic(bool, VerifyObjectStartArray, true\ndiagnostic(bool, VerifyMethodHandles, trueInDebug\ndiagnostic(bool, VerifyDuringStartup, false\ndiagnostic(bool, VerifyDuringGC, false\ndiagnostic(bool, VerifyBeforeIteration, false\ndiagnostic(bool, VerifyBeforeGC, false\ndiagnostic(bool, VerifyBeforeExit, trueInDebug\ndiagnostic(bool, VerifyAfterGC, false\ndiagnostic(bool, VerifyAdapterCalls, trueInDebug\ndiagnostic(bool, VerboseVerification, false\ndiagnostic(bool, UseNewCode, false\ndiagnostic(bool, UseNewCode3, false\ndiagnostic(bool, UseNewCode2, false\ndiagnostic(bool, UnsyncloadClass, false\ndiagnostic(bool, UnlockDiagnosticVMOptions, trueInDebug\ndiagnostic(bool, TraceNMethodInstalls, false\ndiagnostic(bool, TraceJVMTIObjectTagging, false\ndiagnostic(bool, TraceGCTaskThread, false\ndiagnostic(bool, StringDeduplicationResizeALot, false\ndiagnostic(bool, StringDeduplicationRehashALot, false\ndiagnostic(bool, ShowHiddenFrames, false\ndiagnostic(bool, SerializeVMOutput, true\ndiagnostic(bool, PrintStubCode, false\ndiagnostic(bool, PrintSignatureHandlers, false\ndiagnostic(bool, PrintNMTStatistics, false\ndiagnostic(bool, PrintNMethods, false\ndiagnostic(bool, PrintNativeNMethods, false\ndiagnostic(bool, PrintMethodHandleStubs, false\ndiagnostic(bool, PrintMethodFlushingStatistics, false\ndiagnostic(bool, PrintInterpreter, false\ndiagnostic(bool, PrintInlining, false\ndiagnostic(bool, PrintDTraceDOF, false\ndiagnostic(bool, PrintCompressedOopsMode, false\ndiagnostic(bool, PrintCompilation2, false\ndiagnostic(bool, PrintBiasedLockingStatistics, false\ndiagnostic(bool, PrintAssembly, false\ndiagnostic(bool, PrintAdapterHandlers, false\ndiagnostic(bool, PauseAtStartup,      false\ndiagnostic(bool, PauseAtExit, false\ndiagnostic(bool, ParallelGCRetainPLAB, false\ndiagnostic(bool, LogVMOutput, false\ndiagnostic(bool, LogEvents, true\ndiagnostic(bool, LogCompilation, false\ndiagnostic(bool, IgnoreUnverifiableClassesDuringDump, false\ndiagnostic(bool, GCParallelVerificationEnabled, true\ndiagnostic(bool, ForceUnreachable, false\ndiagnostic(bool, ForceDynamicNumberOfGCThreads, false\ndiagnostic(bool, FoldStableValues, true\ndiagnostic(bool, FLSVerifyLists, false\ndiagnostic(bool, FLSVerifyIndexTable, false\ndiagnostic(bool, FLSVerifyAllHeapReferences, false\ndiagnostic(bool, EnableInvokeDynamic, true\ndiagnostic(bool, DisplayVMOutput, true\ndiagnostic(bool, DeferInitialCardMark, false\ndiagnostic(bool, DebugNonSafepoints, trueInDebug\ndiagnostic(bool, BlockOffsetArrayUseUnallocatedBlock, false\ndiagnostic(bool, BindCMSThreadToCPU, false\ndevelop(uintx, TotalHandleAllocationLimit, 1024\ndevelop(uintx, PromotionFailureALotInterval, 5\ndevelop(uintx, PromotionFailureALotCount, 1000\ndevelop(uintx, PreallocatedOutOfMemoryErrorCount, 4\ndevelop(uintx, ParallelOldGCSplitInterval, 3\ndevelop(uintx, ObjArrayMarkingStride, 512\ndevelop(uintx, MetadataAllocationFailALotInterval, 1000\ndevelop(uintx, MaxVirtMemFraction, 2\ndevelop(uintx, GCWorkerDelayMillis, 0\ndevelop(uintx, GCExpandToAllocateDelayMillis, 0\ndevelop(uintx, CodeCacheSegmentSize, 64 PPC64_ONLY(+64)\ndevelop(uintx, CMSCheckInterval, 1000\ndevelop(uintx, AdaptiveSizePolicyReadyThreshold, 5\ndevelop(uintx, AdaptiveSizePolicyGCTimeLimitThreshold, 5\ndevelop_pd(uintx, JVMInvokeMethodSlack\ndevelop_pd(uintx, CodeCacheMinimumUseSpace\ndevelop_pd(uintx, CodeCacheMinBlockLength\ndevelop_pd(intx, InlineFrequencyCount\ndevelop_pd(intx, CodeEntryAlignment\ndevelop_pd(bool, UncommonNullCast\ndevelop_pd(bool, ShareVtableStubs\ndevelop_pd(bool, ProfileTraps\ndevelop_pd(bool, InlineIntrinsics\ndevelop_pd(bool, ImplicitNullChecks\ndevelop_pd(bool, CICompileOSR\ndevelop(intx, TraceBytecodesAt, 0\ndevelop(intx, StopInterpreterAt, 0\ndevelop(intx, StackPrintLimit, 100\ndevelop(intx, ReplaySuppressInitializers, 2\ndevelop(intx, PSAdaptiveSizePolicyResizeVirtualSpaceAlot, -1\ndevelop(intx, ProfilerPCTickThreshold,    15\ndevelop(intx, ProfilerNumberOfStubMethods, 25\ndevelop(intx, ProfilerNumberOfRuntimeStubNodes, 25\ndevelop(intx, ProfilerNumberOfInterpretedMethods, 25\ndevelop(intx, ProfilerNumberOfCompiledMethods, 25\ndevelop(intx, ProfilerNodeSize,  1024\ndevelop(intx, OSROnlyBCI, -1\ndevelop(intx, NewCodeParameter,      0\ndevelop(intx, MinSleepInterval,     1\ndevelop(intx, MinOopMapAllocation,     8\ndevelop(intx, MethodHistogramCutoff, 100\ndevelop(intx, MaxRecompilationSearchLength,    10\ndevelop(intx, MaxInterpretedSearchLength,     3\ndevelop(intx, MaxForceInlineLevel, 100\ndevelop(intx, MallocCatchPtr, -1\ndevelop(intx, LongCompileThreshold,     50\ndevelop(intx, InlineThrowMaxSize,   200\ndevelop(intx, InlineThrowCount,    50\ndevelop(intx, InlineFrequencyRatio,    20\ndevelop(intx, HugeMethodLimit,  8000\ndevelop(intx, FastSuperclassLimit, 8\ndevelop(intx, DontYieldALotInterval,    10\ndevelop(intx, DesiredMethodLimit,  8000\ndevelop(intx, CounterHalfLifeTime,    30\ndevelop(intx, CounterDecayMinIntervalLength,   500\ndevelop(intx, ConcGCYieldTimeout, 0\ndevelop(intx, CMSDictionaryChoice, 0\ndevelop(intx, CIStopOSR, max_jint\ndevelop(intx, CIStop, max_jint\ndevelop(intx, CIStartOSR, 0\ndevelop(intx, CIStart, 0\ndevelop(intx, CIFireOOMAt,    -1\ndevelop(intx, CIBreakAtOSR, -1\ndevelop(intx, CIBreakAt, -1\ndevelop(intx, BinarySwitchThreshold, 5\ndevelop(intx, BciProfileWidth,      2\ndevelop(bool, ZapUnusedHeapArea, trueInDebug\ndevelop(bool, ZapResourceArea, trueInDebug\ndevelop(bool, ZapJNIHandleArea, trueInDebug\ndevelop(bool, ZapFillerObjects, trueInDebug\ndevelop(bool, ZapDeadCompiledLocals, false\ndevelop(bool, WizardMode, false\ndevelop(bool, VerifyThread, false\ndevelop(bool, VerifyStack, false\ndevelop(bool, VerifyStackAtCalls, false\ndevelop(bool, VerifyReflectionBytecodes, false\ndevelop(bool, VerifyOops, false\ndevelop(bool, VerifyJNIFields, trueInDebug\ndevelop(bool, VerifyGenericSignatures, false\ndevelop(bool, VerifyFPU, false\ndevelop(bool, VerifyDependencies, trueInDebug\ndevelop(bool, VerifyDataPointer, trueInDebug\ndevelop(bool, VerifyCompiledCode, false\ndevelop(bool, VerifyBlockOffsetArray, false\ndevelop(bool, VerifyAdapterSharing, false\ndevelop(bool, VerifyActivationFrameSize, false\ndevelop(bool, Verbose, false\ndevelop(bool, UseStrictFP, true\ndevelop(bool, UseStackBanging, true\ndevelop(bool, UseRelocIndex, false\ndevelop(bool, UsePthreads, false\ndevelop(bool, UsePrivilegedStack, true\ndevelop(bool, UseNewReflection, true\ndevelop(bool, UseMallocOnly, false\ndevelop(bool, UseLoopSafepoints, true\ndevelop(bool, UseFastSignatureHandlers, true\ndevelop(bool, UseFakeTimers, false\ndevelop(bool, UseDetachedThreads, true\ndevelop(bool, UseCMSAdaptiveFreeLists, true\ndevelop(bool, UseCHA, true\ndevelop(bool, UseAsyncConcMarkSweepGC, true\ndevelop(bool, TypeProfileCasts,  true\ndevelop(bool, TraceZapUnusedHeapArea, false\ndevelop(bool, TraceWorkGang, false\ndevelop(bool, TraceVMOperation, false\ndevelop(bool, TraceThreadEvents, false\ndevelop(bool, TraceStartupTime, false\ndevelop(bool, TraceSafepoint, false\ndevelop(bool, TraceRelocator, false\ndevelop(bool, TraceReferenceGC, false\ndevelop(bool, TraceProtectionDomainVerification, false\ndevelop(bool, TraceProfileInterpreter, false\ndevelop(bool, TracePcPatching, false\ndevelop(bool, TraceParallelOldGCSummaryPhase, false\ndevelop(bool, TraceParallelOldGCMarkingPhase, false\ndevelop(bool, TraceParallelOldGCDensePrefix, false\ndevelop(bool, TraceParallelOldGCCompactionPhase, false\ndevelop(bool, TracePageSizes, false\ndevelop(bool, TraceOopMapRewrites, false\ndevelop(bool, TraceOopMapGeneration, false\ndevelop(bool, TraceNewOopMapGeneration, false\ndevelop(bool, TraceNewOopMapGenerationDetailed, false\ndevelop(bool, TraceMonitorMismatch, false\ndevelop(bool, TraceMethodReplacement, false\ndevelop(bool, TraceMethodHandles, false\ndevelop(bool, TraceMetavirtualspaceAllocation, false\ndevelop(bool, TraceMetadataChunkAllocation, false\ndevelop(bool, TraceLongCompiles, false\ndevelop(bool, TraceLivenessGen, false\ndevelop(bool, TraceJumps, false\ndevelop(bool, TraceJNIHandleAllocation, false\ndevelop(bool, TraceJNICalls, false\ndevelop(bool, TraceJavaAssertions, false\ndevelop(bool, TraceItables, false\ndevelop(bool, TraceInvokeDynamic, false\ndevelop(bool, TraceInlineCacheClearing, false\ndevelop(bool, TraceICs, false\ndevelop(bool, TraceICBuffer, false\ndevelop(bool, TraceHandleAllocation, false\ndevelop(bool, TraceGCTaskQueue, false\ndevelop(bool, TraceGCTaskManager, false\ndevelop(bool, TraceFrequencyInlining, false\ndevelop(bool, TraceFinalizerRegistration, false\ndevelop(bool, TraceExceptions, false\ndevelop(bool, TraceDerivedPointers, false\ndevelop(bool, TraceDependencies, false\ndevelop(bool, TraceDeoptimization, false\ndevelop(bool, TraceDefaultMethods, false\ndevelop(bool, TraceCreateZombies, false\ndevelop(bool, TraceCompiledIC, false\ndevelop(bool, TraceCompilationPolicy, false\ndevelop(bool, TraceCMSState, false\ndevelop(bool, TraceClearedExceptions, false\ndevelop(bool, TraceClassLoaderData, false\ndevelop(bool, TraceClassInitialization, false\ndevelop(bool, TraceCardTableModRefBS, false\ndevelop(bool, TraceCallFixup, false\ndevelop(bool, TraceBytecodes, false\ndevelop(bool, TraceBlockOffsetTable, false\ndevelop(bool, TraceAdaptiveGCBoundary, false\ndevelop(bool, TimeOopMap, false\ndevelop(bool, TimeOopMap2, false\ndevelop(bool, TimeLivenessAnalysis, false\ndevelop(bool, TimeCompilationPolicy, false\ndevelop(bool, StressRewriter, false\ndevelop(bool, StressMethodComparator, false\ndevelop(bool, StressCompiledExceptionHandlers, false\ndevelop(bool, StressCodeBuffers, false\ndevelop(bool, ShowSafepointMsgs, false\ndevelop(bool, ScavengeWithObjectsInToSpace, false\ndevelop(bool, SafepointALot, false\ndevelop(bool, RotateCMSCollectionTypes, false\ndevelop(bool, ReplayIgnoreInitErrors, false\ndevelop(bool, ReplayCompiles, false\ndevelop(bool, RegisterReferences, true\ndevelop(bool, PSAdjustYoungGenForMajorPause, false\ndevelop(bool, PSAdjustTenuredGenForMinorPause, false\ndevelop(bool, ProtectionDomainVerification, true\ndevelop(bool, PrintVtables, false\ndevelop(bool, PrintVMMessages, true\ndevelop(bool, PrintRelocations, false\ndevelop(bool, PrintMiscellaneous, false\ndevelop(bool, PrintMethodFlushing, false\ndevelop(bool, PrintMethodData, false\ndevelop(bool, PrintMallocStatistics, false\ndevelop(bool, PrintMalloc, false\ndevelop(bool, PrintJVMWarnings, false\ndevelop(bool, PrintExceptionHandlers, false\ndevelop(bool, PrintDependencies, false\ndevelop(bool, PrintDebugInfo, false\ndevelop(bool, PrintCodeCacheExtension, false\ndevelop(bool, PrintCodeCache2, false\ndevelop(bool, PrintBytecodePairHistogram, false\ndevelop(bool, PrintBytecodeHistogram, false\ndevelop(bool, PerfTraceMemOps, false\ndevelop(bool, PerfTraceDataCreation, false\ndevelop(bool, ParallelOldGCSplitALot, false\ndevelop(bool, NoYieldsInMicrolock, false\ndevelop(bool, MetadataAllocationFailALot, false\ndevelop(bool, MemProfiling, false\ndevelop(bool, LoadLocalVariableTypeTables, true\ndevelop(bool, LoadLocalVariableTables, true\ndevelop(bool, LoadLineNumberTables, true\ndevelop(bool, LargePagesIndividualAllocationInjectError, false\ndevelop(bool, InterceptOSException, false\ndevelop(bool, InlineUnsafeOps, true\ndevelop(bool, InlineThreadNatives, true\ndevelop(bool, InlineObjectHash, true\ndevelop(bool, InlineNatives, true\ndevelop(bool, InlineMathNatives, true\ndevelop(bool, InlineClassNatives, true\ndevelop(bool, InlineArrayCopy, true\ndevelop(bool, IgnoreRewrites, false\ndevelop(bool, IgnoreLibthreadGPFault, false\ndevelop(bool, GenerateSynchronizationCode, true\ndevelop(bool, GenerateRangeChecks, true\ndevelop(bool, GenerateCompilerNullChecks, true\ndevelop(bool, FullGCALot, false\ndevelop(bool, ForceFloatExceptions, trueInDebug\ndevelop(bool, FLSVerifyDictionary, false\ndevelop(bool, FillDelaySlots, true\ndevelop(bool, EagerInitialization, false\ndevelop(bool, DisableStartThread, false\ndevelop(bool, DieOnSafepointTimeout, false\ndevelop(bool, DeoptimizeALot, false\ndevelop(bool, DelayCompilationDuringStartup, true\ndevelop(bool, DebugVtables, false\ndevelop(bool, DebugDeoptimization, false\ndevelop(bool, CountJNICalls, false\ndevelop(bool, CountCompiledCalls, false\ndevelop(bool, CountBytecodes, false\ndevelop(bool, CompileTheWorldPreloadClasses, true\ndevelop(bool, CompileTheWorld, false\ndevelop(bool, CMSTraceThreadState, false\ndevelop(bool, CMSTraceSweeper, false\ndevelop(bool, CMSTraceIncrementalPacing, false\ndevelop(bool, CMSTraceIncrementalMode, false\ndevelop(bool, CMSTestInFreeList, false\ndevelop(bool, CMSOverflowEarlyRestoration, false\ndevelop(bool, ClearInterpreterLocals, false\ndevelop(bool, CleanChunkPoolAsync, falseInEmbedded\ndevelop(bool, CITraceTypeFlow, false\ndevelop(bool, CITimeEach, false\ndevelop(bool, CIPrintTypeFlow, false\ndevelop(bool, CIPrintRequests, false\ndevelop(bool, CIPrintMethodCodes, false\ndevelop(bool, CIPrintCompilerName, false\ndevelop(bool, CIPrintCompileQueue, false\ndevelop(bool, CICountOSR, false\ndevelop(bool, CICompileNatives, true\ndevelop(bool, CheckZapUnusedHeapArea, false\ndevelop(bool, CheckUnhandledOops, false\ndevelop(bool, BreakAtWarning, false\n</code></pre>','列出java命令所有-X和-XX选项','','inherit','closed','closed','','86-revision-v1','','','2017-08-09 01:19:28','2017-08-08 17:19:28','java -X可以列出-X选项，但-XX选项好像并没有直接的方法可以列出。从源码里则可以得到。用hg下载源码后grep一下便可得到所有的-X和-XX选项了。\r\n## 一部分是单独列出来的\r\n```bash\r\ncat hotspot/src/share/vm/runtime/arguments.cpp |\r\n    grep -o &#039;option, &quot;-X[^&quot;]*&quot;&#039; |\r\n    sed -r &#039;s/.*&quot;(.*)&quot;.*/\\1/&#039;\r\n```\r\n```nohighlight\r\n-Xbootclasspath:\r\n-Xbootclasspath/a:\r\n-Xbootclasspath/p:\r\n-Xrun\r\n-Xnoclassgc\r\n-Xincgc\r\n-Xnoincgc\r\n-Xconcgc\r\n-Xnoconcgc\r\n-Xbatch\r\n-Xmn\r\n-Xms\r\n-Xmx\r\n-XX:MaxHeapSize=\r\n-Xmaxf\r\n-Xminf\r\n-Xss\r\n-Xoss\r\n-XX:CodeCacheExpansionSize=\r\n-Xmaxjitcodesize\r\n-XX:ReservedCodeCacheSize=\r\n-XX:IncreaseFirstTierCompileThresholdAt=\r\n-Xsqnopause\r\n-Xrs\r\n-Xusealtsigs\r\n-Xoptimize\r\n-Xprof\r\n-Xconcurrentio\r\n-Xinternalversion\r\n-Xprintflags\r\n-Xint\r\n-Xmixed\r\n-Xcomp\r\n-Xshare:dump\r\n-Xshare:on\r\n-Xshare:auto\r\n-Xshare:off\r\n-Xverify\r\n-Xdebug\r\n-Xnoagent\r\n-Xboundthreads\r\n-Xloggc:\r\n-Xcheck\r\n-XX:+AggressiveHeap\r\n-XX:+NeverTenure\r\n-XX:+AlwaysTenure\r\n-XX:+CMSPermGenSweepingEnabled\r\n-XX:-CMSPermGenSweepingEnabled\r\n-XX:+UseGCTimeLimit\r\n-XX:-UseGCTimeLimit\r\n-XX:MaxTLERatio=\r\n-XX:+ResizeTLE\r\n-XX:-ResizeTLE\r\n-XX:+PrintTLE\r\n-XX:-PrintTLE\r\n-XX:TLEFragmentationRatio=\r\n-XX:TLESize=\r\n-XX:TLEThreadRatio=\r\n-XX:+UseTLE\r\n-XX:-UseTLE\r\n-XX:+DisplayVMOutputToStderr\r\n-XX:+DisplayVMOutputToStdout\r\n-XX:+ExtendedDTraceProbes\r\n-XX:+FullGCALot\r\n-XX:CMSParPromoteBlocksToClaim=\r\n-XX:ParCMSPromoteBlocksToClaim=\r\n-XX:ParallelGCOldGenAllocBufferSize=\r\n-XX:ParallelGCToSpaceAllocBufferSize=\r\n-XX:CMSMarkStackSize=\r\n-XX:G1MarkStackSize=\r\n-XX:CMSMarkStackSizeMax=\r\n-XX:ParallelMarkingThreads=\r\n-XX:ParallelCMSThreads=\r\n-XX:MaxDirectMemorySize=\r\n-XX:+UseVMInterruptibleIO\r\n-XX:+ManagementServer\r\n-XX:\r\n-XX:\r\n-XX:Flags=\r\n-XX:+PrintVMOptions\r\n-XX:-PrintVMOptions\r\n-XX:+IgnoreUnrecognizedVMOptions\r\n-XX:-IgnoreUnrecognizedVMOptions\r\n-XX:+PrintFlagsInitial\r\n-XX:NativeMemoryTracking\r\n-XX:+PrintFlagsWithComments\r\n-XX:\r\n```\r\n## 另一部分是宏定义的-XX:选项列表\r\n太多了，有将近一千个\r\n```bash\r\ncat hotspot/src/share/vm/runtime/globals.hpp |\r\n    grep &#039;\\\\&#039;  |\r\n    grep -v &#039;&quot;&#039; |\r\n    grep -v &#039;\\*&#039; |\r\n    grep -v &#039;#&#039; |\r\n    sed &#039;/^\\s*\\\\$/ d&#039; |\r\n    sed &#039;s/^ *//&#039; |\r\n    sed &#039;s/, *\\\\$//&#039; |\r\n    sort -r\r\n```\r\n```nohighlight\r\nproduct(uintx, YoungPLABSize, 4096\r\nproduct(uintx, YoungGenerationSizeSupplementDecay, 8\r\nproduct(uintx, YoungGenerationSizeSupplement, 80\r\nproduct(uintx, YoungGenerationSizeIncrement, 20\r\nproduct(uintx, TLABWasteTargetPercent, 1\r\nproduct(uintx, TLABWasteIncrement,    4\r\nproduct(uintx, TLABSize, 0\r\nproduct(uintx, TLABRefillWasteFraction,    64\r\nproduct(uintx, TLABAllocationWeight, 35\r\nproduct(uintx, ThresholdTolerance, 10\r\nproduct(uintx, TenuredGenerationSizeSupplementDecay, 2\r\nproduct(uintx, TenuredGenerationSizeSupplement, 80\r\nproduct(uintx, TenuredGenerationSizeIncrement, 20\r\nproduct(uintx, TargetSurvivorRatio,    50\r\nproduct(uintx, TargetPLABWastePct, 10\r\nproduct(uintx, SurvivorRatio, 8\r\nproduct(uintx, SurvivorPadding, 3\r\nproduct(uintx, StringTableSize, defaultStringTableSize\r\nproduct(uintx, StringDeduplicationAgeThreshold, 3\r\nproduct(uintx, QueuedAllocationWarningCount, 0\r\nproduct(uintx, PromotedPadding, 3\r\nproduct(uintx, ProcessDistributionStride, 4\r\nproduct(uintx, PretenureSizeThreshold, 0\r\nproduct(uintx, PLABWeight, 75\r\nproduct(uintx, PausePadding, 1\r\nproduct(uintx, ParGCDesiredObjsFromOverflowList, 20\r\nproduct(uintx, ParallelOldDeadWoodLimiterStdDev, 80\r\nproduct(uintx, ParallelOldDeadWoodLimiterMean, 50\r\nproduct(uintx, ParallelGCThreads, 0\r\nproduct(uintx, ParallelGCBufferWastePct, 10\r\nproduct(uintx, OldPLABWeight, 50\r\nproduct(uintx, OldPLABSize, 1024\r\nproduct(uintx, NumberOfGCLogFiles, 0\r\nproduct(uintx, NUMAPageScanRate, 256\r\nproduct(uintx, NUMAChunkResizeWeight, 20\r\nproduct(uintx, NewRatio, 2\r\nproduct(uintx, MinSurvivorRatio, 3\r\nproduct(uintx, MinRAMFraction, 2\r\nproduct(uintx, MinMetaspaceFreeRatio,    40\r\nproduct(uintx, MaxTenuringThreshold,    15\r\nproduct(uintx, MaxRAMFraction, 4\r\nproduct(uintx, MaxNewSize, max_uintx\r\nproduct(uintx, MaxMetaspaceSize, max_uintx\r\nproduct(uintx, MaxMetaspaceFreeRatio,    70\r\nproduct(uintx, MaxGCPauseMillis, max_uintx\r\nproduct(uintx, MaxGCMinorPauseMillis, max_uintx\r\nproduct(uintx, MaxDirectMemorySize, 0\r\nproduct(uintx, MarkSweepDeadRatio,     5\r\nproduct(uintx, MarkSweepAlwaysCompactCount,     4\r\nproduct(uintx, LargePageSizeInBytes, 0\r\nproduct(uintx, InitiatingHeapOccupancyPercent, 45\r\nproduct(uintx, InitialTenuringThreshold,    7\r\nproduct(uintx, InitialSurvivorRatio, 8\r\nproduct(uintx, InitialRAMFraction, 64\r\nproduct(uintx, InitialHeapSize, 0\r\nproduct(uintx, InitialBootClassLoaderMetaspaceSize\r\nproduct(uintx, IncreaseFirstTierCompileThresholdAt, 50\r\nproduct(uintx, HeapMaximumCompactionInterval, 20\r\nproduct(uintx, HeapFirstMaximumCompactionCount, 3\r\nproduct(uintx, GCTimeRatio, 99\r\nproduct(uintx, GCTimeLimit, 98\r\nproduct(uintx, GCTaskTimeStampEntries, 200\r\nproduct(uintx, GCPauseIntervalMillis, 0\r\nproduct(uintx, GCLockerEdenExpansionPercent, 5\r\nproduct(uintx, GCHeapFreeLimit, 2\r\nproduct(uintx, GCDrainStackTargetSize, 64\r\nproduct(uintx, FLSCoalescePolicy, 2\r\nproduct(uintx, ErgoHeapSizeLimit, 0\r\nproduct(uintx, DefaultMaxRAMFraction, 4\r\nproduct(uintx, ConcGCThreads, 0\r\nproduct(uintx, CMSYieldSleepCount, 0\r\nproduct(uintx, CMSWorkQueueDrainThreshold, 10\r\nproduct(uintx, CMSTriggerRatio, 80\r\nproduct(uintx, CMS_SweepWeight, 75\r\nproduct(uintx, CMS_SweepTimerThresholdMillis, 10\r\nproduct(uintx, CMS_SweepPadding, 1\r\nproduct(uintx, CMSScheduleRemarkSamplingRatio, 5\r\nproduct(uintx, CMSScheduleRemarkEdenPenetration, 50\r\nproduct(uintx, CMSRescanMultiple, 32\r\nproduct(uintx, CMSRemarkVerifyVariant, 1\r\nproduct(uintx, CMSPrecleanThreshold, 1000\r\nproduct(uintx, CMSPrecleanNumerator, 2\r\nproduct(uintx, CMSPrecleanIter, 3\r\nproduct(uintx, CMSPrecleanDenominator, 3\r\nproduct(uintx, CMSParPromoteBlocksToClaim, 16\r\nproduct(uintx, CMSOldPLABToleranceFactor, 4\r\nproduct(uintx, CMSOldPLABReactivityFactor, 2\r\nproduct(uintx, CMSOldPLABNumRefills, 4\r\nproduct(uintx, CMSOldPLABMin, 16\r\nproduct(uintx, CMSOldPLABMax, 1024\r\nproduct(uintx, CMSMaxAbortablePrecleanLoops, 0\r\nproduct(uintx, CMSIsTooFullPercentage, 98\r\nproduct(uintx, CMSIndexedFreeListReplenish, 4\r\nproduct(uintx, CMSIncrementalSafetyFactor, 10\r\nproduct(uintx, CMSIncrementalOffset, 0\r\nproduct(uintx, CMSIncrementalDutyCycleMin, 0\r\nproduct(uintx, CMSIncrementalDutyCycle, 10\r\nproduct(uintx, CMSFullGCsBeforeCompaction, 0\r\nproduct(uintx, CMS_FLSWeight, 75\r\nproduct(uintx, CMS_FLSPadding, 1\r\nproduct(uintx, CMSExpAvgFactor, 50\r\nproduct(uintx, CMSCoordinatorYieldSleepCount, 10\r\nproduct(uintx, CMSConcMarkMultiple, 32\r\nproduct(uintx, CMSClassUnloadingMaxInterval, 0\r\nproduct(uintx, CMSBootstrapOccupancy, 50\r\nproduct(uintx, CMSAbortablePrecleanMinWorkPerIteration, 100\r\nproduct(uintx, AutoGCSelectPauseMillis, 5000\r\nproduct(uintx, AdaptiveTimeWeight,       25\r\nproduct(uintx, AdaptiveSizeThroughPutPolicy, 0\r\nproduct(uintx, AdaptiveSizePolicyWeight, 10\r\nproduct(uintx, AdaptiveSizePolicyOutputInterval, 0\r\nproduct(uintx, AdaptiveSizePolicyInitializingSteps, 20\r\nproduct(uintx, AdaptiveSizePolicyCollectionCostMargin, 50\r\nproduct(uintx, AdaptiveSizePausePolicy, 0\r\nproduct(uintx, AdaptiveSizeMajorGCDecayTimeScale, 10\r\nproduct(uintx, AdaptiveSizeDecrementScaleFactor, 4\r\nproduct_rw(bool, TraceLoaderConstraints, false\r\nproduct_rw(bool, TraceClassUnloading, false\r\nproduct_rw(bool, TraceClassLoading, false\r\nproduct_rw(bool, PrintHeapAtGC, false\r\nproduct_rw(bool, PrintHeapAtGCExtended, false\r\nproduct_pd(uintx, TypeProfileLevel\r\nproduct_pd(uintx, ReservedCodeCacheSize\r\nproduct_pd(uintx, NewSizeThreadIncrease\r\nproduct_pd(uintx, MetaspaceSize\r\nproduct_pd(uintx, InitialCodeCacheSize\r\nproduct_pd(uintx, HeapBaseMinAddress\r\nproduct_pd(uintx, CodeCacheExpansionSize\r\nproduct_pd(uintx, CMSYoungGenPerWorker\r\nproduct_pd(uint64_t, MaxRAM\r\nproduct_pd(intx, VMThreadStackSize\r\nproduct_pd(intx, ThreadStackSize\r\nproduct_pd(intx, StackYellowPages\r\nproduct_pd(intx, StackShadowPages\r\nproduct_pd(intx, StackRedPages\r\nproduct_pd(intx, PreInflateSpin\r\nproduct_pd(intx, OptoLoopAlignment\r\nproduct_pd(intx, OnStackReplacePercentage\r\nproduct_pd(intx, InlineSmallCode\r\nproduct_pd(intx, FreqInlineSize\r\nproduct_pd(intx, CompileThreshold\r\nproduct_pd(intx, CompilerThreadStackSize\r\nproduct_pd(intx, BackEdgeThreshold\r\nproduct_pd(bool, UseOSErrorReporting\r\nproduct_pd(bool, UseOnStackReplacement\r\nproduct_pd(bool, UseMembar\r\nproduct_pd(bool, UseLargePagesIndividualAllocation\r\nproduct_pd(bool, UseLargePages\r\nproduct_pd(bool, TrapBasedNullChecks\r\nproduct_pd(bool, TieredCompilation\r\nproduct_pd(bool, RewriteFrequentPairs\r\nproduct_pd(bool, RewriteBytecodes\r\nproduct_pd(bool, ResizeTLAB\r\nproduct_pd(bool, ProfileInterpreter\r\nproduct_pd(bool, PreserveFramePointer\r\nproduct_pd(bool, PreferInterpreterNativeStubs\r\nproduct_pd(bool, NeverActAsServerClassMachine\r\nproduct_pd(bool, NeedsDeoptSuspend\r\nproduct_pd(bool, DontYieldALot\r\nproduct_pd(bool, ConvertSleepToYield\r\nproduct_pd(bool, BackgroundCompilation\r\nproduct(intx, WorkAroundNPTLTimedWaitHang, 1\r\nproduct(intx, VMThreadPriority, -1\r\nproduct(intx, UseSSE, 99\r\nproduct(intx, UnguardOnExecutionViolation, 0\r\nproduct(intx, TypeProfileWidth,     2\r\nproduct(intx, TypeProfileParmsLimit,    2\r\nproduct(intx, TypeProfileArgsLimit,     2\r\nproduct(intx, TraceRedefineClasses, 0\r\nproduct(intx, TieredStopAtLevel, 4\r\nproduct(intx, TieredRateUpdateMinTime, 1\r\nproduct(intx, TieredRateUpdateMaxTime, 25\r\nproduct(intx, TieredCompileTaskTimeout, 50\r\nproduct(intx, Tier4MinInvocationThreshold, 600\r\nproduct(intx, Tier4LoadFeedback, 3\r\nproduct(intx, Tier4InvocationThreshold, 5000\r\nproduct(intx, Tier4CompileThreshold, 15000\r\nproduct(intx, Tier4BackEdgeThreshold, 40000\r\nproduct(intx, Tier3MinInvocationThreshold, 100\r\nproduct(intx, Tier3LoadFeedback, 5\r\nproduct(intx, Tier3InvokeNotifyFreqLog, 10\r\nproduct(intx, Tier3InvocationThreshold, 200\r\nproduct(intx, Tier3DelayOn, 5\r\nproduct(intx, Tier3DelayOff, 2\r\nproduct(intx, Tier3CompileThreshold, 2000\r\nproduct(intx, Tier3BackEdgeThreshold,  60000\r\nproduct(intx, Tier3BackedgeNotifyFreqLog, 13\r\nproduct(intx, Tier2InvokeNotifyFreqLog, 11\r\nproduct(intx, Tier2CompileThreshold, 0\r\nproduct(intx, Tier2BackEdgeThreshold, 0\r\nproduct(intx, Tier2BackedgeNotifyFreqLog, 14\r\nproduct(intx, Tier23InlineeNotifyFreqLog, 20\r\nproduct(intx, Tier0ProfilingStartPercentage, 200\r\nproduct(intx, Tier0InvokeNotifyFreqLog, 7\r\nproduct(intx, Tier0BackedgeNotifyFreqLog, 10\r\nproduct(intx, ThreadPriorityPolicy, 0\r\nproduct(intx, SuspendRetryDelay, 5\r\nproduct(intx, SuspendRetryCount, 50\r\nproduct(intx, StarvationMonitorInterval,    200\r\nproduct(intx, SoftRefLRUPolicyMSPerMB, 1000\r\nproduct(intx, SelfDestructTimer, 0\r\nproduct(intx, SafepointTimeoutDelay, 10000\r\nproduct(intx, RefDiscoveryPolicy, 0\r\nproduct(intx, ProfileMaturityPercentage, 20\r\nproduct(intx, ProfileIntervalsTicks, 100\r\nproduct(intx, PrintSafepointStatisticsTimeout,  -1\r\nproduct(intx, PrintSafepointStatisticsCount, 300\r\nproduct(intx, PrintFLSStatistics, 0\r\nproduct(intx, PrintFLSCensus, 0\r\nproduct(intx, PrintCMSStatistics, 0\r\nproduct(intx, PrefetchScanIntervalInBytes, -1\r\nproduct(intx, PrefetchFieldsAhead, -1\r\nproduct(intx, PrefetchCopyIntervalInBytes, -1\r\nproduct(intx, PerMethodTrapLimit,  100\r\nproduct(intx, PerMethodRecompilationCutoff, 400\r\nproduct(intx, PerfMaxStringConstLength, 1024\r\nproduct(intx, PerfDataSamplingInterval, 50\r\nproduct(intx, PerBytecodeTrapLimit,  4\r\nproduct(intx, PerBytecodeRecompilationCutoff, 200\r\nproduct(intx, ParGCArrayScanChunk, 50\r\nproduct(intx, NmethodSweepFraction, 16\r\nproduct(intx, NmethodSweepCheckInterval, 5\r\nproduct(intx, NmethodSweepActivity, 10\r\nproduct(intx, MinInliningThreshold, 250\r\nproduct(intx, MaxTrivialSize, 6\r\nproduct(intx, MaxRecursiveInlineLevel, 1\r\nproduct(intx, MaxJNILocalCapacity, 65536\r\nproduct(intx, MaxJavaStackTraceDepth, 1024\r\nproduct(intx, MaxInlineSize, 35\r\nproduct(intx, MaxInlineLevel, 9\r\nproduct(intx, MaxBCEAEstimateSize, 150\r\nproduct(intx, MaxBCEAEstimateLevel, 5\r\nproduct(intx, JavaPriority9_To_OSPriority, -1\r\nproduct(intx, JavaPriority8_To_OSPriority, -1\r\nproduct(intx, JavaPriority7_To_OSPriority, -1\r\nproduct(intx, JavaPriority6_To_OSPriority, -1\r\nproduct(intx, JavaPriority5_To_OSPriority, -1\r\nproduct(intx, JavaPriority4_To_OSPriority, -1\r\nproduct(intx, JavaPriority3_To_OSPriority, -1\r\nproduct(intx, JavaPriority2_To_OSPriority, -1\r\nproduct(intx, JavaPriority1_To_OSPriority, -1\r\nproduct(intx, JavaPriority10_To_OSPriority,-1\r\nproduct(intx, InterpreterProfilePercentage, 33\r\nproduct(intx, hashCode, 5\r\nproduct(intx, FieldsAllocationStyle, 1\r\nproduct(intx, EmitSync, 0\r\nproduct(intx, DeferThrSuspendLoopCount,     4000\r\nproduct(intx, DeferPollingPageLoopCount,     -1\r\nproduct(intx, DefaultThreadPriority, -1\r\nproduct(intx, ContendedPaddingWidth, 128\r\nproduct(intx, CompilerThreadPriority, -1\r\nproduct(intx, CompilationPolicyChoice, 0\r\nproduct(intx, CMSMaxAbortablePrecleanTime, 5000\r\nproduct(intx, CMSInitiatingOccupancyFraction, -1\r\nproduct(intx, CICompilerCount, CI_COMPILER_COUNT\r\nproduct(intx, BiasedLockingStartupDelay, 4000\r\nproduct(intx, BiasedLockingDecayTime, 25000\r\nproduct(intx, BiasedLockingBulkRevokeThreshold, 40\r\nproduct(intx, BiasedLockingBulkRebiasThreshold, 20\r\nproduct(intx, BCEATraceLevel, 0\r\nproduct(intx,  AllocatePrefetchStyle, 1\r\nproduct(intx,  AllocatePrefetchStepSize, 16\r\nproduct(intx,  AllocatePrefetchLines, 3\r\nproduct(intx,  AllocatePrefetchInstr, 0\r\nproduct(intx,  AllocatePrefetchDistance, -1\r\nproduct(intx,  AllocateInstancePrefetchLines, 1\r\nproduct(double, FLSLargestBlockCoalesceProximity, 0.99\r\nproduct(double, CMSSmallSplitSurplusPercent, 1.10\r\nproduct(double, CMSSmallCoalSurplusPercent, 1.05\r\nproduct(double, CMSLargeSplitSurplusPercent, 1.00\r\nproduct(double, CMSLargeCoalSurplusPercent, 0.95\r\nproduct(ccstr, TraceJVMTI, NULL\r\nproduct(ccstr, SyncKnobs, NULL\r\nproduct(ccstr, SharedClassListFile, NULL\r\nproduct(ccstr, ReplayDataFile, NULL\r\nproduct(ccstr, PerfDataSaveFile, NULL\r\nproduct(ccstr, InlineDataFile, NULL\r\nproduct(ccstr, ExtraSharedClassListFile, NULL\r\nproduct(ccstr, ErrorReportServer, NULL\r\nproduct(ccstr, ErrorFile, NULL\r\nproduct(ccstr, DumpLoadedClassList, NULL\r\nproduct(ccstr, CompileCommandFile, NULL\r\nproduct(bool, ZeroTLAB, false\r\nproduct(bool, VMThreadHintNoPreempt, false\r\nproduct(bool, VerifySharedSpaces, false\r\nproduct(bool, VerifyMergedCPBytecodes, true\r\nproduct(bool, UseXMMForArrayCopy, false\r\nproduct(bool, UseVMInterruptibleIO, false\r\nproduct(bool, UseTypeProfile, true\r\nproduct(bool, UseStringDeduplication, false\r\nproduct(bool, UseSSE42Intrinsics, false\r\nproduct(bool, UseSignalChaining, true\r\nproduct(bool, UseSharedSpaces, true\r\nproduct(bool, UseSHA, false\r\nproduct(bool, UseSHA512Intrinsics, false\r\nproduct(bool, UseSHA256Intrinsics, false\r\nproduct(bool, UseSHA1Intrinsics, false\r\nproduct(bool, UseSerialGC, false\r\nproduct(bool, UsePSAdaptiveSurvivorSizePolicy, true\r\nproduct(bool, UsePopCountInstruction, false\r\nproduct(bool, UsePerfData, falseInEmbedded\r\nproduct(bool, UseParNewGC, false\r\nproduct(bool, UseParallelOldGC, false\r\nproduct(bool, UseParallelGC, false\r\nproduct(bool, UseNUMAInterleaving, false\r\nproduct(bool, UseNUMA, false\r\nproduct(bool, UseMaximumCompactionOnSystemGC, true\r\nproduct(bool, UseLWPSynchronization, true\r\nproduct(bool, UseLoopCounter, true\r\nproduct(bool, UseLockedTracing, false\r\nproduct(bool, UseLargePagesInMetaspace, false\r\nproduct(bool, UseInterpreter, true\r\nproduct(bool, UseInlineCaches, true\r\nproduct(bool, UseHeavyMonitors, false\r\nproduct(bool, UseGCTaskAffinity, false\r\nproduct(bool, UseGCOverheadLimit, true\r\nproduct(bool, UseGCLogFileRotation, false\r\nproduct(bool, UseG1GC, false\r\nproduct(bool, UseFastJNIAccessors, true\r\nproduct(bool, UseFastEmptyMethods, true\r\nproduct(bool, UseFastAccessorMethods, true\r\nproduct(bool, UseDynamicNumberOfGCThreads, false\r\nproduct(bool, UseCRC32Intrinsics, false\r\nproduct(bool, UseCounterDecay, true\r\nproduct(bool, UseConcMarkSweepGC, false\r\nproduct(bool, UseCompiler, true\r\nproduct(bool, UseCompilerSafepoints, true\r\nproduct(bool, UseCodeCacheFlushing, true\r\nproduct(bool, UseCMSInitiatingOccupancyOnly, false\r\nproduct(bool, UseCMSCompactAtFullCollection, true\r\nproduct(bool, UseCMSCollectionPassing, true\r\nproduct(bool, UseCMSBestFit, true\r\nproduct(bool, UseBoundThreads, true\r\nproduct(bool, UseBiasedLocking, true\r\nproduct(bool, UseAutoGCSelectPolicy, false\r\nproduct(bool, UseAltSigs, false\r\nproduct(bool, UseAESIntrinsics, false\r\nproduct(bool, UseAES, false\r\nproduct(bool, UseAdaptiveSizePolicyWithSystemGC, false\r\nproduct(bool, UseAdaptiveSizePolicy, true\r\nproduct(bool, UseAdaptiveSizePolicyFootprintGoal, true\r\nproduct(bool, UseAdaptiveSizeDecayMajorGCCost, true\r\nproduct(bool, UseAdaptiveNUMAChunkSizing, true\r\nproduct(bool, UseAdaptiveGenerationSizePolicyAtMinorCollection, true\r\nproduct(bool, UseAdaptiveGenerationSizePolicyAtMajorCollection, true\r\nproduct(bool, UseAdaptiveGCBoundary, false\r\nproduct(bool, UnlinkSymbolsALot, false\r\nproduct(bool, TransmitErrorReport, false\r\nproduct(bool, TraceSuspendWaitFailures, false\r\nproduct(bool, TraceSafepointCleanupTime, false\r\nproduct(bool, TraceParallelOldGCTasks, false\r\nproduct(bool, TraceMonitorInflation, false\r\nproduct(bool, TraceMetadataHumongousAllocation, false\r\nproduct(bool, TraceGen1Time, false\r\nproduct(bool, TraceGen0Time, false\r\nproduct(bool, TraceDynamicGCThreads, false\r\nproduct(bool, TraceClassResolution, false\r\nproduct(bool, TraceClassPaths, false\r\nproduct(bool, TraceClassLoadingPreorder, false\r\nproduct(bool, TraceBiasedLocking, false\r\nproduct(bool, TLABStats, true\r\nproduct(bool, ThreadPriorityVerbose, false\r\nproduct(bool, SuppressFatalErrorMessage, false\r\nproduct(bool, StressLdcRewrite, false\r\nproduct(bool, StartAttachListener, false\r\nproduct(bool, StackTraceInThrowable, true\r\nproduct(bool, ShowMessageBoxOnError, false\r\nproduct(bool, ScavengeBeforeFullGC, true\r\nproduct(bool, SafepointTimeout, false\r\nproduct(bool, RestrictContended, true\r\nproduct(bool, RestoreMXCSROnJNICalls, false\r\nproduct(bool, ResizePLAB, true\r\nproduct(bool, ResizeOldPLAB, true\r\nproduct(bool, RequireSharedSpaces, false\r\nproduct(bool, RelaxAccessControlCheck, false\r\nproduct(bool, RegisterFinalizersAtInit, true\r\nproduct(bool, ReflectionWrapResolutionErrors, true\r\nproduct(bool, ReduceSignalUsage, false\r\nproduct(bool, RangeCheckElimination, true\r\nproduct(bool, PSChunkLargeArrays, true\r\nproduct(bool, ProfileVM, false\r\nproduct(bool, ProfilerRecordPC, false\r\nproduct(bool, ProfilerPrintByteCodeStatistics, false\r\nproduct(bool, ProfileIntervals, false\r\nproduct(bool, PrintWarnings, true\r\nproduct(bool, PrintVMQWaitTime, false\r\nproduct(bool, PrintVMOptions, false\r\nproduct(bool, PrintTLAB, false\r\nproduct(bool, PrintTieredEvents, false\r\nproduct(bool, PrintTenuringDistribution, false\r\nproduct(bool, PrintStringTableStatistics, false\r\nproduct(bool, PrintStringDeduplicationStatistics, false\r\nproduct(bool, PrintSharedSpaces, false\r\nproduct(bool, PrintSharedDictionary, false\r\nproduct(bool, PrintSharedArchiveAndExit, false\r\nproduct(bool, PrintSafepointStatistics, false\r\nproduct(bool, PrintReferenceGC, false\r\nproduct(bool, PrintPromotionFailure, false\r\nproduct(bool, PrintPLAB, false\r\nproduct(bool, PrintParallelOldGCPhaseTimes, false\r\nproduct(bool, PrintOopAddress, false\r\nproduct(bool, PrintOldPLAB, false\r\nproduct(bool, PrintJNIResolving, false\r\nproduct(bool, PrintJNIGCStalls, false\r\nproduct(bool, PrintHeapAtSIGBREAK, true\r\nproduct(bool, PrintGCTaskTimeStamps, false\r\nproduct(bool, PrintGCCause, true\r\nproduct(bool, PrintGCApplicationStoppedTime, false\r\nproduct(bool, PrintGCApplicationConcurrentTime, false\r\nproduct(bool, PrintFlagsInitial, false\r\nproduct(bool, PrintFlagsFinal, false\r\nproduct(bool, PrintCompilation, false\r\nproduct(bool, PrintCommandLineFlags, false\r\nproduct(bool, PrintCodeCacheOnCompilation, false\r\nproduct(bool, PrintCodeCache, false\r\nproduct(bool, PrintCMSInitiationStatistics, false\r\nproduct(bool, PrintAdaptiveSizePolicy, false\r\nproduct(bool, PreserveAllAnnotations, false\r\nproduct(bool, PerfDisableSharedMem, false\r\nproduct(bool, PerfDataSaveToFile, false\r\nproduct(bool, PerfBypassFileSystemCheck, false\r\nproduct(bool, PerfAllowAtExitRegistration, false\r\nproduct(bool, ParGCUseLocalOverflow, false\r\nproduct(bool, ParGCTrimOverflow, true\r\nproduct(bool, ParallelRefProcEnabled, false\r\nproduct(bool, ParallelRefProcBalancingEnabled, true\r\nproduct(bool, ParallelGCVerbose, false\r\nproduct(bool, OmitStackTraceInFastThrow, true\r\nproduct(bool, NUMAStats, false\r\nproduct(bool, NeverTenure, false\r\nproduct(bool, MustCallLoadClassInternal, false\r\nproduct(bool, MethodFlushing, true\r\nproduct(bool, MaxFDLimit, true\r\nproduct(bool, ManagementServer, false\r\nproduct(bool, LazyBootClassLoader, true\r\nproduct(bool, JNIDetachReleasesMonitors, true\r\nproduct(bool, JavaMonitorsInStackTrace, true\r\nproduct(bool, Inline, true\r\nproduct(bool, IgnoreUnrecognizedVMOptions, false\r\nproduct(bool, IgnoreEmptyClassPaths, false\r\nproduct(bool, GCLockerInvokesConcurrent, false\r\nproduct(bool, ForceTimeHighResolution, false\r\nproduct(bool, ForceNUMA, false\r\nproduct(bool, FLSAlwaysCoalesceLarge, false\r\nproduct(bool, FilterSpuriousWakeups, true\r\nproduct(bool, FastTLABRefill, true\r\nproduct(bool, FailOverToOldVerifier, true\r\nproduct(bool, ExtendedDTraceProbes,    false\r\nproduct(bool, ExplicitGCInvokesConcurrent, false\r\nproduct(bool, ExplicitGCInvokesConcurrentAndUnloadsClasses, false\r\nproduct(bool, ExitOnOutOfMemoryError, false\r\nproduct(bool, EstimateArgEscape, true\r\nproduct(bool, EnableTracing, false\r\nproduct(bool, EnableContended, true\r\nproduct(bool, EagerXrunInit, false\r\nproduct(bool, DumpSharedSpaces, false\r\nproduct(bool, DumpReplayDataOnError, true\r\nproduct(bool, DTraceMonitorProbes, false\r\nproduct(bool, DTraceMethodProbes, false\r\nproduct(bool, DTraceAllocProbes, false\r\nproduct(bool, DontCompileHugeMethods, true\r\nproduct(bool, DisplayVMOutputToStdout, false\r\nproduct(bool, DisplayVMOutputToStderr, false\r\nproduct(bool, DisableExplicitGC, false\r\nproduct(bool, DisableAttachMechanism, false\r\nproduct(bool, DeoptimizeRandom, false\r\nproduct(bool, Debugging, false\r\nproduct(bool, CriticalJNINatives, true\r\nproduct(bool, CreateMinidumpOnCrash, false\r\nproduct(bool, CrashOnOutOfMemoryError, false\r\nproduct(bool, ConvertYieldToSleep, false\r\nproduct(bool, CompilerThreadHintNoPreempt, true\r\nproduct(bool, CompactFields, true\r\nproduct(bool, CollectGen0First, false\r\nproduct(bool, CMSYield, true\r\nproduct(bool, CMSSplitIndexedFreeListBlocks, true\r\nproduct(bool, CMSScavengeBeforeRemark, false\r\nproduct(bool, CMSReplenishIntermediate, true\r\nproduct(bool, CMSPrintObjectsInDump, false\r\nproduct(bool, CMSPrintEdenSurvivorChunks, false\r\nproduct(bool, CMSPrintChunksInDump, false\r\nproduct(bool, CMSPrecleanSurvivors2, true\r\nproduct(bool, CMSPrecleanSurvivors1, false\r\nproduct(bool, CMSPrecleanRefLists2, false\r\nproduct(bool, CMSPrecleanRefLists1, true\r\nproduct(bool, CMSPrecleaningEnabled, true\r\nproduct(bool, CMSPLABRecordAlways, true\r\nproduct(bool, CMSParallelSurvivorRemarkEnabled, true\r\nproduct(bool, CMSParallelRemarkEnabled, true\r\nproduct(bool, CMSParallelInitialMarkEnabled, true\r\nproduct(bool, CMSOldPLABResizeQuicker, false\r\nproduct(bool, CMSLoopWarn, false\r\nproduct(bool, CMSIncrementalPacing, true\r\nproduct(bool, CMSIncrementalMode, false\r\nproduct(bool, CMSExtrapolateSweep, false\r\nproduct(bool, CMSEdenChunksRecordAlways, true\r\nproduct(bool, CMSDumpAtPromotionFailure, false\r\nproduct(bool, CMSConcurrentMTEnabled, true\r\nproduct(bool, CMSCompactWhenClearAllSoftRefs, true\r\nproduct(bool, CMSCleanOnEnter, true\r\nproduct(bool, CMSClassUnloadingEnabled, true\r\nproduct(bool, CMSAbortSemantics, false\r\nproduct(bool, ClipInlining, true\r\nproduct(bool, ClassUnloadingWithConcurrentMark, true\r\nproduct(bool, ClassUnloading, true\r\nproduct(bool, CITime, false\r\nproduct(bool, CICompilerCountPerCPU, false\r\nproduct(bool, CheckJNICalls, false\r\nproduct(bool, CheckEndorsedAndExtDirs, false\r\nproduct(bool, BytecodeVerificationRemote, true\r\nproduct(bool, BytecodeVerificationLocal, false\r\nproduct(bool, BindGCTaskThreadsToCPUs, false\r\nproduct(bool, AssumeMP, false\r\nproduct(bool, AssertOnSuspendWaitFailure, false\r\nproduct(bool, AlwaysTenure, false\r\nproduct(bool, AlwaysRestoreFPU, false\r\nproduct(bool, AlwaysPreTouch, false\r\nproduct(bool, AlwaysLockClassLoader, false\r\nproduct(bool, AlwaysCompileLoopMethods, false\r\nproduct(bool, AlwaysActAsServerClassMachine, false\r\nproduct(bool, AllowUserSignalHandlers, false\r\nproduct(bool, AllowParallelDefineClass, false\r\nproduct(bool , AllowNonVirtualCalls, false\r\nproduct(bool, AllowJNIEnvProxy, false\r\nproduct(bool, AggressiveOpts, false\r\nproduct(bool, AdjustConcurrency, false\r\nnotproduct(uintx, WarnOnStalledSpinLock, 0\r\nnotproduct(uintx, ParGCWorkQueueOverflowInterval, 1000\r\nnotproduct(uintx, HandleAllocationLimit, 1024\r\nnotproduct(uintx, ErrorHandlerTest, 0\r\nnotproduct(uintx, CMSMarkStackOverflowInterval, 1000\r\nnotproduct(intx, ZombieALotInterval,     5\r\nnotproduct(intx, SweeperLogEntries, 1024\r\nnotproduct(intx, ScavengeALotInterval,     1\r\nnotproduct(intx, MemProfilingInterval, 500\r\nnotproduct(intx, MaxSubklassPrintSize, 4\r\nnotproduct(intx, MaxElementPrintSize, 256\r\nnotproduct(intx, FullGCALotStart,     0\r\nnotproduct(intx, FullGCALotInterval,     1\r\nnotproduct(intx, DeoptimizeALotInterval,     5\r\nnotproduct(intx, CompileTheWorldStopAt, max_jint\r\nnotproduct(intx, CompileTheWorldStartAt,     1\r\nnotproduct(intx, CompileTheWorldSafepointInterval, 100\r\nnotproduct(intx, CICrashAt, -1\r\nnotproduct(intx, AssertRepeat, 1\r\nnotproduct(ccstr, AbortVMOnException, NULL\r\nnotproduct(ccstr, AbortVMOnExceptionMessage, NULL\r\nnotproduct(bool, ZombieALot, false\r\nnotproduct(bool, ZapVMHandleArea, trueInDebug\r\nnotproduct(bool, ZapStackSegments, trueInDebug\r\nnotproduct(bool, ZapDeadLocalsOld, false\r\nnotproduct(bool, WalkStackALot, false\r\nnotproduct(bool, VerifyLastFrame, false\r\nnotproduct(bool, VerifyJNIEnvThread, false\r\nnotproduct(bool, VerifyCodeCacheOften, false\r\nnotproduct(bool, VerboseInternalVMTests, false\r\nnotproduct(bool, TraceZapDeadLocals, false\r\nnotproduct(bool, TraceScavenge, false\r\nnotproduct(bool, TraceRuntimeCalls, false\r\nnotproduct(bool, TraceOnStackReplacement, false\r\nnotproduct(bool, TraceMarkSweep, false\r\nnotproduct(bool, TraceLivenessQuery, false\r\nnotproduct(bool, TraceJVMCalls, false\r\nnotproduct(bool, TraceInvocationCounterOverflow, false\r\nnotproduct(bool, TraceCodeBlobStacks, false\r\nnotproduct(bool, TimeCompiler, false\r\nnotproduct(bool, StrictSafepointChecks, trueInDebug\r\nnotproduct(bool, StressDerivedPointers, false\r\nnotproduct(bool, StressCriticalJNINatives, false\r\nnotproduct(bool, ScavengeALot, false\r\nnotproduct(bool, PromotionFailureALot, false\r\nnotproduct(bool, ProfilerCheckIntervals, false\r\nnotproduct(bool, PrintVtableStats, false\r\nnotproduct(bool, PrintSystemDictionaryAtExit, false\r\nnotproduct(bool, PrintSymbolTableSizeHistogram, false\r\nnotproduct(bool, PrintRewrites, false\r\nnotproduct(bool, PrintMethodStatistics, false\r\nnotproduct(bool, PrintMallocFree, false\r\nnotproduct(bool, PrintFlagsWithComments, false\r\nnotproduct(bool, PrintFieldLayout, false\r\nnotproduct(bool, PrintClassStatistics, false\r\nnotproduct(bool, ParGCWorkQueueOverflowALot, false\r\nnotproduct(bool, LogSweeper, false\r\nnotproduct(bool, IgnoreLockingAssertions, false\r\nnotproduct(bool, ICMissHistogram, false\r\nnotproduct(bool, GCALotAtAllSafepoints, false\r\nnotproduct(bool, ExitVMOnVerifyError, false\r\nnotproduct(bool, ExitOnFullCodeCache, false\r\nnotproduct(bool, ExecuteInternalVMTests, false\r\nnotproduct(bool, CrashGCForDumpingJavaThread, false\r\nnotproduct(bool, CountRuntimeCalls, false\r\nnotproduct(bool, CountRemovableExceptions, false\r\nnotproduct(bool, CountJVMCalls, false\r\nnotproduct(bool, CollectIndexSetStatistics, false\r\nnotproduct(bool, CMSVerifyReturnedBytes, false\r\nnotproduct(bool, CMSMarkStackOverflowALot, false\r\nnotproduct(bool, CIObjectFactoryVerify, false\r\nnotproduct(bool, CheckOopishValues, false\r\nnotproduct(bool, CheckMemoryInitialization, false\r\nnotproduct(bool, CheckCompressedOops, true\r\nnotproduct(bool, CheckAssertionStatusDirectives, false\r\nNOT_EMBEDDED(diagnostic(intx, GuaranteedSafepointInterval, 1000\r\nmanageable(uintx, MinHeapFreeRatio, 40\r\nmanageable(uintx, MaxHeapFreeRatio, 70\r\nmanageable(intx, CMSWaitDuration, 2000\r\nmanageable(intx, CMSTriggerInterval, -1\r\nmanageable(intx, CMSAbortablePrecleanWaitMillis, 100\r\nmanageable(ccstr, HeapDumpPath, NULL\r\nmanageable(bool, PrintGCTimeStamps, false\r\nmanageable(bool, PrintGCID, false\r\nmanageable(bool, PrintGC, false\r\nmanageable(bool, PrintGCDetails, false\r\nmanageable(bool, PrintGCDateStamps, false\r\nmanageable(bool, PrintConcurrentLocks, false\r\nmanageable(bool, PrintClassHistogram, false\r\nmanageable(bool, PrintClassHistogramBeforeFullGC, false\r\nmanageable(bool, PrintClassHistogramAfterFullGC, false\r\nmanageable(bool, HeapDumpOnOutOfMemoryError, false\r\nmanageable(bool, HeapDumpBeforeFullGC, false\r\nmanageable(bool, HeapDumpAfterFullGC, false\r\nlp64_product(intx, ObjectAlignmentInBytes, 8\r\nlp64_product(bool, UseCompressedOops, false\r\nlp64_product(bool, UseCompressedClassPointers, false\r\nexperimental(uintx, WorkStealingYieldsBeforeSleep, 5000\r\nexperimental(uintx, WorkStealingSpinToYieldRatio, 10\r\nexperimental(uintx, WorkStealingSleepMillis, 1\r\nexperimental(uintx, WorkStealingHardSpins, 4096\r\nexperimental(uintx, SymbolTableSize, defaultSymbolTableSize\r\nexperimental(uintx, ArrayAllocatorMallocLimit\r\nexperimental(intx, SurvivorAlignmentInBytes, 0\r\nexperimental(intx, SpecTrapLimitExtraEntries,  3\r\nexperimental(intx, PredictedLoadedClassCount, 0\r\nexperimental(intx, PerMethodSpecTrapLimit,  5000\r\nexperimental(double, ObjectCountCutOffPercent, 0.5\r\nexperimental(bool, UseMemSetInBOT, true\r\nexperimental(bool, UseCriticalJavaThreadPriority, false\r\nexperimental(bool, UseCriticalCompilerThreadPriority, false\r\nexperimental(bool, UseCriticalCMSThreadPriority, false\r\nexperimental(bool, UseCGroupMemoryLimitForHeap, false\r\nexperimental(bool, UnlockExperimentalVMOptions, false\r\nexperimental(bool, TrustFinalNonStaticFields, false\r\nEMBEDDED_ONLY(product(intx, GuaranteedSafepointInterval, 0\r\ndiagnostic(uintx, VerifyGCStartAt,   0\r\ndiagnostic(uintx, ParGCStridesPerThread, 2\r\ndiagnostic(uintx, MallocMaxTestWords,     0\r\ndiagnostic(uintx, LogEventsBufferEntries, 10\r\ndiagnostic(uintx, GCLockerRetryAllocationCount, 2\r\ndiagnostic(uintx, CPUForCMSThread, 0\r\ndiagnostic(intx, VerifyGCLevel,     0\r\ndiagnostic(intx, ScavengeRootsInCode, 2\r\ndiagnostic(intx, ParGCCardsPerStrideChunk, 256\r\ndiagnostic(intx, MallocVerifyStart,     0\r\ndiagnostic(intx, MallocVerifyInterval,     0\r\ndiagnostic(ccstr, SharedArchiveFile, NULL\r\ndiagnostic(ccstr, PrintAssemblyOptions, NULL\r\ndiagnostic(ccstr, PauseAtStartupFile, NULL\r\ndiagnostic(ccstr, LogFile, NULL\r\ndiagnostic(bool, WhiteBoxAPI, false\r\ndiagnostic(bool, VerifyStringTableAtExit, false\r\ndiagnostic(bool, VerifySilently, false\r\ndiagnostic(bool, VerifyRememberedSets, false\r\ndiagnostic(bool, VerifyObjectStartArray, true\r\ndiagnostic(bool, VerifyMethodHandles, trueInDebug\r\ndiagnostic(bool, VerifyDuringStartup, false\r\ndiagnostic(bool, VerifyDuringGC, false\r\ndiagnostic(bool, VerifyBeforeIteration, false\r\ndiagnostic(bool, VerifyBeforeGC, false\r\ndiagnostic(bool, VerifyBeforeExit, trueInDebug\r\ndiagnostic(bool, VerifyAfterGC, false\r\ndiagnostic(bool, VerifyAdapterCalls, trueInDebug\r\ndiagnostic(bool, VerboseVerification, false\r\ndiagnostic(bool, UseNewCode, false\r\ndiagnostic(bool, UseNewCode3, false\r\ndiagnostic(bool, UseNewCode2, false\r\ndiagnostic(bool, UnsyncloadClass, false\r\ndiagnostic(bool, UnlockDiagnosticVMOptions, trueInDebug\r\ndiagnostic(bool, TraceNMethodInstalls, false\r\ndiagnostic(bool, TraceJVMTIObjectTagging, false\r\ndiagnostic(bool, TraceGCTaskThread, false\r\ndiagnostic(bool, StringDeduplicationResizeALot, false\r\ndiagnostic(bool, StringDeduplicationRehashALot, false\r\ndiagnostic(bool, ShowHiddenFrames, false\r\ndiagnostic(bool, SerializeVMOutput, true\r\ndiagnostic(bool, PrintStubCode, false\r\ndiagnostic(bool, PrintSignatureHandlers, false\r\ndiagnostic(bool, PrintNMTStatistics, false\r\ndiagnostic(bool, PrintNMethods, false\r\ndiagnostic(bool, PrintNativeNMethods, false\r\ndiagnostic(bool, PrintMethodHandleStubs, false\r\ndiagnostic(bool, PrintMethodFlushingStatistics, false\r\ndiagnostic(bool, PrintInterpreter, false\r\ndiagnostic(bool, PrintInlining, false\r\ndiagnostic(bool, PrintDTraceDOF, false\r\ndiagnostic(bool, PrintCompressedOopsMode, false\r\ndiagnostic(bool, PrintCompilation2, false\r\ndiagnostic(bool, PrintBiasedLockingStatistics, false\r\ndiagnostic(bool, PrintAssembly, false\r\ndiagnostic(bool, PrintAdapterHandlers, false\r\ndiagnostic(bool, PauseAtStartup,      false\r\ndiagnostic(bool, PauseAtExit, false\r\ndiagnostic(bool, ParallelGCRetainPLAB, false\r\ndiagnostic(bool, LogVMOutput, false\r\ndiagnostic(bool, LogEvents, true\r\ndiagnostic(bool, LogCompilation, false\r\ndiagnostic(bool, IgnoreUnverifiableClassesDuringDump, false\r\ndiagnostic(bool, GCParallelVerificationEnabled, true\r\ndiagnostic(bool, ForceUnreachable, false\r\ndiagnostic(bool, ForceDynamicNumberOfGCThreads, false\r\ndiagnostic(bool, FoldStableValues, true\r\ndiagnostic(bool, FLSVerifyLists, false\r\ndiagnostic(bool, FLSVerifyIndexTable, false\r\ndiagnostic(bool, FLSVerifyAllHeapReferences, false\r\ndiagnostic(bool, EnableInvokeDynamic, true\r\ndiagnostic(bool, DisplayVMOutput, true\r\ndiagnostic(bool, DeferInitialCardMark, false\r\ndiagnostic(bool, DebugNonSafepoints, trueInDebug\r\ndiagnostic(bool, BlockOffsetArrayUseUnallocatedBlock, false\r\ndiagnostic(bool, BindCMSThreadToCPU, false\r\ndevelop(uintx, TotalHandleAllocationLimit, 1024\r\ndevelop(uintx, PromotionFailureALotInterval, 5\r\ndevelop(uintx, PromotionFailureALotCount, 1000\r\ndevelop(uintx, PreallocatedOutOfMemoryErrorCount, 4\r\ndevelop(uintx, ParallelOldGCSplitInterval, 3\r\ndevelop(uintx, ObjArrayMarkingStride, 512\r\ndevelop(uintx, MetadataAllocationFailALotInterval, 1000\r\ndevelop(uintx, MaxVirtMemFraction, 2\r\ndevelop(uintx, GCWorkerDelayMillis, 0\r\ndevelop(uintx, GCExpandToAllocateDelayMillis, 0\r\ndevelop(uintx, CodeCacheSegmentSize, 64 PPC64_ONLY(+64)\r\ndevelop(uintx, CMSCheckInterval, 1000\r\ndevelop(uintx, AdaptiveSizePolicyReadyThreshold, 5\r\ndevelop(uintx, AdaptiveSizePolicyGCTimeLimitThreshold, 5\r\ndevelop_pd(uintx, JVMInvokeMethodSlack\r\ndevelop_pd(uintx, CodeCacheMinimumUseSpace\r\ndevelop_pd(uintx, CodeCacheMinBlockLength\r\ndevelop_pd(intx, InlineFrequencyCount\r\ndevelop_pd(intx, CodeEntryAlignment\r\ndevelop_pd(bool, UncommonNullCast\r\ndevelop_pd(bool, ShareVtableStubs\r\ndevelop_pd(bool, ProfileTraps\r\ndevelop_pd(bool, InlineIntrinsics\r\ndevelop_pd(bool, ImplicitNullChecks\r\ndevelop_pd(bool, CICompileOSR\r\ndevelop(intx, TraceBytecodesAt, 0\r\ndevelop(intx, StopInterpreterAt, 0\r\ndevelop(intx, StackPrintLimit, 100\r\ndevelop(intx, ReplaySuppressInitializers, 2\r\ndevelop(intx, PSAdaptiveSizePolicyResizeVirtualSpaceAlot, -1\r\ndevelop(intx, ProfilerPCTickThreshold,    15\r\ndevelop(intx, ProfilerNumberOfStubMethods, 25\r\ndevelop(intx, ProfilerNumberOfRuntimeStubNodes, 25\r\ndevelop(intx, ProfilerNumberOfInterpretedMethods, 25\r\ndevelop(intx, ProfilerNumberOfCompiledMethods, 25\r\ndevelop(intx, ProfilerNodeSize,  1024\r\ndevelop(intx, OSROnlyBCI, -1\r\ndevelop(intx, NewCodeParameter,      0\r\ndevelop(intx, MinSleepInterval,     1\r\ndevelop(intx, MinOopMapAllocation,     8\r\ndevelop(intx, MethodHistogramCutoff, 100\r\ndevelop(intx, MaxRecompilationSearchLength,    10\r\ndevelop(intx, MaxInterpretedSearchLength,     3\r\ndevelop(intx, MaxForceInlineLevel, 100\r\ndevelop(intx, MallocCatchPtr, -1\r\ndevelop(intx, LongCompileThreshold,     50\r\ndevelop(intx, InlineThrowMaxSize,   200\r\ndevelop(intx, InlineThrowCount,    50\r\ndevelop(intx, InlineFrequencyRatio,    20\r\ndevelop(intx, HugeMethodLimit,  8000\r\ndevelop(intx, FastSuperclassLimit, 8\r\ndevelop(intx, DontYieldALotInterval,    10\r\ndevelop(intx, DesiredMethodLimit,  8000\r\ndevelop(intx, CounterHalfLifeTime,    30\r\ndevelop(intx, CounterDecayMinIntervalLength,   500\r\ndevelop(intx, ConcGCYieldTimeout, 0\r\ndevelop(intx, CMSDictionaryChoice, 0\r\ndevelop(intx, CIStopOSR, max_jint\r\ndevelop(intx, CIStop, max_jint\r\ndevelop(intx, CIStartOSR, 0\r\ndevelop(intx, CIStart, 0\r\ndevelop(intx, CIFireOOMAt,    -1\r\ndevelop(intx, CIBreakAtOSR, -1\r\ndevelop(intx, CIBreakAt, -1\r\ndevelop(intx, BinarySwitchThreshold, 5\r\ndevelop(intx, BciProfileWidth,      2\r\ndevelop(bool, ZapUnusedHeapArea, trueInDebug\r\ndevelop(bool, ZapResourceArea, trueInDebug\r\ndevelop(bool, ZapJNIHandleArea, trueInDebug\r\ndevelop(bool, ZapFillerObjects, trueInDebug\r\ndevelop(bool, ZapDeadCompiledLocals, false\r\ndevelop(bool, WizardMode, false\r\ndevelop(bool, VerifyThread, false\r\ndevelop(bool, VerifyStack, false\r\ndevelop(bool, VerifyStackAtCalls, false\r\ndevelop(bool, VerifyReflectionBytecodes, false\r\ndevelop(bool, VerifyOops, false\r\ndevelop(bool, VerifyJNIFields, trueInDebug\r\ndevelop(bool, VerifyGenericSignatures, false\r\ndevelop(bool, VerifyFPU, false\r\ndevelop(bool, VerifyDependencies, trueInDebug\r\ndevelop(bool, VerifyDataPointer, trueInDebug\r\ndevelop(bool, VerifyCompiledCode, false\r\ndevelop(bool, VerifyBlockOffsetArray, false\r\ndevelop(bool, VerifyAdapterSharing, false\r\ndevelop(bool, VerifyActivationFrameSize, false\r\ndevelop(bool, Verbose, false\r\ndevelop(bool, UseStrictFP, true\r\ndevelop(bool, UseStackBanging, true\r\ndevelop(bool, UseRelocIndex, false\r\ndevelop(bool, UsePthreads, false\r\ndevelop(bool, UsePrivilegedStack, true\r\ndevelop(bool, UseNewReflection, true\r\ndevelop(bool, UseMallocOnly, false\r\ndevelop(bool, UseLoopSafepoints, true\r\ndevelop(bool, UseFastSignatureHandlers, true\r\ndevelop(bool, UseFakeTimers, false\r\ndevelop(bool, UseDetachedThreads, true\r\ndevelop(bool, UseCMSAdaptiveFreeLists, true\r\ndevelop(bool, UseCHA, true\r\ndevelop(bool, UseAsyncConcMarkSweepGC, true\r\ndevelop(bool, TypeProfileCasts,  true\r\ndevelop(bool, TraceZapUnusedHeapArea, false\r\ndevelop(bool, TraceWorkGang, false\r\ndevelop(bool, TraceVMOperation, false\r\ndevelop(bool, TraceThreadEvents, false\r\ndevelop(bool, TraceStartupTime, false\r\ndevelop(bool, TraceSafepoint, false\r\ndevelop(bool, TraceRelocator, false\r\ndevelop(bool, TraceReferenceGC, false\r\ndevelop(bool, TraceProtectionDomainVerification, false\r\ndevelop(bool, TraceProfileInterpreter, false\r\ndevelop(bool, TracePcPatching, false\r\ndevelop(bool, TraceParallelOldGCSummaryPhase, false\r\ndevelop(bool, TraceParallelOldGCMarkingPhase, false\r\ndevelop(bool, TraceParallelOldGCDensePrefix, false\r\ndevelop(bool, TraceParallelOldGCCompactionPhase, false\r\ndevelop(bool, TracePageSizes, false\r\ndevelop(bool, TraceOopMapRewrites, false\r\ndevelop(bool, TraceOopMapGeneration, false\r\ndevelop(bool, TraceNewOopMapGeneration, false\r\ndevelop(bool, TraceNewOopMapGenerationDetailed, false\r\ndevelop(bool, TraceMonitorMismatch, false\r\ndevelop(bool, TraceMethodReplacement, false\r\ndevelop(bool, TraceMethodHandles, false\r\ndevelop(bool, TraceMetavirtualspaceAllocation, false\r\ndevelop(bool, TraceMetadataChunkAllocation, false\r\ndevelop(bool, TraceLongCompiles, false\r\ndevelop(bool, TraceLivenessGen, false\r\ndevelop(bool, TraceJumps, false\r\ndevelop(bool, TraceJNIHandleAllocation, false\r\ndevelop(bool, TraceJNICalls, false\r\ndevelop(bool, TraceJavaAssertions, false\r\ndevelop(bool, TraceItables, false\r\ndevelop(bool, TraceInvokeDynamic, false\r\ndevelop(bool, TraceInlineCacheClearing, false\r\ndevelop(bool, TraceICs, false\r\ndevelop(bool, TraceICBuffer, false\r\ndevelop(bool, TraceHandleAllocation, false\r\ndevelop(bool, TraceGCTaskQueue, false\r\ndevelop(bool, TraceGCTaskManager, false\r\ndevelop(bool, TraceFrequencyInlining, false\r\ndevelop(bool, TraceFinalizerRegistration, false\r\ndevelop(bool, TraceExceptions, false\r\ndevelop(bool, TraceDerivedPointers, false\r\ndevelop(bool, TraceDependencies, false\r\ndevelop(bool, TraceDeoptimization, false\r\ndevelop(bool, TraceDefaultMethods, false\r\ndevelop(bool, TraceCreateZombies, false\r\ndevelop(bool, TraceCompiledIC, false\r\ndevelop(bool, TraceCompilationPolicy, false\r\ndevelop(bool, TraceCMSState, false\r\ndevelop(bool, TraceClearedExceptions, false\r\ndevelop(bool, TraceClassLoaderData, false\r\ndevelop(bool, TraceClassInitialization, false\r\ndevelop(bool, TraceCardTableModRefBS, false\r\ndevelop(bool, TraceCallFixup, false\r\ndevelop(bool, TraceBytecodes, false\r\ndevelop(bool, TraceBlockOffsetTable, false\r\ndevelop(bool, TraceAdaptiveGCBoundary, false\r\ndevelop(bool, TimeOopMap, false\r\ndevelop(bool, TimeOopMap2, false\r\ndevelop(bool, TimeLivenessAnalysis, false\r\ndevelop(bool, TimeCompilationPolicy, false\r\ndevelop(bool, StressRewriter, false\r\ndevelop(bool, StressMethodComparator, false\r\ndevelop(bool, StressCompiledExceptionHandlers, false\r\ndevelop(bool, StressCodeBuffers, false\r\ndevelop(bool, ShowSafepointMsgs, false\r\ndevelop(bool, ScavengeWithObjectsInToSpace, false\r\ndevelop(bool, SafepointALot, false\r\ndevelop(bool, RotateCMSCollectionTypes, false\r\ndevelop(bool, ReplayIgnoreInitErrors, false\r\ndevelop(bool, ReplayCompiles, false\r\ndevelop(bool, RegisterReferences, true\r\ndevelop(bool, PSAdjustYoungGenForMajorPause, false\r\ndevelop(bool, PSAdjustTenuredGenForMinorPause, false\r\ndevelop(bool, ProtectionDomainVerification, true\r\ndevelop(bool, PrintVtables, false\r\ndevelop(bool, PrintVMMessages, true\r\ndevelop(bool, PrintRelocations, false\r\ndevelop(bool, PrintMiscellaneous, false\r\ndevelop(bool, PrintMethodFlushing, false\r\ndevelop(bool, PrintMethodData, false\r\ndevelop(bool, PrintMallocStatistics, false\r\ndevelop(bool, PrintMalloc, false\r\ndevelop(bool, PrintJVMWarnings, false\r\ndevelop(bool, PrintExceptionHandlers, false\r\ndevelop(bool, PrintDependencies, false\r\ndevelop(bool, PrintDebugInfo, false\r\ndevelop(bool, PrintCodeCacheExtension, false\r\ndevelop(bool, PrintCodeCache2, false\r\ndevelop(bool, PrintBytecodePairHistogram, false\r\ndevelop(bool, PrintBytecodeHistogram, false\r\ndevelop(bool, PerfTraceMemOps, false\r\ndevelop(bool, PerfTraceDataCreation, false\r\ndevelop(bool, ParallelOldGCSplitALot, false\r\ndevelop(bool, NoYieldsInMicrolock, false\r\ndevelop(bool, MetadataAllocationFailALot, false\r\ndevelop(bool, MemProfiling, false\r\ndevelop(bool, LoadLocalVariableTypeTables, true\r\ndevelop(bool, LoadLocalVariableTables, true\r\ndevelop(bool, LoadLineNumberTables, true\r\ndevelop(bool, LargePagesIndividualAllocationInjectError, false\r\ndevelop(bool, InterceptOSException, false\r\ndevelop(bool, InlineUnsafeOps, true\r\ndevelop(bool, InlineThreadNatives, true\r\ndevelop(bool, InlineObjectHash, true\r\ndevelop(bool, InlineNatives, true\r\ndevelop(bool, InlineMathNatives, true\r\ndevelop(bool, InlineClassNatives, true\r\ndevelop(bool, InlineArrayCopy, true\r\ndevelop(bool, IgnoreRewrites, false\r\ndevelop(bool, IgnoreLibthreadGPFault, false\r\ndevelop(bool, GenerateSynchronizationCode, true\r\ndevelop(bool, GenerateRangeChecks, true\r\ndevelop(bool, GenerateCompilerNullChecks, true\r\ndevelop(bool, FullGCALot, false\r\ndevelop(bool, ForceFloatExceptions, trueInDebug\r\ndevelop(bool, FLSVerifyDictionary, false\r\ndevelop(bool, FillDelaySlots, true\r\ndevelop(bool, EagerInitialization, false\r\ndevelop(bool, DisableStartThread, false\r\ndevelop(bool, DieOnSafepointTimeout, false\r\ndevelop(bool, DeoptimizeALot, false\r\ndevelop(bool, DelayCompilationDuringStartup, true\r\ndevelop(bool, DebugVtables, false\r\ndevelop(bool, DebugDeoptimization, false\r\ndevelop(bool, CountJNICalls, false\r\ndevelop(bool, CountCompiledCalls, false\r\ndevelop(bool, CountBytecodes, false\r\ndevelop(bool, CompileTheWorldPreloadClasses, true\r\ndevelop(bool, CompileTheWorld, false\r\ndevelop(bool, CMSTraceThreadState, false\r\ndevelop(bool, CMSTraceSweeper, false\r\ndevelop(bool, CMSTraceIncrementalPacing, false\r\ndevelop(bool, CMSTraceIncrementalMode, false\r\ndevelop(bool, CMSTestInFreeList, false\r\ndevelop(bool, CMSOverflowEarlyRestoration, false\r\ndevelop(bool, ClearInterpreterLocals, false\r\ndevelop(bool, CleanChunkPoolAsync, falseInEmbedded\r\ndevelop(bool, CITraceTypeFlow, false\r\ndevelop(bool, CITimeEach, false\r\ndevelop(bool, CIPrintTypeFlow, false\r\ndevelop(bool, CIPrintRequests, false\r\ndevelop(bool, CIPrintMethodCodes, false\r\ndevelop(bool, CIPrintCompilerName, false\r\ndevelop(bool, CIPrintCompileQueue, false\r\ndevelop(bool, CICountOSR, false\r\ndevelop(bool, CICompileNatives, true\r\ndevelop(bool, CheckZapUnusedHeapArea, false\r\ndevelop(bool, CheckUnhandledOops, false\r\ndevelop(bool, BreakAtWarning, false\r\n```',86,'https://www.allisterke.com/?p=91',0,'revision','',0),(93,1,'2017-08-23 17:32:56','2017-08-23 09:32:56','一直很好奇，由gradle或maven打包好的spring-boot项目的jar文件里的org/springframework/boot/loader/**.class文件是怎么来的。\n\n<pre><code class=\"nohighlight\">unzip -l build/libs/springframework-lab.jar\n\n...\n        0  2017-08-23 16:21   org/\n        0  2017-08-23 16:21   org/springframework/\n        0  2017-08-23 16:21   org/springframework/boot/\n        0  2017-08-23 16:21   org/springframework/boot/loader/\n     2415  2017-06-08 11:57   org/springframework/boot/loader/LaunchedURLClassLoader$1.class\n     1454  2017-06-08 11:57   org/springframework/boot/loader/PropertiesLauncher$ArchiveEntryFilter.class\n     1912  2017-06-08 11:57   org/springframework/boot/loader/PropertiesLauncher$PrefixMatchingArchiveFilter.class\n     4599  2017-06-08 11:57   org/springframework/boot/loader/Launcher.class\n     1165  2017-06-08 11:57   org/springframework/boot/loader/ExecutableArchiveLauncher$1.class\n        0  2017-08-23 17:04   org/springframework/boot/loader/jar/\n     2002  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFile$1.class\n     9657  2017-06-08 11:57   org/springframework/boot/loader/jar/Handler.class\n     3350  2017-06-08 11:57   org/springframework/boot/loader/jar/JarEntry.class\n     1427  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFile$3.class\n     3104  2017-06-08 11:57   org/springframework/boot/loader/jar/CentralDirectoryEndRecord.class\n      430  2017-06-08 11:57   org/springframework/boot/loader/jar/CentralDirectoryVisitor.class\n     1300  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFile$JarFileType.class\n    10924  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFileEntries.class\n    12762  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFile.class\n     1540  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFileEntries$1.class\n      672  2017-06-08 11:57   org/springframework/boot/loader/jar/JarURLConnection$1.class\n     1199  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFile$2.class\n      262  2017-06-08 11:57   org/springframework/boot/loader/jar/JarEntryFilter.class\n     4457  2017-06-08 11:57   org/springframework/boot/loader/jar/AsciiBytes.class\n     4602  2017-06-08 11:57   org/springframework/boot/loader/jar/CentralDirectoryParser.class\n     2169  2017-06-08 11:57   org/springframework/boot/loader/jar/Bytes.class\n     1629  2017-06-08 11:57   org/springframework/boot/loader/jar/ZipInflaterInputStream.class\n     1967  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFileEntries$EntryIterator.class\n      306  2017-06-08 11:57   org/springframework/boot/loader/jar/FileHeader.class\n     3641  2017-06-08 11:57   org/springframework/boot/loader/jar/JarURLConnection$JarEntryName.class\n     9111  2017-06-08 11:57   org/springframework/boot/loader/jar/JarURLConnection.class\n     5449  2017-06-08 11:57   org/springframework/boot/loader/jar/CentralDirectoryFileHeader.class\n        0  2017-08-23 17:04   org/springframework/boot/loader/data/\n     1531  2017-06-08 11:57   org/springframework/boot/loader/data/ByteArrayRandomAccessData.class\n     3549  2017-06-08 11:57   org/springframework/boot/loader/data/RandomAccessDataFile$DataInputStream.class\n     1862  2017-06-08 11:57   org/springframework/boot/loader/data/RandomAccessDataFile$FilePool.class\n     1341  2017-06-08 11:57   org/springframework/boot/loader/data/RandomAccessData$ResourceAccess.class\n     3319  2017-06-08 11:57   org/springframework/boot/loader/data/RandomAccessDataFile.class\n      551  2017-06-08 11:57   org/springframework/boot/loader/data/RandomAccessData.class\n     4698  2017-06-08 11:57   org/springframework/boot/loader/LaunchedURLClassLoader.class\n     1533  2017-06-08 11:57   org/springframework/boot/loader/JarLauncher.class\n     1468  2017-06-08 11:57   org/springframework/boot/loader/MainMethodRunner.class\n     1425  2017-06-08 11:57   org/springframework/boot/loader/PropertiesLauncher$1.class\n     3128  2017-06-08 11:57   org/springframework/boot/loader/ExecutableArchiveLauncher.class\n     1669  2017-06-08 11:57   org/springframework/boot/loader/WarLauncher.class\n        0  2017-08-23 17:04   org/springframework/boot/loader/archive/\n     1749  2017-06-08 11:57   org/springframework/boot/loader/archive/JarFileArchive$EntryIterator.class\n     3792  2017-06-08 11:57   org/springframework/boot/loader/archive/ExplodedArchive$FileEntryIterator.class\n     1068  2017-06-08 11:57   org/springframework/boot/loader/archive/ExplodedArchive$FileEntry.class\n     1051  2017-06-08 11:57   org/springframework/boot/loader/archive/JarFileArchive$JarFileEntry.class\n      302  2017-06-08 11:57   org/springframework/boot/loader/archive/Archive$Entry.class\n     7189  2017-06-08 11:57   org/springframework/boot/loader/archive/JarFileArchive.class\n     4974  2017-06-08 11:57   org/springframework/boot/loader/archive/ExplodedArchive.class\n      906  2017-06-08 11:57   org/springframework/boot/loader/archive/Archive.class\n     1438  2017-06-08 11:57   org/springframework/boot/loader/archive/ExplodedArchive$FileEntryIterator$EntryComparator.class\n      399  2017-06-08 11:57   org/springframework/boot/loader/archive/Archive$EntryFilter.class\n      273  2017-06-08 11:57   org/springframework/boot/loader/archive/ExplodedArchive$1.class\n    18041  2017-06-08 11:57   org/springframework/boot/loader/PropertiesLauncher.class\n        0  2017-08-23 17:04   org/springframework/boot/loader/util/\n     4887  2017-06-08 11:57   org/springframework/boot/loader/util/SystemPropertyUtils.class\n...\n</code></pre>\n\n以为是很容易的事，肯定是从哪里拷贝过来的。至于来源，应该就在gradle缓存的某个jar文件里。去缓存文件夹下面搜一下应该就能搜到吧。\n\n<pre><code class=\"bash\">for JAR in $(find ~/.gradle -name \'*.jar\'); do\n    if grep -n \'org/springframework/boot/loader/LaunchedURLClassLoader.class\' &lt;(unzip -l $JAR 2&gt;/dev/null); then\n        echo $JAR\n    fi\ndone\n</code></pre>\n\n结果竟然什么都没搜索出来。\n于是又想，gradle打包的时候总要复制吧，那我用strace看看它打开了哪些文件不就看到了。\n\n<pre><code class=\"bash\">strace -f -e trace=open gradle --no-daemon build |&amp; grep org/springframework/boot/loader/LaunchedURLClassLoader.class\n</code></pre>\n\n结果还是什么都没搜索出来。\n只能用最后一招了。调试gradle。以调试模式启动gradle。\n\n<pre><code class=\"bash\">GRADLE_OPTS=\'-agentlib:jdwp=transport=dt_socket,server=y,suspend=y\' gradle --no-daemon build\n</code></pre>\n\n然后用IntelliJ远程调试，在<code>java.util.jar.JarOutputStream#putNextEntry</code>打上断点。因为你总要写jar吧。这下从断点的堆栈信息中终于看到了拷贝的过程。\n\n<pre><code class=\"Java\">package org.springframework.boot.loader.tools;\n\npublic class JarWriter implements LoaderClassesWriter {\n\n    private static final String NESTED_LOADER_JAR = \"META-INF/loader/spring-boot-loader.jar\";\n\n    public void writeLoaderClasses() throws IOException {\n        writeLoaderClasses(NESTED_LOADER_JAR);\n    }\n\n    public void writeLoaderClasses(String loaderJarResourceName) throws IOException {\n        URL loaderJar = getClass().getClassLoader().getResource(loaderJarResourceName);\n        JarInputStream inputStream = new JarInputStream(\n                new BufferedInputStream(loaderJar.openStream()));\n        JarEntry entry;\n        while ((entry = inputStream.getNextJarEntry()) != null) {\n            if (entry.getName().endsWith(\".class\")) {\n                writeEntry(entry, new InputStreamEntryWriter(inputStream, false));\n            }\n        }\n        inputStream.close();\n    }\n}\n</code></pre>\n\n而这个文件呢，可以用之前搜索的方法找到对应的jar包。\n\n<pre><code class=\"bash\">for JAR in $(find ~/.gradle -name \'*.jar\'); do\n    if grep -n \'org.springframework.boot.loader.tools.JarWriter\' &lt;(unzip -l $JAR 2&gt;/dev/null); then\n        echo $JAR\n    fi\ndone\n</code></pre>\n\n找到了是<code>spring-boot-loader-tools-1.5.4.RELEASE.jar</code>这个jar。打开后可以看到里面有个<code>META-INF/loader/spring-boot-loader.jar</code>，再打开就可以看到复制过来的源文件了。\n在<code>spring-boot-loader-tools-1.5.4.RELEASE-sources.jar</code>里还找到一个非常有意思的文件：<code>org/springframework/boot/loader/tools/launch.script</code>，它的开头是：\n\n<pre><code class=\"bash\">#!/bin/bash\n#\n#    .   ____          _            __ _ _\n#   /\\\\ / ___\'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\n#  ( ( )\\___ | \'_ | \'_| | \'_ \\/ _` | \\ \\ \\ \\\n#   \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\n#    \'  |____| .__|_| |_|_| |_\\__, | / / / /\n#   =========|_|==============|___/=/_/_/_/\n#   :: Spring Boot Startup Script ::\n</code></pre>','Spring Boot Loader Classes的由来','','publish','open','open','','spring-boot-loader-classes%e7%9a%84%e7%94%b1%e6%9d%a5','','','2017-08-23 17:32:56','2017-08-23 09:32:56','一直很好奇，由gradle或maven打包好的spring-boot项目的jar文件里的org/springframework/boot/loader/**.class文件是怎么来的。\r\n```nohighlight\r\nunzip -l build/libs/springframework-lab.jar\r\n\r\n...\r\n        0  2017-08-23 16:21   org/\r\n        0  2017-08-23 16:21   org/springframework/\r\n        0  2017-08-23 16:21   org/springframework/boot/\r\n        0  2017-08-23 16:21   org/springframework/boot/loader/\r\n     2415  2017-06-08 11:57   org/springframework/boot/loader/LaunchedURLClassLoader$1.class\r\n     1454  2017-06-08 11:57   org/springframework/boot/loader/PropertiesLauncher$ArchiveEntryFilter.class\r\n     1912  2017-06-08 11:57   org/springframework/boot/loader/PropertiesLauncher$PrefixMatchingArchiveFilter.class\r\n     4599  2017-06-08 11:57   org/springframework/boot/loader/Launcher.class\r\n     1165  2017-06-08 11:57   org/springframework/boot/loader/ExecutableArchiveLauncher$1.class\r\n        0  2017-08-23 17:04   org/springframework/boot/loader/jar/\r\n     2002  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFile$1.class\r\n     9657  2017-06-08 11:57   org/springframework/boot/loader/jar/Handler.class\r\n     3350  2017-06-08 11:57   org/springframework/boot/loader/jar/JarEntry.class\r\n     1427  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFile$3.class\r\n     3104  2017-06-08 11:57   org/springframework/boot/loader/jar/CentralDirectoryEndRecord.class\r\n      430  2017-06-08 11:57   org/springframework/boot/loader/jar/CentralDirectoryVisitor.class\r\n     1300  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFile$JarFileType.class\r\n    10924  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFileEntries.class\r\n    12762  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFile.class\r\n     1540  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFileEntries$1.class\r\n      672  2017-06-08 11:57   org/springframework/boot/loader/jar/JarURLConnection$1.class\r\n     1199  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFile$2.class\r\n      262  2017-06-08 11:57   org/springframework/boot/loader/jar/JarEntryFilter.class\r\n     4457  2017-06-08 11:57   org/springframework/boot/loader/jar/AsciiBytes.class\r\n     4602  2017-06-08 11:57   org/springframework/boot/loader/jar/CentralDirectoryParser.class\r\n     2169  2017-06-08 11:57   org/springframework/boot/loader/jar/Bytes.class\r\n     1629  2017-06-08 11:57   org/springframework/boot/loader/jar/ZipInflaterInputStream.class\r\n     1967  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFileEntries$EntryIterator.class\r\n      306  2017-06-08 11:57   org/springframework/boot/loader/jar/FileHeader.class\r\n     3641  2017-06-08 11:57   org/springframework/boot/loader/jar/JarURLConnection$JarEntryName.class\r\n     9111  2017-06-08 11:57   org/springframework/boot/loader/jar/JarURLConnection.class\r\n     5449  2017-06-08 11:57   org/springframework/boot/loader/jar/CentralDirectoryFileHeader.class\r\n        0  2017-08-23 17:04   org/springframework/boot/loader/data/\r\n     1531  2017-06-08 11:57   org/springframework/boot/loader/data/ByteArrayRandomAccessData.class\r\n     3549  2017-06-08 11:57   org/springframework/boot/loader/data/RandomAccessDataFile$DataInputStream.class\r\n     1862  2017-06-08 11:57   org/springframework/boot/loader/data/RandomAccessDataFile$FilePool.class\r\n     1341  2017-06-08 11:57   org/springframework/boot/loader/data/RandomAccessData$ResourceAccess.class\r\n     3319  2017-06-08 11:57   org/springframework/boot/loader/data/RandomAccessDataFile.class\r\n      551  2017-06-08 11:57   org/springframework/boot/loader/data/RandomAccessData.class\r\n     4698  2017-06-08 11:57   org/springframework/boot/loader/LaunchedURLClassLoader.class\r\n     1533  2017-06-08 11:57   org/springframework/boot/loader/JarLauncher.class\r\n     1468  2017-06-08 11:57   org/springframework/boot/loader/MainMethodRunner.class\r\n     1425  2017-06-08 11:57   org/springframework/boot/loader/PropertiesLauncher$1.class\r\n     3128  2017-06-08 11:57   org/springframework/boot/loader/ExecutableArchiveLauncher.class\r\n     1669  2017-06-08 11:57   org/springframework/boot/loader/WarLauncher.class\r\n        0  2017-08-23 17:04   org/springframework/boot/loader/archive/\r\n     1749  2017-06-08 11:57   org/springframework/boot/loader/archive/JarFileArchive$EntryIterator.class\r\n     3792  2017-06-08 11:57   org/springframework/boot/loader/archive/ExplodedArchive$FileEntryIterator.class\r\n     1068  2017-06-08 11:57   org/springframework/boot/loader/archive/ExplodedArchive$FileEntry.class\r\n     1051  2017-06-08 11:57   org/springframework/boot/loader/archive/JarFileArchive$JarFileEntry.class\r\n      302  2017-06-08 11:57   org/springframework/boot/loader/archive/Archive$Entry.class\r\n     7189  2017-06-08 11:57   org/springframework/boot/loader/archive/JarFileArchive.class\r\n     4974  2017-06-08 11:57   org/springframework/boot/loader/archive/ExplodedArchive.class\r\n      906  2017-06-08 11:57   org/springframework/boot/loader/archive/Archive.class\r\n     1438  2017-06-08 11:57   org/springframework/boot/loader/archive/ExplodedArchive$FileEntryIterator$EntryComparator.class\r\n      399  2017-06-08 11:57   org/springframework/boot/loader/archive/Archive$EntryFilter.class\r\n      273  2017-06-08 11:57   org/springframework/boot/loader/archive/ExplodedArchive$1.class\r\n    18041  2017-06-08 11:57   org/springframework/boot/loader/PropertiesLauncher.class\r\n        0  2017-08-23 17:04   org/springframework/boot/loader/util/\r\n     4887  2017-06-08 11:57   org/springframework/boot/loader/util/SystemPropertyUtils.class\r\n...\r\n```\r\n以为是很容易的事，肯定是从哪里拷贝过来的。至于来源，应该就在gradle缓存的某个jar文件里。去缓存文件夹下面搜一下应该就能搜到吧。\r\n```bash\r\nfor JAR in $(find ~/.gradle -name \'*.jar\'); do\r\n    if grep -n \'org/springframework/boot/loader/LaunchedURLClassLoader.class\' <(unzip -l $JAR 2>/dev/null); then\r\n        echo $JAR\r\n    fi\r\ndone\r\n```\r\n结果竟然什么都没搜索出来。\r\n于是又想，gradle打包的时候总要复制吧，那我用strace看看它打开了哪些文件不就看到了。\r\n```bash\r\nstrace -f -e trace=open gradle --no-daemon build |& grep org/springframework/boot/loader/LaunchedURLClassLoader.class\r\n```\r\n结果还是什么都没搜索出来。\r\n只能用最后一招了。调试gradle。以调试模式启动gradle。\r\n```bash\r\nGRADLE_OPTS=\'-agentlib:jdwp=transport=dt_socket,server=y,suspend=y\' gradle --no-daemon build\r\n```\r\n然后用IntelliJ远程调试，在```java.util.jar.JarOutputStream#putNextEntry```打上断点。因为你总要写jar吧。这下从断点的堆栈信息中终于看到了拷贝的过程。\r\n```Java\r\npackage org.springframework.boot.loader.tools;\r\n\r\npublic class JarWriter implements LoaderClassesWriter {\r\n\r\n    private static final String NESTED_LOADER_JAR = &quot;META-INF/loader/spring-boot-loader.jar&quot;;\r\n\r\n    public void writeLoaderClasses() throws IOException {\r\n        writeLoaderClasses(NESTED_LOADER_JAR);\r\n    }\r\n\r\n    public void writeLoaderClasses(String loaderJarResourceName) throws IOException {\r\n        URL loaderJar = getClass().getClassLoader().getResource(loaderJarResourceName);\r\n        JarInputStream inputStream = new JarInputStream(\r\n                new BufferedInputStream(loaderJar.openStream()));\r\n        JarEntry entry;\r\n        while ((entry = inputStream.getNextJarEntry()) != null) {\r\n            if (entry.getName().endsWith(&quot;.class&quot;)) {\r\n                writeEntry(entry, new InputStreamEntryWriter(inputStream, false));\r\n            }\r\n        }\r\n        inputStream.close();\r\n    }\r\n}\r\n```\r\n而这个文件呢，可以用之前搜索的方法找到对应的jar包。\r\n```bash\r\nfor JAR in $(find ~/.gradle -name \'*.jar\'); do\r\n    if grep -n \'org.springframework.boot.loader.tools.JarWriter\' <(unzip -l $JAR 2>/dev/null); then\r\n        echo $JAR\r\n    fi\r\ndone\r\n```\r\n找到了是```spring-boot-loader-tools-1.5.4.RELEASE.jar```这个jar。打开后可以看到里面有个```META-INF/loader/spring-boot-loader.jar```，再打开就可以看到复制过来的源文件了。\r\n在```spring-boot-loader-tools-1.5.4.RELEASE-sources.jar```里还找到一个非常有意思的文件：```org/springframework/boot/loader/tools/launch.script```，它的开头是：\r\n```bash\r\n#!/bin/bash\r\n#\r\n#    .   ____          _            __ _ _\r\n#   /\\\\ / ___\'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\r\n#  ( ( )\\___ | \'_ | \'_| | \'_ \\/ _` | \\ \\ \\ \\\r\n#   \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\r\n#    \'  |____| .__|_| |_|_| |_\\__, | / / / /\r\n#   =========|_|==============|___/=/_/_/_/\r\n#   :: Spring Boot Startup Script ::\r\n```',0,'https://www.allisterke.com/?p=93',0,'post','',0),(94,1,'2017-08-23 17:09:56','2017-08-23 09:09:56','一直很好奇，由gradle或maven打包好的spring-boot项目的jar文件里的org/springframework/boot/loader/**.class文件是怎么来的。\n\n<pre><code class=\"nohighlight\">unzip -l build/libs/springframework-lab.jar\n\n...\n        0  2017-08-23 16:21   org/\n        0  2017-08-23 16:21   org/springframework/\n        0  2017-08-23 16:21   org/springframework/boot/\n        0  2017-08-23 16:21   org/springframework/boot/loader/\n     2415  2017-06-08 11:57   org/springframework/boot/loader/LaunchedURLClassLoader$1.class\n     1454  2017-06-08 11:57   org/springframework/boot/loader/PropertiesLauncher$ArchiveEntryFilter.class\n     1912  2017-06-08 11:57   org/springframework/boot/loader/PropertiesLauncher$PrefixMatchingArchiveFilter.class\n     4599  2017-06-08 11:57   org/springframework/boot/loader/Launcher.class\n     1165  2017-06-08 11:57   org/springframework/boot/loader/ExecutableArchiveLauncher$1.class\n        0  2017-08-23 17:04   org/springframework/boot/loader/jar/\n     2002  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFile$1.class\n     9657  2017-06-08 11:57   org/springframework/boot/loader/jar/Handler.class\n     3350  2017-06-08 11:57   org/springframework/boot/loader/jar/JarEntry.class\n     1427  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFile$3.class\n     3104  2017-06-08 11:57   org/springframework/boot/loader/jar/CentralDirectoryEndRecord.class\n      430  2017-06-08 11:57   org/springframework/boot/loader/jar/CentralDirectoryVisitor.class\n     1300  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFile$JarFileType.class\n    10924  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFileEntries.class\n    12762  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFile.class\n     1540  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFileEntries$1.class\n      672  2017-06-08 11:57   org/springframework/boot/loader/jar/JarURLConnection$1.class\n     1199  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFile$2.class\n      262  2017-06-08 11:57   org/springframework/boot/loader/jar/JarEntryFilter.class\n     4457  2017-06-08 11:57   org/springframework/boot/loader/jar/AsciiBytes.class\n     4602  2017-06-08 11:57   org/springframework/boot/loader/jar/CentralDirectoryParser.class\n     2169  2017-06-08 11:57   org/springframework/boot/loader/jar/Bytes.class\n     1629  2017-06-08 11:57   org/springframework/boot/loader/jar/ZipInflaterInputStream.class\n     1967  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFileEntries$EntryIterator.class\n      306  2017-06-08 11:57   org/springframework/boot/loader/jar/FileHeader.class\n     3641  2017-06-08 11:57   org/springframework/boot/loader/jar/JarURLConnection$JarEntryName.class\n     9111  2017-06-08 11:57   org/springframework/boot/loader/jar/JarURLConnection.class\n     5449  2017-06-08 11:57   org/springframework/boot/loader/jar/CentralDirectoryFileHeader.class\n        0  2017-08-23 17:04   org/springframework/boot/loader/data/\n     1531  2017-06-08 11:57   org/springframework/boot/loader/data/ByteArrayRandomAccessData.class\n     3549  2017-06-08 11:57   org/springframework/boot/loader/data/RandomAccessDataFile$DataInputStream.class\n     1862  2017-06-08 11:57   org/springframework/boot/loader/data/RandomAccessDataFile$FilePool.class\n     1341  2017-06-08 11:57   org/springframework/boot/loader/data/RandomAccessData$ResourceAccess.class\n     3319  2017-06-08 11:57   org/springframework/boot/loader/data/RandomAccessDataFile.class\n      551  2017-06-08 11:57   org/springframework/boot/loader/data/RandomAccessData.class\n     4698  2017-06-08 11:57   org/springframework/boot/loader/LaunchedURLClassLoader.class\n     1533  2017-06-08 11:57   org/springframework/boot/loader/JarLauncher.class\n     1468  2017-06-08 11:57   org/springframework/boot/loader/MainMethodRunner.class\n     1425  2017-06-08 11:57   org/springframework/boot/loader/PropertiesLauncher$1.class\n     3128  2017-06-08 11:57   org/springframework/boot/loader/ExecutableArchiveLauncher.class\n     1669  2017-06-08 11:57   org/springframework/boot/loader/WarLauncher.class\n        0  2017-08-23 17:04   org/springframework/boot/loader/archive/\n     1749  2017-06-08 11:57   org/springframework/boot/loader/archive/JarFileArchive$EntryIterator.class\n     3792  2017-06-08 11:57   org/springframework/boot/loader/archive/ExplodedArchive$FileEntryIterator.class\n     1068  2017-06-08 11:57   org/springframework/boot/loader/archive/ExplodedArchive$FileEntry.class\n     1051  2017-06-08 11:57   org/springframework/boot/loader/archive/JarFileArchive$JarFileEntry.class\n      302  2017-06-08 11:57   org/springframework/boot/loader/archive/Archive$Entry.class\n     7189  2017-06-08 11:57   org/springframework/boot/loader/archive/JarFileArchive.class\n     4974  2017-06-08 11:57   org/springframework/boot/loader/archive/ExplodedArchive.class\n      906  2017-06-08 11:57   org/springframework/boot/loader/archive/Archive.class\n     1438  2017-06-08 11:57   org/springframework/boot/loader/archive/ExplodedArchive$FileEntryIterator$EntryComparator.class\n      399  2017-06-08 11:57   org/springframework/boot/loader/archive/Archive$EntryFilter.class\n      273  2017-06-08 11:57   org/springframework/boot/loader/archive/ExplodedArchive$1.class\n    18041  2017-06-08 11:57   org/springframework/boot/loader/PropertiesLauncher.class\n        0  2017-08-23 17:04   org/springframework/boot/loader/util/\n     4887  2017-06-08 11:57   org/springframework/boot/loader/util/SystemPropertyUtils.class\n...\n</code></pre>','Spring Boot Loader Classes的由来','','inherit','closed','closed','','93-revision-v1','','','2017-08-23 17:09:56','2017-08-23 09:09:56','一直很好奇，由gradle或maven打包好的spring-boot项目的jar文件里的org/springframework/boot/loader/**.class文件是怎么来的。\r\n```nohighlight\r\nunzip -l build/libs/springframework-lab.jar\r\n\r\n...\r\n        0  2017-08-23 16:21   org/\r\n        0  2017-08-23 16:21   org/springframework/\r\n        0  2017-08-23 16:21   org/springframework/boot/\r\n        0  2017-08-23 16:21   org/springframework/boot/loader/\r\n     2415  2017-06-08 11:57   org/springframework/boot/loader/LaunchedURLClassLoader$1.class\r\n     1454  2017-06-08 11:57   org/springframework/boot/loader/PropertiesLauncher$ArchiveEntryFilter.class\r\n     1912  2017-06-08 11:57   org/springframework/boot/loader/PropertiesLauncher$PrefixMatchingArchiveFilter.class\r\n     4599  2017-06-08 11:57   org/springframework/boot/loader/Launcher.class\r\n     1165  2017-06-08 11:57   org/springframework/boot/loader/ExecutableArchiveLauncher$1.class\r\n        0  2017-08-23 17:04   org/springframework/boot/loader/jar/\r\n     2002  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFile$1.class\r\n     9657  2017-06-08 11:57   org/springframework/boot/loader/jar/Handler.class\r\n     3350  2017-06-08 11:57   org/springframework/boot/loader/jar/JarEntry.class\r\n     1427  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFile$3.class\r\n     3104  2017-06-08 11:57   org/springframework/boot/loader/jar/CentralDirectoryEndRecord.class\r\n      430  2017-06-08 11:57   org/springframework/boot/loader/jar/CentralDirectoryVisitor.class\r\n     1300  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFile$JarFileType.class\r\n    10924  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFileEntries.class\r\n    12762  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFile.class\r\n     1540  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFileEntries$1.class\r\n      672  2017-06-08 11:57   org/springframework/boot/loader/jar/JarURLConnection$1.class\r\n     1199  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFile$2.class\r\n      262  2017-06-08 11:57   org/springframework/boot/loader/jar/JarEntryFilter.class\r\n     4457  2017-06-08 11:57   org/springframework/boot/loader/jar/AsciiBytes.class\r\n     4602  2017-06-08 11:57   org/springframework/boot/loader/jar/CentralDirectoryParser.class\r\n     2169  2017-06-08 11:57   org/springframework/boot/loader/jar/Bytes.class\r\n     1629  2017-06-08 11:57   org/springframework/boot/loader/jar/ZipInflaterInputStream.class\r\n     1967  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFileEntries$EntryIterator.class\r\n      306  2017-06-08 11:57   org/springframework/boot/loader/jar/FileHeader.class\r\n     3641  2017-06-08 11:57   org/springframework/boot/loader/jar/JarURLConnection$JarEntryName.class\r\n     9111  2017-06-08 11:57   org/springframework/boot/loader/jar/JarURLConnection.class\r\n     5449  2017-06-08 11:57   org/springframework/boot/loader/jar/CentralDirectoryFileHeader.class\r\n        0  2017-08-23 17:04   org/springframework/boot/loader/data/\r\n     1531  2017-06-08 11:57   org/springframework/boot/loader/data/ByteArrayRandomAccessData.class\r\n     3549  2017-06-08 11:57   org/springframework/boot/loader/data/RandomAccessDataFile$DataInputStream.class\r\n     1862  2017-06-08 11:57   org/springframework/boot/loader/data/RandomAccessDataFile$FilePool.class\r\n     1341  2017-06-08 11:57   org/springframework/boot/loader/data/RandomAccessData$ResourceAccess.class\r\n     3319  2017-06-08 11:57   org/springframework/boot/loader/data/RandomAccessDataFile.class\r\n      551  2017-06-08 11:57   org/springframework/boot/loader/data/RandomAccessData.class\r\n     4698  2017-06-08 11:57   org/springframework/boot/loader/LaunchedURLClassLoader.class\r\n     1533  2017-06-08 11:57   org/springframework/boot/loader/JarLauncher.class\r\n     1468  2017-06-08 11:57   org/springframework/boot/loader/MainMethodRunner.class\r\n     1425  2017-06-08 11:57   org/springframework/boot/loader/PropertiesLauncher$1.class\r\n     3128  2017-06-08 11:57   org/springframework/boot/loader/ExecutableArchiveLauncher.class\r\n     1669  2017-06-08 11:57   org/springframework/boot/loader/WarLauncher.class\r\n        0  2017-08-23 17:04   org/springframework/boot/loader/archive/\r\n     1749  2017-06-08 11:57   org/springframework/boot/loader/archive/JarFileArchive$EntryIterator.class\r\n     3792  2017-06-08 11:57   org/springframework/boot/loader/archive/ExplodedArchive$FileEntryIterator.class\r\n     1068  2017-06-08 11:57   org/springframework/boot/loader/archive/ExplodedArchive$FileEntry.class\r\n     1051  2017-06-08 11:57   org/springframework/boot/loader/archive/JarFileArchive$JarFileEntry.class\r\n      302  2017-06-08 11:57   org/springframework/boot/loader/archive/Archive$Entry.class\r\n     7189  2017-06-08 11:57   org/springframework/boot/loader/archive/JarFileArchive.class\r\n     4974  2017-06-08 11:57   org/springframework/boot/loader/archive/ExplodedArchive.class\r\n      906  2017-06-08 11:57   org/springframework/boot/loader/archive/Archive.class\r\n     1438  2017-06-08 11:57   org/springframework/boot/loader/archive/ExplodedArchive$FileEntryIterator$EntryComparator.class\r\n      399  2017-06-08 11:57   org/springframework/boot/loader/archive/Archive$EntryFilter.class\r\n      273  2017-06-08 11:57   org/springframework/boot/loader/archive/ExplodedArchive$1.class\r\n    18041  2017-06-08 11:57   org/springframework/boot/loader/PropertiesLauncher.class\r\n        0  2017-08-23 17:04   org/springframework/boot/loader/util/\r\n     4887  2017-06-08 11:57   org/springframework/boot/loader/util/SystemPropertyUtils.class\r\n...\r\n```',93,'https://www.allisterke.com/?p=94',0,'revision','',0),(95,1,'2017-08-23 17:31:39','2017-08-23 09:31:39','一直很好奇，由gradle或maven打包好的spring-boot项目的jar文件里的org/springframework/boot/loader/**.class文件是怎么来的。\n\n<pre><code class=\"nohighlight\">unzip -l build/libs/springframework-lab.jar\n\n...\n        0  2017-08-23 16:21   org/\n        0  2017-08-23 16:21   org/springframework/\n        0  2017-08-23 16:21   org/springframework/boot/\n        0  2017-08-23 16:21   org/springframework/boot/loader/\n     2415  2017-06-08 11:57   org/springframework/boot/loader/LaunchedURLClassLoader$1.class\n     1454  2017-06-08 11:57   org/springframework/boot/loader/PropertiesLauncher$ArchiveEntryFilter.class\n     1912  2017-06-08 11:57   org/springframework/boot/loader/PropertiesLauncher$PrefixMatchingArchiveFilter.class\n     4599  2017-06-08 11:57   org/springframework/boot/loader/Launcher.class\n     1165  2017-06-08 11:57   org/springframework/boot/loader/ExecutableArchiveLauncher$1.class\n        0  2017-08-23 17:04   org/springframework/boot/loader/jar/\n     2002  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFile$1.class\n     9657  2017-06-08 11:57   org/springframework/boot/loader/jar/Handler.class\n     3350  2017-06-08 11:57   org/springframework/boot/loader/jar/JarEntry.class\n     1427  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFile$3.class\n     3104  2017-06-08 11:57   org/springframework/boot/loader/jar/CentralDirectoryEndRecord.class\n      430  2017-06-08 11:57   org/springframework/boot/loader/jar/CentralDirectoryVisitor.class\n     1300  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFile$JarFileType.class\n    10924  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFileEntries.class\n    12762  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFile.class\n     1540  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFileEntries$1.class\n      672  2017-06-08 11:57   org/springframework/boot/loader/jar/JarURLConnection$1.class\n     1199  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFile$2.class\n      262  2017-06-08 11:57   org/springframework/boot/loader/jar/JarEntryFilter.class\n     4457  2017-06-08 11:57   org/springframework/boot/loader/jar/AsciiBytes.class\n     4602  2017-06-08 11:57   org/springframework/boot/loader/jar/CentralDirectoryParser.class\n     2169  2017-06-08 11:57   org/springframework/boot/loader/jar/Bytes.class\n     1629  2017-06-08 11:57   org/springframework/boot/loader/jar/ZipInflaterInputStream.class\n     1967  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFileEntries$EntryIterator.class\n      306  2017-06-08 11:57   org/springframework/boot/loader/jar/FileHeader.class\n     3641  2017-06-08 11:57   org/springframework/boot/loader/jar/JarURLConnection$JarEntryName.class\n     9111  2017-06-08 11:57   org/springframework/boot/loader/jar/JarURLConnection.class\n     5449  2017-06-08 11:57   org/springframework/boot/loader/jar/CentralDirectoryFileHeader.class\n        0  2017-08-23 17:04   org/springframework/boot/loader/data/\n     1531  2017-06-08 11:57   org/springframework/boot/loader/data/ByteArrayRandomAccessData.class\n     3549  2017-06-08 11:57   org/springframework/boot/loader/data/RandomAccessDataFile$DataInputStream.class\n     1862  2017-06-08 11:57   org/springframework/boot/loader/data/RandomAccessDataFile$FilePool.class\n     1341  2017-06-08 11:57   org/springframework/boot/loader/data/RandomAccessData$ResourceAccess.class\n     3319  2017-06-08 11:57   org/springframework/boot/loader/data/RandomAccessDataFile.class\n      551  2017-06-08 11:57   org/springframework/boot/loader/data/RandomAccessData.class\n     4698  2017-06-08 11:57   org/springframework/boot/loader/LaunchedURLClassLoader.class\n     1533  2017-06-08 11:57   org/springframework/boot/loader/JarLauncher.class\n     1468  2017-06-08 11:57   org/springframework/boot/loader/MainMethodRunner.class\n     1425  2017-06-08 11:57   org/springframework/boot/loader/PropertiesLauncher$1.class\n     3128  2017-06-08 11:57   org/springframework/boot/loader/ExecutableArchiveLauncher.class\n     1669  2017-06-08 11:57   org/springframework/boot/loader/WarLauncher.class\n        0  2017-08-23 17:04   org/springframework/boot/loader/archive/\n     1749  2017-06-08 11:57   org/springframework/boot/loader/archive/JarFileArchive$EntryIterator.class\n     3792  2017-06-08 11:57   org/springframework/boot/loader/archive/ExplodedArchive$FileEntryIterator.class\n     1068  2017-06-08 11:57   org/springframework/boot/loader/archive/ExplodedArchive$FileEntry.class\n     1051  2017-06-08 11:57   org/springframework/boot/loader/archive/JarFileArchive$JarFileEntry.class\n      302  2017-06-08 11:57   org/springframework/boot/loader/archive/Archive$Entry.class\n     7189  2017-06-08 11:57   org/springframework/boot/loader/archive/JarFileArchive.class\n     4974  2017-06-08 11:57   org/springframework/boot/loader/archive/ExplodedArchive.class\n      906  2017-06-08 11:57   org/springframework/boot/loader/archive/Archive.class\n     1438  2017-06-08 11:57   org/springframework/boot/loader/archive/ExplodedArchive$FileEntryIterator$EntryComparator.class\n      399  2017-06-08 11:57   org/springframework/boot/loader/archive/Archive$EntryFilter.class\n      273  2017-06-08 11:57   org/springframework/boot/loader/archive/ExplodedArchive$1.class\n    18041  2017-06-08 11:57   org/springframework/boot/loader/PropertiesLauncher.class\n        0  2017-08-23 17:04   org/springframework/boot/loader/util/\n     4887  2017-06-08 11:57   org/springframework/boot/loader/util/SystemPropertyUtils.class\n...\n</code></pre>\n\n以为是很容易的事，肯定是从哪里拷贝过来的。至于来源，应该就在gradle缓存的某个jar文件里。去缓存文件夹下面搜一下应该就能搜到吧。\n\n<pre><code class=\"bash\">for JAR in $(find ~/.gradle -name \'*.jar\'); do\n    if grep -n \'org/springframework/boot/loader/LaunchedURLClassLoader.class\' &lt;(unzip -l $JAR 2&gt;/dev/null); then\n        echo $JAR\n    fi\ndone\n</code></pre>\n\n结果竟然什么都没搜索出来。\n于是又想，gradle打包的时候总要复制吧，那我用strace看看它打开了哪些文件不就看到了。\n\n<pre><code class=\"bash\">strace -f -e trace=open gradle --no-daemon build |&amp; grep org/springframework/boot/loader/LaunchedURLClassLoader.class\n</code></pre>\n\n结果还是什么都没搜索出来。\n只能用最后一招了。调试gradle。以调试模式启动gradle。\n\n<pre><code class=\"bash\">GRADLE_OPTS=\'-agentlib:jdwp=transport=dt_socket,server=y,suspend=y\' gradle --no-daemon build\n</code></pre>\n\n然后用IntelliJ远程调试，在<code>java.util.jar.JarOutputStream#putNextEntry</code>打上断点。因为你总要写jar吧。这下从断点的堆栈信息中终于看到了拷贝的过程。\n\n<pre><code class=\"Java\">package org.springframework.boot.loader.tools;\n\npublic class JarWriter implements LoaderClassesWriter {\n\n    private static final String NESTED_LOADER_JAR = \"META-INF/loader/spring-boot-loader.jar\";\n\n    public void writeLoaderClasses() throws IOException {\n        writeLoaderClasses(NESTED_LOADER_JAR);\n    }\n\n    public void writeLoaderClasses(String loaderJarResourceName) throws IOException {\n        URL loaderJar = getClass().getClassLoader().getResource(loaderJarResourceName);\n        JarInputStream inputStream = new JarInputStream(\n                new BufferedInputStream(loaderJar.openStream()));\n        JarEntry entry;\n        while ((entry = inputStream.getNextJarEntry()) != null) {\n            if (entry.getName().endsWith(\".class\")) {\n                writeEntry(entry, new InputStreamEntryWriter(inputStream, false));\n            }\n        }\n        inputStream.close();\n    }\n}\n</code></pre>\n\n而这个文件呢，可以用之前搜索的方法找到对应的jar包。\n\n<pre><code class=\"bash\">for JAR in $(find ~/.gradle -name \'*.jar\'); do\n    if grep -n \'org.springframework.boot.loader.tools.JarWriter\' &lt;(unzip -l $JAR 2&gt;/dev/null); then\n        echo $JAR\n    fi\ndone\n</code></pre>\n\n找到了是<code>spring-boot-loader-tools-1.5.4.RELEASE.jar</code>这个jar。打开后可以看到里面有个<code>META-INF/loader/spring-boot-loader.jar</code>，再打开就可以看到复制过来的源文件了。\n在<code>spring-boot-loader-tools-1.5.4.RELEASE-sources.jar</code>里还找到一个非常有意思的文件：<code>org/springframework/boot/loader/tools/launch.script</code>，它的开头是：\n\n<pre><code class=\"bash\">#!/bin/bash\n#\n#    .   ____          _            __ _ _\n#   /\\\\ / ___\'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\n#  ( ( )\\___ | \'_ | \'_| | \'_ \\/ _` | \\ \\ \\ \\\n#   \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\n#    \'  |____| .__|_| |_|_| |_\\__, | / / / /\n#   =========|_|==============|___/=/_/_/_/\n#   :: Spring Boot Startup Script ::\n</code></pre>','Spring Boot Loader Classes的由来','','inherit','closed','closed','','93-revision-v1','','','2017-08-23 17:31:39','2017-08-23 09:31:39','一直很好奇，由gradle或maven打包好的spring-boot项目的jar文件里的org/springframework/boot/loader/**.class文件是怎么来的。\r\n```nohighlight\r\nunzip -l build/libs/springframework-lab.jar\r\n\r\n...\r\n        0  2017-08-23 16:21   org/\r\n        0  2017-08-23 16:21   org/springframework/\r\n        0  2017-08-23 16:21   org/springframework/boot/\r\n        0  2017-08-23 16:21   org/springframework/boot/loader/\r\n     2415  2017-06-08 11:57   org/springframework/boot/loader/LaunchedURLClassLoader$1.class\r\n     1454  2017-06-08 11:57   org/springframework/boot/loader/PropertiesLauncher$ArchiveEntryFilter.class\r\n     1912  2017-06-08 11:57   org/springframework/boot/loader/PropertiesLauncher$PrefixMatchingArchiveFilter.class\r\n     4599  2017-06-08 11:57   org/springframework/boot/loader/Launcher.class\r\n     1165  2017-06-08 11:57   org/springframework/boot/loader/ExecutableArchiveLauncher$1.class\r\n        0  2017-08-23 17:04   org/springframework/boot/loader/jar/\r\n     2002  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFile$1.class\r\n     9657  2017-06-08 11:57   org/springframework/boot/loader/jar/Handler.class\r\n     3350  2017-06-08 11:57   org/springframework/boot/loader/jar/JarEntry.class\r\n     1427  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFile$3.class\r\n     3104  2017-06-08 11:57   org/springframework/boot/loader/jar/CentralDirectoryEndRecord.class\r\n      430  2017-06-08 11:57   org/springframework/boot/loader/jar/CentralDirectoryVisitor.class\r\n     1300  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFile$JarFileType.class\r\n    10924  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFileEntries.class\r\n    12762  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFile.class\r\n     1540  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFileEntries$1.class\r\n      672  2017-06-08 11:57   org/springframework/boot/loader/jar/JarURLConnection$1.class\r\n     1199  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFile$2.class\r\n      262  2017-06-08 11:57   org/springframework/boot/loader/jar/JarEntryFilter.class\r\n     4457  2017-06-08 11:57   org/springframework/boot/loader/jar/AsciiBytes.class\r\n     4602  2017-06-08 11:57   org/springframework/boot/loader/jar/CentralDirectoryParser.class\r\n     2169  2017-06-08 11:57   org/springframework/boot/loader/jar/Bytes.class\r\n     1629  2017-06-08 11:57   org/springframework/boot/loader/jar/ZipInflaterInputStream.class\r\n     1967  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFileEntries$EntryIterator.class\r\n      306  2017-06-08 11:57   org/springframework/boot/loader/jar/FileHeader.class\r\n     3641  2017-06-08 11:57   org/springframework/boot/loader/jar/JarURLConnection$JarEntryName.class\r\n     9111  2017-06-08 11:57   org/springframework/boot/loader/jar/JarURLConnection.class\r\n     5449  2017-06-08 11:57   org/springframework/boot/loader/jar/CentralDirectoryFileHeader.class\r\n        0  2017-08-23 17:04   org/springframework/boot/loader/data/\r\n     1531  2017-06-08 11:57   org/springframework/boot/loader/data/ByteArrayRandomAccessData.class\r\n     3549  2017-06-08 11:57   org/springframework/boot/loader/data/RandomAccessDataFile$DataInputStream.class\r\n     1862  2017-06-08 11:57   org/springframework/boot/loader/data/RandomAccessDataFile$FilePool.class\r\n     1341  2017-06-08 11:57   org/springframework/boot/loader/data/RandomAccessData$ResourceAccess.class\r\n     3319  2017-06-08 11:57   org/springframework/boot/loader/data/RandomAccessDataFile.class\r\n      551  2017-06-08 11:57   org/springframework/boot/loader/data/RandomAccessData.class\r\n     4698  2017-06-08 11:57   org/springframework/boot/loader/LaunchedURLClassLoader.class\r\n     1533  2017-06-08 11:57   org/springframework/boot/loader/JarLauncher.class\r\n     1468  2017-06-08 11:57   org/springframework/boot/loader/MainMethodRunner.class\r\n     1425  2017-06-08 11:57   org/springframework/boot/loader/PropertiesLauncher$1.class\r\n     3128  2017-06-08 11:57   org/springframework/boot/loader/ExecutableArchiveLauncher.class\r\n     1669  2017-06-08 11:57   org/springframework/boot/loader/WarLauncher.class\r\n        0  2017-08-23 17:04   org/springframework/boot/loader/archive/\r\n     1749  2017-06-08 11:57   org/springframework/boot/loader/archive/JarFileArchive$EntryIterator.class\r\n     3792  2017-06-08 11:57   org/springframework/boot/loader/archive/ExplodedArchive$FileEntryIterator.class\r\n     1068  2017-06-08 11:57   org/springframework/boot/loader/archive/ExplodedArchive$FileEntry.class\r\n     1051  2017-06-08 11:57   org/springframework/boot/loader/archive/JarFileArchive$JarFileEntry.class\r\n      302  2017-06-08 11:57   org/springframework/boot/loader/archive/Archive$Entry.class\r\n     7189  2017-06-08 11:57   org/springframework/boot/loader/archive/JarFileArchive.class\r\n     4974  2017-06-08 11:57   org/springframework/boot/loader/archive/ExplodedArchive.class\r\n      906  2017-06-08 11:57   org/springframework/boot/loader/archive/Archive.class\r\n     1438  2017-06-08 11:57   org/springframework/boot/loader/archive/ExplodedArchive$FileEntryIterator$EntryComparator.class\r\n      399  2017-06-08 11:57   org/springframework/boot/loader/archive/Archive$EntryFilter.class\r\n      273  2017-06-08 11:57   org/springframework/boot/loader/archive/ExplodedArchive$1.class\r\n    18041  2017-06-08 11:57   org/springframework/boot/loader/PropertiesLauncher.class\r\n        0  2017-08-23 17:04   org/springframework/boot/loader/util/\r\n     4887  2017-06-08 11:57   org/springframework/boot/loader/util/SystemPropertyUtils.class\r\n...\r\n```\r\n以为是很容易的事，肯定是从哪里拷贝过来的。至于来源，应该就在gradle缓存的某个jar文件里。去缓存文件夹下面搜一下应该就能搜到吧。\r\n```bash\r\nfor JAR in $(find ~/.gradle -name \'*.jar\'); do\r\n    if grep -n \'org/springframework/boot/loader/LaunchedURLClassLoader.class\' <(unzip -l $JAR 2>/dev/null); then\r\n        echo $JAR\r\n    fi\r\ndone\r\n```\r\n结果竟然什么都没搜索出来。\r\n于是又想，gradle打包的时候总要复制吧，那我用strace看看它打开了哪些文件不就看到了。\r\n```bash\r\nstrace -f -e trace=open gradle --no-daemon build |& grep org/springframework/boot/loader/LaunchedURLClassLoader.class\r\n```\r\n结果还是什么都没搜索出来。\r\n只能用最后一招了。调试gradle。以调试模式启动gradle。\r\n```bash\r\nGRADLE_OPTS=\'-agentlib:jdwp=transport=dt_socket,server=y,suspend=y\' gradle --no-daemon build\r\n```\r\n然后用IntelliJ远程调试，在```java.util.jar.JarOutputStream#putNextEntry```打上断点。因为你总要写jar吧。这下从断点的堆栈信息中终于看到了拷贝的过程。\r\n```Java\r\npackage org.springframework.boot.loader.tools;\r\n\r\npublic class JarWriter implements LoaderClassesWriter {\r\n\r\n    private static final String NESTED_LOADER_JAR = &quot;META-INF/loader/spring-boot-loader.jar&quot;;\r\n\r\n    public void writeLoaderClasses() throws IOException {\r\n        writeLoaderClasses(NESTED_LOADER_JAR);\r\n    }\r\n\r\n    public void writeLoaderClasses(String loaderJarResourceName) throws IOException {\r\n        URL loaderJar = getClass().getClassLoader().getResource(loaderJarResourceName);\r\n        JarInputStream inputStream = new JarInputStream(\r\n                new BufferedInputStream(loaderJar.openStream()));\r\n        JarEntry entry;\r\n        while ((entry = inputStream.getNextJarEntry()) != null) {\r\n            if (entry.getName().endsWith(&quot;.class&quot;)) {\r\n                writeEntry(entry, new InputStreamEntryWriter(inputStream, false));\r\n            }\r\n        }\r\n        inputStream.close();\r\n    }\r\n}\r\n```\r\n而这个文件呢，可以用之前搜索的方法找到对应的jar包。\r\n```bash\r\nfor JAR in $(find ~/.gradle -name \'*.jar\'); do\r\n    if grep -n \'org.springframework.boot.loader.tools.JarWriter\' <(unzip -l $JAR 2>/dev/null); then\r\n        echo $JAR\r\n    fi\r\ndone\r\n```\r\n找到了是```spring-boot-loader-tools-1.5.4.RELEASE.jar```这个jar。打开后可以看到里面有个```META-INF/loader/spring-boot-loader.jar```，再打开就可以看到复制过来的源文件了。\r\n在```spring-boot-loader-tools-1.5.4.RELEASE-sources.jar```里还找到一个非常有意思的文件：```org/springframework/boot/loader/tools/launch.script```，它的开头是：\r\n```bash\r\n#!/bin/bash\r\n#\r\n#    .   ____          _            __ _ _\r\n#   /\\\\ / ___\'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\r\n#  ( ( )\\___ | \'_ | \'_| | \'_ \\/ _` | \\ \\ \\ \\\r\n#   \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\r\n#    \'  |____| .__|_| |_|_| |_\\__, | / / / /\r\n#   =========|_|==============|___/=/_/_/_/\r\n#   :: Spring Boot Startup Script ::\r\n```',93,'https://www.allisterke.com/?p=95',0,'revision','',0),(96,1,'2017-08-23 17:33:06','2017-08-23 09:33:06','一直很好奇，由gradle或maven打包好的spring-boot项目的jar文件里的org/springframework/boot/loader/**.class文件是怎么来的。\n\n<pre><code class=\"nohighlight\">unzip -l build/libs/springframework-lab.jar\n\n...\n        0  2017-08-23 16:21   org/\n        0  2017-08-23 16:21   org/springframework/\n        0  2017-08-23 16:21   org/springframework/boot/\n        0  2017-08-23 16:21   org/springframework/boot/loader/\n     2415  2017-06-08 11:57   org/springframework/boot/loader/LaunchedURLClassLoader$1.class\n     1454  2017-06-08 11:57   org/springframework/boot/loader/PropertiesLauncher$ArchiveEntryFilter.class\n     1912  2017-06-08 11:57   org/springframework/boot/loader/PropertiesLauncher$PrefixMatchingArchiveFilter.class\n     4599  2017-06-08 11:57   org/springframework/boot/loader/Launcher.class\n     1165  2017-06-08 11:57   org/springframework/boot/loader/ExecutableArchiveLauncher$1.class\n        0  2017-08-23 17:04   org/springframework/boot/loader/jar/\n     2002  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFile$1.class\n     9657  2017-06-08 11:57   org/springframework/boot/loader/jar/Handler.class\n     3350  2017-06-08 11:57   org/springframework/boot/loader/jar/JarEntry.class\n     1427  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFile$3.class\n     3104  2017-06-08 11:57   org/springframework/boot/loader/jar/CentralDirectoryEndRecord.class\n      430  2017-06-08 11:57   org/springframework/boot/loader/jar/CentralDirectoryVisitor.class\n     1300  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFile$JarFileType.class\n    10924  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFileEntries.class\n    12762  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFile.class\n     1540  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFileEntries$1.class\n      672  2017-06-08 11:57   org/springframework/boot/loader/jar/JarURLConnection$1.class\n     1199  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFile$2.class\n      262  2017-06-08 11:57   org/springframework/boot/loader/jar/JarEntryFilter.class\n     4457  2017-06-08 11:57   org/springframework/boot/loader/jar/AsciiBytes.class\n     4602  2017-06-08 11:57   org/springframework/boot/loader/jar/CentralDirectoryParser.class\n     2169  2017-06-08 11:57   org/springframework/boot/loader/jar/Bytes.class\n     1629  2017-06-08 11:57   org/springframework/boot/loader/jar/ZipInflaterInputStream.class\n     1967  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFileEntries$EntryIterator.class\n      306  2017-06-08 11:57   org/springframework/boot/loader/jar/FileHeader.class\n     3641  2017-06-08 11:57   org/springframework/boot/loader/jar/JarURLConnection$JarEntryName.class\n     9111  2017-06-08 11:57   org/springframework/boot/loader/jar/JarURLConnection.class\n     5449  2017-06-08 11:57   org/springframework/boot/loader/jar/CentralDirectoryFileHeader.class\n        0  2017-08-23 17:04   org/springframework/boot/loader/data/\n     1531  2017-06-08 11:57   org/springframework/boot/loader/data/ByteArrayRandomAccessData.class\n     3549  2017-06-08 11:57   org/springframework/boot/loader/data/RandomAccessDataFile$DataInputStream.class\n     1862  2017-06-08 11:57   org/springframework/boot/loader/data/RandomAccessDataFile$FilePool.class\n     1341  2017-06-08 11:57   org/springframework/boot/loader/data/RandomAccessData$ResourceAccess.class\n     3319  2017-06-08 11:57   org/springframework/boot/loader/data/RandomAccessDataFile.class\n      551  2017-06-08 11:57   org/springframework/boot/loader/data/RandomAccessData.class\n     4698  2017-06-08 11:57   org/springframework/boot/loader/LaunchedURLClassLoader.class\n     1533  2017-06-08 11:57   org/springframework/boot/loader/JarLauncher.class\n     1468  2017-06-08 11:57   org/springframework/boot/loader/MainMethodRunner.class\n     1425  2017-06-08 11:57   org/springframework/boot/loader/PropertiesLauncher$1.class\n     3128  2017-06-08 11:57   org/springframework/boot/loader/ExecutableArchiveLauncher.class\n     1669  2017-06-08 11:57   org/springframework/boot/loader/WarLauncher.class\n        0  2017-08-23 17:04   org/springframework/boot/loader/archive/\n     1749  2017-06-08 11:57   org/springframework/boot/loader/archive/JarFileArchive$EntryIterator.class\n     3792  2017-06-08 11:57   org/springframework/boot/loader/archive/ExplodedArchive$FileEntryIterator.class\n     1068  2017-06-08 11:57   org/springframework/boot/loader/archive/ExplodedArchive$FileEntry.class\n     1051  2017-06-08 11:57   org/springframework/boot/loader/archive/JarFileArchive$JarFileEntry.class\n      302  2017-06-08 11:57   org/springframework/boot/loader/archive/Archive$Entry.class\n     7189  2017-06-08 11:57   org/springframework/boot/loader/archive/JarFileArchive.class\n     4974  2017-06-08 11:57   org/springframework/boot/loader/archive/ExplodedArchive.class\n      906  2017-06-08 11:57   org/springframework/boot/loader/archive/Archive.class\n     1438  2017-06-08 11:57   org/springframework/boot/loader/archive/ExplodedArchive$FileEntryIterator$EntryComparator.class\n      399  2017-06-08 11:57   org/springframework/boot/loader/archive/Archive$EntryFilter.class\n      273  2017-06-08 11:57   org/springframework/boot/loader/archive/ExplodedArchive$1.class\n    18041  2017-06-08 11:57   org/springframework/boot/loader/PropertiesLauncher.class\n        0  2017-08-23 17:04   org/springframework/boot/loader/util/\n     4887  2017-06-08 11:57   org/springframework/boot/loader/util/SystemPropertyUtils.class\n...\n</code></pre>\n\n以为是很容易的事，肯定是从哪里拷贝过来的。至于来源，应该就在gradle缓存的某个jar文件里。去缓存文件夹下面搜一下应该就能搜到吧。\n\n<pre><code class=\"bash\">for JAR in $(find ~/.gradle -name \'*.jar\'); do\n    if grep -n \'org/springframework/boot/loader/LaunchedURLClassLoader.class\' &lt;(unzip -l $JAR 2&gt;/dev/null); then\n        echo $JAR\n    fi\ndone\n</code></pre>\n\n结果竟然什么都没搜索出来。\n于是又想，gradle打包的时候总要复制吧，那我用strace看看它打开了哪些文件不就看到了。\n\n<pre><code class=\"bash\">strace -f -e trace=open gradle --no-daemon build |&amp; grep org/springframework/boot/loader/LaunchedURLClassLoader.class\n</code></pre>\n\n结果还是什么都没搜索出来。\n只能用最后一招了。调试gradle。以调试模式启动gradle。\n\n<pre><code class=\"bash\">GRADLE_OPTS=\'-agentlib:jdwp=transport=dt_socket,server=y,suspend=y\' gradle --no-daemon build\n</code></pre>\n\n然后用IntelliJ远程调试，在<code>java.util.jar.JarOutputStream#putNextEntry</code>打上断点。因为你总要写jar吧。这下从断点的堆栈信息中终于看到了拷贝的过程。\n\n<pre><code class=\"Java\">package org.springframework.boot.loader.tools;\n\npublic class JarWriter implements LoaderClassesWriter {\n\n    private static final String NESTED_LOADER_JAR = \"META-INF/loader/spring-boot-loader.jar\";\n\n    public void writeLoaderClasses() throws IOException {\n        writeLoaderClasses(NESTED_LOADER_JAR);\n    }\n\n    public void writeLoaderClasses(String loaderJarResourceName) throws IOException {\n        URL loaderJar = getClass().getClassLoader().getResource(loaderJarResourceName);\n        JarInputStream inputStream = new JarInputStream(\n                new BufferedInputStream(loaderJar.openStream()));\n        JarEntry entry;\n        while ((entry = inputStream.getNextJarEntry()) != null) {\n            if (entry.getName().endsWith(\".class\")) {\n                writeEntry(entry, new InputStreamEntryWriter(inputStream, false));\n            }\n        }\n        inputStream.close();\n    }\n}\n</code></pre>\n\n而这个文件呢，可以用之前搜索的方法找到对应的jar包。\n\n<pre><code class=\"bash\">for JAR in $(find ~/.gradle -name \'*.jar\'); do\n    if grep -n \'org.springframework.boot.loader.tools.JarWriter\' &lt;(unzip -l $JAR 2&gt;/dev/null); then\n        echo $JAR\n    fi\ndone\n</code></pre>\n\n找到了是<code>spring-boot-loader-tools-1.5.4.RELEASE.jar</code>这个jar。打开后可以看到里面有个<code>META-INF/loader/spring-boot-loader.jar</code>，再打开就可以看到复制过来的源文件了。\n在<code>spring-boot-loader-tools-1.5.4.RELEASE-sources.jar</code>里还找到一个非常有意思的文件：<code>org/springframework/boot/loader/tools/launch.script</code>，它的开头是：\n\n<pre><code class=\"bash\">#!/bin/bash\n#\n#    .   ____          _            __ _ _\n#   /\\\\ / ___\'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\n#  ( ( )\\___ | \'_ | \'_| | \'_ \\/ _` | \\ \\ \\ \\\n#   \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\n#    \'  |____| .__|_| |_|_| |_\\__, | / / / /\n#   =========|_|==============|___/=/_/_/_/\n#   :: Spring Boot Startup Script ::\n</code></pre>','Spring Boot Loader Classes的由来','','inherit','closed','closed','','93-autosave-v1','','','2017-08-23 17:33:06','2017-08-23 09:33:06','一直很好奇，由gradle或maven打包好的spring-boot项目的jar文件里的org/springframework/boot/loader/**.class文件是怎么来的。\n```nohighlight\nunzip -l build/libs/springframework-lab.jar\n\n...\n        0  2017-08-23 16:21   org/\n        0  2017-08-23 16:21   org/springframework/\n        0  2017-08-23 16:21   org/springframework/boot/\n        0  2017-08-23 16:21   org/springframework/boot/loader/\n     2415  2017-06-08 11:57   org/springframework/boot/loader/LaunchedURLClassLoader$1.class\n     1454  2017-06-08 11:57   org/springframework/boot/loader/PropertiesLauncher$ArchiveEntryFilter.class\n     1912  2017-06-08 11:57   org/springframework/boot/loader/PropertiesLauncher$PrefixMatchingArchiveFilter.class\n     4599  2017-06-08 11:57   org/springframework/boot/loader/Launcher.class\n     1165  2017-06-08 11:57   org/springframework/boot/loader/ExecutableArchiveLauncher$1.class\n        0  2017-08-23 17:04   org/springframework/boot/loader/jar/\n     2002  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFile$1.class\n     9657  2017-06-08 11:57   org/springframework/boot/loader/jar/Handler.class\n     3350  2017-06-08 11:57   org/springframework/boot/loader/jar/JarEntry.class\n     1427  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFile$3.class\n     3104  2017-06-08 11:57   org/springframework/boot/loader/jar/CentralDirectoryEndRecord.class\n      430  2017-06-08 11:57   org/springframework/boot/loader/jar/CentralDirectoryVisitor.class\n     1300  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFile$JarFileType.class\n    10924  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFileEntries.class\n    12762  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFile.class\n     1540  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFileEntries$1.class\n      672  2017-06-08 11:57   org/springframework/boot/loader/jar/JarURLConnection$1.class\n     1199  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFile$2.class\n      262  2017-06-08 11:57   org/springframework/boot/loader/jar/JarEntryFilter.class\n     4457  2017-06-08 11:57   org/springframework/boot/loader/jar/AsciiBytes.class\n     4602  2017-06-08 11:57   org/springframework/boot/loader/jar/CentralDirectoryParser.class\n     2169  2017-06-08 11:57   org/springframework/boot/loader/jar/Bytes.class\n     1629  2017-06-08 11:57   org/springframework/boot/loader/jar/ZipInflaterInputStream.class\n     1967  2017-06-08 11:57   org/springframework/boot/loader/jar/JarFileEntries$EntryIterator.class\n      306  2017-06-08 11:57   org/springframework/boot/loader/jar/FileHeader.class\n     3641  2017-06-08 11:57   org/springframework/boot/loader/jar/JarURLConnection$JarEntryName.class\n     9111  2017-06-08 11:57   org/springframework/boot/loader/jar/JarURLConnection.class\n     5449  2017-06-08 11:57   org/springframework/boot/loader/jar/CentralDirectoryFileHeader.class\n        0  2017-08-23 17:04   org/springframework/boot/loader/data/\n     1531  2017-06-08 11:57   org/springframework/boot/loader/data/ByteArrayRandomAccessData.class\n     3549  2017-06-08 11:57   org/springframework/boot/loader/data/RandomAccessDataFile$DataInputStream.class\n     1862  2017-06-08 11:57   org/springframework/boot/loader/data/RandomAccessDataFile$FilePool.class\n     1341  2017-06-08 11:57   org/springframework/boot/loader/data/RandomAccessData$ResourceAccess.class\n     3319  2017-06-08 11:57   org/springframework/boot/loader/data/RandomAccessDataFile.class\n      551  2017-06-08 11:57   org/springframework/boot/loader/data/RandomAccessData.class\n     4698  2017-06-08 11:57   org/springframework/boot/loader/LaunchedURLClassLoader.class\n     1533  2017-06-08 11:57   org/springframework/boot/loader/JarLauncher.class\n     1468  2017-06-08 11:57   org/springframework/boot/loader/MainMethodRunner.class\n     1425  2017-06-08 11:57   org/springframework/boot/loader/PropertiesLauncher$1.class\n     3128  2017-06-08 11:57   org/springframework/boot/loader/ExecutableArchiveLauncher.class\n     1669  2017-06-08 11:57   org/springframework/boot/loader/WarLauncher.class\n        0  2017-08-23 17:04   org/springframework/boot/loader/archive/\n     1749  2017-06-08 11:57   org/springframework/boot/loader/archive/JarFileArchive$EntryIterator.class\n     3792  2017-06-08 11:57   org/springframework/boot/loader/archive/ExplodedArchive$FileEntryIterator.class\n     1068  2017-06-08 11:57   org/springframework/boot/loader/archive/ExplodedArchive$FileEntry.class\n     1051  2017-06-08 11:57   org/springframework/boot/loader/archive/JarFileArchive$JarFileEntry.class\n      302  2017-06-08 11:57   org/springframework/boot/loader/archive/Archive$Entry.class\n     7189  2017-06-08 11:57   org/springframework/boot/loader/archive/JarFileArchive.class\n     4974  2017-06-08 11:57   org/springframework/boot/loader/archive/ExplodedArchive.class\n      906  2017-06-08 11:57   org/springframework/boot/loader/archive/Archive.class\n     1438  2017-06-08 11:57   org/springframework/boot/loader/archive/ExplodedArchive$FileEntryIterator$EntryComparator.class\n      399  2017-06-08 11:57   org/springframework/boot/loader/archive/Archive$EntryFilter.class\n      273  2017-06-08 11:57   org/springframework/boot/loader/archive/ExplodedArchive$1.class\n    18041  2017-06-08 11:57   org/springframework/boot/loader/PropertiesLauncher.class\n        0  2017-08-23 17:04   org/springframework/boot/loader/util/\n     4887  2017-06-08 11:57   org/springframework/boot/loader/util/SystemPropertyUtils.class\n...\n```\n以为是很容易的事，肯定是从哪里拷贝过来的。至于来源，应该就在gradle缓存的某个jar文件里。去缓存文件夹下面搜一下应该就能搜到吧。\n```bash\nfor JAR in $(find ~/.gradle -name \'*.jar\'); do\n    if grep -n \'org/springframework/boot/loader/LaunchedURLClassLoader.class\' <(unzip -l $JAR 2>/dev/null); then\n        echo $JAR\n    fi\ndone\n```\n结果竟然什么都没搜索出来。\n于是又想，gradle打包的时候总要复制吧，那我用strace看看它打开了哪些文件不就看到了。\n```bash\nstrace -f -e trace=open gradle --no-daemon build |& grep org/springframework/boot/loader/LaunchedURLClassLoader.class\n```\n结果还是什么都没搜索出来。\n只能用最后一招了。调试gradle。以调试模式启动gradle。\n```bash\nGRADLE_OPTS=\'-agentlib:jdwp=transport=dt_socket,server=y,suspend=y\' gradle --no-daemon build\n```\n然后用IntelliJ远程调试，在```java.util.jar.JarOutputStream#putNextEntry```打上断点。因为你总要写jar吧。这下从断点的堆栈信息中终于看到了拷贝的过程。\n```Java\npackage org.springframework.boot.loader.tools;\n\npublic class JarWriter implements LoaderClassesWriter {\n\n    private static final String NESTED_LOADER_JAR = &quot;META-INF/loader/spring-boot-loader.jar&quot;;\n\n    public void writeLoaderClasses() throws IOException {\n        writeLoaderClasses(NESTED_LOADER_JAR);\n    }\n\n    public void writeLoaderClasses(String loaderJarResourceName) throws IOException {\n        URL loaderJar = getClass().getClassLoader().getResource(loaderJarResourceName);\n        JarInputStream inputStream = new JarInputStream(\n                new BufferedInputStream(loaderJar.openStream()));\n        JarEntry entry;\n        while ((entry = inputStream.getNextJarEntry()) != null) {\n            if (entry.getName().endsWith(&quot;.class&quot;)) {\n                writeEntry(entry, new InputStreamEntryWriter(inputStream, false));\n            }\n        }\n        inputStream.close();\n    }\n}\n```\n而这个文件呢，可以用之前搜索的方法找到对应的jar包。\n```bash\nfor JAR in $(find ~/.gradle -name \'*.jar\'); do\n    if grep -n \'org.springframework.boot.loader.tools.JarWriter\' <(unzip -l $JAR 2>/dev/null); then\n        echo $JAR\n    fi\ndone\n```\n找到了是```spring-boot-loader-tools-1.5.4.RELEASE.jar```这个jar。打开后可以看到里面有个```META-INF/loader/spring-boot-loader.jar```，再打开就可以看到复制过来的源文件了。\n在```spring-boot-loader-tools-1.5.4.RELEASE-sources.jar```里还找到一个非常有意思的文件：```org/springframework/boot/loader/tools/launch.script```，它的开头是：\n```bash\n#!/bin/bash\n#\n#    .   ____          _            __ _ _\n#   /\\\\ / ___\'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\n#  ( ( )\\___ | \'_ | \'_| | \'_ \\/ _` | \\ \\ \\ \\\n#   \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\n#    \'  |____| .__|_| |_|_| |_\\__, | / / / /\n#   =========|_|==============|___/=/_/_/_/\n#   :: Spring Boot Startup Script ::\n```',93,'https://www.allisterke.com/?p=96',0,'revision','',0),(97,1,'2017-09-04 20:06:37','2017-09-04 12:06:37','过程式语言如C++、Java等，一般以栈的方式实现函数调用，栈内存随函数执行而生长，随函数结束而回收，栈内存上分配的临时变量也被销毁。而函数式语言由于闭包的存在，函数执行结束时，函数中存在的变量可能会被传递到函数外的闭包内的其他函数引用，因而不能立即销毁。<code>Structure and Interpretation of Computer Programs</code>上提到的一种实现方式是在函数被调用时生成一个帧(Frame)，变量存在帧里面。帧本身也作为一个对象，由垃圾回收器在帧不再被使用时回收。\n\nC++、Java现在有lambda表达式，但那不是真正的闭包。C++的lambda表达式，如果用值传递的话，只是拷贝了数据，如果是引用传递的话，函数结束时，栈立刻回收，引用虽然还在，却早已失效。Java则只支持值传递。\n\n运行在JVM上有许多支持函数式编程的语言。Scala就是其中一种。由于将来可能会从事Spark有关的工作，于是想学习一下Scala。学习了点基础知识，写了几个helloworld后，突然很好奇Scala对闭包的实现。探究了一番，发现毕竟是JVM上运行的语言，想要逆天突破栈自动回收是不可能的。Scala对被闭包内函数引用的变量，用各种Ref包了一层，如IntRef, ObjectRef等，即Int会被编译为IntRef，Object会被编译为ObjectRef。Ref内有一个变量elem真正存数据。对闭包内变量重新赋值的语句，会被编译为对Ref内的elem的赋值操作。\n\n来看代码吧，实验环境为scala-2.11, java-8。\n\n首先来写一段scala代码：\n\n<pre><code class=\"scala\">class Functional {\n    def f: () =&gt; List[Int] = {\n        var x = 0\n        var list = List[Int]()\n        () =&gt; {\n            x += 1\n            list = x :: list\n            list\n        }\n    }\n}\n</code></pre>\n\n用scalac编译，可以得到两个class文件：Functional.class和Functional$$anonfun$f$1.class\n用javap来反编译class文件。\n先来看Function.class\n\n<pre><code class=\"java\">$ javap -c Functional.class\npublic class Functional {\n  public scala.Function0&lt;scala.collection.immutable.List&lt;java.lang.Object&gt;&gt; f();\n    Code:\n       0: iconst_0\n       1: invokestatic  #16    // Method scala/runtime/IntRef.create:(I)Lscala/runtime/IntRef;\n       4: astore_1\n       5: getstatic     #22    // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;\n       8: invokestatic  #27    // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;\n      11: astore_2\n      12: new           #29    // class Functional$$anonfun$f$1\n      15: dup\n      16: aload_0\n      17: aload_1\n      18: aload_2\n      19: invokespecial #33    // Method Functional$$anonfun$f$1.\"&lt;init&gt;\":(LFunctional;Lscala/runtime/IntRef;Lscala/runtime/ObjectRef;)V\n      22: areturn\n\n  public Functional();\n    Code:\n       0: aload_0\n       1: invokespecial #42    // Method java/lang/Object.\"&lt;init&gt;\":()V\n       4: return\n}\n</code></pre>\n\n可以看到，Functional.f里面创建了IntRef和ObjectRef来存x和list两个变量，而且用的是工厂方法IntRef.create和ObjectRef.create。Functional.f返回的匿名函数，则被实现为一个名为Functional$$anonfun$f$1的类。\n再来看Functional$$anonfun$f$1.class\n\n<pre><code class=\"java\">$ javap -c Functional\\$\\$anonfun\\$f\\$1.class\npublic final class Functional$$anonfun$f$1 extends scala.runtime.AbstractFunction0&lt;scala.collection.immutable.List&lt;java.lang.Object&gt;&gt; implements scala.Serializable {\n  public static final long serialVersionUID;\n\n  public final scala.collection.immutable.List&lt;java.lang.Object&gt; apply();\n    Code:\n       0: aload_0\n       1: getfield      #25    // Field x$2:Lscala/runtime/IntRef;\n       4: aload_0\n       5: getfield      #25    // Field x$2:Lscala/runtime/IntRef;\n       8: getfield      #31    // Field scala/runtime/IntRef.elem:I\n      11: iconst_1\n      12: iadd\n      13: putfield      #31    // Field scala/runtime/IntRef.elem:I\n      16: aload_0\n      17: getfield      #33    // Field list$1:Lscala/runtime/ObjectRef;\n      20: aload_0\n      21: getfield      #25    // Field x$2:Lscala/runtime/IntRef;\n      24: getfield      #31    // Field scala/runtime/IntRef.elem:I\n      27: istore_1\n      28: aload_0\n      29: getfield      #33    // Field list$1:Lscala/runtime/ObjectRef;\n      32: getfield      #38    // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;\n      35: checkcast     #40    // class scala/collection/immutable/List\n      38: iload_1\n      39: invokestatic  #46    // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;\n      42: invokevirtual #50    // Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;\n      45: putfield      #38    // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;\n      48: aload_0\n      49: getfield      #33    // Field list$1:Lscala/runtime/ObjectRef;\n      52: getfield      #38    // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;\n      55: checkcast     #40    // class scala/collection/immutable/List\n      58: areturn\n\n  public final java.lang.Object apply();\n    Code:\n       0: aload_0\n       1: invokevirtual #55    // Method apply:()Lscala/collection/immutable/List;\n       4: areturn\n\n  public Functional$$anonfun$f$1(Functional, scala.runtime.IntRef, scala.runtime.ObjectRef);\n    Code:\n       0: aload_0\n       1: aload_2\n       2: putfield      #25    // Field x$2:Lscala/runtime/IntRef;\n       5: aload_0\n       6: aload_3\n       7: putfield      #33    // Field list$1:Lscala/runtime/ObjectRef;\n      10: aload_0\n      11: invokespecial #60    // Method scala/runtime/AbstractFunction0.\"&lt;init&gt;\":()V\n      14: return\n}\n</code></pre>\n\n最底下的是构造函数<code>public Functional$$anonfun$f$1(Functional, scala.runtime.IntRef, scala.runtime.ObjectRef)</code>，可见Ref本身还是值传递。<code>public final java.lang.Object apply();</code>则是在匿名函数被调用的时候被调用，这是scala的语法糖。匿名函数真正的执行代码在<code>public final scala.collection.immutable.List&lt;java.lang.Object&gt; apply();</code>函数里。从这个函数里可以看到，IntRef中的elem被取出来，加上1后又存了回去。ObjectRef中的elem被取了出来，与IntRef中的elem被拼接为一个新的List，然后又存了回去。最后取出ObjectRef中的elem，作为返回值。这与scala代码中所表达的语义是一致的。\nscala源码中，IntRef与ObjectRef的小兄弟还有好多个：\n\n<pre><code class=\"bash\">$ find . -name *Ref.java\n./src/library/scala/runtime/VolatileLongRef.java\n./src/library/scala/runtime/DoubleRef.java\n./src/library/scala/runtime/VolatileIntRef.java\n./src/library/scala/runtime/ObjectRef.java\n./src/library/scala/runtime/VolatileObjectRef.java\n./src/library/scala/runtime/ShortRef.java\n./src/library/scala/runtime/ByteRef.java\n./src/library/scala/runtime/VolatileByteRef.java\n./src/library/scala/runtime/VolatileFloatRef.java\n./src/library/scala/runtime/VolatileDoubleRef.java\n./src/library/scala/runtime/BooleanRef.java\n./src/library/scala/runtime/VolatileCharRef.java\n./src/library/scala/runtime/VolatileBooleanRef.java\n./src/library/scala/runtime/LongRef.java\n./src/library/scala/runtime/CharRef.java\n./src/library/scala/runtime/FloatRef.java\n./src/library/scala/runtime/IntRef.java\n./src/library/scala/runtime/VolatileShortRef.java\n</code></pre>\n\n来看看IntRef.java长什么样：\n\n<pre><code class=\"Java\">package scala.runtime;\n\npublic class IntRef implements java.io.Serializable {\n    private static final long serialVersionUID = 1488197132022872888L;\n\n    public int elem;\n    public IntRef(int elem) { this.elem = elem; }\n    public String toString() { return java.lang.Integer.toString(elem); }\n\n    public static IntRef create(int e) { return new IntRef(e); }\n    public static IntRef zero() { return new IntRef(0); }\n}\n</code></pre>\n\n这个代码里的工厂方法好像和自己new也没什么区别嘛。\n\n最后思考个问题：如果只是一个普通的scala函数，没有闭包，像<code>var x = 0</code>这种还会被编译为IntRef吗？我试了下是不会的。而且也不是Int，而是原始类型int。','Scala对闭包的实现','','publish','open','open','','scala%e5%af%b9%e9%97%ad%e5%8c%85%e7%9a%84%e5%ae%9e%e7%8e%b0','','','2017-09-04 20:06:37','2017-09-04 12:06:37','过程式语言如C++、Java等，一般以栈的方式实现函数调用，栈内存随函数执行而生长，随函数结束而回收，栈内存上分配的临时变量也被销毁。而函数式语言由于闭包的存在，函数执行结束时，函数中存在的变量可能会被传递到函数外的闭包内的其他函数引用，因而不能立即销毁。```Structure and Interpretation of Computer Programs```上提到的一种实现方式是在函数被调用时生成一个帧(Frame)，变量存在帧里面。帧本身也作为一个对象，由垃圾回收器在帧不再被使用时回收。\r\n\r\nC++、Java现在有lambda表达式，但那不是真正的闭包。C++的lambda表达式，如果用值传递的话，只是拷贝了数据，如果是引用传递的话，函数结束时，栈立刻回收，引用虽然还在，却早已失效。Java则只支持值传递。\r\n\r\n运行在JVM上有许多支持函数式编程的语言。Scala就是其中一种。由于将来可能会从事Spark有关的工作，于是想学习一下Scala。学习了点基础知识，写了几个helloworld后，突然很好奇Scala对闭包的实现。探究了一番，发现毕竟是JVM上运行的语言，想要逆天突破栈自动回收是不可能的。Scala对被闭包内函数引用的变量，用各种Ref包了一层，如IntRef, ObjectRef等，即Int会被编译为IntRef，Object会被编译为ObjectRef。Ref内有一个变量elem真正存数据。对闭包内变量重新赋值的语句，会被编译为对Ref内的elem的赋值操作。\r\n\r\n来看代码吧，实验环境为scala-2.11, java-8。\r\n\r\n首先来写一段scala代码：\r\n```scala\r\nclass Functional {\r\n    def f: () =&gt; List[Int] = {\r\n        var x = 0\r\n        var list = List[Int]()\r\n        () =&gt; {\r\n            x += 1\r\n            list = x :: list\r\n            list\r\n        }\r\n    }\r\n}\r\n```\r\n用scalac编译，可以得到两个class文件：Functional.class和Functional$$anonfun$f$1.class\r\n用javap来反编译class文件。\r\n先来看Function.class\r\n```java\r\n$ javap -c Functional.class\r\npublic class Functional {\r\n  public scala.Function0&lt;scala.collection.immutable.List&lt;java.lang.Object&gt;&gt; f();\r\n    Code:\r\n       0: iconst_0\r\n       1: invokestatic  #16    // Method scala/runtime/IntRef.create:(I)Lscala/runtime/IntRef;\r\n       4: astore_1\r\n       5: getstatic     #22    // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;\r\n       8: invokestatic  #27    // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;\r\n      11: astore_2\r\n      12: new           #29    // class Functional$$anonfun$f$1\r\n      15: dup\r\n      16: aload_0\r\n      17: aload_1\r\n      18: aload_2\r\n      19: invokespecial #33    // Method Functional$$anonfun$f$1.&quot;&lt;init&gt;&quot;:(LFunctional;Lscala/runtime/IntRef;Lscala/runtime/ObjectRef;)V\r\n      22: areturn\r\n\r\n  public Functional();\r\n    Code:\r\n       0: aload_0\r\n       1: invokespecial #42    // Method java/lang/Object.&quot;&lt;init&gt;&quot;:()V\r\n       4: return\r\n}\r\n```\r\n可以看到，Functional.f里面创建了IntRef和ObjectRef来存x和list两个变量，而且用的是工厂方法IntRef.create和ObjectRef.create。Functional.f返回的匿名函数，则被实现为一个名为Functional$$anonfun$f$1的类。\r\n再来看Functional$$anonfun$f$1.class\r\n```java\r\n$ javap -c Functional\\$\\$anonfun\\$f\\$1.class\r\npublic final class Functional$$anonfun$f$1 extends scala.runtime.AbstractFunction0&lt;scala.collection.immutable.List&lt;java.lang.Object&gt;&gt; implements scala.Serializable {\r\n  public static final long serialVersionUID;\r\n\r\n  public final scala.collection.immutable.List&lt;java.lang.Object&gt; apply();\r\n    Code:\r\n       0: aload_0\r\n       1: getfield      #25    // Field x$2:Lscala/runtime/IntRef;\r\n       4: aload_0\r\n       5: getfield      #25    // Field x$2:Lscala/runtime/IntRef;\r\n       8: getfield      #31    // Field scala/runtime/IntRef.elem:I\r\n      11: iconst_1\r\n      12: iadd\r\n      13: putfield      #31    // Field scala/runtime/IntRef.elem:I\r\n      16: aload_0\r\n      17: getfield      #33    // Field list$1:Lscala/runtime/ObjectRef;\r\n      20: aload_0\r\n      21: getfield      #25    // Field x$2:Lscala/runtime/IntRef;\r\n      24: getfield      #31    // Field scala/runtime/IntRef.elem:I\r\n      27: istore_1\r\n      28: aload_0\r\n      29: getfield      #33    // Field list$1:Lscala/runtime/ObjectRef;\r\n      32: getfield      #38    // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;\r\n      35: checkcast     #40    // class scala/collection/immutable/List\r\n      38: iload_1\r\n      39: invokestatic  #46    // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;\r\n      42: invokevirtual #50    // Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;\r\n      45: putfield      #38    // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;\r\n      48: aload_0\r\n      49: getfield      #33    // Field list$1:Lscala/runtime/ObjectRef;\r\n      52: getfield      #38    // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;\r\n      55: checkcast     #40    // class scala/collection/immutable/List\r\n      58: areturn\r\n\r\n  public final java.lang.Object apply();\r\n    Code:\r\n       0: aload_0\r\n       1: invokevirtual #55    // Method apply:()Lscala/collection/immutable/List;\r\n       4: areturn\r\n\r\n  public Functional$$anonfun$f$1(Functional, scala.runtime.IntRef, scala.runtime.ObjectRef);\r\n    Code:\r\n       0: aload_0\r\n       1: aload_2\r\n       2: putfield      #25    // Field x$2:Lscala/runtime/IntRef;\r\n       5: aload_0\r\n       6: aload_3\r\n       7: putfield      #33    // Field list$1:Lscala/runtime/ObjectRef;\r\n      10: aload_0\r\n      11: invokespecial #60    // Method scala/runtime/AbstractFunction0.&quot;&lt;init&gt;&quot;:()V\r\n      14: return\r\n}\r\n```\r\n最底下的是构造函数```public Functional$$anonfun$f$1(Functional, scala.runtime.IntRef, scala.runtime.ObjectRef)```，可见Ref本身还是值传递。```public final java.lang.Object apply();```则是在匿名函数被调用的时候被调用，这是scala的语法糖。匿名函数真正的执行代码在```public final scala.collection.immutable.List<java.lang.Object> apply();```函数里。从这个函数里可以看到，IntRef中的elem被取出来，加上1后又存了回去。ObjectRef中的elem被取了出来，与IntRef中的elem被拼接为一个新的List，然后又存了回去。最后取出ObjectRef中的elem，作为返回值。这与scala代码中所表达的语义是一致的。\r\nscala源码中，IntRef与ObjectRef的小兄弟还有好多个：\r\n```bash\r\n$ find . -name *Ref.java\r\n./src/library/scala/runtime/VolatileLongRef.java\r\n./src/library/scala/runtime/DoubleRef.java\r\n./src/library/scala/runtime/VolatileIntRef.java\r\n./src/library/scala/runtime/ObjectRef.java\r\n./src/library/scala/runtime/VolatileObjectRef.java\r\n./src/library/scala/runtime/ShortRef.java\r\n./src/library/scala/runtime/ByteRef.java\r\n./src/library/scala/runtime/VolatileByteRef.java\r\n./src/library/scala/runtime/VolatileFloatRef.java\r\n./src/library/scala/runtime/VolatileDoubleRef.java\r\n./src/library/scala/runtime/BooleanRef.java\r\n./src/library/scala/runtime/VolatileCharRef.java\r\n./src/library/scala/runtime/VolatileBooleanRef.java\r\n./src/library/scala/runtime/LongRef.java\r\n./src/library/scala/runtime/CharRef.java\r\n./src/library/scala/runtime/FloatRef.java\r\n./src/library/scala/runtime/IntRef.java\r\n./src/library/scala/runtime/VolatileShortRef.java\r\n```\r\n来看看IntRef.java长什么样：\r\n```Java\r\npackage scala.runtime;\r\n\r\npublic class IntRef implements java.io.Serializable {\r\n    private static final long serialVersionUID = 1488197132022872888L;\r\n\r\n    public int elem;\r\n    public IntRef(int elem) { this.elem = elem; }\r\n    public String toString() { return java.lang.Integer.toString(elem); }\r\n\r\n    public static IntRef create(int e) { return new IntRef(e); }\r\n    public static IntRef zero() { return new IntRef(0); }\r\n}\r\n```\r\n这个代码里的工厂方法好像和自己new也没什么区别嘛。\r\n\r\n最后思考个问题：如果只是一个普通的scala函数，没有闭包，像```var x = 0```这种还会被编译为IntRef吗？我试了下是不会的。而且也不是Int，而是原始类型int。',0,'https://www.allisterke.com/?p=97',0,'post','',0),(98,1,'2017-09-04 19:55:16','2017-09-04 11:55:16','过程式语言如C++、Java等，一般以栈的方式实现函数调用，栈内存随函数执行而生长，随函数结束而回收，栈内存上分配的临时变量也被销毁。而函数式语言由于闭包的存在，函数执行结束时，函数中存在的变量可能会被传递到函数外的闭包内的其他函数引用，因而不能立即销毁。实现上可能是在函数效用时生成一个帧(Frame)，变量存在帧里面。帧本身也作为一个对象，由垃圾回收器在帧不再被使用时回收。\nC++、Java现在有lambda表达式，但那不是真正的闭包。C++的lambda表达式，如果用值传递的话，只是拷贝了数据，如果是引用传递的话，函数结束时，栈立刻回收，引用虽然有，却早已失效。Java则只支持值传递。\n运行在JVM上有许多支持函数式编程的语言。Scala就是其中一种。由于将来可能会从事Spark有关的工作，于是想学习一下Scala。学习了点基础知识，写了几个helloworld后，突然很好奇Scala对闭包的实现。探究了一番，发现毕竟是JVM上运行的语言，想要逆天突破栈自动回收是不可能的。Scala对被闭包内函数引用的变量，用各种Ref包了一层，如IntRef, ObjectRef等，即Int会被编译为IntRef，Object会被编译为ObjectRef。Ref内有一个变量elem真正存数据。对栈内的变量重新赋值的语句，会被编译为对Ref内的elem的赋值操作。\n来看代码吧，实验环境为scala-2.11, java-8。\n首先来写一段scala代码：\n\n<pre><code class=\"scala\">class Functional {\n    def f: () =&gt; List[Int] = {\n        var x = 0\n        var list = List[Int]()\n        () =&gt; {\n            x += 1\n            list = x :: list\n            list\n        }\n    }\n}\n</code></pre>\n\n用scalac编译，可以得到两个class文件：Functional.class， Functional$$anonfun$f$1.class\n用javap来反编译class文件。\n先来看Function.class\n\n<pre><code class=\"java\">$ javap -c Functional.class\npublic class Functional {\n  public scala.Function0&lt;scala.collection.immutable.List&lt;java.lang.Object&gt;&gt; f();\n    Code:\n       0: iconst_0\n       1: invokestatic  #16    // Method scala/runtime/IntRef.create:(I)Lscala/runtime/IntRef;\n       4: astore_1\n       5: getstatic     #22    // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;\n       8: invokestatic  #27    // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;\n      11: astore_2\n      12: new           #29    // class Functional$$anonfun$f$1\n      15: dup\n      16: aload_0\n      17: aload_1\n      18: aload_2\n      19: invokespecial #33    // Method Functional$$anonfun$f$1.\"&lt;init&gt;\":(LFunctional;Lscala/runtime/IntRef;Lscala/runtime/ObjectRef;)V\n      22: areturn\n\n  public Functional();\n    Code:\n       0: aload_0\n       1: invokespecial #42    // Method java/lang/Object.\"&lt;init&gt;\":()V\n       4: return\n}\n</code></pre>\n\n可以看到，Functional.f里面创建了IntRef和ObjectRef来存x和list两个变量，而且用的是工厂方法IntRef.create和ObjectRef.create。Functional.f返回的匿名函数，则被实现为一个名为Functional$$anonfun$f$1的类。\n再来看Functional$$anonfun$f$1.class\n\n<pre><code class=\"java\">$ javap -c Functional\\$\\$anonfun\\$f\\$1.class\npublic final class Functional$$anonfun$f$1 extends scala.runtime.AbstractFunction0&lt;scala.collection.immutable.List&lt;java.lang.Object&gt;&gt; implements scala.Serializable {\n  public static final long serialVersionUID;\n\n  public final scala.collection.immutable.List&lt;java.lang.Object&gt; apply();\n    Code:\n       0: aload_0\n       1: getfield      #25    // Field x$2:Lscala/runtime/IntRef;\n       4: aload_0\n       5: getfield      #25    // Field x$2:Lscala/runtime/IntRef;\n       8: getfield      #31    // Field scala/runtime/IntRef.elem:I\n      11: iconst_1\n      12: iadd\n      13: putfield      #31    // Field scala/runtime/IntRef.elem:I\n      16: aload_0\n      17: getfield      #33    // Field list$1:Lscala/runtime/ObjectRef;\n      20: aload_0\n      21: getfield      #25    // Field x$2:Lscala/runtime/IntRef;\n      24: getfield      #31    // Field scala/runtime/IntRef.elem:I\n      27: istore_1\n      28: aload_0\n      29: getfield      #33    // Field list$1:Lscala/runtime/ObjectRef;\n      32: getfield      #38    // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;\n      35: checkcast     #40    // class scala/collection/immutable/List\n      38: iload_1\n      39: invokestatic  #46    // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;\n      42: invokevirtual #50    // Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;\n      45: putfield      #38    // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;\n      48: aload_0\n      49: getfield      #33    // Field list$1:Lscala/runtime/ObjectRef;\n      52: getfield      #38    // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;\n      55: checkcast     #40    // class scala/collection/immutable/List\n      58: areturn\n\n  public final java.lang.Object apply();\n    Code:\n       0: aload_0\n       1: invokevirtual #55    // Method apply:()Lscala/collection/immutable/List;\n       4: areturn\n\n  public Functional$$anonfun$f$1(Functional, scala.runtime.IntRef, scala.runtime.ObjectRef);\n    Code:\n       0: aload_0\n       1: aload_2\n       2: putfield      #25    // Field x$2:Lscala/runtime/IntRef;\n       5: aload_0\n       6: aload_3\n       7: putfield      #33    // Field list$1:Lscala/runtime/ObjectRef;\n      10: aload_0\n      11: invokespecial #60    // Method scala/runtime/AbstractFunction0.\"&lt;init&gt;\":()V\n      14: return\n}\n</code></pre>\n\n最底下的是构造函数<code>public Functional$$anonfun$f$1(Functional, scala.runtime.IntRef, scala.runtime.ObjectRef)</code>，可见Ref本身还是值传递。<code>public final java.lang.Object apply();</code>则是在匿名函数被调用的时候被调用，这是scala的语法糖。匿名函数真正的执行代码在<code>public final scala.collection.immutable.List&lt;java.lang.Object&gt; apply();</code>函数里。从这个函数里可以看到，IntRef中的elem被取出来，加上1后又存了回去。ObjectRef中的elem被取了出来，与IntRef中的elem被拼接为一个新的List，然后又存了回去。最后取出ObjectRef中的elem，作为返回值。这与scala代码中所表达的语义是一致的。\nscala源码中，IntRef与ObjectRef的小兄弟还有好多个：\n\n<pre><code class=\"bash\">$ find . -name *Ref.java\n./src/library/scala/runtime/VolatileLongRef.java\n./src/library/scala/runtime/DoubleRef.java\n./src/library/scala/runtime/VolatileIntRef.java\n./src/library/scala/runtime/ObjectRef.java\n./src/library/scala/runtime/VolatileObjectRef.java\n./src/library/scala/runtime/ShortRef.java\n./src/library/scala/runtime/ByteRef.java\n./src/library/scala/runtime/VolatileByteRef.java\n./src/library/scala/runtime/VolatileFloatRef.java\n./src/library/scala/runtime/VolatileDoubleRef.java\n./src/library/scala/runtime/BooleanRef.java\n./src/library/scala/runtime/VolatileCharRef.java\n./src/library/scala/runtime/VolatileBooleanRef.java\n./src/library/scala/runtime/LongRef.java\n./src/library/scala/runtime/CharRef.java\n./src/library/scala/runtime/FloatRef.java\n./src/library/scala/runtime/IntRef.java\n./src/library/scala/runtime/VolatileShortRef.java\n</code></pre>\n\n来看看IntRef.java长什么样：\n\n<pre><code class=\"Java\">package scala.runtime;\n\npublic class IntRef implements java.io.Serializable {\n    private static final long serialVersionUID = 1488197132022872888L;\n\n    public int elem;\n    public IntRef(int elem) { this.elem = elem; }\n    public String toString() { return java.lang.Integer.toString(elem); }\n\n    public static IntRef create(int e) { return new IntRef(e); }\n    public static IntRef zero() { return new IntRef(0); }\n}\n</code></pre>\n\n这个工厂方法好像和自己new也没什么区别嘛。\n那如果只是一个普通的scala函数，没有闭包，<code>var x = 0</code>这种还会被翻译为IntRef吗？我试了下是不会的。而且也不是Int，而是原始类型int.','Scala对闭包的实现','','inherit','closed','closed','','97-revision-v1','','','2017-09-04 19:55:16','2017-09-04 11:55:16','过程式语言如C++、Java等，一般以栈的方式实现函数调用，栈内存随函数执行而生长，随函数结束而回收，栈内存上分配的临时变量也被销毁。而函数式语言由于闭包的存在，函数执行结束时，函数中存在的变量可能会被传递到函数外的闭包内的其他函数引用，因而不能立即销毁。实现上可能是在函数效用时生成一个帧(Frame)，变量存在帧里面。帧本身也作为一个对象，由垃圾回收器在帧不再被使用时回收。\r\nC++、Java现在有lambda表达式，但那不是真正的闭包。C++的lambda表达式，如果用值传递的话，只是拷贝了数据，如果是引用传递的话，函数结束时，栈立刻回收，引用虽然有，却早已失效。Java则只支持值传递。\r\n运行在JVM上有许多支持函数式编程的语言。Scala就是其中一种。由于将来可能会从事Spark有关的工作，于是想学习一下Scala。学习了点基础知识，写了几个helloworld后，突然很好奇Scala对闭包的实现。探究了一番，发现毕竟是JVM上运行的语言，想要逆天突破栈自动回收是不可能的。Scala对被闭包内函数引用的变量，用各种Ref包了一层，如IntRef, ObjectRef等，即Int会被编译为IntRef，Object会被编译为ObjectRef。Ref内有一个变量elem真正存数据。对栈内的变量重新赋值的语句，会被编译为对Ref内的elem的赋值操作。\r\n来看代码吧，实验环境为scala-2.11, java-8。\r\n首先来写一段scala代码：\r\n```scala\r\nclass Functional {\r\n    def f: () =&gt; List[Int] = {\r\n        var x = 0\r\n        var list = List[Int]()\r\n        () =&gt; {\r\n            x += 1\r\n            list = x :: list\r\n            list\r\n        }\r\n    }\r\n}\r\n```\r\n用scalac编译，可以得到两个class文件：Functional.class， Functional$$anonfun$f$1.class\r\n用javap来反编译class文件。\r\n先来看Function.class\r\n```java\r\n$ javap -c Functional.class\r\npublic class Functional {\r\n  public scala.Function0&lt;scala.collection.immutable.List&lt;java.lang.Object&gt;&gt; f();\r\n    Code:\r\n       0: iconst_0\r\n       1: invokestatic  #16    // Method scala/runtime/IntRef.create:(I)Lscala/runtime/IntRef;\r\n       4: astore_1\r\n       5: getstatic     #22    // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;\r\n       8: invokestatic  #27    // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;\r\n      11: astore_2\r\n      12: new           #29    // class Functional$$anonfun$f$1\r\n      15: dup\r\n      16: aload_0\r\n      17: aload_1\r\n      18: aload_2\r\n      19: invokespecial #33    // Method Functional$$anonfun$f$1.&quot;&lt;init&gt;&quot;:(LFunctional;Lscala/runtime/IntRef;Lscala/runtime/ObjectRef;)V\r\n      22: areturn\r\n\r\n  public Functional();\r\n    Code:\r\n       0: aload_0\r\n       1: invokespecial #42    // Method java/lang/Object.&quot;&lt;init&gt;&quot;:()V\r\n       4: return\r\n}\r\n```\r\n可以看到，Functional.f里面创建了IntRef和ObjectRef来存x和list两个变量，而且用的是工厂方法IntRef.create和ObjectRef.create。Functional.f返回的匿名函数，则被实现为一个名为Functional$$anonfun$f$1的类。\r\n再来看Functional$$anonfun$f$1.class\r\n```java\r\n$ javap -c Functional\\$\\$anonfun\\$f\\$1.class\r\npublic final class Functional$$anonfun$f$1 extends scala.runtime.AbstractFunction0&lt;scala.collection.immutable.List&lt;java.lang.Object&gt;&gt; implements scala.Serializable {\r\n  public static final long serialVersionUID;\r\n\r\n  public final scala.collection.immutable.List&lt;java.lang.Object&gt; apply();\r\n    Code:\r\n       0: aload_0\r\n       1: getfield      #25    // Field x$2:Lscala/runtime/IntRef;\r\n       4: aload_0\r\n       5: getfield      #25    // Field x$2:Lscala/runtime/IntRef;\r\n       8: getfield      #31    // Field scala/runtime/IntRef.elem:I\r\n      11: iconst_1\r\n      12: iadd\r\n      13: putfield      #31    // Field scala/runtime/IntRef.elem:I\r\n      16: aload_0\r\n      17: getfield      #33    // Field list$1:Lscala/runtime/ObjectRef;\r\n      20: aload_0\r\n      21: getfield      #25    // Field x$2:Lscala/runtime/IntRef;\r\n      24: getfield      #31    // Field scala/runtime/IntRef.elem:I\r\n      27: istore_1\r\n      28: aload_0\r\n      29: getfield      #33    // Field list$1:Lscala/runtime/ObjectRef;\r\n      32: getfield      #38    // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;\r\n      35: checkcast     #40    // class scala/collection/immutable/List\r\n      38: iload_1\r\n      39: invokestatic  #46    // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;\r\n      42: invokevirtual #50    // Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;\r\n      45: putfield      #38    // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;\r\n      48: aload_0\r\n      49: getfield      #33    // Field list$1:Lscala/runtime/ObjectRef;\r\n      52: getfield      #38    // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;\r\n      55: checkcast     #40    // class scala/collection/immutable/List\r\n      58: areturn\r\n\r\n  public final java.lang.Object apply();\r\n    Code:\r\n       0: aload_0\r\n       1: invokevirtual #55    // Method apply:()Lscala/collection/immutable/List;\r\n       4: areturn\r\n\r\n  public Functional$$anonfun$f$1(Functional, scala.runtime.IntRef, scala.runtime.ObjectRef);\r\n    Code:\r\n       0: aload_0\r\n       1: aload_2\r\n       2: putfield      #25    // Field x$2:Lscala/runtime/IntRef;\r\n       5: aload_0\r\n       6: aload_3\r\n       7: putfield      #33    // Field list$1:Lscala/runtime/ObjectRef;\r\n      10: aload_0\r\n      11: invokespecial #60    // Method scala/runtime/AbstractFunction0.&quot;&lt;init&gt;&quot;:()V\r\n      14: return\r\n}\r\n```\r\n最底下的是构造函数```public Functional$$anonfun$f$1(Functional, scala.runtime.IntRef, scala.runtime.ObjectRef)```，可见Ref本身还是值传递。```public final java.lang.Object apply();```则是在匿名函数被调用的时候被调用，这是scala的语法糖。匿名函数真正的执行代码在```public final scala.collection.immutable.List<java.lang.Object> apply();```函数里。从这个函数里可以看到，IntRef中的elem被取出来，加上1后又存了回去。ObjectRef中的elem被取了出来，与IntRef中的elem被拼接为一个新的List，然后又存了回去。最后取出ObjectRef中的elem，作为返回值。这与scala代码中所表达的语义是一致的。\r\nscala源码中，IntRef与ObjectRef的小兄弟还有好多个：\r\n```bash\r\n$ find . -name *Ref.java\r\n./src/library/scala/runtime/VolatileLongRef.java\r\n./src/library/scala/runtime/DoubleRef.java\r\n./src/library/scala/runtime/VolatileIntRef.java\r\n./src/library/scala/runtime/ObjectRef.java\r\n./src/library/scala/runtime/VolatileObjectRef.java\r\n./src/library/scala/runtime/ShortRef.java\r\n./src/library/scala/runtime/ByteRef.java\r\n./src/library/scala/runtime/VolatileByteRef.java\r\n./src/library/scala/runtime/VolatileFloatRef.java\r\n./src/library/scala/runtime/VolatileDoubleRef.java\r\n./src/library/scala/runtime/BooleanRef.java\r\n./src/library/scala/runtime/VolatileCharRef.java\r\n./src/library/scala/runtime/VolatileBooleanRef.java\r\n./src/library/scala/runtime/LongRef.java\r\n./src/library/scala/runtime/CharRef.java\r\n./src/library/scala/runtime/FloatRef.java\r\n./src/library/scala/runtime/IntRef.java\r\n./src/library/scala/runtime/VolatileShortRef.java\r\n```\r\n来看看IntRef.java长什么样：\r\n```Java\r\npackage scala.runtime;\r\n\r\npublic class IntRef implements java.io.Serializable {\r\n    private static final long serialVersionUID = 1488197132022872888L;\r\n\r\n    public int elem;\r\n    public IntRef(int elem) { this.elem = elem; }\r\n    public String toString() { return java.lang.Integer.toString(elem); }\r\n\r\n    public static IntRef create(int e) { return new IntRef(e); }\r\n    public static IntRef zero() { return new IntRef(0); }\r\n}\r\n```\r\n这个工厂方法好像和自己new也没什么区别嘛。\r\n那如果只是一个普通的scala函数，没有闭包，```var x = 0```这种还会被翻译为IntRef吗？我试了下是不会的。而且也不是Int，而是原始类型int.',97,'https://www.allisterke.com/?p=98',0,'revision','',0),(99,1,'2017-09-04 19:58:30','2017-09-04 11:58:30','过程式语言如C++、Java等，一般以栈的方式实现函数调用，栈内存随函数执行而生长，随函数结束而回收，栈内存上分配的临时变量也被销毁。而函数式语言由于闭包的存在，函数执行结束时，函数中存在的变量可能会被传递到函数外的闭包内的其他函数引用，因而不能立即销毁。<code>Structure and Interpretation of Computer Programs</code>上提到的一种实现方式是在函数被调用时生成一个帧(Frame)，变量存在帧里面。帧本身也作为一个对象，由垃圾回收器在帧不再被使用时回收。\nC++、Java现在有lambda表达式，但那不是真正的闭包。C++的lambda表达式，如果用值传递的话，只是拷贝了数据，如果是引用传递的话，函数结束时，栈立刻回收，引用虽然有，却早已失效。Java则只支持值传递。\n运行在JVM上有许多支持函数式编程的语言。Scala就是其中一种。由于将来可能会从事Spark有关的工作，于是想学习一下Scala。学习了点基础知识，写了几个helloworld后，突然很好奇Scala对闭包的实现。探究了一番，发现毕竟是JVM上运行的语言，想要逆天突破栈自动回收是不可能的。Scala对被闭包内函数引用的变量，用各种Ref包了一层，如IntRef, ObjectRef等，即Int会被编译为IntRef，Object会被编译为ObjectRef。Ref内有一个变量elem真正存数据。对栈内的变量重新赋值的语句，会被编译为对Ref内的elem的赋值操作。\n来看代码吧，实验环境为scala-2.11, java-8。\n首先来写一段scala代码：\n\n<pre><code class=\"scala\">class Functional {\n    def f: () =&gt; List[Int] = {\n        var x = 0\n        var list = List[Int]()\n        () =&gt; {\n            x += 1\n            list = x :: list\n            list\n        }\n    }\n}\n</code></pre>\n\n用scalac编译，可以得到两个class文件：Functional.class， Functional$$anonfun$f$1.class\n用javap来反编译class文件。\n先来看Function.class\n\n<pre><code class=\"java\">$ javap -c Functional.class\npublic class Functional {\n  public scala.Function0&lt;scala.collection.immutable.List&lt;java.lang.Object&gt;&gt; f();\n    Code:\n       0: iconst_0\n       1: invokestatic  #16    // Method scala/runtime/IntRef.create:(I)Lscala/runtime/IntRef;\n       4: astore_1\n       5: getstatic     #22    // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;\n       8: invokestatic  #27    // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;\n      11: astore_2\n      12: new           #29    // class Functional$$anonfun$f$1\n      15: dup\n      16: aload_0\n      17: aload_1\n      18: aload_2\n      19: invokespecial #33    // Method Functional$$anonfun$f$1.\"&lt;init&gt;\":(LFunctional;Lscala/runtime/IntRef;Lscala/runtime/ObjectRef;)V\n      22: areturn\n\n  public Functional();\n    Code:\n       0: aload_0\n       1: invokespecial #42    // Method java/lang/Object.\"&lt;init&gt;\":()V\n       4: return\n}\n</code></pre>\n\n可以看到，Functional.f里面创建了IntRef和ObjectRef来存x和list两个变量，而且用的是工厂方法IntRef.create和ObjectRef.create。Functional.f返回的匿名函数，则被实现为一个名为Functional$$anonfun$f$1的类。\n再来看Functional$$anonfun$f$1.class\n\n<pre><code class=\"java\">$ javap -c Functional\\$\\$anonfun\\$f\\$1.class\npublic final class Functional$$anonfun$f$1 extends scala.runtime.AbstractFunction0&lt;scala.collection.immutable.List&lt;java.lang.Object&gt;&gt; implements scala.Serializable {\n  public static final long serialVersionUID;\n\n  public final scala.collection.immutable.List&lt;java.lang.Object&gt; apply();\n    Code:\n       0: aload_0\n       1: getfield      #25    // Field x$2:Lscala/runtime/IntRef;\n       4: aload_0\n       5: getfield      #25    // Field x$2:Lscala/runtime/IntRef;\n       8: getfield      #31    // Field scala/runtime/IntRef.elem:I\n      11: iconst_1\n      12: iadd\n      13: putfield      #31    // Field scala/runtime/IntRef.elem:I\n      16: aload_0\n      17: getfield      #33    // Field list$1:Lscala/runtime/ObjectRef;\n      20: aload_0\n      21: getfield      #25    // Field x$2:Lscala/runtime/IntRef;\n      24: getfield      #31    // Field scala/runtime/IntRef.elem:I\n      27: istore_1\n      28: aload_0\n      29: getfield      #33    // Field list$1:Lscala/runtime/ObjectRef;\n      32: getfield      #38    // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;\n      35: checkcast     #40    // class scala/collection/immutable/List\n      38: iload_1\n      39: invokestatic  #46    // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;\n      42: invokevirtual #50    // Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;\n      45: putfield      #38    // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;\n      48: aload_0\n      49: getfield      #33    // Field list$1:Lscala/runtime/ObjectRef;\n      52: getfield      #38    // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;\n      55: checkcast     #40    // class scala/collection/immutable/List\n      58: areturn\n\n  public final java.lang.Object apply();\n    Code:\n       0: aload_0\n       1: invokevirtual #55    // Method apply:()Lscala/collection/immutable/List;\n       4: areturn\n\n  public Functional$$anonfun$f$1(Functional, scala.runtime.IntRef, scala.runtime.ObjectRef);\n    Code:\n       0: aload_0\n       1: aload_2\n       2: putfield      #25    // Field x$2:Lscala/runtime/IntRef;\n       5: aload_0\n       6: aload_3\n       7: putfield      #33    // Field list$1:Lscala/runtime/ObjectRef;\n      10: aload_0\n      11: invokespecial #60    // Method scala/runtime/AbstractFunction0.\"&lt;init&gt;\":()V\n      14: return\n}\n</code></pre>\n\n最底下的是构造函数<code>public Functional$$anonfun$f$1(Functional, scala.runtime.IntRef, scala.runtime.ObjectRef)</code>，可见Ref本身还是值传递。<code>public final java.lang.Object apply();</code>则是在匿名函数被调用的时候被调用，这是scala的语法糖。匿名函数真正的执行代码在<code>public final scala.collection.immutable.List&lt;java.lang.Object&gt; apply();</code>函数里。从这个函数里可以看到，IntRef中的elem被取出来，加上1后又存了回去。ObjectRef中的elem被取了出来，与IntRef中的elem被拼接为一个新的List，然后又存了回去。最后取出ObjectRef中的elem，作为返回值。这与scala代码中所表达的语义是一致的。\nscala源码中，IntRef与ObjectRef的小兄弟还有好多个：\n\n<pre><code class=\"bash\">$ find . -name *Ref.java\n./src/library/scala/runtime/VolatileLongRef.java\n./src/library/scala/runtime/DoubleRef.java\n./src/library/scala/runtime/VolatileIntRef.java\n./src/library/scala/runtime/ObjectRef.java\n./src/library/scala/runtime/VolatileObjectRef.java\n./src/library/scala/runtime/ShortRef.java\n./src/library/scala/runtime/ByteRef.java\n./src/library/scala/runtime/VolatileByteRef.java\n./src/library/scala/runtime/VolatileFloatRef.java\n./src/library/scala/runtime/VolatileDoubleRef.java\n./src/library/scala/runtime/BooleanRef.java\n./src/library/scala/runtime/VolatileCharRef.java\n./src/library/scala/runtime/VolatileBooleanRef.java\n./src/library/scala/runtime/LongRef.java\n./src/library/scala/runtime/CharRef.java\n./src/library/scala/runtime/FloatRef.java\n./src/library/scala/runtime/IntRef.java\n./src/library/scala/runtime/VolatileShortRef.java\n</code></pre>\n\n来看看IntRef.java长什么样：\n\n<pre><code class=\"Java\">package scala.runtime;\n\npublic class IntRef implements java.io.Serializable {\n    private static final long serialVersionUID = 1488197132022872888L;\n\n    public int elem;\n    public IntRef(int elem) { this.elem = elem; }\n    public String toString() { return java.lang.Integer.toString(elem); }\n\n    public static IntRef create(int e) { return new IntRef(e); }\n    public static IntRef zero() { return new IntRef(0); }\n}\n</code></pre>\n\n这个工厂方法好像和自己new也没什么区别嘛。\n那如果只是一个普通的scala函数，没有闭包，<code>var x = 0</code>这种还会被翻译为IntRef吗？我试了下是不会的。而且也不是Int，而是原始类型int.','Scala对闭包的实现','','inherit','closed','closed','','97-revision-v1','','','2017-09-04 19:58:30','2017-09-04 11:58:30','过程式语言如C++、Java等，一般以栈的方式实现函数调用，栈内存随函数执行而生长，随函数结束而回收，栈内存上分配的临时变量也被销毁。而函数式语言由于闭包的存在，函数执行结束时，函数中存在的变量可能会被传递到函数外的闭包内的其他函数引用，因而不能立即销毁。```Structure and Interpretation of Computer Programs```上提到的一种实现方式是在函数被调用时生成一个帧(Frame)，变量存在帧里面。帧本身也作为一个对象，由垃圾回收器在帧不再被使用时回收。\r\nC++、Java现在有lambda表达式，但那不是真正的闭包。C++的lambda表达式，如果用值传递的话，只是拷贝了数据，如果是引用传递的话，函数结束时，栈立刻回收，引用虽然有，却早已失效。Java则只支持值传递。\r\n运行在JVM上有许多支持函数式编程的语言。Scala就是其中一种。由于将来可能会从事Spark有关的工作，于是想学习一下Scala。学习了点基础知识，写了几个helloworld后，突然很好奇Scala对闭包的实现。探究了一番，发现毕竟是JVM上运行的语言，想要逆天突破栈自动回收是不可能的。Scala对被闭包内函数引用的变量，用各种Ref包了一层，如IntRef, ObjectRef等，即Int会被编译为IntRef，Object会被编译为ObjectRef。Ref内有一个变量elem真正存数据。对栈内的变量重新赋值的语句，会被编译为对Ref内的elem的赋值操作。\r\n来看代码吧，实验环境为scala-2.11, java-8。\r\n首先来写一段scala代码：\r\n```scala\r\nclass Functional {\r\n    def f: () =&gt; List[Int] = {\r\n        var x = 0\r\n        var list = List[Int]()\r\n        () =&gt; {\r\n            x += 1\r\n            list = x :: list\r\n            list\r\n        }\r\n    }\r\n}\r\n```\r\n用scalac编译，可以得到两个class文件：Functional.class， Functional$$anonfun$f$1.class\r\n用javap来反编译class文件。\r\n先来看Function.class\r\n```java\r\n$ javap -c Functional.class\r\npublic class Functional {\r\n  public scala.Function0&lt;scala.collection.immutable.List&lt;java.lang.Object&gt;&gt; f();\r\n    Code:\r\n       0: iconst_0\r\n       1: invokestatic  #16    // Method scala/runtime/IntRef.create:(I)Lscala/runtime/IntRef;\r\n       4: astore_1\r\n       5: getstatic     #22    // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;\r\n       8: invokestatic  #27    // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;\r\n      11: astore_2\r\n      12: new           #29    // class Functional$$anonfun$f$1\r\n      15: dup\r\n      16: aload_0\r\n      17: aload_1\r\n      18: aload_2\r\n      19: invokespecial #33    // Method Functional$$anonfun$f$1.&quot;&lt;init&gt;&quot;:(LFunctional;Lscala/runtime/IntRef;Lscala/runtime/ObjectRef;)V\r\n      22: areturn\r\n\r\n  public Functional();\r\n    Code:\r\n       0: aload_0\r\n       1: invokespecial #42    // Method java/lang/Object.&quot;&lt;init&gt;&quot;:()V\r\n       4: return\r\n}\r\n```\r\n可以看到，Functional.f里面创建了IntRef和ObjectRef来存x和list两个变量，而且用的是工厂方法IntRef.create和ObjectRef.create。Functional.f返回的匿名函数，则被实现为一个名为Functional$$anonfun$f$1的类。\r\n再来看Functional$$anonfun$f$1.class\r\n```java\r\n$ javap -c Functional\\$\\$anonfun\\$f\\$1.class\r\npublic final class Functional$$anonfun$f$1 extends scala.runtime.AbstractFunction0&lt;scala.collection.immutable.List&lt;java.lang.Object&gt;&gt; implements scala.Serializable {\r\n  public static final long serialVersionUID;\r\n\r\n  public final scala.collection.immutable.List&lt;java.lang.Object&gt; apply();\r\n    Code:\r\n       0: aload_0\r\n       1: getfield      #25    // Field x$2:Lscala/runtime/IntRef;\r\n       4: aload_0\r\n       5: getfield      #25    // Field x$2:Lscala/runtime/IntRef;\r\n       8: getfield      #31    // Field scala/runtime/IntRef.elem:I\r\n      11: iconst_1\r\n      12: iadd\r\n      13: putfield      #31    // Field scala/runtime/IntRef.elem:I\r\n      16: aload_0\r\n      17: getfield      #33    // Field list$1:Lscala/runtime/ObjectRef;\r\n      20: aload_0\r\n      21: getfield      #25    // Field x$2:Lscala/runtime/IntRef;\r\n      24: getfield      #31    // Field scala/runtime/IntRef.elem:I\r\n      27: istore_1\r\n      28: aload_0\r\n      29: getfield      #33    // Field list$1:Lscala/runtime/ObjectRef;\r\n      32: getfield      #38    // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;\r\n      35: checkcast     #40    // class scala/collection/immutable/List\r\n      38: iload_1\r\n      39: invokestatic  #46    // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;\r\n      42: invokevirtual #50    // Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;\r\n      45: putfield      #38    // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;\r\n      48: aload_0\r\n      49: getfield      #33    // Field list$1:Lscala/runtime/ObjectRef;\r\n      52: getfield      #38    // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;\r\n      55: checkcast     #40    // class scala/collection/immutable/List\r\n      58: areturn\r\n\r\n  public final java.lang.Object apply();\r\n    Code:\r\n       0: aload_0\r\n       1: invokevirtual #55    // Method apply:()Lscala/collection/immutable/List;\r\n       4: areturn\r\n\r\n  public Functional$$anonfun$f$1(Functional, scala.runtime.IntRef, scala.runtime.ObjectRef);\r\n    Code:\r\n       0: aload_0\r\n       1: aload_2\r\n       2: putfield      #25    // Field x$2:Lscala/runtime/IntRef;\r\n       5: aload_0\r\n       6: aload_3\r\n       7: putfield      #33    // Field list$1:Lscala/runtime/ObjectRef;\r\n      10: aload_0\r\n      11: invokespecial #60    // Method scala/runtime/AbstractFunction0.&quot;&lt;init&gt;&quot;:()V\r\n      14: return\r\n}\r\n```\r\n最底下的是构造函数```public Functional$$anonfun$f$1(Functional, scala.runtime.IntRef, scala.runtime.ObjectRef)```，可见Ref本身还是值传递。```public final java.lang.Object apply();```则是在匿名函数被调用的时候被调用，这是scala的语法糖。匿名函数真正的执行代码在```public final scala.collection.immutable.List<java.lang.Object> apply();```函数里。从这个函数里可以看到，IntRef中的elem被取出来，加上1后又存了回去。ObjectRef中的elem被取了出来，与IntRef中的elem被拼接为一个新的List，然后又存了回去。最后取出ObjectRef中的elem，作为返回值。这与scala代码中所表达的语义是一致的。\r\nscala源码中，IntRef与ObjectRef的小兄弟还有好多个：\r\n```bash\r\n$ find . -name *Ref.java\r\n./src/library/scala/runtime/VolatileLongRef.java\r\n./src/library/scala/runtime/DoubleRef.java\r\n./src/library/scala/runtime/VolatileIntRef.java\r\n./src/library/scala/runtime/ObjectRef.java\r\n./src/library/scala/runtime/VolatileObjectRef.java\r\n./src/library/scala/runtime/ShortRef.java\r\n./src/library/scala/runtime/ByteRef.java\r\n./src/library/scala/runtime/VolatileByteRef.java\r\n./src/library/scala/runtime/VolatileFloatRef.java\r\n./src/library/scala/runtime/VolatileDoubleRef.java\r\n./src/library/scala/runtime/BooleanRef.java\r\n./src/library/scala/runtime/VolatileCharRef.java\r\n./src/library/scala/runtime/VolatileBooleanRef.java\r\n./src/library/scala/runtime/LongRef.java\r\n./src/library/scala/runtime/CharRef.java\r\n./src/library/scala/runtime/FloatRef.java\r\n./src/library/scala/runtime/IntRef.java\r\n./src/library/scala/runtime/VolatileShortRef.java\r\n```\r\n来看看IntRef.java长什么样：\r\n```Java\r\npackage scala.runtime;\r\n\r\npublic class IntRef implements java.io.Serializable {\r\n    private static final long serialVersionUID = 1488197132022872888L;\r\n\r\n    public int elem;\r\n    public IntRef(int elem) { this.elem = elem; }\r\n    public String toString() { return java.lang.Integer.toString(elem); }\r\n\r\n    public static IntRef create(int e) { return new IntRef(e); }\r\n    public static IntRef zero() { return new IntRef(0); }\r\n}\r\n```\r\n这个工厂方法好像和自己new也没什么区别嘛。\r\n那如果只是一个普通的scala函数，没有闭包，```var x = 0```这种还会被翻译为IntRef吗？我试了下是不会的。而且也不是Int，而是原始类型int.',97,'https://www.allisterke.com/?p=99',0,'revision','',0),(100,1,'2017-09-04 20:00:57','2017-09-04 12:00:57','过程式语言如C++、Java等，一般以栈的方式实现函数调用，栈内存随函数执行而生长，随函数结束而回收，栈内存上分配的临时变量也被销毁。而函数式语言由于闭包的存在，函数执行结束时，函数中存在的变量可能会被传递到函数外的闭包内的其他函数引用，因而不能立即销毁。<code>Structure and Interpretation of Computer Programs</code>上提到的一种实现方式是在函数被调用时生成一个帧(Frame)，变量存在帧里面。帧本身也作为一个对象，由垃圾回收器在帧不再被使用时回收。\n\nC++、Java现在有lambda表达式，但那不是真正的闭包。C++的lambda表达式，如果用值传递的话，只是拷贝了数据，如果是引用传递的话，函数结束时，栈立刻回收，引用虽然还在，却早已失效。Java则只支持值传递。\n\n运行在JVM上有许多支持函数式编程的语言。Scala就是其中一种。由于将来可能会从事Spark有关的工作，于是想学习一下Scala。学习了点基础知识，写了几个helloworld后，突然很好奇Scala对闭包的实现。探究了一番，发现毕竟是JVM上运行的语言，想要逆天突破栈自动回收是不可能的。Scala对被闭包内函数引用的变量，用各种Ref包了一层，如IntRef, ObjectRef等，即Int会被编译为IntRef，Object会被编译为ObjectRef。Ref内有一个变量elem真正存数据。对闭包内变量重新赋值的语句，会被编译为对Ref内的elem的赋值操作。\n\n来看代码吧，实验环境为scala-2.11, java-8。\n\n首先来写一段scala代码：\n\n<pre><code class=\"scala\">class Functional {\n    def f: () =&gt; List[Int] = {\n        var x = 0\n        var list = List[Int]()\n        () =&gt; {\n            x += 1\n            list = x :: list\n            list\n        }\n    }\n}\n</code></pre>\n\n用scalac编译，可以得到两个class文件：Functional.class， Functional$$anonfun$f$1.class\n用javap来反编译class文件。\n先来看Function.class\n\n<pre><code class=\"java\">$ javap -c Functional.class\npublic class Functional {\n  public scala.Function0&lt;scala.collection.immutable.List&lt;java.lang.Object&gt;&gt; f();\n    Code:\n       0: iconst_0\n       1: invokestatic  #16    // Method scala/runtime/IntRef.create:(I)Lscala/runtime/IntRef;\n       4: astore_1\n       5: getstatic     #22    // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;\n       8: invokestatic  #27    // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;\n      11: astore_2\n      12: new           #29    // class Functional$$anonfun$f$1\n      15: dup\n      16: aload_0\n      17: aload_1\n      18: aload_2\n      19: invokespecial #33    // Method Functional$$anonfun$f$1.\"&lt;init&gt;\":(LFunctional;Lscala/runtime/IntRef;Lscala/runtime/ObjectRef;)V\n      22: areturn\n\n  public Functional();\n    Code:\n       0: aload_0\n       1: invokespecial #42    // Method java/lang/Object.\"&lt;init&gt;\":()V\n       4: return\n}\n</code></pre>\n\n可以看到，Functional.f里面创建了IntRef和ObjectRef来存x和list两个变量，而且用的是工厂方法IntRef.create和ObjectRef.create。Functional.f返回的匿名函数，则被实现为一个名为Functional$$anonfun$f$1的类。\n再来看Functional$$anonfun$f$1.class\n\n<pre><code class=\"java\">$ javap -c Functional\\$\\$anonfun\\$f\\$1.class\npublic final class Functional$$anonfun$f$1 extends scala.runtime.AbstractFunction0&lt;scala.collection.immutable.List&lt;java.lang.Object&gt;&gt; implements scala.Serializable {\n  public static final long serialVersionUID;\n\n  public final scala.collection.immutable.List&lt;java.lang.Object&gt; apply();\n    Code:\n       0: aload_0\n       1: getfield      #25    // Field x$2:Lscala/runtime/IntRef;\n       4: aload_0\n       5: getfield      #25    // Field x$2:Lscala/runtime/IntRef;\n       8: getfield      #31    // Field scala/runtime/IntRef.elem:I\n      11: iconst_1\n      12: iadd\n      13: putfield      #31    // Field scala/runtime/IntRef.elem:I\n      16: aload_0\n      17: getfield      #33    // Field list$1:Lscala/runtime/ObjectRef;\n      20: aload_0\n      21: getfield      #25    // Field x$2:Lscala/runtime/IntRef;\n      24: getfield      #31    // Field scala/runtime/IntRef.elem:I\n      27: istore_1\n      28: aload_0\n      29: getfield      #33    // Field list$1:Lscala/runtime/ObjectRef;\n      32: getfield      #38    // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;\n      35: checkcast     #40    // class scala/collection/immutable/List\n      38: iload_1\n      39: invokestatic  #46    // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;\n      42: invokevirtual #50    // Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;\n      45: putfield      #38    // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;\n      48: aload_0\n      49: getfield      #33    // Field list$1:Lscala/runtime/ObjectRef;\n      52: getfield      #38    // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;\n      55: checkcast     #40    // class scala/collection/immutable/List\n      58: areturn\n\n  public final java.lang.Object apply();\n    Code:\n       0: aload_0\n       1: invokevirtual #55    // Method apply:()Lscala/collection/immutable/List;\n       4: areturn\n\n  public Functional$$anonfun$f$1(Functional, scala.runtime.IntRef, scala.runtime.ObjectRef);\n    Code:\n       0: aload_0\n       1: aload_2\n       2: putfield      #25    // Field x$2:Lscala/runtime/IntRef;\n       5: aload_0\n       6: aload_3\n       7: putfield      #33    // Field list$1:Lscala/runtime/ObjectRef;\n      10: aload_0\n      11: invokespecial #60    // Method scala/runtime/AbstractFunction0.\"&lt;init&gt;\":()V\n      14: return\n}\n</code></pre>\n\n最底下的是构造函数<code>public Functional$$anonfun$f$1(Functional, scala.runtime.IntRef, scala.runtime.ObjectRef)</code>，可见Ref本身还是值传递。<code>public final java.lang.Object apply();</code>则是在匿名函数被调用的时候被调用，这是scala的语法糖。匿名函数真正的执行代码在<code>public final scala.collection.immutable.List&lt;java.lang.Object&gt; apply();</code>函数里。从这个函数里可以看到，IntRef中的elem被取出来，加上1后又存了回去。ObjectRef中的elem被取了出来，与IntRef中的elem被拼接为一个新的List，然后又存了回去。最后取出ObjectRef中的elem，作为返回值。这与scala代码中所表达的语义是一致的。\nscala源码中，IntRef与ObjectRef的小兄弟还有好多个：\n\n<pre><code class=\"bash\">$ find . -name *Ref.java\n./src/library/scala/runtime/VolatileLongRef.java\n./src/library/scala/runtime/DoubleRef.java\n./src/library/scala/runtime/VolatileIntRef.java\n./src/library/scala/runtime/ObjectRef.java\n./src/library/scala/runtime/VolatileObjectRef.java\n./src/library/scala/runtime/ShortRef.java\n./src/library/scala/runtime/ByteRef.java\n./src/library/scala/runtime/VolatileByteRef.java\n./src/library/scala/runtime/VolatileFloatRef.java\n./src/library/scala/runtime/VolatileDoubleRef.java\n./src/library/scala/runtime/BooleanRef.java\n./src/library/scala/runtime/VolatileCharRef.java\n./src/library/scala/runtime/VolatileBooleanRef.java\n./src/library/scala/runtime/LongRef.java\n./src/library/scala/runtime/CharRef.java\n./src/library/scala/runtime/FloatRef.java\n./src/library/scala/runtime/IntRef.java\n./src/library/scala/runtime/VolatileShortRef.java\n</code></pre>\n\n来看看IntRef.java长什么样：\n\n<pre><code class=\"Java\">package scala.runtime;\n\npublic class IntRef implements java.io.Serializable {\n    private static final long serialVersionUID = 1488197132022872888L;\n\n    public int elem;\n    public IntRef(int elem) { this.elem = elem; }\n    public String toString() { return java.lang.Integer.toString(elem); }\n\n    public static IntRef create(int e) { return new IntRef(e); }\n    public static IntRef zero() { return new IntRef(0); }\n}\n</code></pre>\n\n这个工厂方法好像和自己new也没什么区别嘛。\n那如果只是一个普通的scala函数，没有闭包，<code>var x = 0</code>这种还会被翻译为IntRef吗？我试了下是不会的。而且也不是Int，而是原始类型int.','Scala对闭包的实现','','inherit','closed','closed','','97-revision-v1','','','2017-09-04 20:00:57','2017-09-04 12:00:57','过程式语言如C++、Java等，一般以栈的方式实现函数调用，栈内存随函数执行而生长，随函数结束而回收，栈内存上分配的临时变量也被销毁。而函数式语言由于闭包的存在，函数执行结束时，函数中存在的变量可能会被传递到函数外的闭包内的其他函数引用，因而不能立即销毁。```Structure and Interpretation of Computer Programs```上提到的一种实现方式是在函数被调用时生成一个帧(Frame)，变量存在帧里面。帧本身也作为一个对象，由垃圾回收器在帧不再被使用时回收。\r\n\r\nC++、Java现在有lambda表达式，但那不是真正的闭包。C++的lambda表达式，如果用值传递的话，只是拷贝了数据，如果是引用传递的话，函数结束时，栈立刻回收，引用虽然还在，却早已失效。Java则只支持值传递。\r\n\r\n运行在JVM上有许多支持函数式编程的语言。Scala就是其中一种。由于将来可能会从事Spark有关的工作，于是想学习一下Scala。学习了点基础知识，写了几个helloworld后，突然很好奇Scala对闭包的实现。探究了一番，发现毕竟是JVM上运行的语言，想要逆天突破栈自动回收是不可能的。Scala对被闭包内函数引用的变量，用各种Ref包了一层，如IntRef, ObjectRef等，即Int会被编译为IntRef，Object会被编译为ObjectRef。Ref内有一个变量elem真正存数据。对闭包内变量重新赋值的语句，会被编译为对Ref内的elem的赋值操作。\r\n\r\n来看代码吧，实验环境为scala-2.11, java-8。\r\n\r\n首先来写一段scala代码：\r\n```scala\r\nclass Functional {\r\n    def f: () =&gt; List[Int] = {\r\n        var x = 0\r\n        var list = List[Int]()\r\n        () =&gt; {\r\n            x += 1\r\n            list = x :: list\r\n            list\r\n        }\r\n    }\r\n}\r\n```\r\n用scalac编译，可以得到两个class文件：Functional.class， Functional$$anonfun$f$1.class\r\n用javap来反编译class文件。\r\n先来看Function.class\r\n```java\r\n$ javap -c Functional.class\r\npublic class Functional {\r\n  public scala.Function0&lt;scala.collection.immutable.List&lt;java.lang.Object&gt;&gt; f();\r\n    Code:\r\n       0: iconst_0\r\n       1: invokestatic  #16    // Method scala/runtime/IntRef.create:(I)Lscala/runtime/IntRef;\r\n       4: astore_1\r\n       5: getstatic     #22    // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;\r\n       8: invokestatic  #27    // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;\r\n      11: astore_2\r\n      12: new           #29    // class Functional$$anonfun$f$1\r\n      15: dup\r\n      16: aload_0\r\n      17: aload_1\r\n      18: aload_2\r\n      19: invokespecial #33    // Method Functional$$anonfun$f$1.&quot;&lt;init&gt;&quot;:(LFunctional;Lscala/runtime/IntRef;Lscala/runtime/ObjectRef;)V\r\n      22: areturn\r\n\r\n  public Functional();\r\n    Code:\r\n       0: aload_0\r\n       1: invokespecial #42    // Method java/lang/Object.&quot;&lt;init&gt;&quot;:()V\r\n       4: return\r\n}\r\n```\r\n可以看到，Functional.f里面创建了IntRef和ObjectRef来存x和list两个变量，而且用的是工厂方法IntRef.create和ObjectRef.create。Functional.f返回的匿名函数，则被实现为一个名为Functional$$anonfun$f$1的类。\r\n再来看Functional$$anonfun$f$1.class\r\n```java\r\n$ javap -c Functional\\$\\$anonfun\\$f\\$1.class\r\npublic final class Functional$$anonfun$f$1 extends scala.runtime.AbstractFunction0&lt;scala.collection.immutable.List&lt;java.lang.Object&gt;&gt; implements scala.Serializable {\r\n  public static final long serialVersionUID;\r\n\r\n  public final scala.collection.immutable.List&lt;java.lang.Object&gt; apply();\r\n    Code:\r\n       0: aload_0\r\n       1: getfield      #25    // Field x$2:Lscala/runtime/IntRef;\r\n       4: aload_0\r\n       5: getfield      #25    // Field x$2:Lscala/runtime/IntRef;\r\n       8: getfield      #31    // Field scala/runtime/IntRef.elem:I\r\n      11: iconst_1\r\n      12: iadd\r\n      13: putfield      #31    // Field scala/runtime/IntRef.elem:I\r\n      16: aload_0\r\n      17: getfield      #33    // Field list$1:Lscala/runtime/ObjectRef;\r\n      20: aload_0\r\n      21: getfield      #25    // Field x$2:Lscala/runtime/IntRef;\r\n      24: getfield      #31    // Field scala/runtime/IntRef.elem:I\r\n      27: istore_1\r\n      28: aload_0\r\n      29: getfield      #33    // Field list$1:Lscala/runtime/ObjectRef;\r\n      32: getfield      #38    // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;\r\n      35: checkcast     #40    // class scala/collection/immutable/List\r\n      38: iload_1\r\n      39: invokestatic  #46    // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;\r\n      42: invokevirtual #50    // Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;\r\n      45: putfield      #38    // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;\r\n      48: aload_0\r\n      49: getfield      #33    // Field list$1:Lscala/runtime/ObjectRef;\r\n      52: getfield      #38    // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;\r\n      55: checkcast     #40    // class scala/collection/immutable/List\r\n      58: areturn\r\n\r\n  public final java.lang.Object apply();\r\n    Code:\r\n       0: aload_0\r\n       1: invokevirtual #55    // Method apply:()Lscala/collection/immutable/List;\r\n       4: areturn\r\n\r\n  public Functional$$anonfun$f$1(Functional, scala.runtime.IntRef, scala.runtime.ObjectRef);\r\n    Code:\r\n       0: aload_0\r\n       1: aload_2\r\n       2: putfield      #25    // Field x$2:Lscala/runtime/IntRef;\r\n       5: aload_0\r\n       6: aload_3\r\n       7: putfield      #33    // Field list$1:Lscala/runtime/ObjectRef;\r\n      10: aload_0\r\n      11: invokespecial #60    // Method scala/runtime/AbstractFunction0.&quot;&lt;init&gt;&quot;:()V\r\n      14: return\r\n}\r\n```\r\n最底下的是构造函数```public Functional$$anonfun$f$1(Functional, scala.runtime.IntRef, scala.runtime.ObjectRef)```，可见Ref本身还是值传递。```public final java.lang.Object apply();```则是在匿名函数被调用的时候被调用，这是scala的语法糖。匿名函数真正的执行代码在```public final scala.collection.immutable.List<java.lang.Object> apply();```函数里。从这个函数里可以看到，IntRef中的elem被取出来，加上1后又存了回去。ObjectRef中的elem被取了出来，与IntRef中的elem被拼接为一个新的List，然后又存了回去。最后取出ObjectRef中的elem，作为返回值。这与scala代码中所表达的语义是一致的。\r\nscala源码中，IntRef与ObjectRef的小兄弟还有好多个：\r\n```bash\r\n$ find . -name *Ref.java\r\n./src/library/scala/runtime/VolatileLongRef.java\r\n./src/library/scala/runtime/DoubleRef.java\r\n./src/library/scala/runtime/VolatileIntRef.java\r\n./src/library/scala/runtime/ObjectRef.java\r\n./src/library/scala/runtime/VolatileObjectRef.java\r\n./src/library/scala/runtime/ShortRef.java\r\n./src/library/scala/runtime/ByteRef.java\r\n./src/library/scala/runtime/VolatileByteRef.java\r\n./src/library/scala/runtime/VolatileFloatRef.java\r\n./src/library/scala/runtime/VolatileDoubleRef.java\r\n./src/library/scala/runtime/BooleanRef.java\r\n./src/library/scala/runtime/VolatileCharRef.java\r\n./src/library/scala/runtime/VolatileBooleanRef.java\r\n./src/library/scala/runtime/LongRef.java\r\n./src/library/scala/runtime/CharRef.java\r\n./src/library/scala/runtime/FloatRef.java\r\n./src/library/scala/runtime/IntRef.java\r\n./src/library/scala/runtime/VolatileShortRef.java\r\n```\r\n来看看IntRef.java长什么样：\r\n```Java\r\npackage scala.runtime;\r\n\r\npublic class IntRef implements java.io.Serializable {\r\n    private static final long serialVersionUID = 1488197132022872888L;\r\n\r\n    public int elem;\r\n    public IntRef(int elem) { this.elem = elem; }\r\n    public String toString() { return java.lang.Integer.toString(elem); }\r\n\r\n    public static IntRef create(int e) { return new IntRef(e); }\r\n    public static IntRef zero() { return new IntRef(0); }\r\n}\r\n```\r\n这个工厂方法好像和自己new也没什么区别嘛。\r\n那如果只是一个普通的scala函数，没有闭包，```var x = 0```这种还会被翻译为IntRef吗？我试了下是不会的。而且也不是Int，而是原始类型int.',97,'https://www.allisterke.com/?p=100',0,'revision','',0),(101,1,'2017-09-04 20:04:43','2017-09-04 12:04:43','过程式语言如C++、Java等，一般以栈的方式实现函数调用，栈内存随函数执行而生长，随函数结束而回收，栈内存上分配的临时变量也被销毁。而函数式语言由于闭包的存在，函数执行结束时，函数中存在的变量可能会被传递到函数外的闭包内的其他函数引用，因而不能立即销毁。<code>Structure and Interpretation of Computer Programs</code>上提到的一种实现方式是在函数被调用时生成一个帧(Frame)，变量存在帧里面。帧本身也作为一个对象，由垃圾回收器在帧不再被使用时回收。\n\nC++、Java现在有lambda表达式，但那不是真正的闭包。C++的lambda表达式，如果用值传递的话，只是拷贝了数据，如果是引用传递的话，函数结束时，栈立刻回收，引用虽然还在，却早已失效。Java则只支持值传递。\n\n运行在JVM上有许多支持函数式编程的语言。Scala就是其中一种。由于将来可能会从事Spark有关的工作，于是想学习一下Scala。学习了点基础知识，写了几个helloworld后，突然很好奇Scala对闭包的实现。探究了一番，发现毕竟是JVM上运行的语言，想要逆天突破栈自动回收是不可能的。Scala对被闭包内函数引用的变量，用各种Ref包了一层，如IntRef, ObjectRef等，即Int会被编译为IntRef，Object会被编译为ObjectRef。Ref内有一个变量elem真正存数据。对闭包内变量重新赋值的语句，会被编译为对Ref内的elem的赋值操作。\n\n来看代码吧，实验环境为scala-2.11, java-8。\n\n首先来写一段scala代码：\n\n<pre><code class=\"scala\">class Functional {\n    def f: () =&gt; List[Int] = {\n        var x = 0\n        var list = List[Int]()\n        () =&gt; {\n            x += 1\n            list = x :: list\n            list\n        }\n    }\n}\n</code></pre>\n\n用scalac编译，可以得到两个class文件：Functional.class和Functional$$anonfun$f$1.class\n用javap来反编译class文件。\n先来看Function.class\n\n<pre><code class=\"java\">$ javap -c Functional.class\npublic class Functional {\n  public scala.Function0&lt;scala.collection.immutable.List&lt;java.lang.Object&gt;&gt; f();\n    Code:\n       0: iconst_0\n       1: invokestatic  #16    // Method scala/runtime/IntRef.create:(I)Lscala/runtime/IntRef;\n       4: astore_1\n       5: getstatic     #22    // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;\n       8: invokestatic  #27    // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;\n      11: astore_2\n      12: new           #29    // class Functional$$anonfun$f$1\n      15: dup\n      16: aload_0\n      17: aload_1\n      18: aload_2\n      19: invokespecial #33    // Method Functional$$anonfun$f$1.\"&lt;init&gt;\":(LFunctional;Lscala/runtime/IntRef;Lscala/runtime/ObjectRef;)V\n      22: areturn\n\n  public Functional();\n    Code:\n       0: aload_0\n       1: invokespecial #42    // Method java/lang/Object.\"&lt;init&gt;\":()V\n       4: return\n}\n</code></pre>\n\n可以看到，Functional.f里面创建了IntRef和ObjectRef来存x和list两个变量，而且用的是工厂方法IntRef.create和ObjectRef.create。Functional.f返回的匿名函数，则被实现为一个名为Functional$$anonfun$f$1的类。\n再来看Functional$$anonfun$f$1.class\n\n<pre><code class=\"java\">$ javap -c Functional\\$\\$anonfun\\$f\\$1.class\npublic final class Functional$$anonfun$f$1 extends scala.runtime.AbstractFunction0&lt;scala.collection.immutable.List&lt;java.lang.Object&gt;&gt; implements scala.Serializable {\n  public static final long serialVersionUID;\n\n  public final scala.collection.immutable.List&lt;java.lang.Object&gt; apply();\n    Code:\n       0: aload_0\n       1: getfield      #25    // Field x$2:Lscala/runtime/IntRef;\n       4: aload_0\n       5: getfield      #25    // Field x$2:Lscala/runtime/IntRef;\n       8: getfield      #31    // Field scala/runtime/IntRef.elem:I\n      11: iconst_1\n      12: iadd\n      13: putfield      #31    // Field scala/runtime/IntRef.elem:I\n      16: aload_0\n      17: getfield      #33    // Field list$1:Lscala/runtime/ObjectRef;\n      20: aload_0\n      21: getfield      #25    // Field x$2:Lscala/runtime/IntRef;\n      24: getfield      #31    // Field scala/runtime/IntRef.elem:I\n      27: istore_1\n      28: aload_0\n      29: getfield      #33    // Field list$1:Lscala/runtime/ObjectRef;\n      32: getfield      #38    // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;\n      35: checkcast     #40    // class scala/collection/immutable/List\n      38: iload_1\n      39: invokestatic  #46    // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;\n      42: invokevirtual #50    // Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;\n      45: putfield      #38    // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;\n      48: aload_0\n      49: getfield      #33    // Field list$1:Lscala/runtime/ObjectRef;\n      52: getfield      #38    // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;\n      55: checkcast     #40    // class scala/collection/immutable/List\n      58: areturn\n\n  public final java.lang.Object apply();\n    Code:\n       0: aload_0\n       1: invokevirtual #55    // Method apply:()Lscala/collection/immutable/List;\n       4: areturn\n\n  public Functional$$anonfun$f$1(Functional, scala.runtime.IntRef, scala.runtime.ObjectRef);\n    Code:\n       0: aload_0\n       1: aload_2\n       2: putfield      #25    // Field x$2:Lscala/runtime/IntRef;\n       5: aload_0\n       6: aload_3\n       7: putfield      #33    // Field list$1:Lscala/runtime/ObjectRef;\n      10: aload_0\n      11: invokespecial #60    // Method scala/runtime/AbstractFunction0.\"&lt;init&gt;\":()V\n      14: return\n}\n</code></pre>\n\n最底下的是构造函数<code>public Functional$$anonfun$f$1(Functional, scala.runtime.IntRef, scala.runtime.ObjectRef)</code>，可见Ref本身还是值传递。<code>public final java.lang.Object apply();</code>则是在匿名函数被调用的时候被调用，这是scala的语法糖。匿名函数真正的执行代码在<code>public final scala.collection.immutable.List&lt;java.lang.Object&gt; apply();</code>函数里。从这个函数里可以看到，IntRef中的elem被取出来，加上1后又存了回去。ObjectRef中的elem被取了出来，与IntRef中的elem被拼接为一个新的List，然后又存了回去。最后取出ObjectRef中的elem，作为返回值。这与scala代码中所表达的语义是一致的。\nscala源码中，IntRef与ObjectRef的小兄弟还有好多个：\n\n<pre><code class=\"bash\">$ find . -name *Ref.java\n./src/library/scala/runtime/VolatileLongRef.java\n./src/library/scala/runtime/DoubleRef.java\n./src/library/scala/runtime/VolatileIntRef.java\n./src/library/scala/runtime/ObjectRef.java\n./src/library/scala/runtime/VolatileObjectRef.java\n./src/library/scala/runtime/ShortRef.java\n./src/library/scala/runtime/ByteRef.java\n./src/library/scala/runtime/VolatileByteRef.java\n./src/library/scala/runtime/VolatileFloatRef.java\n./src/library/scala/runtime/VolatileDoubleRef.java\n./src/library/scala/runtime/BooleanRef.java\n./src/library/scala/runtime/VolatileCharRef.java\n./src/library/scala/runtime/VolatileBooleanRef.java\n./src/library/scala/runtime/LongRef.java\n./src/library/scala/runtime/CharRef.java\n./src/library/scala/runtime/FloatRef.java\n./src/library/scala/runtime/IntRef.java\n./src/library/scala/runtime/VolatileShortRef.java\n</code></pre>\n\n来看看IntRef.java长什么样：\n\n<pre><code class=\"Java\">package scala.runtime;\n\npublic class IntRef implements java.io.Serializable {\n    private static final long serialVersionUID = 1488197132022872888L;\n\n    public int elem;\n    public IntRef(int elem) { this.elem = elem; }\n    public String toString() { return java.lang.Integer.toString(elem); }\n\n    public static IntRef create(int e) { return new IntRef(e); }\n    public static IntRef zero() { return new IntRef(0); }\n}\n</code></pre>\n\n这个代码里的工厂方法好像和自己new也没什么区别嘛。\n\n那如果只是一个普通的scala函数，没有闭包，像<code>var x = 0</code>这种还会被编译为IntRef吗？我试了下是不会的。而且也不是Int，而是原始类型int.','Scala对闭包的实现','','inherit','closed','closed','','97-revision-v1','','','2017-09-04 20:04:43','2017-09-04 12:04:43','过程式语言如C++、Java等，一般以栈的方式实现函数调用，栈内存随函数执行而生长，随函数结束而回收，栈内存上分配的临时变量也被销毁。而函数式语言由于闭包的存在，函数执行结束时，函数中存在的变量可能会被传递到函数外的闭包内的其他函数引用，因而不能立即销毁。```Structure and Interpretation of Computer Programs```上提到的一种实现方式是在函数被调用时生成一个帧(Frame)，变量存在帧里面。帧本身也作为一个对象，由垃圾回收器在帧不再被使用时回收。\r\n\r\nC++、Java现在有lambda表达式，但那不是真正的闭包。C++的lambda表达式，如果用值传递的话，只是拷贝了数据，如果是引用传递的话，函数结束时，栈立刻回收，引用虽然还在，却早已失效。Java则只支持值传递。\r\n\r\n运行在JVM上有许多支持函数式编程的语言。Scala就是其中一种。由于将来可能会从事Spark有关的工作，于是想学习一下Scala。学习了点基础知识，写了几个helloworld后，突然很好奇Scala对闭包的实现。探究了一番，发现毕竟是JVM上运行的语言，想要逆天突破栈自动回收是不可能的。Scala对被闭包内函数引用的变量，用各种Ref包了一层，如IntRef, ObjectRef等，即Int会被编译为IntRef，Object会被编译为ObjectRef。Ref内有一个变量elem真正存数据。对闭包内变量重新赋值的语句，会被编译为对Ref内的elem的赋值操作。\r\n\r\n来看代码吧，实验环境为scala-2.11, java-8。\r\n\r\n首先来写一段scala代码：\r\n```scala\r\nclass Functional {\r\n    def f: () =&gt; List[Int] = {\r\n        var x = 0\r\n        var list = List[Int]()\r\n        () =&gt; {\r\n            x += 1\r\n            list = x :: list\r\n            list\r\n        }\r\n    }\r\n}\r\n```\r\n用scalac编译，可以得到两个class文件：Functional.class和Functional$$anonfun$f$1.class\r\n用javap来反编译class文件。\r\n先来看Function.class\r\n```java\r\n$ javap -c Functional.class\r\npublic class Functional {\r\n  public scala.Function0&lt;scala.collection.immutable.List&lt;java.lang.Object&gt;&gt; f();\r\n    Code:\r\n       0: iconst_0\r\n       1: invokestatic  #16    // Method scala/runtime/IntRef.create:(I)Lscala/runtime/IntRef;\r\n       4: astore_1\r\n       5: getstatic     #22    // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;\r\n       8: invokestatic  #27    // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;\r\n      11: astore_2\r\n      12: new           #29    // class Functional$$anonfun$f$1\r\n      15: dup\r\n      16: aload_0\r\n      17: aload_1\r\n      18: aload_2\r\n      19: invokespecial #33    // Method Functional$$anonfun$f$1.&quot;&lt;init&gt;&quot;:(LFunctional;Lscala/runtime/IntRef;Lscala/runtime/ObjectRef;)V\r\n      22: areturn\r\n\r\n  public Functional();\r\n    Code:\r\n       0: aload_0\r\n       1: invokespecial #42    // Method java/lang/Object.&quot;&lt;init&gt;&quot;:()V\r\n       4: return\r\n}\r\n```\r\n可以看到，Functional.f里面创建了IntRef和ObjectRef来存x和list两个变量，而且用的是工厂方法IntRef.create和ObjectRef.create。Functional.f返回的匿名函数，则被实现为一个名为Functional$$anonfun$f$1的类。\r\n再来看Functional$$anonfun$f$1.class\r\n```java\r\n$ javap -c Functional\\$\\$anonfun\\$f\\$1.class\r\npublic final class Functional$$anonfun$f$1 extends scala.runtime.AbstractFunction0&lt;scala.collection.immutable.List&lt;java.lang.Object&gt;&gt; implements scala.Serializable {\r\n  public static final long serialVersionUID;\r\n\r\n  public final scala.collection.immutable.List&lt;java.lang.Object&gt; apply();\r\n    Code:\r\n       0: aload_0\r\n       1: getfield      #25    // Field x$2:Lscala/runtime/IntRef;\r\n       4: aload_0\r\n       5: getfield      #25    // Field x$2:Lscala/runtime/IntRef;\r\n       8: getfield      #31    // Field scala/runtime/IntRef.elem:I\r\n      11: iconst_1\r\n      12: iadd\r\n      13: putfield      #31    // Field scala/runtime/IntRef.elem:I\r\n      16: aload_0\r\n      17: getfield      #33    // Field list$1:Lscala/runtime/ObjectRef;\r\n      20: aload_0\r\n      21: getfield      #25    // Field x$2:Lscala/runtime/IntRef;\r\n      24: getfield      #31    // Field scala/runtime/IntRef.elem:I\r\n      27: istore_1\r\n      28: aload_0\r\n      29: getfield      #33    // Field list$1:Lscala/runtime/ObjectRef;\r\n      32: getfield      #38    // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;\r\n      35: checkcast     #40    // class scala/collection/immutable/List\r\n      38: iload_1\r\n      39: invokestatic  #46    // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;\r\n      42: invokevirtual #50    // Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;\r\n      45: putfield      #38    // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;\r\n      48: aload_0\r\n      49: getfield      #33    // Field list$1:Lscala/runtime/ObjectRef;\r\n      52: getfield      #38    // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;\r\n      55: checkcast     #40    // class scala/collection/immutable/List\r\n      58: areturn\r\n\r\n  public final java.lang.Object apply();\r\n    Code:\r\n       0: aload_0\r\n       1: invokevirtual #55    // Method apply:()Lscala/collection/immutable/List;\r\n       4: areturn\r\n\r\n  public Functional$$anonfun$f$1(Functional, scala.runtime.IntRef, scala.runtime.ObjectRef);\r\n    Code:\r\n       0: aload_0\r\n       1: aload_2\r\n       2: putfield      #25    // Field x$2:Lscala/runtime/IntRef;\r\n       5: aload_0\r\n       6: aload_3\r\n       7: putfield      #33    // Field list$1:Lscala/runtime/ObjectRef;\r\n      10: aload_0\r\n      11: invokespecial #60    // Method scala/runtime/AbstractFunction0.&quot;&lt;init&gt;&quot;:()V\r\n      14: return\r\n}\r\n```\r\n最底下的是构造函数```public Functional$$anonfun$f$1(Functional, scala.runtime.IntRef, scala.runtime.ObjectRef)```，可见Ref本身还是值传递。```public final java.lang.Object apply();```则是在匿名函数被调用的时候被调用，这是scala的语法糖。匿名函数真正的执行代码在```public final scala.collection.immutable.List<java.lang.Object> apply();```函数里。从这个函数里可以看到，IntRef中的elem被取出来，加上1后又存了回去。ObjectRef中的elem被取了出来，与IntRef中的elem被拼接为一个新的List，然后又存了回去。最后取出ObjectRef中的elem，作为返回值。这与scala代码中所表达的语义是一致的。\r\nscala源码中，IntRef与ObjectRef的小兄弟还有好多个：\r\n```bash\r\n$ find . -name *Ref.java\r\n./src/library/scala/runtime/VolatileLongRef.java\r\n./src/library/scala/runtime/DoubleRef.java\r\n./src/library/scala/runtime/VolatileIntRef.java\r\n./src/library/scala/runtime/ObjectRef.java\r\n./src/library/scala/runtime/VolatileObjectRef.java\r\n./src/library/scala/runtime/ShortRef.java\r\n./src/library/scala/runtime/ByteRef.java\r\n./src/library/scala/runtime/VolatileByteRef.java\r\n./src/library/scala/runtime/VolatileFloatRef.java\r\n./src/library/scala/runtime/VolatileDoubleRef.java\r\n./src/library/scala/runtime/BooleanRef.java\r\n./src/library/scala/runtime/VolatileCharRef.java\r\n./src/library/scala/runtime/VolatileBooleanRef.java\r\n./src/library/scala/runtime/LongRef.java\r\n./src/library/scala/runtime/CharRef.java\r\n./src/library/scala/runtime/FloatRef.java\r\n./src/library/scala/runtime/IntRef.java\r\n./src/library/scala/runtime/VolatileShortRef.java\r\n```\r\n来看看IntRef.java长什么样：\r\n```Java\r\npackage scala.runtime;\r\n\r\npublic class IntRef implements java.io.Serializable {\r\n    private static final long serialVersionUID = 1488197132022872888L;\r\n\r\n    public int elem;\r\n    public IntRef(int elem) { this.elem = elem; }\r\n    public String toString() { return java.lang.Integer.toString(elem); }\r\n\r\n    public static IntRef create(int e) { return new IntRef(e); }\r\n    public static IntRef zero() { return new IntRef(0); }\r\n}\r\n```\r\n这个代码里的工厂方法好像和自己new也没什么区别嘛。\r\n\r\n那如果只是一个普通的scala函数，没有闭包，像```var x = 0```这种还会被编译为IntRef吗？我试了下是不会的。而且也不是Int，而是原始类型int.',97,'https://www.allisterke.com/?p=101',0,'revision','',0),(102,1,'2017-09-04 20:06:37','2017-09-04 12:06:37','过程式语言如C++、Java等，一般以栈的方式实现函数调用，栈内存随函数执行而生长，随函数结束而回收，栈内存上分配的临时变量也被销毁。而函数式语言由于闭包的存在，函数执行结束时，函数中存在的变量可能会被传递到函数外的闭包内的其他函数引用，因而不能立即销毁。<code>Structure and Interpretation of Computer Programs</code>上提到的一种实现方式是在函数被调用时生成一个帧(Frame)，变量存在帧里面。帧本身也作为一个对象，由垃圾回收器在帧不再被使用时回收。\n\nC++、Java现在有lambda表达式，但那不是真正的闭包。C++的lambda表达式，如果用值传递的话，只是拷贝了数据，如果是引用传递的话，函数结束时，栈立刻回收，引用虽然还在，却早已失效。Java则只支持值传递。\n\n运行在JVM上有许多支持函数式编程的语言。Scala就是其中一种。由于将来可能会从事Spark有关的工作，于是想学习一下Scala。学习了点基础知识，写了几个helloworld后，突然很好奇Scala对闭包的实现。探究了一番，发现毕竟是JVM上运行的语言，想要逆天突破栈自动回收是不可能的。Scala对被闭包内函数引用的变量，用各种Ref包了一层，如IntRef, ObjectRef等，即Int会被编译为IntRef，Object会被编译为ObjectRef。Ref内有一个变量elem真正存数据。对闭包内变量重新赋值的语句，会被编译为对Ref内的elem的赋值操作。\n\n来看代码吧，实验环境为scala-2.11, java-8。\n\n首先来写一段scala代码：\n\n<pre><code class=\"scala\">class Functional {\n    def f: () =&gt; List[Int] = {\n        var x = 0\n        var list = List[Int]()\n        () =&gt; {\n            x += 1\n            list = x :: list\n            list\n        }\n    }\n}\n</code></pre>\n\n用scalac编译，可以得到两个class文件：Functional.class和Functional$$anonfun$f$1.class\n用javap来反编译class文件。\n先来看Function.class\n\n<pre><code class=\"java\">$ javap -c Functional.class\npublic class Functional {\n  public scala.Function0&lt;scala.collection.immutable.List&lt;java.lang.Object&gt;&gt; f();\n    Code:\n       0: iconst_0\n       1: invokestatic  #16    // Method scala/runtime/IntRef.create:(I)Lscala/runtime/IntRef;\n       4: astore_1\n       5: getstatic     #22    // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;\n       8: invokestatic  #27    // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;\n      11: astore_2\n      12: new           #29    // class Functional$$anonfun$f$1\n      15: dup\n      16: aload_0\n      17: aload_1\n      18: aload_2\n      19: invokespecial #33    // Method Functional$$anonfun$f$1.\"&lt;init&gt;\":(LFunctional;Lscala/runtime/IntRef;Lscala/runtime/ObjectRef;)V\n      22: areturn\n\n  public Functional();\n    Code:\n       0: aload_0\n       1: invokespecial #42    // Method java/lang/Object.\"&lt;init&gt;\":()V\n       4: return\n}\n</code></pre>\n\n可以看到，Functional.f里面创建了IntRef和ObjectRef来存x和list两个变量，而且用的是工厂方法IntRef.create和ObjectRef.create。Functional.f返回的匿名函数，则被实现为一个名为Functional$$anonfun$f$1的类。\n再来看Functional$$anonfun$f$1.class\n\n<pre><code class=\"java\">$ javap -c Functional\\$\\$anonfun\\$f\\$1.class\npublic final class Functional$$anonfun$f$1 extends scala.runtime.AbstractFunction0&lt;scala.collection.immutable.List&lt;java.lang.Object&gt;&gt; implements scala.Serializable {\n  public static final long serialVersionUID;\n\n  public final scala.collection.immutable.List&lt;java.lang.Object&gt; apply();\n    Code:\n       0: aload_0\n       1: getfield      #25    // Field x$2:Lscala/runtime/IntRef;\n       4: aload_0\n       5: getfield      #25    // Field x$2:Lscala/runtime/IntRef;\n       8: getfield      #31    // Field scala/runtime/IntRef.elem:I\n      11: iconst_1\n      12: iadd\n      13: putfield      #31    // Field scala/runtime/IntRef.elem:I\n      16: aload_0\n      17: getfield      #33    // Field list$1:Lscala/runtime/ObjectRef;\n      20: aload_0\n      21: getfield      #25    // Field x$2:Lscala/runtime/IntRef;\n      24: getfield      #31    // Field scala/runtime/IntRef.elem:I\n      27: istore_1\n      28: aload_0\n      29: getfield      #33    // Field list$1:Lscala/runtime/ObjectRef;\n      32: getfield      #38    // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;\n      35: checkcast     #40    // class scala/collection/immutable/List\n      38: iload_1\n      39: invokestatic  #46    // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;\n      42: invokevirtual #50    // Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;\n      45: putfield      #38    // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;\n      48: aload_0\n      49: getfield      #33    // Field list$1:Lscala/runtime/ObjectRef;\n      52: getfield      #38    // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;\n      55: checkcast     #40    // class scala/collection/immutable/List\n      58: areturn\n\n  public final java.lang.Object apply();\n    Code:\n       0: aload_0\n       1: invokevirtual #55    // Method apply:()Lscala/collection/immutable/List;\n       4: areturn\n\n  public Functional$$anonfun$f$1(Functional, scala.runtime.IntRef, scala.runtime.ObjectRef);\n    Code:\n       0: aload_0\n       1: aload_2\n       2: putfield      #25    // Field x$2:Lscala/runtime/IntRef;\n       5: aload_0\n       6: aload_3\n       7: putfield      #33    // Field list$1:Lscala/runtime/ObjectRef;\n      10: aload_0\n      11: invokespecial #60    // Method scala/runtime/AbstractFunction0.\"&lt;init&gt;\":()V\n      14: return\n}\n</code></pre>\n\n最底下的是构造函数<code>public Functional$$anonfun$f$1(Functional, scala.runtime.IntRef, scala.runtime.ObjectRef)</code>，可见Ref本身还是值传递。<code>public final java.lang.Object apply();</code>则是在匿名函数被调用的时候被调用，这是scala的语法糖。匿名函数真正的执行代码在<code>public final scala.collection.immutable.List&lt;java.lang.Object&gt; apply();</code>函数里。从这个函数里可以看到，IntRef中的elem被取出来，加上1后又存了回去。ObjectRef中的elem被取了出来，与IntRef中的elem被拼接为一个新的List，然后又存了回去。最后取出ObjectRef中的elem，作为返回值。这与scala代码中所表达的语义是一致的。\nscala源码中，IntRef与ObjectRef的小兄弟还有好多个：\n\n<pre><code class=\"bash\">$ find . -name *Ref.java\n./src/library/scala/runtime/VolatileLongRef.java\n./src/library/scala/runtime/DoubleRef.java\n./src/library/scala/runtime/VolatileIntRef.java\n./src/library/scala/runtime/ObjectRef.java\n./src/library/scala/runtime/VolatileObjectRef.java\n./src/library/scala/runtime/ShortRef.java\n./src/library/scala/runtime/ByteRef.java\n./src/library/scala/runtime/VolatileByteRef.java\n./src/library/scala/runtime/VolatileFloatRef.java\n./src/library/scala/runtime/VolatileDoubleRef.java\n./src/library/scala/runtime/BooleanRef.java\n./src/library/scala/runtime/VolatileCharRef.java\n./src/library/scala/runtime/VolatileBooleanRef.java\n./src/library/scala/runtime/LongRef.java\n./src/library/scala/runtime/CharRef.java\n./src/library/scala/runtime/FloatRef.java\n./src/library/scala/runtime/IntRef.java\n./src/library/scala/runtime/VolatileShortRef.java\n</code></pre>\n\n来看看IntRef.java长什么样：\n\n<pre><code class=\"Java\">package scala.runtime;\n\npublic class IntRef implements java.io.Serializable {\n    private static final long serialVersionUID = 1488197132022872888L;\n\n    public int elem;\n    public IntRef(int elem) { this.elem = elem; }\n    public String toString() { return java.lang.Integer.toString(elem); }\n\n    public static IntRef create(int e) { return new IntRef(e); }\n    public static IntRef zero() { return new IntRef(0); }\n}\n</code></pre>\n\n这个代码里的工厂方法好像和自己new也没什么区别嘛。\n\n最后思考个问题：如果只是一个普通的scala函数，没有闭包，像<code>var x = 0</code>这种还会被编译为IntRef吗？我试了下是不会的。而且也不是Int，而是原始类型int。','Scala对闭包的实现','','inherit','closed','closed','','97-revision-v1','','','2017-09-04 20:06:37','2017-09-04 12:06:37','过程式语言如C++、Java等，一般以栈的方式实现函数调用，栈内存随函数执行而生长，随函数结束而回收，栈内存上分配的临时变量也被销毁。而函数式语言由于闭包的存在，函数执行结束时，函数中存在的变量可能会被传递到函数外的闭包内的其他函数引用，因而不能立即销毁。```Structure and Interpretation of Computer Programs```上提到的一种实现方式是在函数被调用时生成一个帧(Frame)，变量存在帧里面。帧本身也作为一个对象，由垃圾回收器在帧不再被使用时回收。\r\n\r\nC++、Java现在有lambda表达式，但那不是真正的闭包。C++的lambda表达式，如果用值传递的话，只是拷贝了数据，如果是引用传递的话，函数结束时，栈立刻回收，引用虽然还在，却早已失效。Java则只支持值传递。\r\n\r\n运行在JVM上有许多支持函数式编程的语言。Scala就是其中一种。由于将来可能会从事Spark有关的工作，于是想学习一下Scala。学习了点基础知识，写了几个helloworld后，突然很好奇Scala对闭包的实现。探究了一番，发现毕竟是JVM上运行的语言，想要逆天突破栈自动回收是不可能的。Scala对被闭包内函数引用的变量，用各种Ref包了一层，如IntRef, ObjectRef等，即Int会被编译为IntRef，Object会被编译为ObjectRef。Ref内有一个变量elem真正存数据。对闭包内变量重新赋值的语句，会被编译为对Ref内的elem的赋值操作。\r\n\r\n来看代码吧，实验环境为scala-2.11, java-8。\r\n\r\n首先来写一段scala代码：\r\n```scala\r\nclass Functional {\r\n    def f: () =&gt; List[Int] = {\r\n        var x = 0\r\n        var list = List[Int]()\r\n        () =&gt; {\r\n            x += 1\r\n            list = x :: list\r\n            list\r\n        }\r\n    }\r\n}\r\n```\r\n用scalac编译，可以得到两个class文件：Functional.class和Functional$$anonfun$f$1.class\r\n用javap来反编译class文件。\r\n先来看Function.class\r\n```java\r\n$ javap -c Functional.class\r\npublic class Functional {\r\n  public scala.Function0&lt;scala.collection.immutable.List&lt;java.lang.Object&gt;&gt; f();\r\n    Code:\r\n       0: iconst_0\r\n       1: invokestatic  #16    // Method scala/runtime/IntRef.create:(I)Lscala/runtime/IntRef;\r\n       4: astore_1\r\n       5: getstatic     #22    // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;\r\n       8: invokestatic  #27    // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;\r\n      11: astore_2\r\n      12: new           #29    // class Functional$$anonfun$f$1\r\n      15: dup\r\n      16: aload_0\r\n      17: aload_1\r\n      18: aload_2\r\n      19: invokespecial #33    // Method Functional$$anonfun$f$1.&quot;&lt;init&gt;&quot;:(LFunctional;Lscala/runtime/IntRef;Lscala/runtime/ObjectRef;)V\r\n      22: areturn\r\n\r\n  public Functional();\r\n    Code:\r\n       0: aload_0\r\n       1: invokespecial #42    // Method java/lang/Object.&quot;&lt;init&gt;&quot;:()V\r\n       4: return\r\n}\r\n```\r\n可以看到，Functional.f里面创建了IntRef和ObjectRef来存x和list两个变量，而且用的是工厂方法IntRef.create和ObjectRef.create。Functional.f返回的匿名函数，则被实现为一个名为Functional$$anonfun$f$1的类。\r\n再来看Functional$$anonfun$f$1.class\r\n```java\r\n$ javap -c Functional\\$\\$anonfun\\$f\\$1.class\r\npublic final class Functional$$anonfun$f$1 extends scala.runtime.AbstractFunction0&lt;scala.collection.immutable.List&lt;java.lang.Object&gt;&gt; implements scala.Serializable {\r\n  public static final long serialVersionUID;\r\n\r\n  public final scala.collection.immutable.List&lt;java.lang.Object&gt; apply();\r\n    Code:\r\n       0: aload_0\r\n       1: getfield      #25    // Field x$2:Lscala/runtime/IntRef;\r\n       4: aload_0\r\n       5: getfield      #25    // Field x$2:Lscala/runtime/IntRef;\r\n       8: getfield      #31    // Field scala/runtime/IntRef.elem:I\r\n      11: iconst_1\r\n      12: iadd\r\n      13: putfield      #31    // Field scala/runtime/IntRef.elem:I\r\n      16: aload_0\r\n      17: getfield      #33    // Field list$1:Lscala/runtime/ObjectRef;\r\n      20: aload_0\r\n      21: getfield      #25    // Field x$2:Lscala/runtime/IntRef;\r\n      24: getfield      #31    // Field scala/runtime/IntRef.elem:I\r\n      27: istore_1\r\n      28: aload_0\r\n      29: getfield      #33    // Field list$1:Lscala/runtime/ObjectRef;\r\n      32: getfield      #38    // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;\r\n      35: checkcast     #40    // class scala/collection/immutable/List\r\n      38: iload_1\r\n      39: invokestatic  #46    // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;\r\n      42: invokevirtual #50    // Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;\r\n      45: putfield      #38    // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;\r\n      48: aload_0\r\n      49: getfield      #33    // Field list$1:Lscala/runtime/ObjectRef;\r\n      52: getfield      #38    // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;\r\n      55: checkcast     #40    // class scala/collection/immutable/List\r\n      58: areturn\r\n\r\n  public final java.lang.Object apply();\r\n    Code:\r\n       0: aload_0\r\n       1: invokevirtual #55    // Method apply:()Lscala/collection/immutable/List;\r\n       4: areturn\r\n\r\n  public Functional$$anonfun$f$1(Functional, scala.runtime.IntRef, scala.runtime.ObjectRef);\r\n    Code:\r\n       0: aload_0\r\n       1: aload_2\r\n       2: putfield      #25    // Field x$2:Lscala/runtime/IntRef;\r\n       5: aload_0\r\n       6: aload_3\r\n       7: putfield      #33    // Field list$1:Lscala/runtime/ObjectRef;\r\n      10: aload_0\r\n      11: invokespecial #60    // Method scala/runtime/AbstractFunction0.&quot;&lt;init&gt;&quot;:()V\r\n      14: return\r\n}\r\n```\r\n最底下的是构造函数```public Functional$$anonfun$f$1(Functional, scala.runtime.IntRef, scala.runtime.ObjectRef)```，可见Ref本身还是值传递。```public final java.lang.Object apply();```则是在匿名函数被调用的时候被调用，这是scala的语法糖。匿名函数真正的执行代码在```public final scala.collection.immutable.List<java.lang.Object> apply();```函数里。从这个函数里可以看到，IntRef中的elem被取出来，加上1后又存了回去。ObjectRef中的elem被取了出来，与IntRef中的elem被拼接为一个新的List，然后又存了回去。最后取出ObjectRef中的elem，作为返回值。这与scala代码中所表达的语义是一致的。\r\nscala源码中，IntRef与ObjectRef的小兄弟还有好多个：\r\n```bash\r\n$ find . -name *Ref.java\r\n./src/library/scala/runtime/VolatileLongRef.java\r\n./src/library/scala/runtime/DoubleRef.java\r\n./src/library/scala/runtime/VolatileIntRef.java\r\n./src/library/scala/runtime/ObjectRef.java\r\n./src/library/scala/runtime/VolatileObjectRef.java\r\n./src/library/scala/runtime/ShortRef.java\r\n./src/library/scala/runtime/ByteRef.java\r\n./src/library/scala/runtime/VolatileByteRef.java\r\n./src/library/scala/runtime/VolatileFloatRef.java\r\n./src/library/scala/runtime/VolatileDoubleRef.java\r\n./src/library/scala/runtime/BooleanRef.java\r\n./src/library/scala/runtime/VolatileCharRef.java\r\n./src/library/scala/runtime/VolatileBooleanRef.java\r\n./src/library/scala/runtime/LongRef.java\r\n./src/library/scala/runtime/CharRef.java\r\n./src/library/scala/runtime/FloatRef.java\r\n./src/library/scala/runtime/IntRef.java\r\n./src/library/scala/runtime/VolatileShortRef.java\r\n```\r\n来看看IntRef.java长什么样：\r\n```Java\r\npackage scala.runtime;\r\n\r\npublic class IntRef implements java.io.Serializable {\r\n    private static final long serialVersionUID = 1488197132022872888L;\r\n\r\n    public int elem;\r\n    public IntRef(int elem) { this.elem = elem; }\r\n    public String toString() { return java.lang.Integer.toString(elem); }\r\n\r\n    public static IntRef create(int e) { return new IntRef(e); }\r\n    public static IntRef zero() { return new IntRef(0); }\r\n}\r\n```\r\n这个代码里的工厂方法好像和自己new也没什么区别嘛。\r\n\r\n最后思考个问题：如果只是一个普通的scala函数，没有闭包，像```var x = 0```这种还会被编译为IntRef吗？我试了下是不会的。而且也不是Int，而是原始类型int。',97,'https://www.allisterke.com/?p=102',0,'revision','',0),(104,1,'2017-10-20 21:44:04','2017-10-20 13:44:04','机器需要强化学习，人也需要强化学习。\n\n词汇来源于柯林斯五星词汇。\n学习资料来源于<a href=\"http://www.iciba.com\" target=\"_blank\">www.iciba.com</a>，由后台nginx代理转发，侵删。\ngithub项目：<a href=\"https://github.com/allisterke/iciba\" target=\"_blank\">https://github.com/allisterke/iciba</a>\n学习访问：<a href=\"https://www.allisterke.com/iciba/\" target=\"_blank\">https://www.allisterke.com/iciba/</a>\n\n由于本站启用https，但工具中引用的mp3是http链接，固sarafi应该是不能用的。支持firefox和chrome。\n\n用法：\n按Enter键：暂停学习，已经开始播放的会播放完毕；\n按左方向键：快退\n按右方向键：快进','写了个英语学习工具','','publish','open','open','','%e5%86%99%e4%ba%86%e4%b8%aa%e8%8b%b1%e8%af%ad%e5%ad%a6%e4%b9%a0%e5%b7%a5%e5%85%b7','','','2017-10-20 21:44:04','2017-10-20 13:44:04','机器需要强化学习，人也需要强化学习。\r\n\r\n词汇来源于柯林斯五星词汇。\r\n学习资料来源于<a href=\"http://www.iciba.com\" target=\"_blank\">www.iciba.com</a>，由后台nginx代理转发，侵删。\r\ngithub项目：<a href=\"https://github.com/allisterke/iciba\" target=\"_blank\">https://github.com/allisterke/iciba</a>\r\n学习访问：<a href=\"https://www.allisterke.com/iciba/\" target=\"_blank\">https://www.allisterke.com/iciba/</a>\r\n\r\n由于本站启用https，但工具中引用的mp3是http链接，固sarafi应该是不能用的。支持firefox和chrome。\r\n\r\n用法：\r\n按Enter键：暂停学习，已经开始播放的会播放完毕；\r\n按左方向键：快退\r\n按右方向键：快进',0,'https://www.allisterke.com/?p=104',0,'post','',0),(105,1,'2017-10-20 21:35:28','2017-10-20 13:35:28','机器需要强化学习，人也需要强化学习。\n词汇来源于柯林斯五星词汇。\n学习资料来源于www.iciba.com，由后台nginx代理转发，侵删。\ngithub项目：https://github.com/allisterke/iciba\n学习访问：https://www.allisterke.com/iciba/','写了个英语学习工具','','inherit','closed','closed','','104-revision-v1','','','2017-10-20 21:35:28','2017-10-20 13:35:28','机器需要强化学习，人也需要强化学习。\r\n词汇来源于柯林斯五星词汇。\r\n学习资料来源于www.iciba.com，由后台nginx代理转发，侵删。\r\ngithub项目：https://github.com/allisterke/iciba\r\n学习访问：https://www.allisterke.com/iciba/',104,'https://www.allisterke.com/?p=105',0,'revision','',0),(106,1,'2017-10-20 21:42:04','2017-10-20 13:42:04','机器需要强化学习，人也需要强化学习。\n\n词汇来源于柯林斯五星词汇。\n学习资料来源于<a href=\"http://www.iciba.com\" target=\"_blank\">www.iciba.com</a>，由后台nginx代理转发，侵删。\ngithub项目：<a href=\"https://github.com/allisterke/iciba\" target=\"_blank\">https://github.com/allisterke/iciba</a>\n学习访问：<a href=\"https://www.allisterke.com/iciba/\" target=\"_blank\">https://www.allisterke.com/iciba/</a>\n\n由于引用的mp3是http链接，sarafi应该是不能用的。支持firefox和chrome。\n\n用法：\n按Enter键：暂停学习，已经开始播放的会播放完毕；\n按左方向键：快退\n按右方向键：快进','写了个英语学习工具','','inherit','closed','closed','','104-revision-v1','','','2017-10-20 21:42:04','2017-10-20 13:42:04','机器需要强化学习，人也需要强化学习。\r\n\r\n词汇来源于柯林斯五星词汇。\r\n学习资料来源于<a href=\"http://www.iciba.com\" target=\"_blank\">www.iciba.com</a>，由后台nginx代理转发，侵删。\r\ngithub项目：<a href=\"https://github.com/allisterke/iciba\" target=\"_blank\">https://github.com/allisterke/iciba</a>\r\n学习访问：<a href=\"https://www.allisterke.com/iciba/\" target=\"_blank\">https://www.allisterke.com/iciba/</a>\r\n\r\n由于引用的mp3是http链接，sarafi应该是不能用的。支持firefox和chrome。\r\n\r\n用法：\r\n按Enter键：暂停学习，已经开始播放的会播放完毕；\r\n按左方向键：快退\r\n按右方向键：快进',104,'https://www.allisterke.com/?p=106',0,'revision','',0),(107,1,'2017-10-20 21:44:04','2017-10-20 13:44:04','机器需要强化学习，人也需要强化学习。\n\n词汇来源于柯林斯五星词汇。\n学习资料来源于<a href=\"http://www.iciba.com\" target=\"_blank\">www.iciba.com</a>，由后台nginx代理转发，侵删。\ngithub项目：<a href=\"https://github.com/allisterke/iciba\" target=\"_blank\">https://github.com/allisterke/iciba</a>\n学习访问：<a href=\"https://www.allisterke.com/iciba/\" target=\"_blank\">https://www.allisterke.com/iciba/</a>\n\n由于本站启用https，但工具中引用的mp3是http链接，固sarafi应该是不能用的。支持firefox和chrome。\n\n用法：\n按Enter键：暂停学习，已经开始播放的会播放完毕；\n按左方向键：快退\n按右方向键：快进','写了个英语学习工具','','inherit','closed','closed','','104-revision-v1','','','2017-10-20 21:44:04','2017-10-20 13:44:04','机器需要强化学习，人也需要强化学习。\r\n\r\n词汇来源于柯林斯五星词汇。\r\n学习资料来源于<a href=\"http://www.iciba.com\" target=\"_blank\">www.iciba.com</a>，由后台nginx代理转发，侵删。\r\ngithub项目：<a href=\"https://github.com/allisterke/iciba\" target=\"_blank\">https://github.com/allisterke/iciba</a>\r\n学习访问：<a href=\"https://www.allisterke.com/iciba/\" target=\"_blank\">https://www.allisterke.com/iciba/</a>\r\n\r\n由于本站启用https，但工具中引用的mp3是http链接，固sarafi应该是不能用的。支持firefox和chrome。\r\n\r\n用法：\r\n按Enter键：暂停学习，已经开始播放的会播放完毕；\r\n按左方向键：快退\r\n按右方向键：快进',104,'https://www.allisterke.com/?p=107',0,'revision','',0),(108,1,'2017-10-22 16:25:05','2017-10-22 08:25:05','今天在对某个TreeMap对象边遍历边修改的过程中，出现了一些出人意料的bug。可用下面的代码示例：\n\n<pre><code class=\"Java\">    Map&lt;Integer, Integer&gt; map = new TreeMap&lt;&gt;();\n    map.put(22, 2);\n    map.put(23, 2);\n    map.put(24, 2);\n    map.put(79, 4);\n    map.put(101, 3);\n    map.put(102, 3);\n    map.put(103, 3);\n    int i = 0;\n    for(Iterator&lt;Map.Entry&lt;Integer, Integer&gt;&gt; it = map.entrySet().iterator(); it.hasNext();) {\n        Map.Entry&lt;Integer, Integer&gt; entry = it.next();\n        if(i ++ == map.size() / 2) {\n            System.out.println(entry.getKey() + \"\\t\" + entry.getValue());\n            it.remove();\n            System.out.println(entry.getKey() + \"\\t\" + entry.getValue());\n            break;\n        }\n    }\n</code></pre>\n\n输出是：\n\n<pre><code>79  4\n101 3\n</code></pre>\n\n本来以为已经用<code>entry</code>获取到<code>it</code>所在位置的节点的引用，调用<code>it.remove()</code>后，仍然可以用<code>entry</code>访问节点中的数据。但很明显，<code>entry</code>所指向的对象的内容被修改了。如果不注意，在<code>it.remove()</code>后使用了<code>entry.getKey()</code>或<code>entry.getValue()</code>，那么很可能便埋下了隐患。\n跟踪<code>Iterator#remove</code>的代码，最后跟踪到<code>java.util.TreeMap#deleteEntry</code>，看到如下代码\n\n<pre><code class=\"Java\">    // If strictly internal, copy successor\'s element to p and then make p\n    // point to successor.\n    if (p.left != null &amp;&amp; p.right != null) {\n        Entry&lt;K,V&gt; s = successor(p);\n        p.key = s.key;\n        p.value = s.value;\n        p = s;\n    } // p has 2 children\n</code></pre>\n\n于是恍然大悟，这不就是二叉搜索树删除节点的算法吗。先找到右子树最大的节点，即本节点的后继节点，用来替换本节点，然后递归删除。\n虽说理解起来不难，但并未看到在Java api doc里有这样的说明。为避免该问题，应在调用<code>it.remove()</code>之前，把<code>entry</code>中的<code>key</code>和<code>value</code>先取出来，保存到临时变量里。\n\nHashMap现在也使用树形结构来保存冲突列表，料想也有可能出现该问题。','二叉搜索树删除节点算法对Java TreeMap的影响','','publish','open','open','','%e4%ba%8c%e5%8f%89%e6%90%9c%e7%b4%a2%e6%a0%91%e5%88%a0%e9%99%a4%e8%8a%82%e7%82%b9%e7%ae%97%e6%b3%95%e5%af%b9java-treemap%e7%9a%84%e5%bd%b1%e5%93%8d','','','2017-10-22 16:25:05','2017-10-22 08:25:05','今天在对某个TreeMap对象边遍历边修改的过程中，出现了一些出人意料的bug。可用下面的代码示例：\r\n```Java\r\n    Map&lt;Integer, Integer&gt; map = new TreeMap&lt;&gt;();\r\n    map.put(22, 2);\r\n    map.put(23, 2);\r\n    map.put(24, 2);\r\n    map.put(79, 4);\r\n    map.put(101, 3);\r\n    map.put(102, 3);\r\n    map.put(103, 3);\r\n    int i = 0;\r\n    for(Iterator&lt;Map.Entry&lt;Integer, Integer&gt;&gt; it = map.entrySet().iterator(); it.hasNext();) {\r\n        Map.Entry&lt;Integer, Integer&gt; entry = it.next();\r\n        if(i ++ == map.size() / 2) {\r\n            System.out.println(entry.getKey() + &quot;\\t&quot; + entry.getValue());\r\n            it.remove();\r\n            System.out.println(entry.getKey() + &quot;\\t&quot; + entry.getValue());\r\n            break;\r\n        }\r\n    }\r\n```\r\n输出是：\r\n```\r\n79	4\r\n101	3\r\n```\r\n本来以为已经用```entry```获取到```it```所在位置的节点的引用，调用```it.remove()```后，仍然可以用```entry```访问节点中的数据。但很明显，```entry```所指向的对象的内容被修改了。如果不注意，在```it.remove()```后使用了```entry.getKey()```或```entry.getValue()```，那么很可能便埋下了隐患。\r\n跟踪```Iterator#remove```的代码，最后跟踪到```java.util.TreeMap#deleteEntry```，看到如下代码\r\n```Java\r\n    // If strictly internal, copy successor&#039;s element to p and then make p\r\n    // point to successor.\r\n    if (p.left != null &amp;&amp; p.right != null) {\r\n        Entry&lt;K,V&gt; s = successor(p);\r\n        p.key = s.key;\r\n        p.value = s.value;\r\n        p = s;\r\n    } // p has 2 children\r\n```\r\n于是恍然大悟，这不就是二叉搜索树删除节点的算法吗。先找到右子树最大的节点，即本节点的后继节点，用来替换本节点，然后递归删除。\r\n虽说理解起来不难，但并未看到在Java api doc里有这样的说明。为避免该问题，应在调用```it.remove()```之前，把```entry```中的```key```和```value```先取出来，保存到临时变量里。\r\n\r\nHashMap现在也使用树形结构来保存冲突列表，料想也有可能出现该问题。',0,'https://www.allisterke.com/?p=108',0,'post','',0),(109,1,'2017-10-22 16:18:33','2017-10-22 08:18:33','今天在对某个TreeMap对象边遍历边修改的过程中，出现了一些出人意料的bug。将出问题的代码一般化，可用下面的代码示例：\n\n<pre><code class=\"Java\">Map&lt;Integer, Integer&gt; map = new TreeMap&lt;&gt;();\nmap.put(22, 2); map.put(23, 2); map.put(24, 2);\nmap.put(79, 4);\nmap.put(101, 3); map.put(102, 3); map.put(103, 3);\nint i = 0;\nfor(Iterator&lt;Map.Entry&lt;Integer, Integer&gt;&gt; it = map.entrySet().iterator(); it.hasNext();) {\n    Map.Entry&lt;Integer, Integer&gt; entry = it.next();\n    if(i ++ == map.size() / 2) {\n        System.out.println(entry.getKey() + \"\\t\" + entry.getValue());\n        it.remove();\n        System.out.println(entry.getKey() + \"\\t\" + entry.getValue());\n        break;\n    }\n}\n</code></pre>\n\n输出是：\n\n<pre><code>79  4\n101 3\n</code></pre>\n\n本来以为已经用entry获取到iterator所在位置的节点的引用，调用iterator.remove后，仍然可以用entry访问节点中的数据。但很明显，entry所指向的对象的内容被修改了。如果不注意，在it.remove()后使用了entry.getKey()或entry.getValue()，那么很可能便埋下了隐患。\n跟踪Iterator#remove的代码，最后跟踪到java.util.TreeMap#deleteEntry，看到如下代码\n\n<pre><code class=\"Java\">    // If strictly internal, copy successor\'s element to p and then make p\n    // point to successor.\n    if (p.left != null &amp;&amp; p.right != null) {\n        Entry&lt;K,V&gt; s = successor(p);\n        p.key = s.key;\n        p.value = s.value;\n        p = s;\n    } // p has 2 children\n</code></pre>\n\n于是恍然大悟，这不就是二叉搜索树删除节点的算法吗。先找到右子树最大的节点，即本节点的后继节点，用来替换本节点，然后递归删除。\n虽说理解起来不难，但并未看到在Java api doc里有这样的说明。为避免不同Java虚拟机之间可能不同的实现，应在调用it.remove之前，把entry中的key和value先取出来，保存到临时变量里。','二叉搜索树删除节点算法对Java TreeMap的影响','','inherit','closed','closed','','108-revision-v1','','','2017-10-22 16:18:33','2017-10-22 08:18:33','今天在对某个TreeMap对象边遍历边修改的过程中，出现了一些出人意料的bug。将出问题的代码一般化，可用下面的代码示例：\r\n```Java\r\nMap&lt;Integer, Integer&gt; map = new TreeMap&lt;&gt;();\r\nmap.put(22, 2); map.put(23, 2); map.put(24, 2);\r\nmap.put(79, 4);\r\nmap.put(101, 3); map.put(102, 3); map.put(103, 3);\r\nint i = 0;\r\nfor(Iterator&lt;Map.Entry&lt;Integer, Integer&gt;&gt; it = map.entrySet().iterator(); it.hasNext();) {\r\n    Map.Entry&lt;Integer, Integer&gt; entry = it.next();\r\n    if(i ++ == map.size() / 2) {\r\n        System.out.println(entry.getKey() + &quot;\\t&quot; + entry.getValue());\r\n        it.remove();\r\n        System.out.println(entry.getKey() + &quot;\\t&quot; + entry.getValue());\r\n        break;\r\n    }\r\n}\r\n```\r\n输出是：\r\n```\r\n79	4\r\n101	3\r\n```\r\n本来以为已经用entry获取到iterator所在位置的节点的引用，调用iterator.remove后，仍然可以用entry访问节点中的数据。但很明显，entry所指向的对象的内容被修改了。如果不注意，在it.remove()后使用了entry.getKey()或entry.getValue()，那么很可能便埋下了隐患。\r\n跟踪Iterator#remove的代码，最后跟踪到java.util.TreeMap#deleteEntry，看到如下代码\r\n```Java\r\n    // If strictly internal, copy successor&#039;s element to p and then make p\r\n    // point to successor.\r\n    if (p.left != null &amp;&amp; p.right != null) {\r\n        Entry&lt;K,V&gt; s = successor(p);\r\n        p.key = s.key;\r\n        p.value = s.value;\r\n        p = s;\r\n    } // p has 2 children\r\n```\r\n于是恍然大悟，这不就是二叉搜索树删除节点的算法吗。先找到右子树最大的节点，即本节点的后继节点，用来替换本节点，然后递归删除。\r\n虽说理解起来不难，但并未看到在Java api doc里有这样的说明。为避免不同Java虚拟机之间可能不同的实现，应在调用it.remove之前，把entry中的key和value先取出来，保存到临时变量里。',108,'https://www.allisterke.com/?p=109',0,'revision','',0),(110,1,'2017-10-22 16:20:19','2017-10-22 08:20:19','今天在对某个TreeMap对象边遍历边修改的过程中，出现了一些出人意料的bug。将出问题的代码一般化，可用下面的代码示例：\n\n<pre><code class=\"Java\">    Map&lt;Integer, Integer&gt; map = new TreeMap&lt;&gt;();\n    map.put(22, 2);\n    map.put(23, 2);\n    map.put(24, 2);\n    map.put(79, 4);\n    map.put(101, 3);\n    map.put(102, 3);\n    map.put(103, 3);\n    int i = 0;\n    for(Iterator&lt;Map.Entry&lt;Integer, Integer&gt;&gt; it = map.entrySet().iterator(); it.hasNext();) {\n        Map.Entry&lt;Integer, Integer&gt; entry = it.next();\n        if(i ++ == map.size() / 2) {\n            System.out.println(entry.getKey() + \"\\t\" + entry.getValue());\n            it.remove();\n            System.out.println(entry.getKey() + \"\\t\" + entry.getValue());\n            break;\n        }\n    }\n</code></pre>\n\n输出是：\n\n<pre><code>79  4\n101 3\n</code></pre>\n\n本来以为已经用entry获取到iterator所在位置的节点的引用，调用iterator.remove后，仍然可以用entry访问节点中的数据。但很明显，entry所指向的对象的内容被修改了。如果不注意，在it.remove()后使用了entry.getKey()或entry.getValue()，那么很可能便埋下了隐患。\n跟踪Iterator#remove的代码，最后跟踪到java.util.TreeMap#deleteEntry，看到如下代码\n\n<pre><code class=\"Java\">    // If strictly internal, copy successor\'s element to p and then make p\n    // point to successor.\n    if (p.left != null &amp;&amp; p.right != null) {\n        Entry&lt;K,V&gt; s = successor(p);\n        p.key = s.key;\n        p.value = s.value;\n        p = s;\n    } // p has 2 children\n</code></pre>\n\n于是恍然大悟，这不就是二叉搜索树删除节点的算法吗。先找到右子树最大的节点，即本节点的后继节点，用来替换本节点，然后递归删除。\n虽说理解起来不难，但并未看到在Java api doc里有这样的说明。为避免不同Java虚拟机之间可能不同的实现，应在调用it.remove之前，把entry中的key和value先取出来，保存到临时变量里。\n\nHashMap现在也使用树形结构来保存冲突列表，因此也有可能出现该问题。','二叉搜索树删除节点算法对Java TreeMap的影响','','inherit','closed','closed','','108-revision-v1','','','2017-10-22 16:20:19','2017-10-22 08:20:19','今天在对某个TreeMap对象边遍历边修改的过程中，出现了一些出人意料的bug。将出问题的代码一般化，可用下面的代码示例：\r\n```Java\r\n    Map&lt;Integer, Integer&gt; map = new TreeMap&lt;&gt;();\r\n    map.put(22, 2);\r\n    map.put(23, 2);\r\n    map.put(24, 2);\r\n    map.put(79, 4);\r\n    map.put(101, 3);\r\n    map.put(102, 3);\r\n    map.put(103, 3);\r\n    int i = 0;\r\n    for(Iterator&lt;Map.Entry&lt;Integer, Integer&gt;&gt; it = map.entrySet().iterator(); it.hasNext();) {\r\n        Map.Entry&lt;Integer, Integer&gt; entry = it.next();\r\n        if(i ++ == map.size() / 2) {\r\n            System.out.println(entry.getKey() + &quot;\\t&quot; + entry.getValue());\r\n            it.remove();\r\n            System.out.println(entry.getKey() + &quot;\\t&quot; + entry.getValue());\r\n            break;\r\n        }\r\n    }\r\n```\r\n输出是：\r\n```\r\n79	4\r\n101	3\r\n```\r\n本来以为已经用entry获取到iterator所在位置的节点的引用，调用iterator.remove后，仍然可以用entry访问节点中的数据。但很明显，entry所指向的对象的内容被修改了。如果不注意，在it.remove()后使用了entry.getKey()或entry.getValue()，那么很可能便埋下了隐患。\r\n跟踪Iterator#remove的代码，最后跟踪到java.util.TreeMap#deleteEntry，看到如下代码\r\n```Java\r\n    // If strictly internal, copy successor&#039;s element to p and then make p\r\n    // point to successor.\r\n    if (p.left != null &amp;&amp; p.right != null) {\r\n        Entry&lt;K,V&gt; s = successor(p);\r\n        p.key = s.key;\r\n        p.value = s.value;\r\n        p = s;\r\n    } // p has 2 children\r\n```\r\n于是恍然大悟，这不就是二叉搜索树删除节点的算法吗。先找到右子树最大的节点，即本节点的后继节点，用来替换本节点，然后递归删除。\r\n虽说理解起来不难，但并未看到在Java api doc里有这样的说明。为避免不同Java虚拟机之间可能不同的实现，应在调用it.remove之前，把entry中的key和value先取出来，保存到临时变量里。\r\n\r\nHashMap现在也使用树形结构来保存冲突列表，因此也有可能出现该问题。',108,'https://www.allisterke.com/?p=110',0,'revision','',0),(111,1,'2017-10-22 16:22:39','2017-10-22 08:22:39','今天在对某个TreeMap对象边遍历边修改的过程中，出现了一些出人意料的bug。可用下面的代码示例：\n\n<pre><code class=\"Java\">    Map&lt;Integer, Integer&gt; map = new TreeMap&lt;&gt;();\n    map.put(22, 2);\n    map.put(23, 2);\n    map.put(24, 2);\n    map.put(79, 4);\n    map.put(101, 3);\n    map.put(102, 3);\n    map.put(103, 3);\n    int i = 0;\n    for(Iterator&lt;Map.Entry&lt;Integer, Integer&gt;&gt; it = map.entrySet().iterator(); it.hasNext();) {\n        Map.Entry&lt;Integer, Integer&gt; entry = it.next();\n        if(i ++ == map.size() / 2) {\n            System.out.println(entry.getKey() + \"\\t\" + entry.getValue());\n            it.remove();\n            System.out.println(entry.getKey() + \"\\t\" + entry.getValue());\n            break;\n        }\n    }\n</code></pre>\n\n输出是：\n\n<pre><code>79  4\n101 3\n</code></pre>\n\n本来以为已经用<code>entry</code>获取到<code>it</code>所在位置的节点的引用，调用<code>it.remove()</code>后，仍然可以用<code>entry</code>访问节点中的数据。但很明显，<code>entry</code>所指向的对象的内容被修改了。如果不注意，在<code>it.remove()</code>后使用了<code>entry.getKey()</code>或<code>entry.getValue()</code>，那么很可能便埋下了隐患。\n跟踪<code>Iterator#remove</code>的代码，最后跟踪到<code>java.util.TreeMap#deleteEntry</code>，看到如下代码\n\n<pre><code class=\"Java\">    // If strictly internal, copy successor\'s element to p and then make p\n    // point to successor.\n    if (p.left != null &amp;&amp; p.right != null) {\n        Entry&lt;K,V&gt; s = successor(p);\n        p.key = s.key;\n        p.value = s.value;\n        p = s;\n    } // p has 2 children\n</code></pre>\n\n于是恍然大悟，这不就是二叉搜索树删除节点的算法吗。先找到右子树最大的节点，即本节点的后继节点，用来替换本节点，然后递归删除。\n虽说理解起来不难，但并未看到在Java api doc里有这样的说明。为避免不同Java虚拟机之间可能不同的实现，应在调用<code>it.remove()</code>之前，把<code>entry</code>中的<code>key</code>和<code>value</code>先取出来，保存到临时变量里。\n\nHashMap现在也使用树形结构来保存冲突列表，因此也有可能出现该问题。','二叉搜索树删除节点算法对Java TreeMap的影响','','inherit','closed','closed','','108-revision-v1','','','2017-10-22 16:22:39','2017-10-22 08:22:39','今天在对某个TreeMap对象边遍历边修改的过程中，出现了一些出人意料的bug。可用下面的代码示例：\r\n```Java\r\n    Map&lt;Integer, Integer&gt; map = new TreeMap&lt;&gt;();\r\n    map.put(22, 2);\r\n    map.put(23, 2);\r\n    map.put(24, 2);\r\n    map.put(79, 4);\r\n    map.put(101, 3);\r\n    map.put(102, 3);\r\n    map.put(103, 3);\r\n    int i = 0;\r\n    for(Iterator&lt;Map.Entry&lt;Integer, Integer&gt;&gt; it = map.entrySet().iterator(); it.hasNext();) {\r\n        Map.Entry&lt;Integer, Integer&gt; entry = it.next();\r\n        if(i ++ == map.size() / 2) {\r\n            System.out.println(entry.getKey() + &quot;\\t&quot; + entry.getValue());\r\n            it.remove();\r\n            System.out.println(entry.getKey() + &quot;\\t&quot; + entry.getValue());\r\n            break;\r\n        }\r\n    }\r\n```\r\n输出是：\r\n```\r\n79	4\r\n101	3\r\n```\r\n本来以为已经用```entry```获取到```it```所在位置的节点的引用，调用```it.remove()```后，仍然可以用```entry```访问节点中的数据。但很明显，```entry```所指向的对象的内容被修改了。如果不注意，在```it.remove()```后使用了```entry.getKey()```或```entry.getValue()```，那么很可能便埋下了隐患。\r\n跟踪```Iterator#remove```的代码，最后跟踪到```java.util.TreeMap#deleteEntry```，看到如下代码\r\n```Java\r\n    // If strictly internal, copy successor&#039;s element to p and then make p\r\n    // point to successor.\r\n    if (p.left != null &amp;&amp; p.right != null) {\r\n        Entry&lt;K,V&gt; s = successor(p);\r\n        p.key = s.key;\r\n        p.value = s.value;\r\n        p = s;\r\n    } // p has 2 children\r\n```\r\n于是恍然大悟，这不就是二叉搜索树删除节点的算法吗。先找到右子树最大的节点，即本节点的后继节点，用来替换本节点，然后递归删除。\r\n虽说理解起来不难，但并未看到在Java api doc里有这样的说明。为避免不同Java虚拟机之间可能不同的实现，应在调用```it.remove()```之前，把```entry```中的```key```和```value```先取出来，保存到临时变量里。\r\n\r\nHashMap现在也使用树形结构来保存冲突列表，因此也有可能出现该问题。',108,'https://www.allisterke.com/?p=111',0,'revision','',0),(112,1,'2017-10-22 16:25:05','2017-10-22 08:25:05','今天在对某个TreeMap对象边遍历边修改的过程中，出现了一些出人意料的bug。可用下面的代码示例：\n\n<pre><code class=\"Java\">    Map&lt;Integer, Integer&gt; map = new TreeMap&lt;&gt;();\n    map.put(22, 2);\n    map.put(23, 2);\n    map.put(24, 2);\n    map.put(79, 4);\n    map.put(101, 3);\n    map.put(102, 3);\n    map.put(103, 3);\n    int i = 0;\n    for(Iterator&lt;Map.Entry&lt;Integer, Integer&gt;&gt; it = map.entrySet().iterator(); it.hasNext();) {\n        Map.Entry&lt;Integer, Integer&gt; entry = it.next();\n        if(i ++ == map.size() / 2) {\n            System.out.println(entry.getKey() + \"\\t\" + entry.getValue());\n            it.remove();\n            System.out.println(entry.getKey() + \"\\t\" + entry.getValue());\n            break;\n        }\n    }\n</code></pre>\n\n输出是：\n\n<pre><code>79  4\n101 3\n</code></pre>\n\n本来以为已经用<code>entry</code>获取到<code>it</code>所在位置的节点的引用，调用<code>it.remove()</code>后，仍然可以用<code>entry</code>访问节点中的数据。但很明显，<code>entry</code>所指向的对象的内容被修改了。如果不注意，在<code>it.remove()</code>后使用了<code>entry.getKey()</code>或<code>entry.getValue()</code>，那么很可能便埋下了隐患。\n跟踪<code>Iterator#remove</code>的代码，最后跟踪到<code>java.util.TreeMap#deleteEntry</code>，看到如下代码\n\n<pre><code class=\"Java\">    // If strictly internal, copy successor\'s element to p and then make p\n    // point to successor.\n    if (p.left != null &amp;&amp; p.right != null) {\n        Entry&lt;K,V&gt; s = successor(p);\n        p.key = s.key;\n        p.value = s.value;\n        p = s;\n    } // p has 2 children\n</code></pre>\n\n于是恍然大悟，这不就是二叉搜索树删除节点的算法吗。先找到右子树最大的节点，即本节点的后继节点，用来替换本节点，然后递归删除。\n虽说理解起来不难，但并未看到在Java api doc里有这样的说明。为避免该问题，应在调用<code>it.remove()</code>之前，把<code>entry</code>中的<code>key</code>和<code>value</code>先取出来，保存到临时变量里。\n\nHashMap现在也使用树形结构来保存冲突列表，料想也有可能出现该问题。','二叉搜索树删除节点算法对Java TreeMap的影响','','inherit','closed','closed','','108-revision-v1','','','2017-10-22 16:25:05','2017-10-22 08:25:05','今天在对某个TreeMap对象边遍历边修改的过程中，出现了一些出人意料的bug。可用下面的代码示例：\r\n```Java\r\n    Map&lt;Integer, Integer&gt; map = new TreeMap&lt;&gt;();\r\n    map.put(22, 2);\r\n    map.put(23, 2);\r\n    map.put(24, 2);\r\n    map.put(79, 4);\r\n    map.put(101, 3);\r\n    map.put(102, 3);\r\n    map.put(103, 3);\r\n    int i = 0;\r\n    for(Iterator&lt;Map.Entry&lt;Integer, Integer&gt;&gt; it = map.entrySet().iterator(); it.hasNext();) {\r\n        Map.Entry&lt;Integer, Integer&gt; entry = it.next();\r\n        if(i ++ == map.size() / 2) {\r\n            System.out.println(entry.getKey() + &quot;\\t&quot; + entry.getValue());\r\n            it.remove();\r\n            System.out.println(entry.getKey() + &quot;\\t&quot; + entry.getValue());\r\n            break;\r\n        }\r\n    }\r\n```\r\n输出是：\r\n```\r\n79	4\r\n101	3\r\n```\r\n本来以为已经用```entry```获取到```it```所在位置的节点的引用，调用```it.remove()```后，仍然可以用```entry```访问节点中的数据。但很明显，```entry```所指向的对象的内容被修改了。如果不注意，在```it.remove()```后使用了```entry.getKey()```或```entry.getValue()```，那么很可能便埋下了隐患。\r\n跟踪```Iterator#remove```的代码，最后跟踪到```java.util.TreeMap#deleteEntry```，看到如下代码\r\n```Java\r\n    // If strictly internal, copy successor&#039;s element to p and then make p\r\n    // point to successor.\r\n    if (p.left != null &amp;&amp; p.right != null) {\r\n        Entry&lt;K,V&gt; s = successor(p);\r\n        p.key = s.key;\r\n        p.value = s.value;\r\n        p = s;\r\n    } // p has 2 children\r\n```\r\n于是恍然大悟，这不就是二叉搜索树删除节点的算法吗。先找到右子树最大的节点，即本节点的后继节点，用来替换本节点，然后递归删除。\r\n虽说理解起来不难，但并未看到在Java api doc里有这样的说明。为避免该问题，应在调用```it.remove()```之前，把```entry```中的```key```和```value```先取出来，保存到临时变量里。\r\n\r\nHashMap现在也使用树形结构来保存冲突列表，料想也有可能出现该问题。',108,'https://www.allisterke.com/?p=112',0,'revision','',0),(114,1,'2017-11-20 11:00:25','2017-11-20 03:00:25','训练神经网络来生成图片、音乐、诗词等，早已不是什么新鲜事。但对初学者来说却并非易事。就如同经典算法里的二叉树、哈希表等各种数据结构，虽然出现几十年了，初学者仍然要耗费大量时间才能熟练掌握。我训练GAN学习MNIST数据集来写数字，从国庆长假回来开始，足足经历了一个多月，最近终于能写出似模似样的数字来了。期间看了好多论文，查了无数次谷歌，看了好多youtube视频。可见入门不易。此处总结一下最终能训练出来所使用的方法。\n\n<ol>\n<li>先不要急着实现GAN。先实现一个classifier，来识别MNIST图片中的数字。好的classifer是好的discriminator的基础，因为只要把最后一层的大小从10（0-9的数字）改为2（是与非）就可以了。classifer当然是用卷积神经网络比较合适。卷积神经网络的形状调整也有很多trick，我只是略通皮毛。比如，第一层一般都只放大channel，长宽不变。后面则是一边放大channel，一边缩小长宽。中间是用relu还是elu激活可能不是很有影响。我不喜欢pooling，所以用大于1的stride来代替，到底哪个更好也没试过。</p></li>\n<li><p>generator的实现，我先用三层全连接来映射。generator的输入是100维的均匀分布采样，我认为直接映射到MNIST数据集的分布会比较困难，所以先映射到一个latent code。这个latent code的长度也是100维，再用反卷积网络映射回一张数字图片。反卷积是卷积反过来做。我先将latent code改为1x1x100的三维向量，代表有100个channel的1x1大小的图片，然后放大长宽，缩小channel。中间的激活则试过好多函数，如sin, sigmoid, tanh，实验表明tanh效果最好。</p></li>\n<li><p>generator的输入可以从[0, 1)或[-1, 1)采样。我一开始用[0, 1)，效果不好，后来用了[-1, 1)，感觉也没好到哪去。直到后来用了batch_normalization。</p></li>\n<li><p>其实我用的是batch_normalization的简化版。tanh激活有个问题是，结果向0集中，tanh激活几次后，几乎就都是0了。于是我在tanh激活后乘了个3，效果改善了一些。后来看到batch_normalization的方法，我在想，何不把3变成变量，让模型自己学呢。后来又加上了偏移量，于是激活函数变成了(tanh(x) - miu) * scale，miu和scale都是可训练的变量。</p></li>\n<li><p>D和G的强弱关系。之前我看到论文都认为要让G多训练几遍。我觉得多训练几遍太simple，于是给G更大的学习率。但在youtube上看到Goodfellow说，D应该更强大一些才行。我觉得也是，否则G生成出来的都不知道是什么,所以反过来给D更大的学习率。但D太强大可能会过饱和，很早就不会动了。Goodfellow又有高招，把D所要拟合的正确概率设为0.9，以表示D对辨识图片不是那么确定。实验的结果表明，效果的确好很多。</p></li>\n</ol>\n\n<p>Github代码：https://github.com/allisterke/tensorflow-lab/blob/master/generative-model/dcgan-mnist.py\n从https://github.com/carpedm20/DCGAN-tensorflow参考了不少实践。','学习MNIST写数字','','publish','open','open','','%e5%ad%a6%e4%b9%a0mnist%e5%86%99%e6%95%b0%e5%ad%97','','','2017-11-20 11:00:25','2017-11-20 03:00:25','训练神经网络来生成图片、音乐、诗词等，早已不是什么新鲜事。但对初学者来说却并非易事。就如同经典算法里的二叉树、哈希表等各种数据结构，虽然出现几十年了，初学者仍然要耗费大量时间才能熟练掌握。我训练GAN学习MNIST数据集来写数字，从国庆长假回来开始，足足经历了一个多月，最近终于能写出似模似样的数字来了。期间看了好多论文，查了无数次谷歌，看了好多youtube视频。可见入门不易。此处总结一下最终能训练出来所使用的方法。\r\n\r\n1. 先不要急着实现GAN。先实现一个classifier，来识别MNIST图片中的数字。好的classifer是好的discriminator的基础，因为只要把最后一层的大小从10（0-9的数字）改为2（是与非）就可以了。classifer当然是用卷积神经网络比较合适。卷积神经网络的形状调整也有很多trick，我只是略通皮毛。比如，第一层一般都只放大channel，长宽不变。后面则是一边放大channel，一边缩小长宽。中间是用relu还是elu激活可能不是很有影响。我不喜欢pooling，所以用大于1的stride来代替，到底哪个更好也没试过。\r\n\r\n2. generator的实现，我先用三层全连接来映射。generator的输入是100维的均匀分布采样，我认为直接映射到MNIST数据集的分布会比较困难，所以先映射到一个latent code。这个latent code的长度也是100维，再用反卷积网络映射回一张数字图片。反卷积是卷积反过来做。我先将latent code改为1x1x100的三维向量，代表有100个channel的1x1大小的图片，然后放大长宽，缩小channel。中间的激活则试过好多函数，如sin, sigmoid, tanh，实验表明tanh效果最好。\r\n\r\n3. generator的输入可以从[0, 1)或[-1, 1)采样。我一开始用[0, 1)，效果不好，后来用了[-1, 1)，感觉也没好到哪去。直到后来用了batch_normalization。\r\n\r\n4. 其实我用的是batch_normalization的简化版。tanh激活有个问题是，结果向0集中，tanh激活几次后，几乎就都是0了。于是我在tanh激活后乘了个3，效果改善了一些。后来看到batch_normalization的方法，我在想，何不把3变成变量，让模型自己学呢。后来又加上了偏移量，于是激活函数变成了(tanh(x) - miu) * scale，miu和scale都是可训练的变量。\r\n\r\n5. D和G的强弱关系。之前我看到论文都认为要让G多训练几遍。我觉得多训练几遍太simple，于是给G更大的学习率。但在youtube上看到Goodfellow说，D应该更强大一些才行。我觉得也是，否则G生成出来的都不知道是什么,所以反过来给D更大的学习率。但D太强大可能会过饱和，很早就不会动了。Goodfellow又有高招，把D所要拟合的正确概率设为0.9，以表示D对辨识图片不是那么确定。实验的结果表明，效果的确好很多。\r\n\r\nGithub代码：https://github.com/allisterke/tensorflow-lab/blob/master/generative-model/dcgan-mnist.py\r\n从https://github.com/carpedm20/DCGAN-tensorflow参考了不少实践。',0,'https://www.allisterke.com/?p=114',0,'post','',0),(115,1,'2017-11-20 10:52:36','2017-11-20 02:52:36','训练神经网络来生成图片、音乐、诗词等，早已不是什么新鲜事。但对初学者来说却并非易事。就如同经典算法里的二叉树、哈希表等各种数据结构，虽然出现几十年了，初学者仍然要耗费大量时间才能熟练掌握。我训练GAN学习MNIST数据集来写数字，从国庆长假回来开始，足足经历了一个多月，最近终于能写出似模似样的数字来了。期间看了好多论文，查了无数次谷歌，看了好多youtube视频。可见入门不易。此处总结一下最终能训练出来所使用的方法。\n* 先不要急着实现GAN。先实现一个classifier，来识别MNIST图片中的数字。好的classifer是好的discriminator的基础，因为只要把最后一层的大小从10（0-9的数字）改为2（是与非）就可以了。classifer当然是用卷积神经网络比较合适。卷积神经网络的形状调整也有很多trick，我只是略通皮毛。比如，第一层一般都只放大channel，长宽不变。后面则是一边放大channel，一边缩小长宽。中间是用relu还是elu激活可能不是很有影响。我不喜欢pooling，所以用大于1的stride来代替，到底哪个更好也没试过。\n* generator的实现，我先用三层全连接来映射。generator的输入是100维的均匀分布采样，我认为直接映射到MNIST数据集的分布会比较困难，所以先映射到一个latent code。这个latent code的长度也是100维，再用反卷积网络映射回一张数字图片。反卷积是卷积反过来做。我先将latent code改为1x1x100的三维向量，代表有100个channel的1x1大小的图片，然后放大长宽，缩小channel。中间的激活则试过好多函数，如sin, sigmoid, tanh，实验表明tanh效果最好。\n* generator的输入可以从[0, 1)或[-1, 1)采样。我一开始用[0, 1)，效果不好，后来用了[-1, 1)，感觉也没好到哪去。直到后来用了batch_normalization。\n* 其实我用的是batch_normalization的简化版。tanh激活有个问题是，结果向0集中，tanh激活几次后，几乎就都是0了。于是我在tanh激活后乘了个3，效果改善了一些。后来看到batch_normalization的方法，我在想，何不把3变成变量，让模型自己学呢。后来又加上了偏移量，于是激活函数变成了(tanh(x) - miu) * scale，miu和scale都是可训练的变量。\n* D和G的强弱关系。之前我看到论文都认为要让G多训练几遍。我觉得多训练几遍太simple，于是给G更大的学习率。但在youtube上看到Goodfellow说，D应该更强大一些才行。我觉得也是，否则G生成出来的都不知道是什么。但D太强大可能会过饱和，很早就不会动了。Goodfellow又有高招，把D所要拟合的正确概率设为0.9，以表示D对辨识图片不是那么确定。实验的结果表明，效果的确好很多。\nGithub代码：https://github.com/allisterke/tensorflow-lab/blob/master/generative-model/dcgan-mnist.py\n从https://github.com/carpedm20/DCGAN-tensorflow参考了不少实践。','学习MNIST写数字','','inherit','closed','closed','','114-revision-v1','','','2017-11-20 10:52:36','2017-11-20 02:52:36','训练神经网络来生成图片、音乐、诗词等，早已不是什么新鲜事。但对初学者来说却并非易事。就如同经典算法里的二叉树、哈希表等各种数据结构，虽然出现几十年了，初学者仍然要耗费大量时间才能熟练掌握。我训练GAN学习MNIST数据集来写数字，从国庆长假回来开始，足足经历了一个多月，最近终于能写出似模似样的数字来了。期间看了好多论文，查了无数次谷歌，看了好多youtube视频。可见入门不易。此处总结一下最终能训练出来所使用的方法。\r\n* 先不要急着实现GAN。先实现一个classifier，来识别MNIST图片中的数字。好的classifer是好的discriminator的基础，因为只要把最后一层的大小从10（0-9的数字）改为2（是与非）就可以了。classifer当然是用卷积神经网络比较合适。卷积神经网络的形状调整也有很多trick，我只是略通皮毛。比如，第一层一般都只放大channel，长宽不变。后面则是一边放大channel，一边缩小长宽。中间是用relu还是elu激活可能不是很有影响。我不喜欢pooling，所以用大于1的stride来代替，到底哪个更好也没试过。\r\n* generator的实现，我先用三层全连接来映射。generator的输入是100维的均匀分布采样，我认为直接映射到MNIST数据集的分布会比较困难，所以先映射到一个latent code。这个latent code的长度也是100维，再用反卷积网络映射回一张数字图片。反卷积是卷积反过来做。我先将latent code改为1x1x100的三维向量，代表有100个channel的1x1大小的图片，然后放大长宽，缩小channel。中间的激活则试过好多函数，如sin, sigmoid, tanh，实验表明tanh效果最好。\r\n* generator的输入可以从[0, 1)或[-1, 1)采样。我一开始用[0, 1)，效果不好，后来用了[-1, 1)，感觉也没好到哪去。直到后来用了batch_normalization。\r\n* 其实我用的是batch_normalization的简化版。tanh激活有个问题是，结果向0集中，tanh激活几次后，几乎就都是0了。于是我在tanh激活后乘了个3，效果改善了一些。后来看到batch_normalization的方法，我在想，何不把3变成变量，让模型自己学呢。后来又加上了偏移量，于是激活函数变成了(tanh(x) - miu) * scale，miu和scale都是可训练的变量。\r\n* D和G的强弱关系。之前我看到论文都认为要让G多训练几遍。我觉得多训练几遍太simple，于是给G更大的学习率。但在youtube上看到Goodfellow说，D应该更强大一些才行。我觉得也是，否则G生成出来的都不知道是什么。但D太强大可能会过饱和，很早就不会动了。Goodfellow又有高招，把D所要拟合的正确概率设为0.9，以表示D对辨识图片不是那么确定。实验的结果表明，效果的确好很多。\r\nGithub代码：https://github.com/allisterke/tensorflow-lab/blob/master/generative-model/dcgan-mnist.py\r\n从https://github.com/carpedm20/DCGAN-tensorflow参考了不少实践。',114,'https://www.allisterke.com/?p=115',0,'revision','',0),(116,1,'2017-11-20 10:55:17','2017-11-20 02:55:17','训练神经网络来生成图片、音乐、诗词等，早已不是什么新鲜事。但对初学者来说却并非易事。就如同经典算法里的二叉树、哈希表等各种数据结构，虽然出现几十年了，初学者仍然要耗费大量时间才能熟练掌握。我训练GAN学习MNIST数据集来写数字，从国庆长假回来开始，足足经历了一个多月，最近终于能写出似模似样的数字来了。期间看了好多论文，查了无数次谷歌，看了好多youtube视频。可见入门不易。此处总结一下最终能训练出来所使用的方法。\n1. 先不要急着实现GAN。先实现一个classifier，来识别MNIST图片中的数字。好的classifer是好的discriminator的基础，因为只要把最后一层的大小从10（0-9的数字）改为2（是与非）就可以了。classifer当然是用卷积神经网络比较合适。卷积神经网络的形状调整也有很多trick，我只是略通皮毛。比如，第一层一般都只放大channel，长宽不变。后面则是一边放大channel，一边缩小长宽。中间是用relu还是elu激活可能不是很有影响。我不喜欢pooling，所以用大于1的stride来代替，到底哪个更好也没试过。\n2. generator的实现，我先用三层全连接来映射。generator的输入是100维的均匀分布采样，我认为直接映射到MNIST数据集的分布会比较困难，所以先映射到一个latent code。这个latent code的长度也是100维，再用反卷积网络映射回一张数字图片。反卷积是卷积反过来做。我先将latent code改为1x1x100的三维向量，代表有100个channel的1x1大小的图片，然后放大长宽，缩小channel。中间的激活则试过好多函数，如sin, sigmoid, tanh，实验表明tanh效果最好。\n3. generator的输入可以从[0, 1)或[-1, 1)采样。我一开始用[0, 1)，效果不好，后来用了[-1, 1)，感觉也没好到哪去。直到后来用了batch_normalization。\n4. 其实我用的是batch_normalization的简化版。tanh激活有个问题是，结果向0集中，tanh激活几次后，几乎就都是0了。于是我在tanh激活后乘了个3，效果改善了一些。后来看到batch_normalization的方法，我在想，何不把3变成变量，让模型自己学呢。后来又加上了偏移量，于是激活函数变成了(tanh(x) - miu) * scale，miu和scale都是可训练的变量。\n5. D和G的强弱关系。之前我看到论文都认为要让G多训练几遍。我觉得多训练几遍太simple，于是给G更大的学习率。但在youtube上看到Goodfellow说，D应该更强大一些才行。我觉得也是，否则G生成出来的都不知道是什么。但D太强大可能会过饱和，很早就不会动了。Goodfellow又有高招，把D所要拟合的正确概率设为0.9，以表示D对辨识图片不是那么确定。实验的结果表明，效果的确好很多。\nGithub代码：https://github.com/allisterke/tensorflow-lab/blob/master/generative-model/dcgan-mnist.py\n从https://github.com/carpedm20/DCGAN-tensorflow参考了不少实践。','学习MNIST写数字','','inherit','closed','closed','','114-revision-v1','','','2017-11-20 10:55:17','2017-11-20 02:55:17','训练神经网络来生成图片、音乐、诗词等，早已不是什么新鲜事。但对初学者来说却并非易事。就如同经典算法里的二叉树、哈希表等各种数据结构，虽然出现几十年了，初学者仍然要耗费大量时间才能熟练掌握。我训练GAN学习MNIST数据集来写数字，从国庆长假回来开始，足足经历了一个多月，最近终于能写出似模似样的数字来了。期间看了好多论文，查了无数次谷歌，看了好多youtube视频。可见入门不易。此处总结一下最终能训练出来所使用的方法。\r\n1. 先不要急着实现GAN。先实现一个classifier，来识别MNIST图片中的数字。好的classifer是好的discriminator的基础，因为只要把最后一层的大小从10（0-9的数字）改为2（是与非）就可以了。classifer当然是用卷积神经网络比较合适。卷积神经网络的形状调整也有很多trick，我只是略通皮毛。比如，第一层一般都只放大channel，长宽不变。后面则是一边放大channel，一边缩小长宽。中间是用relu还是elu激活可能不是很有影响。我不喜欢pooling，所以用大于1的stride来代替，到底哪个更好也没试过。\r\n2. generator的实现，我先用三层全连接来映射。generator的输入是100维的均匀分布采样，我认为直接映射到MNIST数据集的分布会比较困难，所以先映射到一个latent code。这个latent code的长度也是100维，再用反卷积网络映射回一张数字图片。反卷积是卷积反过来做。我先将latent code改为1x1x100的三维向量，代表有100个channel的1x1大小的图片，然后放大长宽，缩小channel。中间的激活则试过好多函数，如sin, sigmoid, tanh，实验表明tanh效果最好。\r\n3. generator的输入可以从[0, 1)或[-1, 1)采样。我一开始用[0, 1)，效果不好，后来用了[-1, 1)，感觉也没好到哪去。直到后来用了batch_normalization。\r\n4. 其实我用的是batch_normalization的简化版。tanh激活有个问题是，结果向0集中，tanh激活几次后，几乎就都是0了。于是我在tanh激活后乘了个3，效果改善了一些。后来看到batch_normalization的方法，我在想，何不把3变成变量，让模型自己学呢。后来又加上了偏移量，于是激活函数变成了(tanh(x) - miu) * scale，miu和scale都是可训练的变量。\r\n5. D和G的强弱关系。之前我看到论文都认为要让G多训练几遍。我觉得多训练几遍太simple，于是给G更大的学习率。但在youtube上看到Goodfellow说，D应该更强大一些才行。我觉得也是，否则G生成出来的都不知道是什么。但D太强大可能会过饱和，很早就不会动了。Goodfellow又有高招，把D所要拟合的正确概率设为0.9，以表示D对辨识图片不是那么确定。实验的结果表明，效果的确好很多。\r\nGithub代码：https://github.com/allisterke/tensorflow-lab/blob/master/generative-model/dcgan-mnist.py\r\n从https://github.com/carpedm20/DCGAN-tensorflow参考了不少实践。',114,'https://www.allisterke.com/?p=116',0,'revision','',0),(117,1,'2017-11-20 10:56:35','2017-11-20 02:56:35','训练神经网络来生成图片、音乐、诗词等，早已不是什么新鲜事。但对初学者来说却并非易事。就如同经典算法里的二叉树、哈希表等各种数据结构，虽然出现几十年了，初学者仍然要耗费大量时间才能熟练掌握。我训练GAN学习MNIST数据集来写数字，从国庆长假回来开始，足足经历了一个多月，最近终于能写出似模似样的数字来了。期间看了好多论文，查了无数次谷歌，看了好多youtube视频。可见入门不易。此处总结一下最终能训练出来所使用的方法。\n\n<h1>先不要急着实现GAN。先实现一个classifier，来识别MNIST图片中的数字。好的classifer是好的discriminator的基础，因为只要把最后一层的大小从10（0-9的数字）改为2（是与非）就可以了。classifer当然是用卷积神经网络比较合适。卷积神经网络的形状调整也有很多trick，我只是略通皮毛。比如，第一层一般都只放大channel，长宽不变。后面则是一边放大channel，一边缩小长宽。中间是用relu还是elu激活可能不是很有影响。我不喜欢pooling，所以用大于1的stride来代替，到底哪个更好也没试过。</h1>\n\n<ol>\n<li>generator的实现，我先用三层全连接来映射。generator的输入是100维的均匀分布采样，我认为直接映射到MNIST数据集的分布会比较困难，所以先映射到一个latent code。这个latent code的长度也是100维，再用反卷积网络映射回一张数字图片。反卷积是卷积反过来做。我先将latent code改为1x1x100的三维向量，代表有100个channel的1x1大小的图片，然后放大长宽，缩小channel。中间的激活则试过好多函数，如sin, sigmoid, tanh，实验表明tanh效果最好。</p></li>\n<li><p>generator的输入可以从[0, 1)或[-1, 1)采样。我一开始用[0, 1)，效果不好，后来用了[-1, 1)，感觉也没好到哪去。直到后来用了batch_normalization。</p></li>\n<li><p>其实我用的是batch_normalization的简化版。tanh激活有个问题是，结果向0集中，tanh激活几次后，几乎就都是0了。于是我在tanh激活后乘了个3，效果改善了一些。后来看到batch_normalization的方法，我在想，何不把3变成变量，让模型自己学呢。后来又加上了偏移量，于是激活函数变成了(tanh(x) - miu) * scale，miu和scale都是可训练的变量。</p></li>\n<li><p>D和G的强弱关系。之前我看到论文都认为要让G多训练几遍。我觉得多训练几遍太simple，于是给G更大的学习率。但在youtube上看到Goodfellow说，D应该更强大一些才行。我觉得也是，否则G生成出来的都不知道是什么。但D太强大可能会过饱和，很早就不会动了。Goodfellow又有高招，把D所要拟合的正确概率设为0.9，以表示D对辨识图片不是那么确定。实验的结果表明，效果的确好很多。</p></li>\n</ol>\n\n<p>Github代码：https://github.com/allisterke/tensorflow-lab/blob/master/generative-model/dcgan-mnist.py\n从https://github.com/carpedm20/DCGAN-tensorflow参考了不少实践。','学习MNIST写数字','','inherit','closed','closed','','114-revision-v1','','','2017-11-20 10:56:35','2017-11-20 02:56:35','训练神经网络来生成图片、音乐、诗词等，早已不是什么新鲜事。但对初学者来说却并非易事。就如同经典算法里的二叉树、哈希表等各种数据结构，虽然出现几十年了，初学者仍然要耗费大量时间才能熟练掌握。我训练GAN学习MNIST数据集来写数字，从国庆长假回来开始，足足经历了一个多月，最近终于能写出似模似样的数字来了。期间看了好多论文，查了无数次谷歌，看了好多youtube视频。可见入门不易。此处总结一下最终能训练出来所使用的方法。\r\n\r\n# 先不要急着实现GAN。先实现一个classifier，来识别MNIST图片中的数字。好的classifer是好的discriminator的基础，因为只要把最后一层的大小从10（0-9的数字）改为2（是与非）就可以了。classifer当然是用卷积神经网络比较合适。卷积神经网络的形状调整也有很多trick，我只是略通皮毛。比如，第一层一般都只放大channel，长宽不变。后面则是一边放大channel，一边缩小长宽。中间是用relu还是elu激活可能不是很有影响。我不喜欢pooling，所以用大于1的stride来代替，到底哪个更好也没试过。\r\n\r\n2. generator的实现，我先用三层全连接来映射。generator的输入是100维的均匀分布采样，我认为直接映射到MNIST数据集的分布会比较困难，所以先映射到一个latent code。这个latent code的长度也是100维，再用反卷积网络映射回一张数字图片。反卷积是卷积反过来做。我先将latent code改为1x1x100的三维向量，代表有100个channel的1x1大小的图片，然后放大长宽，缩小channel。中间的激活则试过好多函数，如sin, sigmoid, tanh，实验表明tanh效果最好。\r\n\r\n3. generator的输入可以从[0, 1)或[-1, 1)采样。我一开始用[0, 1)，效果不好，后来用了[-1, 1)，感觉也没好到哪去。直到后来用了batch_normalization。\r\n\r\n4. 其实我用的是batch_normalization的简化版。tanh激活有个问题是，结果向0集中，tanh激活几次后，几乎就都是0了。于是我在tanh激活后乘了个3，效果改善了一些。后来看到batch_normalization的方法，我在想，何不把3变成变量，让模型自己学呢。后来又加上了偏移量，于是激活函数变成了(tanh(x) - miu) * scale，miu和scale都是可训练的变量。\r\n\r\n5. D和G的强弱关系。之前我看到论文都认为要让G多训练几遍。我觉得多训练几遍太simple，于是给G更大的学习率。但在youtube上看到Goodfellow说，D应该更强大一些才行。我觉得也是，否则G生成出来的都不知道是什么。但D太强大可能会过饱和，很早就不会动了。Goodfellow又有高招，把D所要拟合的正确概率设为0.9，以表示D对辨识图片不是那么确定。实验的结果表明，效果的确好很多。\r\n\r\nGithub代码：https://github.com/allisterke/tensorflow-lab/blob/master/generative-model/dcgan-mnist.py\r\n从https://github.com/carpedm20/DCGAN-tensorflow参考了不少实践。',114,'https://www.allisterke.com/?p=117',0,'revision','',0),(118,1,'2017-11-20 10:56:51','2017-11-20 02:56:51','训练神经网络来生成图片、音乐、诗词等，早已不是什么新鲜事。但对初学者来说却并非易事。就如同经典算法里的二叉树、哈希表等各种数据结构，虽然出现几十年了，初学者仍然要耗费大量时间才能熟练掌握。我训练GAN学习MNIST数据集来写数字，从国庆长假回来开始，足足经历了一个多月，最近终于能写出似模似样的数字来了。期间看了好多论文，查了无数次谷歌，看了好多youtube视频。可见入门不易。此处总结一下最终能训练出来所使用的方法。\n\n<ol>\n<li>先不要急着实现GAN。先实现一个classifier，来识别MNIST图片中的数字。好的classifer是好的discriminator的基础，因为只要把最后一层的大小从10（0-9的数字）改为2（是与非）就可以了。classifer当然是用卷积神经网络比较合适。卷积神经网络的形状调整也有很多trick，我只是略通皮毛。比如，第一层一般都只放大channel，长宽不变。后面则是一边放大channel，一边缩小长宽。中间是用relu还是elu激活可能不是很有影响。我不喜欢pooling，所以用大于1的stride来代替，到底哪个更好也没试过。</p></li>\n<li><p>generator的实现，我先用三层全连接来映射。generator的输入是100维的均匀分布采样，我认为直接映射到MNIST数据集的分布会比较困难，所以先映射到一个latent code。这个latent code的长度也是100维，再用反卷积网络映射回一张数字图片。反卷积是卷积反过来做。我先将latent code改为1x1x100的三维向量，代表有100个channel的1x1大小的图片，然后放大长宽，缩小channel。中间的激活则试过好多函数，如sin, sigmoid, tanh，实验表明tanh效果最好。</p></li>\n<li><p>generator的输入可以从[0, 1)或[-1, 1)采样。我一开始用[0, 1)，效果不好，后来用了[-1, 1)，感觉也没好到哪去。直到后来用了batch_normalization。</p></li>\n<li><p>其实我用的是batch_normalization的简化版。tanh激活有个问题是，结果向0集中，tanh激活几次后，几乎就都是0了。于是我在tanh激活后乘了个3，效果改善了一些。后来看到batch_normalization的方法，我在想，何不把3变成变量，让模型自己学呢。后来又加上了偏移量，于是激活函数变成了(tanh(x) - miu) * scale，miu和scale都是可训练的变量。</p></li>\n<li><p>D和G的强弱关系。之前我看到论文都认为要让G多训练几遍。我觉得多训练几遍太simple，于是给G更大的学习率。但在youtube上看到Goodfellow说，D应该更强大一些才行。我觉得也是，否则G生成出来的都不知道是什么。但D太强大可能会过饱和，很早就不会动了。Goodfellow又有高招，把D所要拟合的正确概率设为0.9，以表示D对辨识图片不是那么确定。实验的结果表明，效果的确好很多。</p></li>\n</ol>\n\n<p>Github代码：https://github.com/allisterke/tensorflow-lab/blob/master/generative-model/dcgan-mnist.py\n从https://github.com/carpedm20/DCGAN-tensorflow参考了不少实践。','学习MNIST写数字','','inherit','closed','closed','','114-revision-v1','','','2017-11-20 10:56:51','2017-11-20 02:56:51','训练神经网络来生成图片、音乐、诗词等，早已不是什么新鲜事。但对初学者来说却并非易事。就如同经典算法里的二叉树、哈希表等各种数据结构，虽然出现几十年了，初学者仍然要耗费大量时间才能熟练掌握。我训练GAN学习MNIST数据集来写数字，从国庆长假回来开始，足足经历了一个多月，最近终于能写出似模似样的数字来了。期间看了好多论文，查了无数次谷歌，看了好多youtube视频。可见入门不易。此处总结一下最终能训练出来所使用的方法。\r\n\r\n1. 先不要急着实现GAN。先实现一个classifier，来识别MNIST图片中的数字。好的classifer是好的discriminator的基础，因为只要把最后一层的大小从10（0-9的数字）改为2（是与非）就可以了。classifer当然是用卷积神经网络比较合适。卷积神经网络的形状调整也有很多trick，我只是略通皮毛。比如，第一层一般都只放大channel，长宽不变。后面则是一边放大channel，一边缩小长宽。中间是用relu还是elu激活可能不是很有影响。我不喜欢pooling，所以用大于1的stride来代替，到底哪个更好也没试过。\r\n\r\n2. generator的实现，我先用三层全连接来映射。generator的输入是100维的均匀分布采样，我认为直接映射到MNIST数据集的分布会比较困难，所以先映射到一个latent code。这个latent code的长度也是100维，再用反卷积网络映射回一张数字图片。反卷积是卷积反过来做。我先将latent code改为1x1x100的三维向量，代表有100个channel的1x1大小的图片，然后放大长宽，缩小channel。中间的激活则试过好多函数，如sin, sigmoid, tanh，实验表明tanh效果最好。\r\n\r\n3. generator的输入可以从[0, 1)或[-1, 1)采样。我一开始用[0, 1)，效果不好，后来用了[-1, 1)，感觉也没好到哪去。直到后来用了batch_normalization。\r\n\r\n4. 其实我用的是batch_normalization的简化版。tanh激活有个问题是，结果向0集中，tanh激活几次后，几乎就都是0了。于是我在tanh激活后乘了个3，效果改善了一些。后来看到batch_normalization的方法，我在想，何不把3变成变量，让模型自己学呢。后来又加上了偏移量，于是激活函数变成了(tanh(x) - miu) * scale，miu和scale都是可训练的变量。\r\n\r\n5. D和G的强弱关系。之前我看到论文都认为要让G多训练几遍。我觉得多训练几遍太simple，于是给G更大的学习率。但在youtube上看到Goodfellow说，D应该更强大一些才行。我觉得也是，否则G生成出来的都不知道是什么。但D太强大可能会过饱和，很早就不会动了。Goodfellow又有高招，把D所要拟合的正确概率设为0.9，以表示D对辨识图片不是那么确定。实验的结果表明，效果的确好很多。\r\n\r\nGithub代码：https://github.com/allisterke/tensorflow-lab/blob/master/generative-model/dcgan-mnist.py\r\n从https://github.com/carpedm20/DCGAN-tensorflow参考了不少实践。',114,'https://www.allisterke.com/?p=118',0,'revision','',0),(119,1,'2017-11-20 11:00:25','2017-11-20 03:00:25','训练神经网络来生成图片、音乐、诗词等，早已不是什么新鲜事。但对初学者来说却并非易事。就如同经典算法里的二叉树、哈希表等各种数据结构，虽然出现几十年了，初学者仍然要耗费大量时间才能熟练掌握。我训练GAN学习MNIST数据集来写数字，从国庆长假回来开始，足足经历了一个多月，最近终于能写出似模似样的数字来了。期间看了好多论文，查了无数次谷歌，看了好多youtube视频。可见入门不易。此处总结一下最终能训练出来所使用的方法。\n\n<ol>\n<li>先不要急着实现GAN。先实现一个classifier，来识别MNIST图片中的数字。好的classifer是好的discriminator的基础，因为只要把最后一层的大小从10（0-9的数字）改为2（是与非）就可以了。classifer当然是用卷积神经网络比较合适。卷积神经网络的形状调整也有很多trick，我只是略通皮毛。比如，第一层一般都只放大channel，长宽不变。后面则是一边放大channel，一边缩小长宽。中间是用relu还是elu激活可能不是很有影响。我不喜欢pooling，所以用大于1的stride来代替，到底哪个更好也没试过。</p></li>\n<li><p>generator的实现，我先用三层全连接来映射。generator的输入是100维的均匀分布采样，我认为直接映射到MNIST数据集的分布会比较困难，所以先映射到一个latent code。这个latent code的长度也是100维，再用反卷积网络映射回一张数字图片。反卷积是卷积反过来做。我先将latent code改为1x1x100的三维向量，代表有100个channel的1x1大小的图片，然后放大长宽，缩小channel。中间的激活则试过好多函数，如sin, sigmoid, tanh，实验表明tanh效果最好。</p></li>\n<li><p>generator的输入可以从[0, 1)或[-1, 1)采样。我一开始用[0, 1)，效果不好，后来用了[-1, 1)，感觉也没好到哪去。直到后来用了batch_normalization。</p></li>\n<li><p>其实我用的是batch_normalization的简化版。tanh激活有个问题是，结果向0集中，tanh激活几次后，几乎就都是0了。于是我在tanh激活后乘了个3，效果改善了一些。后来看到batch_normalization的方法，我在想，何不把3变成变量，让模型自己学呢。后来又加上了偏移量，于是激活函数变成了(tanh(x) - miu) * scale，miu和scale都是可训练的变量。</p></li>\n<li><p>D和G的强弱关系。之前我看到论文都认为要让G多训练几遍。我觉得多训练几遍太simple，于是给G更大的学习率。但在youtube上看到Goodfellow说，D应该更强大一些才行。我觉得也是，否则G生成出来的都不知道是什么,所以反过来给D更大的学习率。但D太强大可能会过饱和，很早就不会动了。Goodfellow又有高招，把D所要拟合的正确概率设为0.9，以表示D对辨识图片不是那么确定。实验的结果表明，效果的确好很多。</p></li>\n</ol>\n\n<p>Github代码：https://github.com/allisterke/tensorflow-lab/blob/master/generative-model/dcgan-mnist.py\n从https://github.com/carpedm20/DCGAN-tensorflow参考了不少实践。','学习MNIST写数字','','inherit','closed','closed','','114-revision-v1','','','2017-11-20 11:00:25','2017-11-20 03:00:25','训练神经网络来生成图片、音乐、诗词等，早已不是什么新鲜事。但对初学者来说却并非易事。就如同经典算法里的二叉树、哈希表等各种数据结构，虽然出现几十年了，初学者仍然要耗费大量时间才能熟练掌握。我训练GAN学习MNIST数据集来写数字，从国庆长假回来开始，足足经历了一个多月，最近终于能写出似模似样的数字来了。期间看了好多论文，查了无数次谷歌，看了好多youtube视频。可见入门不易。此处总结一下最终能训练出来所使用的方法。\r\n\r\n1. 先不要急着实现GAN。先实现一个classifier，来识别MNIST图片中的数字。好的classifer是好的discriminator的基础，因为只要把最后一层的大小从10（0-9的数字）改为2（是与非）就可以了。classifer当然是用卷积神经网络比较合适。卷积神经网络的形状调整也有很多trick，我只是略通皮毛。比如，第一层一般都只放大channel，长宽不变。后面则是一边放大channel，一边缩小长宽。中间是用relu还是elu激活可能不是很有影响。我不喜欢pooling，所以用大于1的stride来代替，到底哪个更好也没试过。\r\n\r\n2. generator的实现，我先用三层全连接来映射。generator的输入是100维的均匀分布采样，我认为直接映射到MNIST数据集的分布会比较困难，所以先映射到一个latent code。这个latent code的长度也是100维，再用反卷积网络映射回一张数字图片。反卷积是卷积反过来做。我先将latent code改为1x1x100的三维向量，代表有100个channel的1x1大小的图片，然后放大长宽，缩小channel。中间的激活则试过好多函数，如sin, sigmoid, tanh，实验表明tanh效果最好。\r\n\r\n3. generator的输入可以从[0, 1)或[-1, 1)采样。我一开始用[0, 1)，效果不好，后来用了[-1, 1)，感觉也没好到哪去。直到后来用了batch_normalization。\r\n\r\n4. 其实我用的是batch_normalization的简化版。tanh激活有个问题是，结果向0集中，tanh激活几次后，几乎就都是0了。于是我在tanh激活后乘了个3，效果改善了一些。后来看到batch_normalization的方法，我在想，何不把3变成变量，让模型自己学呢。后来又加上了偏移量，于是激活函数变成了(tanh(x) - miu) * scale，miu和scale都是可训练的变量。\r\n\r\n5. D和G的强弱关系。之前我看到论文都认为要让G多训练几遍。我觉得多训练几遍太simple，于是给G更大的学习率。但在youtube上看到Goodfellow说，D应该更强大一些才行。我觉得也是，否则G生成出来的都不知道是什么,所以反过来给D更大的学习率。但D太强大可能会过饱和，很早就不会动了。Goodfellow又有高招，把D所要拟合的正确概率设为0.9，以表示D对辨识图片不是那么确定。实验的结果表明，效果的确好很多。\r\n\r\nGithub代码：https://github.com/allisterke/tensorflow-lab/blob/master/generative-model/dcgan-mnist.py\r\n从https://github.com/carpedm20/DCGAN-tensorflow参考了不少实践。',114,'https://www.allisterke.com/?p=119',0,'revision','',0);
/*!40000 ALTER TABLE `wp_posts` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_term_relationships`
--

DROP TABLE IF EXISTS `wp_term_relationships`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_term_relationships` (
  `object_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `term_taxonomy_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `term_order` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`object_id`,`term_taxonomy_id`),
  KEY `term_taxonomy_id` (`term_taxonomy_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_term_relationships`
--

LOCK TABLES `wp_term_relationships` WRITE;
/*!40000 ALTER TABLE `wp_term_relationships` DISABLE KEYS */;
INSERT INTO `wp_term_relationships` VALUES (1,1,0),(18,2,0),(19,2,0),(20,2,0),(21,2,0),(22,3,0),(23,3,0),(24,3,0),(25,3,0),(26,3,0),(43,1,0),(49,1,0),(56,1,0),(86,1,0),(93,1,0),(97,1,0),(104,1,0),(108,1,0),(114,1,0);
/*!40000 ALTER TABLE `wp_term_relationships` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_term_taxonomy`
--

DROP TABLE IF EXISTS `wp_term_taxonomy`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_term_taxonomy` (
  `term_taxonomy_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `term_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `taxonomy` varchar(32) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `description` longtext COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `parent` bigint(20) unsigned NOT NULL DEFAULT '0',
  `count` bigint(20) NOT NULL DEFAULT '0',
  PRIMARY KEY (`term_taxonomy_id`),
  UNIQUE KEY `term_id_taxonomy` (`term_id`,`taxonomy`),
  KEY `taxonomy` (`taxonomy`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_term_taxonomy`
--

LOCK TABLES `wp_term_taxonomy` WRITE;
/*!40000 ALTER TABLE `wp_term_taxonomy` DISABLE KEYS */;
INSERT INTO `wp_term_taxonomy` VALUES (1,1,'category','',0,9),(2,2,'nav_menu','',0,4),(3,3,'nav_menu','',0,5);
/*!40000 ALTER TABLE `wp_term_taxonomy` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_termmeta`
--

DROP TABLE IF EXISTS `wp_termmeta`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_termmeta` (
  `meta_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `term_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `meta_key` varchar(255) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `meta_value` longtext COLLATE utf8mb4_unicode_520_ci,
  PRIMARY KEY (`meta_id`),
  KEY `term_id` (`term_id`),
  KEY `meta_key` (`meta_key`(191))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_termmeta`
--

LOCK TABLES `wp_termmeta` WRITE;
/*!40000 ALTER TABLE `wp_termmeta` DISABLE KEYS */;
/*!40000 ALTER TABLE `wp_termmeta` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_terms`
--

DROP TABLE IF EXISTS `wp_terms`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_terms` (
  `term_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(200) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `slug` varchar(200) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `term_group` bigint(10) NOT NULL DEFAULT '0',
  PRIMARY KEY (`term_id`),
  KEY `slug` (`slug`(191)),
  KEY `name` (`name`(191))
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_terms`
--

LOCK TABLES `wp_terms` WRITE;
/*!40000 ALTER TABLE `wp_terms` DISABLE KEYS */;
INSERT INTO `wp_terms` VALUES (1,'未分类','uncategorized',0),(2,'顶部菜单','%e9%a1%b6%e9%83%a8%e8%8f%9c%e5%8d%95',0),(3,'社交网络链接菜单','%e7%a4%be%e4%ba%a4%e7%bd%91%e7%bb%9c%e9%93%be%e6%8e%a5%e8%8f%9c%e5%8d%95',0);
/*!40000 ALTER TABLE `wp_terms` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_usermeta`
--

DROP TABLE IF EXISTS `wp_usermeta`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_usermeta` (
  `umeta_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `user_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `meta_key` varchar(255) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `meta_value` longtext COLLATE utf8mb4_unicode_520_ci,
  PRIMARY KEY (`umeta_id`),
  KEY `user_id` (`user_id`),
  KEY `meta_key` (`meta_key`(191))
) ENGINE=InnoDB AUTO_INCREMENT=26 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_usermeta`
--

LOCK TABLES `wp_usermeta` WRITE;
/*!40000 ALTER TABLE `wp_usermeta` DISABLE KEYS */;
INSERT INTO `wp_usermeta` VALUES (1,1,'nickname','ally'),(2,1,'first_name',''),(3,1,'last_name',''),(4,1,'description',''),(5,1,'rich_editing','true'),(6,1,'comment_shortcuts','false'),(7,1,'admin_color','fresh'),(8,1,'use_ssl','0'),(9,1,'show_admin_bar_front','true'),(10,1,'locale',''),(11,1,'wp_capabilities','a:1:{s:13:\"administrator\";b:1;}'),(12,1,'wp_user_level','10'),(13,1,'dismissed_wp_pointers',''),(14,1,'show_welcome_panel','1'),(16,1,'wp_user-settings','editor=html&mfold=o'),(17,1,'wp_user-settings-time','1501661073'),(18,1,'wp_dashboard_quick_press_last_post_id','113'),(19,1,'community-events-location','a:1:{s:2:\"ip\";s:13:\"183.157.160.0\";}'),(20,1,'nav_menu_recently_edited','2'),(21,1,'managenav-menuscolumnshidden','a:5:{i:0;s:11:\"link-target\";i:1;s:11:\"css-classes\";i:2;s:3:\"xfn\";i:3;s:11:\"description\";i:4;s:15:\"title-attribute\";}'),(22,1,'metaboxhidden_nav-menus','a:2:{i:0;s:12:\"add-post_tag\";i:1;s:15:\"add-post_format\";}'),(24,1,'session_tokens','a:1:{s:64:\"75e2e1bb531443d111ceebb213d3fe1670dd16bd8891268104292d82be2316c5\";a:4:{s:10:\"expiration\";i:1511316603;s:2:\"ip\";s:14:\"183.157.160.56\";s:2:\"ua\";s:78:\"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:56.0) Gecko/20100101 Firefox/56.0\";s:5:\"login\";i:1511143803;}}'),(25,1,'jetpack_tracks_wpcom_id','125778999');
/*!40000 ALTER TABLE `wp_usermeta` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_users`
--

DROP TABLE IF EXISTS `wp_users`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_users` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `user_login` varchar(60) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `user_pass` varchar(255) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `user_nicename` varchar(50) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `user_email` varchar(100) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `user_url` varchar(100) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `user_registered` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `user_activation_key` varchar(255) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `user_status` int(11) NOT NULL DEFAULT '0',
  `display_name` varchar(250) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  PRIMARY KEY (`ID`),
  KEY `user_login_key` (`user_login`),
  KEY `user_nicename` (`user_nicename`),
  KEY `user_email` (`user_email`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_users`
--

LOCK TABLES `wp_users` WRITE;
/*!40000 ALTER TABLE `wp_users` DISABLE KEYS */;
/*!40000 ALTER TABLE `wp_users` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

